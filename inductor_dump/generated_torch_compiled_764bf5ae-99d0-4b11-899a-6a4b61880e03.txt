V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] Output code: 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # AOT ID: ['194_forward']
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import torch
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import math
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import random
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import os
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import tempfile
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from math import inf, nan
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from cmath import nanj
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch import device, empty_strided
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton.language as tl
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     grid,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     split_scan_grid,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     grid_combo_kernels,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     start_graph,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     end_graph,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] )
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] aten = torch.ops.aten
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/da/cda5lm2p5opxlfkabcwokxp3pxdb4w444qeswuuqoepp52qbiu5h.py
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.hardtanh, aten.hardtanh_backward]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   x => convolution
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   x_1 => clamp_max, clamp_min
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Graph fragment:
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_4, %primals_1, %primals_2, [2], [0], [1], True, [0], 1), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%convolution, 0.0), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %clamp_max : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6.0), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%convolution, 0.0), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%convolution, 6.0), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %bitwise_or : [num_users=1] = call_function[target=torch.ops.aten.bitwise_or.Tensor](args = (%le, %ge), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_poi_fused_convolution_hardtanh_hardtanh_backward_0 = async_compile.triton('triton_poi_fused_convolution_hardtanh_hardtanh_backward_0', '''
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton.language as tl
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     size_hints={'x': 2048}, 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     filename=__file__,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_hardtanh_hardtanh_backward_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] )
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton.jit
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def triton_poi_fused_convolution_hardtanh_hardtanh_backward_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     x2 = xindex
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     x1 = xindex // ks0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp3 = 0.0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp5 = 6.0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp7 = tmp2 <= tmp3
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp8 = tmp2 >= tmp5
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp9 = tmp7 | tmp8
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp9, xmask)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/de/cde5uhykunhe3elalrsk3c7jcikjt3hokm3fl2fwme7joexmbkcx.py
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten.tanh, aten.sub]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   x_2 => convolution_1
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   x_3 => sub_5, tanh
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Graph fragment:
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%clamp_max, %primals_5, %primals_6, [2], [0], [1], True, [0], 1), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%convolution_1,), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %tanh), kwargs = {})
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_poi_fused_convolution_sub_tanh_1 = async_compile.triton('triton_poi_fused_convolution_sub_tanh_1', '''
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton.language as tl
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     size_hints={'x': 8192}, 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     filename=__file__,
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_sub_tanh_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] )
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton.jit
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def triton_poi_fused_convolution_sub_tanh_1(in_out_ptr0, in_ptr0, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     x2 = xindex
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     x1 = xindex // ks0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp4 = tmp2 - tmp3
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] async_compile.wait(globals())
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] del async_compile
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def call(args):
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6 = args
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     args.clear()
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     s0 = primals_3
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_1, (1, 10, 5), (50, 5, 1))
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_2, (10, ), (1, ))
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_5, (10, 20, 5), (100, 5, 1))
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_6, (20, ), (1, ))
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_4, primals_1, stride=(2,), padding=(0,), dilation=(1,), transposed=True, output_padding=(0,), groups=1, bias=None)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, 3 + 2*s0), (30 + 20*s0, 3 + 2*s0, 1))
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         ps0 = 3 + 2*s0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 10, 3 + 2*s0), (30 + 20*s0, 3 + 2*s0, 1), torch.float32)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 10, 3 + 2*s0), (30 + 20*s0, 3 + 2*s0, 1), torch.bool)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.hardtanh, aten.hardtanh_backward]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_poi_fused_convolution_hardtanh_hardtanh_backward_0_xnumel = 30 + 20*s0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_poi_fused_convolution_hardtanh_hardtanh_backward_0.run(buf0, primals_2, buf1, buf5, ps0, triton_poi_fused_convolution_hardtanh_hardtanh_backward_0_xnumel, grid=grid(triton_poi_fused_convolution_hardtanh_hardtanh_backward_0_xnumel), stream=stream0)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del buf0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del primals_2
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_5, stride=(2,), padding=(0,), dilation=(1,), transposed=True, output_padding=(0,), groups=1, bias=None)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         assert_size_stride(buf2, (1, 20, 9 + 4*s0), (180 + 80*s0, 9 + 4*s0, 1))
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         ps1 = 9 + 4*s0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf3 = buf2; del buf2  # reuse
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 20, 9 + 4*s0), (180 + 80*s0, 9 + 4*s0, 1), torch.float32)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten.tanh, aten.sub]
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_poi_fused_convolution_sub_tanh_1_xnumel = 180 + 80*s0
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_poi_fused_convolution_sub_tanh_1.run(buf3, primals_6, buf4, ps1, triton_poi_fused_convolution_sub_tanh_1_xnumel, grid=grid(triton_poi_fused_convolution_sub_tanh_1_xnumel), stream=stream0)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del primals_6
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     return (reinterpret_tensor(buf4, (1, 9 + 4*s0, 20), (180 + 80*s0, 1, 9 + 4*s0), 0), primals_1, primals_4, primals_5, buf1, buf3, buf5, s0, )
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_1 = rand_strided((1, 10, 5), (50, 5, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_2 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_3 = 100
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 100), (100, 100, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_5 = rand_strided((10, 20, 5), (100, 5, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_6 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6])
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] if __name__ == "__main__":
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:52.797000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:52.800000 703210 site-packages/torch/_inductor/graph.py:2022] [791/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/iu/ciuk3v6ybos6rrsv72rsuwef6ehwidki23fqlkx2dj3l3u4jfnto.py
I0127 11:40:52.952000 703210 site-packages/torch/_inductor/graph.py:2056] [791/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/iu/ciuk3v6ybos6rrsv72rsuwef6ehwidki23fqlkx2dj3l3u4jfnto.py
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] Output code: 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # AOT ID: ['194_backward']
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import torch
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import math
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import random
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import os
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import tempfile
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from math import inf, nan
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from cmath import nanj
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch import device, empty_strided
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton.language as tl
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     grid,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     split_scan_grid,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     grid_combo_kernels,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     start_graph,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     end_graph,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] )
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] aten = torch.ops.aten
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2k/c2kxf7uynge4cy7ddi3rn3usozyxteuobz4wtjmniqyygmjlmuhl.py
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.neg, aten.tanh, aten.tanh_backward, aten.add]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   x_3 => tanh
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Graph fragment:
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%permute_1,), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%convolution_1,), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, %tanh), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mul_21), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, %sub_8), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %add_21 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%permute_1, %mul_22), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_poi_fused_add_neg_tanh_tanh_backward_0 = async_compile.triton('triton_poi_fused_add_neg_tanh_tanh_backward_0', '''
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton.language as tl
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     size_hints={'y': 512, 'x': 32}, tile_hint=TileHint.DEFAULT,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     filename=__file__,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_neg_tanh_tanh_backward_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] )
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton.jit
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def triton_poi_fused_add_neg_tanh_tanh_backward_0(in_ptr0, in_ptr1, out_ptr0, ks0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xnumel = 20
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     ymask = yindex < ynumel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     x1 = xindex
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     y0 = yindex
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 20*y0), xmask & ymask, eviction_policy='evict_last')
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp2 = tl.load(in_ptr1 + (y0 + 9*x1 + 4*ks0*x1), xmask & ymask, eviction_policy='evict_last')
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp1 = -tmp0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp4 = tmp3 * tmp3
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp5 = 1.0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp6 = tmp5 - tmp4
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp7 = tmp1 * tmp6
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp8 = tmp0 + tmp7
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tl.store(out_ptr0 + (x1 + 20*y0), tmp8, xmask & ymask)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/np/cnpcwtfaq7r2qlf7fuqkuduucz5vuhk7greqhwiouvjjlzm5g7h3.py
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Graph fragment:
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%add_21, [0, 2]), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_red_fused_convolution_backward_1 = async_compile.triton('triton_red_fused_convolution_backward_1', '''
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton.language as tl
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 512},
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     filename=__file__,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] )
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton.jit
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def triton_red_fused_convolution_backward_1(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xnumel = 20
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     rnumel = r0_numel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     rbase = r0_base
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     x0 = xindex
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         roffset = r0_offset
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         rindex = r0_index
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         r0_1 = r0_index
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 20*r0_1), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rz/crzqtxhkuflvjbqcndk4cek4nihaqqvt4bgeoxkott426vhd7mer.py
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.hardtanh_backward, aten.convolution_backward]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] # Graph fragment:
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%bitwise_or, %full_default, %getitem), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where, [0, 2]), kwargs = {})
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_red_fused_convolution_backward_hardtanh_backward_2 = async_compile.triton('triton_red_fused_convolution_backward_hardtanh_backward_2', '''
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] import triton.language as tl
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 256},
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     filename=__file__,
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i1', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_hardtanh_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] )
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] @triton.jit
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def triton_red_fused_convolution_backward_hardtanh_backward_2(in_out_ptr0, in_ptr0, out_ptr0, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xnumel = 10
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     rnumel = r0_numel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     rbase = r0_base
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     x0 = xindex
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     _tmp5 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         roffset = r0_offset
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         rindex = r0_index
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         r0_1 = r0_index
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 3*x0 + 2*ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp1 = tl.load(in_out_ptr0 + (r0_1 + 3*x0 + 2*ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp2 = 0.0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp3 = tl.where(tmp0, tmp2, tmp1)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tmp6 = _tmp5 + tmp4
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         _tmp5 = tl.where(r0_mask & xmask, tmp6, _tmp5)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 3*x0 + 2*ks0*x0), tmp3, r0_mask & xmask)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] async_compile.wait(globals())
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] del async_compile
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def call(args):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_3, primals_1, primals_4, primals_5, clamp_max, convolution_1, bitwise_or, tangents_1 = args
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     args.clear()
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     s0 = primals_3
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_1, (1, 10, 5), (50, 5, 1))
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(primals_5, (10, 20, 5), (100, 5, 1))
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(clamp_max, (1, 10, 3 + 2*s0), (30 + 20*s0, 3 + 2*s0, 1))
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(convolution_1, (1, 20, 9 + 4*s0), (180 + 80*s0, 9 + 4*s0, 1))
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(bitwise_or, (1, 10, 3 + 2*s0), (30 + 20*s0, 3 + 2*s0, 1))
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 9 + 4*s0, 20), (180 + 80*s0, 20, 1))
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 20, 9 + 4*s0), (180 + 80*s0, 1, 20), torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.neg, aten.tanh, aten.tanh_backward, aten.add]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_poi_fused_add_neg_tanh_tanh_backward_0_ynumel = 9 + 4*s0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_poi_fused_add_neg_tanh_tanh_backward_0.run(tangents_1, convolution_1, buf0, s0, triton_poi_fused_add_neg_tanh_tanh_backward_0_ynumel, 20, grid=grid(triton_poi_fused_add_neg_tanh_tanh_backward_0_ynumel, 20), stream=stream0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del convolution_1
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del tangents_1
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf1 = empty_strided_cuda((20, ), (1, ), torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_red_fused_convolution_backward_1_r0_numel = 9 + 4*s0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_red_fused_convolution_backward_1.run(buf0, buf1, 20, triton_red_fused_convolution_backward_1_r0_numel, grid=grid(20), stream=stream0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf2 = torch.ops.aten.convolution_backward.default(buf0, clamp_max, primals_5, [20], [2], [0], [1], True, [0], 1, [True, True, False])
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del buf0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del clamp_max
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del primals_5
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf3 = buf2[0]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf4 = buf2[1]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del buf2
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf5 = buf3; del buf3  # reuse
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf6 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.hardtanh_backward, aten.convolution_backward]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_red_fused_convolution_backward_hardtanh_backward_2_r0_numel = 3 + 2*s0
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         triton_red_fused_convolution_backward_hardtanh_backward_2.run(buf5, bitwise_or, buf6, s0, 10, triton_red_fused_convolution_backward_hardtanh_backward_2_r0_numel, grid=grid(10), stream=stream0)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del bitwise_or
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf7 = torch.ops.aten.convolution_backward.default(buf5, primals_4, primals_1, [10], [2], [0], [1], True, [0], 1, [False, True, False])
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del buf5
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del primals_1
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del primals_4
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         buf8 = buf7[1]
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]         del buf7
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     return (buf8, buf6, None, None, buf4, buf1, )
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_3 = 100
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_1 = rand_strided((1, 10, 5), (50, 5, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 100), (100, 100, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     primals_5 = rand_strided((10, 20, 5), (100, 5, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     clamp_max = rand_strided((1, 10, 203), (2030, 203, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     convolution_1 = rand_strided((1, 20, 409), (8180, 409, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     bitwise_or = rand_strided((1, 10, 203), (2030, 203, 1), device='cuda:0', dtype=torch.bool)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     tangents_1 = rand_strided((1, 409, 20), (8180, 20, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     fn = lambda: call([primals_3, primals_1, primals_4, primals_5, clamp_max, convolution_1, bitwise_or, tangents_1])
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] if __name__ == "__main__":
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:53.149000 703210 site-packages/torch/_inductor/graph.py:2014] [791/0_1] [__output_code] 
V0127 11:40:53.153000 703210 site-packages/torch/_inductor/graph.py:2022] [791/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kj/ckj53uwv3vt7la4bmc6gafxrzomuqrcvnqzfgqr4tbymnqobfa3k.py
I0127 11:40:53.756000 703210 site-packages/torch/_inductor/graph.py:2056] [791/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kj/ckj53uwv3vt7la4bmc6gafxrzomuqrcvnqzfgqr4tbymnqobfa3k.py

W0127 11:34:37.824000 703210 site-packages/torch/utils/_sympy/interp.py:176] [287/0] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0127 11:34:38.321000 703210 site-packages/torch/utils/_sympy/interp.py:176] [287/0] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] Output code: 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # AOT ID: ['66_inference']
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import torch
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import math
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import random
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import os
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import tempfile
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from math import inf, nan
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from cmath import nanj
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch import device, empty_strided
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton.language as tl
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     grid,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     split_scan_grid,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     grid_combo_kernels,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     start_graph,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     end_graph,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     cooperative_reduction_grid,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] )
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] aten = torch.ops.aten
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] async_compile = AsyncCompile()
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jo/cjoc4r25cie6s5pqzn5aewv34hmzxjdpewdjaf3tkrk7jykpvliw.py
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4], Original ATen: [aten.max_pool2d_with_indices, aten.constant_pad_nd, aten.hardtanh, aten.tanh]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Source node to ATen node mapping:
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_1 => _low_memory_max_pool2d_with_offsets
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_2 => constant_pad_nd
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_3 => clamp_max, clamp_min
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_4 => tanh
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Graph fragment:
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%arg3_1, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%getitem, [1, 1, 1, 1, 1, 1], 0.0), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%constant_pad_nd, -1), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%clamp_max,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0', '''
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton.language as tl
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     size_hints={'x': 8192}, 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     filename=__file__,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     min_elem_per_thread=0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] )
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] @triton.jit
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] def triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, xnumel, XBLOCK : tl.constexpr):
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xmask = xindex < xnumel
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x5 = xindex // ks0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x1 = ((xindex // ks2) % ks3)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x0 = (xindex % ks2)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x2 = xindex // ks6
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x6 = xindex
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp0 = (-1) + x5
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp3 = ks1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp4 = tmp0 < tmp3
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp5 = (-1) + x1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp7 = ks4 // 2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp8 = tmp5 < tmp7
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp9 = (-1) + x0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp10 = tmp9 >= tmp1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp11 = ks5 // 2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp12 = tmp9 < tmp11
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp13 = tmp2 & tmp4
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp14 = tmp13 & tmp6
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp15 = tmp14 & tmp8
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp16 = tmp15 & tmp10
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp17 = tmp16 & tmp12
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp18 = tl.load(in_ptr0 + ((-2) + ((-2)*ks5) + 2*x0 + ((-1)*ks4*ks5) + 2*ks5*x1 + ks4*ks5*x2), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp19 = tl.load(in_ptr0 + ((-1) + ((-2)*ks5) + 2*x0 + ((-1)*ks4*ks5) + 2*ks5*x1 + ks4*ks5*x2), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp19, tmp18)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp21 = tl.load(in_ptr0 + ((-2) + ((-1)*ks5) + 2*x0 + ((-1)*ks4*ks5) + 2*ks5*x1 + ks4*ks5*x2), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp23 = tl.load(in_ptr0 + ((-1) + ((-1)*ks5) + 2*x0 + ((-1)*ks4*ks5) + 2*ks5*x1 + ks4*ks5*x2), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp26 = tl.where(tmp17, tmp24, tmp25)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp27 = -1.0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp26, tmp27)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp29 = 1.0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp30 = triton_helpers.minimum(tmp28, tmp29)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp31 = libdevice.tanh(tmp30)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp31, xmask)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] ''', device_str='cuda')
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wo/cwoedzysywa2j7qvbn5lysyh6up7nvcecvbr23xs5olg5t3tb6mq.py
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7, input_8], Original ATen: [aten.max_pool2d_with_indices, aten.constant_pad_nd, aten.hardtanh, aten.tanh]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Source node to ATen node mapping:
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_5 => _low_memory_max_pool2d_with_offsets_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_6 => constant_pad_nd_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_7 => clamp_max_1, clamp_min_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   input_8 => tanh_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Graph fragment:
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets_1 : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%tanh, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %constant_pad_nd_1 : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%getitem_2, [1, 1, 1, 1, 1, 1], 0.0), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%constant_pad_nd_1, -1), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 1), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %tanh_1 : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%clamp_max_1,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1 = async_compile.triton('triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1', '''
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton.language as tl
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     size_hints={'x': 4096}, 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     filename=__file__,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     min_elem_per_thread=0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] )
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] @triton.jit
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] def triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, xnumel, XBLOCK : tl.constexpr):
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xmask = xindex < xnumel
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x5 = xindex // ks0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x1 = ((xindex // ks2) % ks3)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x0 = (xindex % ks2)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x2 = xindex // ks6
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     x6 = xindex
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp0 = (-1) + x5
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp3 = 2 + ks1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp4 = tmp0 < tmp3
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp5 = (-1) + x1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp7 = 1 + (ks4 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp8 = tmp5 < tmp7
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp9 = (-1) + x0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp10 = tmp9 >= tmp1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp11 = 1 + (ks5 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp12 = tmp9 < tmp11
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp13 = tmp2 & tmp4
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp14 = tmp13 & tmp6
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp15 = tmp14 & tmp8
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp16 = tmp15 & tmp10
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp17 = tmp16 & tmp12
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp18 = tl.load(in_ptr0 + ((-10) + ((-4)*(ks5 // 2)) + ((-2)*(ks4 // 2)) + 2*x0 + 4*x1 + 4*x2 + ((-1)*(ks4 // 2)*(ks5 // 2)) + 2*x1*(ks5 // 2) + 2*x2*(ks4 // 2) + 2*x2*(ks5 // 2) + x2*(ks4 // 2)*(ks5 // 2)), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp19 = tl.load(in_ptr0 + ((-9) + ((-4)*(ks5 // 2)) + ((-2)*(ks4 // 2)) + 2*x0 + 4*x1 + 4*x2 + ((-1)*(ks4 // 2)*(ks5 // 2)) + 2*x1*(ks5 // 2) + 2*x2*(ks4 // 2) + 2*x2*(ks5 // 2) + x2*(ks4 // 2)*(ks5 // 2)), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp19, tmp18)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp21 = tl.load(in_ptr0 + ((-8) + ((-3)*(ks5 // 2)) + ((-2)*(ks4 // 2)) + 2*x0 + 4*x1 + 4*x2 + ((-1)*(ks4 // 2)*(ks5 // 2)) + 2*x1*(ks5 // 2) + 2*x2*(ks4 // 2) + 2*x2*(ks5 // 2) + x2*(ks4 // 2)*(ks5 // 2)), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp23 = tl.load(in_ptr0 + ((-7) + ((-3)*(ks5 // 2)) + ((-2)*(ks4 // 2)) + 2*x0 + 4*x1 + 4*x2 + ((-1)*(ks4 // 2)*(ks5 // 2)) + 2*x1*(ks5 // 2) + 2*x2*(ks4 // 2) + 2*x2*(ks5 // 2) + x2*(ks4 // 2)*(ks5 // 2)), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp25 = tl.full(tmp24.shape, 0.0, tmp24.dtype)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp26 = tl.where(tmp17, tmp24, tmp25)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp27 = -1.0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp28 = triton_helpers.maximum(tmp26, tmp27)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp29 = 1.0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp30 = triton_helpers.minimum(tmp28, tmp29)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp31 = libdevice.tanh(tmp30)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp31, xmask)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] ''', device_str='cuda')
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nz/cnz3qyvq76ktsuwbec6occw45ykqcscrelp5wrylo4pc2vyqpgd7.py
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Topologically Sorted Source Nodes: [dist_pos, add, dist_neg, sub, loss, triplet_loss, poisson_loss, ones_like, add_1, zeros_like, huber_loss, add_2, softmargin_loss, ones_like_1, add_3, truediv], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.exp, aten.ones_like, aten.mul, aten.zeros_like, aten.huber_loss, aten.soft_margin_loss, aten.div]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Source node to ATen node mapping:
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   add => add_46
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   add_1 => add_59
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   add_2 => add_60
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   add_3 => add_61
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   dist_neg => pow_4
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   dist_pos => pow_2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   huber_loss => abs_1, lt_1, mean_2, mul_55, mul_56, mul_57, sub_41, sub_42, where
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   loss => clamp_min_2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   ones_like => full
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   ones_like_1 => full_2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   poisson_loss => exp, mean_1, mul_46, sub_38
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   softmargin_loss => exp_1, log1p, mean_3, mul_60, neg
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   sub => sub_34
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   triplet_loss => mean
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   truediv => div
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   zeros_like => full_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] # Graph fragment:
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %add_46 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, 1.0), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %sub_34 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_46, %pow_4), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_34, 0), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min_2,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%view,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %sym_size_int_14], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full, %view), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %sub_38 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%exp, %mul_46), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_38,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %add_59 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_1), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %full_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %sym_size_int_14], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %sub_41 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %full_1), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %abs_1 : [num_users=4] = call_function[target=torch.ops.aten.abs.default](args = (%sub_41,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_55, %abs_1), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %sub_42 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mul_57 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_42, 1.0), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt_1, %mul_56, %mul_57), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mean_2 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %add_60 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_59, %mean_2), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%view,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %full_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %sym_size_int_14], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mul_60 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, %full_2), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_60,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%log1p,), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %add_61 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_60, %mean_3), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_61, 4), kwargs = {})
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] triton_red_fused_add_clamp_min_div_exp_huber_loss_mean_mul_norm_ones_like_soft_margin_loss_sub_zeros_like_2 = async_compile.triton('triton_red_fused_add_clamp_min_div_exp_huber_loss_mean_mul_norm_ones_like_soft_margin_loss_sub_zeros_like_2', '''
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] import triton.language as tl
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] @triton_heuristics.reduction(
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     size_hints={'x': 1, 'r0_': 4096},
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     filename=__file__,
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_clamp_min_div_exp_huber_loss_mean_mul_norm_ones_like_soft_margin_loss_sub_zeros_like_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] )
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] @triton.jit
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] def triton_red_fused_add_clamp_min_div_exp_huber_loss_mean_mul_norm_ones_like_soft_margin_loss_sub_zeros_like_2(in_out_ptr0, in_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xnumel = 1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     rnumel = r0_numel
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     rbase = r0_base
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     _tmp6 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     _tmp19 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     _tmp26 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         roffset = r0_offset
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         rindex = r0_index
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         r0_0 = r0_index
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp1 = tl_math.exp(tmp0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp2 = 1.0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp3 = tmp2 * tmp0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp4 = tmp1 - tmp3
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp7 = _tmp6 + tmp5
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         _tmp6 = tl.where(r0_mask, tmp7, _tmp6)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp8 = 0.0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp9 = tmp0 - tmp8
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp10 = tl_math.abs(tmp9)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp11 = tmp10 < tmp2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp12 = 0.5
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp13 = tmp10 * tmp12
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp14 = tmp13 * tmp10
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp15 = tmp10 - tmp12
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp16 = tmp15 * tmp2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp17 = tl.where(tmp11, tmp14, tmp16)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp18 = tl.broadcast_to(tmp17, [XBLOCK, R0_BLOCK])
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp20 = _tmp19 + tmp18
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         _tmp19 = tl.where(r0_mask, tmp20, _tmp19)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp21 = -tmp0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp22 = tmp21 * tmp2
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp23 = tl_math.exp(tmp22)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp24 = libdevice.log1p(tmp23)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp25 = tl.broadcast_to(tmp24, [XBLOCK, R0_BLOCK])
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         tmp27 = _tmp26 + tmp25
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         _tmp26 = tl.where(r0_mask, tmp27, _tmp26)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp6 = tl.sum(_tmp6, 1)[:, None]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp19 = tl.sum(_tmp19, 1)[:, None]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp26 = tl.sum(_tmp26, 1)[:, None]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp28 = 0.0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp29 = tmp28 / tmp28
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp30 = 36 + 9*ks0 + 12*(ks1 // 4) + 12*(ks2 // 4) + 3*ks0*(ks1 // 4) + 3*ks0*(ks2 // 4) + 4*(ks1 // 4)*(ks2 // 4) + ks0*(ks1 // 4)*(ks2 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp31 = tmp30.to(tl.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp32 = tmp6 / tmp31
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp33 = tmp29 + tmp32
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp34 = tmp19 / tmp31
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp35 = tmp33 + tmp34
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp36 = tmp26 / tmp31
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp37 = tmp35 + tmp36
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp38 = 0.25
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tmp39 = tmp37 * tmp38
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tl.debug_barrier()
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp39, None)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] ''', device_str='cuda')
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] async_compile.wait(globals())
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] del async_compile
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] def call(args):
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     args.clear()
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     s0 = arg0_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     s1 = arg1_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     s2 = arg2_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps0 = 4 + 2*(s1 // 2) + 2*(s2 // 2) + (s1 // 2)*(s2 // 2)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps1 = 2 + (s2 // 2)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps2 = 2 + (s1 // 2)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps3 = 4 + 2*(s1 // 2) + 2*(s2 // 2) + (s1 // 2)*(s2 // 2)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         buf0 = empty_strided_cuda((1, 2 + s0, 2 + (s1 // 2), 2 + (s2 // 2)), (8 + 4*s0 + 4*(s1 // 2) + 4*(s2 // 2) + 2*s0*(s1 // 2) + 2*s0*(s2 // 2) + 2*(s1 // 2)*(s2 // 2) + s0*(s1 // 2)*(s2 // 2), 4 + 2*(s1 // 2) + 2*(s2 // 2) + (s1 // 2)*(s2 // 2), 2 + (s2 // 2), 1), torch.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4], Original ATen: [aten.max_pool2d_with_indices, aten.constant_pad_nd, aten.hardtanh, aten.tanh]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0_xnumel = 8 + 4*s0 + 4*(s1 // 2) + 4*(s2 // 2) + 2*s0*(s1 // 2) + 2*s0*(s2 // 2) + 2*(s1 // 2)*(s2 // 2) + s0*(s1 // 2)*(s2 // 2)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0.run(arg3_1, buf0, ps0, s0, ps1, ps2, s1, s2, ps3, triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_0_xnumel), stream=stream0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         del arg3_1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps4 = 9 + 3*(s1 // 4) + 3*(s2 // 4) + (s1 // 4)*(s2 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps5 = 3 + (s2 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps6 = 3 + (s1 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         ps7 = 9 + 3*(s1 // 4) + 3*(s2 // 4) + (s1 // 4)*(s2 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         buf1 = empty_strided_cuda((1, 4 + s0, 3 + (s1 // 4), 3 + (s2 // 4)), (36 + 9*s0 + 12*(s1 // 4) + 12*(s2 // 4) + 3*s0*(s1 // 4) + 3*s0*(s2 // 4) + 4*(s1 // 4)*(s2 // 4) + s0*(s1 // 4)*(s2 // 4), 9 + 3*(s1 // 4) + 3*(s2 // 4) + (s1 // 4)*(s2 // 4), 3 + (s2 // 4), 1), torch.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7, input_8], Original ATen: [aten.max_pool2d_with_indices, aten.constant_pad_nd, aten.hardtanh, aten.tanh]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1_xnumel = 36 + 9*s0 + 12*(s1 // 4) + 12*(s2 // 4) + 3*s0*(s1 // 4) + 3*s0*(s2 // 4) + 4*(s1 // 4)*(s2 // 4) + s0*(s1 // 4)*(s2 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1.run(buf0, buf1, ps4, s0, ps5, ps6, s1, s2, ps7, triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_hardtanh_max_pool2d_with_indices_tanh_1_xnumel), stream=stream0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         del buf0
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         # Topologically Sorted Source Nodes: [dist_pos, add, dist_neg, sub, loss, triplet_loss, poisson_loss, ones_like, add_1, zeros_like, huber_loss, add_2, softmargin_loss, ones_like_1, add_3, truediv], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.exp, aten.ones_like, aten.mul, aten.zeros_like, aten.huber_loss, aten.soft_margin_loss, aten.div]
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         triton_red_fused_add_clamp_min_div_exp_huber_loss_mean_mul_norm_ones_like_soft_margin_loss_sub_zeros_like_2_r0_numel = 36 + 9*s0 + 12*(s1 // 4) + 12*(s2 // 4) + 3*s0*(s1 // 4) + 3*s0*(s2 // 4) + 4*(s1 // 4)*(s2 // 4) + s0*(s1 // 4)*(s2 // 4)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         triton_red_fused_add_clamp_min_div_exp_huber_loss_mean_mul_norm_ones_like_soft_margin_loss_sub_zeros_like_2.run(buf7, buf1, s0, s1, s2, 1, triton_red_fused_add_clamp_min_div_exp_huber_loss_mean_mul_norm_ones_like_soft_margin_loss_sub_zeros_like_2_r0_numel, grid=grid(1), stream=stream0)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]         del buf1
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     return (buf7, )
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     arg0_1 = 3
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     arg1_1 = 64
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     arg2_1 = 64
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] if __name__ == "__main__":
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:34:38.945000 703210 site-packages/torch/_inductor/graph.py:2014] [287/0] [__output_code] 
V0127 11:34:38.953000 703210 site-packages/torch/_inductor/graph.py:2022] [287/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/p3/cp3ja7fwr2i3owgfvvtji4af2jbxyziqsvx2f5dt7au7j7rsnbbt.py
I0127 11:34:39.223000 703210 site-packages/torch/_inductor/graph.py:2056] [287/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/p3/cp3ja7fwr2i3owgfvvtji4af2jbxyziqsvx2f5dt7au7j7rsnbbt.py

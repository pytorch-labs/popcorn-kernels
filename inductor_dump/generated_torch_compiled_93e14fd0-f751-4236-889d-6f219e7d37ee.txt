W0127 12:04:58.624000 1492919 site-packages/torch/utils/_sympy/interp.py:176] [203/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] Output code: 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # AOT ID: ['72_forward']
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import torch
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import math
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import random
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import os
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import tempfile
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from math import inf, nan
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from cmath import nanj
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch import device, empty_strided
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton.language as tl
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     grid,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     split_scan_grid,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     grid_combo_kernels,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     start_graph,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     end_graph,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] )
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] aten = torch.ops.aten
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6i/c6iagu6ytuwnjstiabpokgl3vyhdgpni54cgjjaxuwdpfxrnu7cg.py
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   x => constant_pad_nd
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Graph fragment:
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %constant_pad_nd : [num_users=4] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%primals_3, [1, 1, 1, 1], 1.0), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton.language as tl
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     filename=__file__,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] )
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton.jit
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     x2 = xindex // ks4
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     x4 = xindex
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp0 = (-1) + x1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp3 = ks2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp5 = (-1) + x0
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp7 = ks3
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp9 = tmp2 & tmp4
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp11 = tmp10 & tmp8
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-1) + x0 + ((-1)*ks3) + ks3*x1 + ks2*ks3*x2), tmp11 & xmask, eviction_policy='evict_last', other=1.0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp12, xmask)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] ''', device_str='cuda')
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dz/cdz3fqbkb7wofpvu4rjezoeubsueeesrqizkn2hioybyabcbxkic.py
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_functional]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   x_1 => add_5, add_6, add_7, add_8, mul_10, mul_11, mul_12, mul_13, mul_14, mul_15, mul_16, rsqrt, sub_2, var_mean
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Graph fragment:
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%constant_pad_nd, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%constant_pad_nd, %getitem_1), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.9), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %mul_12), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, 0.1), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %mul_15), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_1), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_16, %unsqueeze_3), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_6), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_7), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_1', '''
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton.language as tl
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 8192},
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     filename=__file__,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_1', 'mutated_arg_names': ['in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] )
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton.jit
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xnumel = 3
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     rnumel = r0_numel
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     rbase = r0_base
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     x0 = xindex
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         roffset = r0_offset
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         rindex = r0_index
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_1 = r0_index
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         )
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp19 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         roffset = r0_offset
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         rindex = r0_index
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_1 = r0_index
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp10 = 4 + 2*ks0 + 2*ks1 + ks0*ks1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp11 = tmp10.to(tl.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp12 = tmp3 / tmp11
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp13 = 1e-05
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp14 = tmp12 + tmp13
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp15 = libdevice.rsqrt(tmp14)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp16 = tmp9 * tmp15
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp18 = tmp16 * tmp17
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp20 = tmp18 + tmp19
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), tmp20, r0_mask & xmask)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp32 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp37 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp21 = 4 + 2*ks0 + 2*ks1 + ks0*ks1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp23 = tmp3 / tmp22
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp24 = 1e-05
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp25 = tmp23 + tmp24
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp26 = libdevice.rsqrt(tmp25)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp27 = (((12 + 6*ks0 + 6*ks1 + 3*ks0*ks1) / 3) / ((tl.full([], -1.00000000000000, tl.float64)) + ((12 + 6*ks0 + 6*ks1 + 3*ks0*ks1) / 3)))
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp28 = tmp27.to(tl.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp29 = tmp23 * tmp28
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp30 = 0.1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp31 = tmp29 * tmp30
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp33 = 0.9
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp34 = tmp32 * tmp33
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp35 = tmp31 + tmp34
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp36 = tmp2 * tmp30
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp38 = tmp37 * tmp33
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp39 = tmp36 + tmp38
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp26, xmask)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp35, xmask)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp39, xmask)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] ''', device_str='cuda')
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ke/ckea67ksdr4pks2mcpodgvsybipmzvkeee2q7lfxwirdsmbe34x2.py
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   add_ => add_4
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Graph fragment:
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, 1), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add_4), kwargs = {})
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_poi_fused_add_2 = async_compile.triton('triton_poi_fused_add_2', '''
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton.language as tl
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     filename=__file__,
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_2', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] )
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton.jit
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def triton_poi_fused_add_2(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xnumel = 1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] ''', device_str='cuda')
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] async_compile.wait(globals())
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] del async_compile
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def call(args):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     args.clear()
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     s1 = primals_1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     s2 = primals_2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(primals_3, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(primals_4, (), ())
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(primals_5, (3, ), (1, ))
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(primals_6, (3, ), (1, ))
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(primals_7, (3, ), (1, ))
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(primals_8, (3, ), (1, ))
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         ps0 = 2 + s2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         ps1 = 2 + s1
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         ps2 = 4 + 2*s1 + 2*s2 + s1*s2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 2 + s1, 2 + s2), (12 + 6*s1 + 6*s2 + 3*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1), torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 12 + 6*s1 + 6*s2 + 3*s1*s2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_3, buf0, ps0, ps1, s1, s2, ps2, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del primals_3
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 3, 2 + s1, 2 + s2), (12 + 6*s1 + 6*s2 + 3*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1), torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_functional]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_1_r0_numel = 4 + 2*s1 + 2*s2 + s1*s2
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_1.run(buf0, primals_7, primals_8, primals_6, primals_5, buf1, buf5, buf4, primals_6, primals_5, s1, s2, 3, triton_red_fused__native_batch_norm_legit_functional_1_r0_numel, grid=grid(3), stream=stream0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del primals_5
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del primals_6
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del primals_7
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del primals_8
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         triton_poi_fused_add_2.run(primals_4, primals_4, 1, grid=grid(1), stream=stream0)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del primals_4
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     return (buf5, buf0, reinterpret_tensor(buf4, (3, ), (1, ), 0), reinterpret_tensor(buf1, (1, 3, 1, 1), (3, 1, 1, 1), 0), s1, s2, )
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_1 = 64
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_2 = 64
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_4 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_5 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_6 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_7 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_8 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] if __name__ == "__main__":
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:04:58.875000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:58.880000 1492919 site-packages/torch/_inductor/graph.py:2022] [203/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/vj/cvjbs7g5kgj2rzmkb56wmnogzlddds6v2xab4cv27ysflxzyfy2j.py
I0127 12:04:59.055000 1492919 site-packages/torch/_inductor/graph.py:2056] [203/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/vj/cvjbs7g5kgj2rzmkb56wmnogzlddds6v2xab4cv27ysflxzyfy2j.py
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] Output code: 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # AOT ID: ['72_backward']
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import torch
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import math
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import random
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import os
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import tempfile
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from math import inf, nan
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from cmath import nanj
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch import device, empty_strided
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     grid,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     split_scan_grid,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     grid_combo_kernels,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     start_graph,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     end_graph,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] )
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] aten = torch.ops.aten
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x4/cx4wi2cvykw4znpbp5qcfkpz4ldlwpzxnzrt6yj2tg2yycd2ndb3.py
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] # Graph fragment:
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%tangents_1, [0, 2, 3]), kwargs = {})
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%constant_pad_nd, %unsqueeze_6), kwargs = {})
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tangents_1, %sub_6), kwargs = {})
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_21, [0, 2, 3]), kwargs = {})
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_red_fused_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused_native_batch_norm_backward_0', '''
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 8192},
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     filename=__file__,
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_batch_norm_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] )
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] @triton.jit
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def triton_red_fused_native_batch_norm_backward_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xnumel = 3
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     rnumel = r0_numel
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     rbase = r0_base
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     x0 = xindex
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp5 = tl.load(in_out_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     _tmp9 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         roffset = r0_offset
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         rindex = r0_index
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         r0_1 = r0_index
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp6 = tmp4 - tmp5
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp7 = tmp0 * tmp6
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, R0_BLOCK])
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         tmp10 = _tmp9 + tmp8
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         _tmp9 = tl.where(r0_mask & xmask, tmp10, _tmp9)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp9 = tl.sum(_tmp9, 1)[:, None]
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp11 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tmp12 = tmp9 * tmp11
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.debug_barrier()
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp12, xmask)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] ''', device_str='cuda')
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] async_compile.wait(globals())
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] del async_compile
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def call(args):
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_1, primals_2, constant_pad_nd, squeeze_1, unsqueeze_6, tangents_1 = args
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     args.clear()
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     s1 = primals_1
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     s2 = primals_2
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(constant_pad_nd, (1, 3, 2 + s1, 2 + s2), (12 + 6*s1 + 6*s2 + 3*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1))
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(squeeze_1, (3, ), (1, ))
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(unsqueeze_6, (1, 3, 1, 1), (3, 1, 1, 1))
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 3, 2 + s1, 2 + s2), (12 + 6*s1 + 6*s2 + 3*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1))
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         buf0 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         buf1 = reinterpret_tensor(unsqueeze_6, (3, ), (1, ), 0); del unsqueeze_6  # reuse
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         buf2 = buf1; del buf1  # reuse
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0_r0_numel = 4 + 2*s1 + 2*s2 + s1*s2
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0.run(buf2, tangents_1, constant_pad_nd, squeeze_1, buf0, s1, s2, 3, triton_red_fused_native_batch_norm_backward_0_r0_numel, grid=grid(3), stream=stream0)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del constant_pad_nd
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del squeeze_1
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]         del tangents_1
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     return (None, None, None, None, None, None, buf2, buf0, )
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_1 = 64
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     primals_2 = 64
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     constant_pad_nd = rand_strided((1, 3, 66, 66), (13068, 4356, 66, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     squeeze_1 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     unsqueeze_6 = rand_strided((1, 3, 1, 1), (3, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     tangents_1 = rand_strided((1, 3, 66, 66), (13068, 4356, 66, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, constant_pad_nd, squeeze_1, unsqueeze_6, tangents_1])
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] if __name__ == "__main__":
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:04:59.117000 1492919 site-packages/torch/_inductor/graph.py:2014] [203/0_1] [__output_code] 
V0127 12:04:59.120000 1492919 site-packages/torch/_inductor/graph.py:2022] [203/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pi/cpicikbauy5p3pptvuwf6pjikjkikodskdgr2uymyjauqvn2g7e6.py
I0127 12:04:59.226000 1492919 site-packages/torch/_inductor/graph.py:2056] [203/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pi/cpicikbauy5p3pptvuwf6pjikjkikodskdgr2uymyjauqvn2g7e6.py
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] Output code: 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # AOT ID: ['73_forward']
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import torch
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import math
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import random
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import os
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import tempfile
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from math import inf, nan
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from cmath import nanj
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch import device, empty_strided
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     grid,
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     split_scan_grid,
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     grid_combo_kernels,
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     start_graph,
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     end_graph,
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] )
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] aten = torch.ops.aten
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yx/cyx2p2px772637iiikh23fulfo7w2xc646uqfrbt2yocsvyyuxl4.py
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.elu]
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   x => expm1, gt, mul, mul_2, where
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # Graph fragment:
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%primals_4, 0), kwargs = {})
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_4, 1.0), kwargs = {})
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %expm1 : [num_users=1] = call_function[target=torch.ops.aten.expm1.default](args = (%mul,), kwargs = {})
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%expm1, 1.0), kwargs = {})
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %mul, %mul_2), kwargs = {})
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] triton_poi_fused_elu_0 = async_compile.triton('triton_poi_fused_elu_0', '''
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     filename=__file__,
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_elu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] )
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] @triton.jit
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] def triton_poi_fused_elu_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     x0 = xindex
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp1 = 0.0
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp2 = tmp0 > tmp1
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp3 = 1.0
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp4 = tmp0 * tmp3
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp5 = libdevice.expm1(tmp4)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp6 = tmp5 * tmp3
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp7 = tl.where(tmp2, tmp4, tmp6)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp7, xmask)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] ''', device_str='cuda')
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] async_compile.wait(globals())
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] del async_compile
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] def call(args):
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     args.clear()
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     s0 = primals_1
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     s1 = primals_2
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     s2 = primals_3
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     assert_size_stride(primals_4, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1), torch.float32)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.elu]
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         triton_poi_fused_elu_0_xnumel = s0*s1*s2
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         triton_poi_fused_elu_0.run(primals_4, buf0, triton_poi_fused_elu_0_xnumel, grid=grid(triton_poi_fused_elu_0_xnumel), stream=stream0)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     return (reinterpret_tensor(buf0, (1, s0, s1*s2), (s0*s1*s2, s1*s2, 1), 0), primals_4, s0, s1, s2, )
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_1 = 3
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_2 = 66
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_3 = 66
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_4 = rand_strided((1, 3, 66, 66), (13068, 4356, 66, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] if __name__ == "__main__":
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:04:59.463000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.464000 1492919 site-packages/torch/_inductor/graph.py:2022] [204/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pf/cpfacoe26zgeooawcpgno4qp7zrbvirrfdyu2mrnv37veobhz5zj.py
I0127 12:04:59.582000 1492919 site-packages/torch/_inductor/graph.py:2056] [204/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pf/cpfacoe26zgeooawcpgno4qp7zrbvirrfdyu2mrnv37veobhz5zj.py
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] Output code: 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # AOT ID: ['73_backward']
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import torch
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import math
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import random
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import os
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import tempfile
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from math import inf, nan
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from cmath import nanj
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch import device, empty_strided
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     grid,
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     split_scan_grid,
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     grid_combo_kernels,
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     start_graph,
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     end_graph,
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] )
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] aten = torch.ops.aten
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wa/cwac2t5eovaoil6thrcyqcxertderqygsuszvgfpjqusqntksojp.py
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.elu_backward]
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] # Graph fragment:
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%primals_4, 0), kwargs = {})
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %mul_10 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 1), kwargs = {})
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, 1.0), kwargs = {})
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_4, 1), kwargs = {})
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_12,), kwargs = {})
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, %exp), kwargs = {})
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %mul_13, %mul_10), kwargs = {})
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] triton_poi_fused_elu_backward_0 = async_compile.triton('triton_poi_fused_elu_backward_0', '''
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     filename=__file__,
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_elu_backward_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] )
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] @triton.jit
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] def triton_poi_fused_elu_backward_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     x0 = xindex
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp1 = 0.0
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp2 = tmp0 <= tmp1
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp4 = 1.0
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp5 = tmp3 * tmp4
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp6 = tmp5 * tmp4
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp7 = tmp0 * tmp4
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp8 = tl_math.exp(tmp7)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp9 = tmp6 * tmp8
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tmp10 = tl.where(tmp2, tmp9, tmp5)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] ''', device_str='cuda')
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] async_compile.wait(globals())
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] del async_compile
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] def call(args):
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, tangents_1 = args
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     args.clear()
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     s0 = primals_1
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     s1 = primals_2
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     s2 = primals_3
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     assert_size_stride(primals_4, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     assert_size_stride(tangents_1, (1, s0, s1*s2), (s0*s1*s2, s1*s2, 1))
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1), torch.float32)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.elu_backward]
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         triton_poi_fused_elu_backward_0_xnumel = s0*s1*s2
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         triton_poi_fused_elu_backward_0.run(primals_4, tangents_1, buf0, triton_poi_fused_elu_backward_0_xnumel, grid=grid(triton_poi_fused_elu_backward_0_xnumel), stream=stream0)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         del primals_4
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]         del tangents_1
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     return (None, None, None, buf0, )
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_1 = 3
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_2 = 66
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_3 = 66
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     primals_4 = rand_strided((1, 3, 66, 66), (13068, 4356, 66, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     tangents_1 = rand_strided((1, 3, 4356), (13068, 4356, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, tangents_1])
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] if __name__ == "__main__":
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:04:59.635000 1492919 site-packages/torch/_inductor/graph.py:2014] [204/0_1] [__output_code] 
V0127 12:04:59.636000 1492919 site-packages/torch/_inductor/graph.py:2022] [204/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6j/c6jkz4ozhxz7me5pc7gil3padwmmwhd3xoryxsdtwkf5i2ox6cl6.py
I0127 12:04:59.750000 1492919 site-packages/torch/_inductor/graph.py:2056] [204/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6j/c6jkz4ozhxz7me5pc7gil3padwmmwhd3xoryxsdtwkf5i2ox6cl6.py
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] Output code: 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] # AOT ID: ['74_forward']
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import torch
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import math
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import random
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import os
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import tempfile
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from math import inf, nan
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from cmath import nanj
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch import device, empty_strided
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import triton
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     grid,
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     split_scan_grid,
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     grid_combo_kernels,
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     start_graph,
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     end_graph,
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] )
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] aten = torch.ops.aten
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3h/c3hm6vry7nisa35aosjghe67hbl6khwkw2ajhb4k6bujbwxcuhsz.py
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.constant_pad_nd]
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] #   x_2 => constant_pad_nd
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] # Graph fragment:
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%unsqueeze, [1, 1, 1, 1, 1, 1], 0.0), kwargs = {})
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import triton
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] import triton.language as tl
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     size_hints={'x': 65536}, 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     filename=__file__,
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] )
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] @triton.jit
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     xnumel = 41616
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     x2 = ((xindex // 4624) % 3)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     x1 = ((xindex // 68) % 68)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     x0 = (xindex % 68)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     x3 = xindex // 13872
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     x7 = xindex
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp0 = (-1) + x2
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp5 = (-1) + x1
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp7 = tl.full([1], 66, tl.int64)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp9 = (-1) + x0
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp10 = tmp9 >= tmp1
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp11 = tmp9 < tmp7
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp12 = tmp2 & tmp4
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp13 = tmp12 & tmp6
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp14 = tmp13 & tmp8
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp15 = tmp14 & tmp10
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp16 = tmp15 & tmp11
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-67) + x0 + 66*x1 + 4356*x3), tmp16 & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     tl.store(out_ptr0 + (x7), tmp17, xmask)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] ''', device_str='cuda')
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] async_compile.wait(globals())
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] del async_compile
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] def call(args):
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     primals_1, = args
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     args.clear()
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     assert_size_stride(primals_1, (1, 3, 4356), (13068, 4356, 1))
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 3, 68, 68), (41616, 13872, 4624, 68, 1), torch.float32)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.constant_pad_nd]
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_1, buf0, 41616, grid=grid(41616), stream=stream0)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]         del primals_1
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     return (buf0, )
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     primals_1 = rand_strided((1, 3, 4356), (13068, 4356, 1), device='cuda:0', dtype=torch.float32)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     fn = lambda: call([primals_1])
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] if __name__ == "__main__":
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:04:59.885000 1492919 site-packages/torch/_inductor/graph.py:2014] [205/0_1] [__output_code] 
V0127 12:04:59.886000 1492919 site-packages/torch/_inductor/graph.py:2022] [205/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6c/c6cfdjky5dcqwkelwcnmkntatdhohv23n5nigzxftxd4eufv3ww3.py
I0127 12:05:00.016000 1492919 site-packages/torch/_inductor/graph.py:2056] [205/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6c/c6cfdjky5dcqwkelwcnmkntatdhohv23n5nigzxftxd4eufv3ww3.py
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] Output code: 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] # AOT ID: ['75_inference']
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] import torch
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] import math
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] import random
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] import os
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] import tempfile
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from math import inf, nan
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from cmath import nanj
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from torch import device, empty_strided
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] aten = torch.ops.aten
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] _quantized = torch.ops._quantized
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] async_compile = AsyncCompile()
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] async_compile.wait(globals())
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] del async_compile
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] def call(args):
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     args.clear()
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     s4 = arg0_1
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     s5 = arg1_1
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     s6 = arg2_1
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     s7 = arg3_1
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     assert_size_stride(arg4_1, (1, s4, s5, s6, s7), (s4*s5*s6*s7, s5*s6*s7, s6*s7, s7, 1))
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     return (arg4_1, )
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     arg0_1 = 3
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     arg1_1 = 3
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     arg2_1 = 68
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     arg3_1 = 68
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     arg4_1 = rand_strided((1, 3, 3, 68, 68), (41616, 13872, 4624, 68, 1), device='cuda:0', dtype=torch.float32)
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] if __name__ == "__main__":
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:05:01.625000 1492919 site-packages/torch/_inductor/graph.py:2014] [206/0] [__output_code] 
V0127 12:05:01.626000 1492919 site-packages/torch/_inductor/graph.py:2022] [206/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gn/cgn6o7ttnzv3jgrhk5hwtjnsadd63iae2xzglgi5c4bsytk42k52.py
I0127 12:05:01.627000 1492919 site-packages/torch/_inductor/graph.py:2056] [206/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gn/cgn6o7ttnzv3jgrhk5hwtjnsadd63iae2xzglgi5c4bsytk42k52.py
W0127 12:05:01.628000 1492919 site-packages/torch/_functorch/_aot_autograd/autograd_cache.py:887] [206/0] Bypassing autograd cache due to: Cannot cache a graph with functional tensor

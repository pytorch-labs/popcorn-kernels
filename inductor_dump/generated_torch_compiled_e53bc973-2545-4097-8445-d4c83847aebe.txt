V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] Output code: 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # AOT ID: ['1_forward']
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import torch
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import math
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import random
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import os
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import tempfile
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from math import inf, nan
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from cmath import nanj
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch import device, empty_strided
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import triton
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import triton.language as tl
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     grid,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     split_scan_grid,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     grid_combo_kernels,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     start_graph,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     end_graph,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     cooperative_reduction_grid,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] )
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] aten = torch.ops.aten
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] async_compile = AsyncCompile()
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ib/cibbztz2uphww2fskij2pcrkpmfcklnjrajw4jwyh4xvejfu3or3.py
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2, x_3], Original ATen: [aten.adaptive_max_pool2d, aten.mish, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   x_1 => adaptive_max_pool2d
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   x_2 => exp, gt, log1p, mul, tanh, where
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   x_3 => abs_1, gt_1, mul_1, mul_2, sign, sub, where_1
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # Graph fragment:
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %adaptive_max_pool2d : [num_users=1] = call_function[target=torch.ops.aten.adaptive_max_pool2d.default](args = (%unsqueeze, [1, 10]), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%squeeze_1,), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%squeeze_1, 20), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %squeeze_1, %log1p), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%where,), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %mul : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_1, %tanh), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%mul,), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%mul,), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, 0.5), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 0), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_1, %sub, %mul_2), kwargs = {})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] triton_poi_fused_abs_adaptive_max_pool2d_gt_mish_mul_sign_sub_where_0 = async_compile.triton('triton_poi_fused_abs_adaptive_max_pool2d_gt_mish_mul_sign_sub_where_0', '''
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import triton
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import triton.language as tl
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     size_hints={'x': 1024}, 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     filename=__file__,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_adaptive_max_pool2d_gt_mish_mul_sign_sub_where_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] )
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] @triton.jit
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] def triton_poi_fused_abs_adaptive_max_pool2d_gt_mish_mul_sign_sub_where_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xnumel = 1000
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     x0 = (xindex % 10)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     x1 = xindex // 10
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     x2 = xindex
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp3 = (7*x0) // 5
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp4 = (23 + 14*x0) // 10
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp6 = tmp2 & tmp5
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp7 = (-2) + ((7*x0) // 5)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp8 = tl.full([1], 0, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp9 = tmp7 >= tmp8
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp10 = tl.full([1], 10, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp11 = tmp7 < tmp10
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp12 = tmp9 & tmp11
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp13 = tmp12 & tmp6
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + ((-2) + 10*x1 + ((7*x0) // 5)), tmp13 & xmask, other=0.0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp15 = tl.full(tmp14.shape, float("-inf"), tmp14.dtype)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp16 = tl.where(tmp6, tmp14, tmp15)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp17 = 1 + ((7*x0) // 5)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp18 = tmp17 < tmp4
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp19 = tmp2 & tmp18
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp20 = (-1) + ((7*x0) // 5)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp21 = tl.full([1], 0, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp22 = tmp20 >= tmp21
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp23 = tl.full([1], 10, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp24 = tmp20 < tmp23
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp25 = tmp22 & tmp24
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp26 = tmp25 & tmp19
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp27 = tl.load(in_ptr0 + ((-1) + 10*x1 + ((7*x0) // 5)), tmp26 & xmask, other=0.0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp28 = tl.full(tmp27.shape, float("-inf"), tmp27.dtype)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp29 = tl.where(tmp19, tmp27, tmp28)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp30 = triton_helpers.maximum(tmp29, tmp16)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp31 = 2 + ((7*x0) // 5)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp32 = tmp31 < tmp4
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp33 = tmp2 & tmp32
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp34 = (7*x0) // 5
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp35 = tl.full([1], 0, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp36 = tmp34 >= tmp35
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp37 = tl.full([1], 10, tl.int64)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp38 = tmp34 < tmp37
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp39 = tmp36 & tmp38
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp40 = tmp39 & tmp33
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp41 = tl.load(in_ptr0 + (10*x1 + ((7*x0) // 5)), tmp40 & xmask, other=0.0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp42 = tl.full(tmp41.shape, float("-inf"), tmp41.dtype)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp43 = tl.where(tmp33, tmp41, tmp42)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp44 = triton_helpers.maximum(tmp43, tmp30)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp45 = 20.0
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp46 = tmp44 > tmp45
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp47 = tl_math.exp(tmp44)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp48 = libdevice.log1p(tmp47)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp49 = tl.where(tmp46, tmp44, tmp48)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp50 = libdevice.tanh(tmp49)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp51 = tmp44 * tmp50
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp52 = tl_math.abs(tmp51)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp53 = 0.5
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp54 = tmp52 > tmp53
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp55 = tl.full([1], 0, tl.int32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp56 = tmp55 < tmp51
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp57 = tmp56.to(tl.int8)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp58 = tmp51 < tmp55
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp59 = tmp58.to(tl.int8)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp60 = tmp57 - tmp59
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp61 = tmp60.to(tmp51.dtype)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp62 = tmp61 * tmp53
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp63 = tmp51 - tmp62
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp64 = 0.0
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp65 = tmp51 * tmp64
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp66 = tl.where(tmp54, tmp63, tmp65)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp66, xmask)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vz/cvz34jgmgfru6z3mzj72ywajdzmh7usfr66nsowcwj5dktqukaer.py
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # Topologically Sorted Source Nodes: [hx], Original ATen: [aten._to_copy]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   hx => full_default
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] # Graph fragment:
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([100, 20], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import triton
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] import triton.language as tl
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     size_hints={'x': 2048}, 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     filename=__file__,
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] )
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] @triton.jit
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] def triton_poi_fused__to_copy_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xnumel = 2000
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     x0 = xindex
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tmp0 = 0.0
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] ''', device_str='cuda')
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] async_compile.wait(globals())
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] del async_compile
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] def call(args):
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     args.clear()
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     assert_size_stride(primals_1, (5, 20, 10), (200, 10, 1))
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     assert_size_stride(primals_2, (80, 10), (10, 1))
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     assert_size_stride(primals_3, (80, 20), (20, 1))
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     assert_size_stride(primals_4, (80, ), (1, ))
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     assert_size_stride(primals_5, (80, ), (1, ))
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf0 = empty_strided_cuda((5, 20, 1, 10), (200, 10, 10, 1), torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf1 = reinterpret_tensor(buf0, (5, 20, 10), (200, 10, 1), 0); del buf0  # reuse
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2, x_3], Original ATen: [aten.adaptive_max_pool2d, aten.mish, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         triton_poi_fused_abs_adaptive_max_pool2d_gt_mish_mul_sign_sub_where_0.run(buf1, primals_1, 1000, grid=grid(1000), stream=stream0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del primals_1
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf2 = empty_strided_cuda((100, 20), (20, 1), torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [hx], Original ATen: [aten._to_copy]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         triton_poi_fused__to_copy_1.run(buf2, 2000, grid=grid(2000), stream=stream0)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf3 = empty_strided_cuda((100, 80), (80, 1), torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [lstm_cell], Original ATen: [aten.mm]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf1, (100, 10), (10, 1), 0), reinterpret_tensor(primals_2, (10, 80), (1, 10), 0), out=buf3)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del primals_2
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf4 = empty_strided_cuda((100, 80), (80, 1), torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [lstm_cell], Original ATen: [aten.mm]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         extern_kernels.mm(buf2, reinterpret_tensor(primals_3, (20, 80), (1, 20), 0), out=buf4)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del primals_3
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         # Topologically Sorted Source Nodes: [lstm_cell], Original ATen: [aten._thnn_fused_lstm_cell]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf5 = torch.ops.aten._thnn_fused_lstm_cell.default(buf3, buf4, buf2, primals_4, primals_5)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del buf3
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del buf4
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del primals_4
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del primals_5
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf6 = buf5[0]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf7 = buf5[1]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         buf8 = buf5[2]
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]         del buf5
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     return (reinterpret_tensor(buf6, (5, 20, 20), (400, 20, 1), 0), reinterpret_tensor(buf1, (100, 10), (10, 1), 0), buf2, buf7, buf8, )
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     primals_1 = rand_strided((5, 20, 10), (200, 10, 1), device='cuda:0', dtype=torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     primals_2 = rand_strided((80, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     primals_3 = rand_strided((80, 20), (20, 1), device='cuda:0', dtype=torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     primals_4 = rand_strided((80, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     primals_5 = rand_strided((80, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] if __name__ == "__main__":
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:26:31.915000 1612526 site-packages/torch/_inductor/graph.py:2014] [1/0_1] [__output_code] 
V0205 14:26:31.921000 1612526 site-packages/torch/_inductor/graph.py:2022] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6x/c6x7qri3sfqoss6vvvvbm7yjatkqicciy5cwtkzlesghyautf7qg.py
I0205 14:26:32.220000 1612526 site-packages/torch/_inductor/graph.py:2056] [1/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6x/c6x7qri3sfqoss6vvvvbm7yjatkqicciy5cwtkzlesghyautf7qg.py

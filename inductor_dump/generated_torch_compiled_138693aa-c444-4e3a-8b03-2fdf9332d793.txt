V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] Output code: 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # AOT ID: ['58_forward']
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import torch
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import random
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import os
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import tempfile
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from math import inf, nan
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from cmath import nanj
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch import device, empty_strided
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     grid,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     split_scan_grid,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     grid_combo_kernels,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     start_graph,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     end_graph,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     cooperative_reduction_grid,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] aten = torch.ops.aten
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] async_compile = AsyncCompile()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cq/ccqwsi2mo6votactbiesoflbnll7ilan7u6ylilcabrahhulige2.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.constant_pad_nd]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_2 => constant_pad_nd
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %constant_pad_nd : [num_users=3] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%unsqueeze, [2, 2, 2, 2], 3.5), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 262144}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x1 = ((xindex // ks0) % 5)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = (xindex % ks0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x2 = xindex // ks1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x4 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = (-2) + x1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = (-2) + x0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = (-4) + ks0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tmp2 & tmp4
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp11 = tmp10 & tmp8
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-2) + x0 + ((-4)*x2) + ks2*ks3*x2), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tl.load(in_ptr1 + (x2), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = tl.full(tmp14.shape, 3.5, tmp14.dtype)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = tl.where(tmp11, tmp14, tmp15)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp16, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cc/cccitq2kxaawiupoxukeuuyzcbex665mqqj22ba5gzi2xoaxzurz.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_3 => var_mean
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_1', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.reduction(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 8192},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_1(in_ptr0, out_ptr0, out_ptr1, out_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 30
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rnumel = r0_numel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rbase = r0_base
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = (xindex % 3)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x1 = xindex // 3
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x3 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         roffset = r0_offset
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         rindex = r0_index
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_2 = r0_index
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp0 = r0_2 + x0*((2 + ks0) // 3)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp1 = ks0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (5*ks1*ks2*x1 + (((r0_2 + x0*((2 + ks0) // 3)) % ks0))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp4 = 0.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp5 = tl.full(tmp4.shape, 0, tmp4.dtype)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp6 = tl.where(tmp2, tmp4, tmp5)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp7 = 1.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp8 = tl.full(tmp7.shape, 0, tmp7.dtype)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp9 = tl.where(tmp2, tmp7, tmp8)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp10 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp11 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp13_mean_next, tmp13_m2_next, tmp13_weight_next = triton_helpers.welford_combine(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]             tmp13_mean, tmp13_m2, tmp13_weight,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]             tmp10, tmp11, tmp12
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp13_mean = tl.where(r0_mask & xmask, tmp13_mean_next, tmp13_mean)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp13_m2 = tl.where(r0_mask & xmask, tmp13_m2_next, tmp13_m2)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp13_weight = tl.where(r0_mask & xmask, tmp13_weight_next, tmp13_weight)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16, tmp17, tmp18 = triton_helpers.welford(tmp13_mean, tmp13_m2, tmp13_weight, 1)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tmp16[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tmp17[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = tmp18[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp14, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr2 + (x3), tmp15, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/et/cetalciagbusch7tmkf4b764rc7njlpqrne446p6vmigby4lh3u3.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_3 => add_17, rsqrt, var_mean
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_17,), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_per_fused__native_batch_norm_legit_2 = async_compile.triton('triton_per_fused__native_batch_norm_legit_2', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_per_fused__native_batch_norm_legit_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 10
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_numel = 3
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 4
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rnumel = r0_numel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_offset = 0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_mask = r0_index < r0_numel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     roffset = r0_offset
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rindex = r0_index
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_1 = r0_index
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 3*x0), r0_mask & xmask, other=0.0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 3*x0), r0_mask & xmask, other=0.0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 3*x0), r0_mask & xmask, other=0.0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tl.where(r0_mask & xmask, tmp3, 0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = tl.where(r0_mask & xmask, tmp4, 0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tl.where(r0_mask & xmask, tmp5, 0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tmp10[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tmp11[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = tmp12[:, None]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = ks0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp18 = tmp14 / tmp17
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp19 = 1e-05
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tmp18 + tmp19
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp21, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/km/ckmoj4hf4zszm2ehybmbaikjmmfcgffnrvoq4pvbgnafftyv4s5c.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._to_copy]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_4 => convert_element_type_1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_3, torch.int64), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused__to_copy_3 = async_compile.triton('triton_poi_fused__to_copy_3', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused__to_copy_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 10
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = x0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = 0.4444444444444444
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = 0.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xh/cxhh2xftt3xucd57hi2wa2vb6oh4geh4i32nrvrahvs5hf5f5rgb.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.add, aten.clamp]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_4 => add_26, clamp_max
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_max : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_26, 4), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused_add_clamp_4 = async_compile.triton('triton_poi_fused_add_clamp_4', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused_add_clamp_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 10
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = x0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = 0.4444444444444444
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = 0.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tl.full([1], 4, tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uu/cuujlxb565wshtqwzl5qzh5du6qada24o57thadt7nxkxygxpsbb.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_4 => clamp_min_1, convert_element_type_2, convert_element_type_3, iota_1, view_4
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %scalar_tensor_default_1 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_1,), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %scalar_tensor_default_2 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_2,), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%scalar_tensor_default_1, %scalar_tensor_default_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_default : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor, torch.float64), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_2, %scalar_tensor_default_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_tensor_1, %scalar_tensor_default_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_default_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_2, torch.float64), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %true_divide_tensor : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor, %add_tensor_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_default_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor, torch.float32), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_3, 0.0), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %view_4 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%floordiv]), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_3 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_4, torch.int64), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused__to_copy_arange_clamp_view_5 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_view_5', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 8192}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_view_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused__to_copy_arange_clamp_view_5(out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.full([1], -1.0, tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = ks0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tmp1.to(tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp0 + tmp2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = 2.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = ks1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tmp4 * tmp6
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = ks2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = tmp7 * tmp9
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp11 = tmp10.to(tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp12 = tmp0 + tmp11
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tmp3 / tmp12
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = x0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp17 = tmp16 * tmp14
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp18 = 0.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp19 = triton_helpers.maximum(tmp17, tmp18)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tmp19.to(tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp20, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/co/ccopvuzqrsvofv3pbn57hmpvw7rfm57zrbsfjmfwz7bpa3hmjzwa.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.add, aten.clamp]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_4 => add_40, clamp_max_1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_40 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_3, 1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_max_1 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_40, %sub_19), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused_add_clamp_6 = async_compile.triton('triton_poi_fused_add_clamp_6', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 8192}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused_add_clamp_6(out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.full([1], -1.0, tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = ks0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tmp1.to(tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp0 + tmp2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = 2.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = ks1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tmp4 * tmp6
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = ks2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = tmp7 * tmp9
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp11 = tmp10.to(tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp12 = tmp0 + tmp11
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tmp3 / tmp12
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = x0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp17 = tmp16 * tmp14
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp18 = 0.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp19 = triton_helpers.maximum(tmp17, tmp18)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tmp19.to(tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp21 = tl.full([1], 1, tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp22 = tmp20 + tmp21
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp23 = (-1) + ks0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp24 = triton_helpers.minimum(tmp22, tmp23)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp24, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ka/ckaeslyey2vgn7rszwj6woocu7idjzqeraxdgwi35yqryg6zvo7i.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.sub]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_4 => clamp_max_2, clamp_min_1, clamp_min_2, convert_element_type_2, iota_1, sub_25, view_4
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %scalar_tensor_default_1 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_1,), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %scalar_tensor_default_2 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_2,), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%scalar_tensor_default_1, %scalar_tensor_default_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_default : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor, torch.float64), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_2, %scalar_tensor_default_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_tensor_1, %scalar_tensor_default_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_default_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_2, torch.float64), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %true_divide_tensor : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor, %add_tensor_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %convert_element_type_default_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor, torch.float32), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_3, 0.0), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %view_4 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%floordiv]), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %convert_element_type_3), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_25, 0.0), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused__to_copy_arange_clamp_sub_view_7 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_sub_view_7', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 8192}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_sub_view_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused__to_copy_arange_clamp_sub_view_7(out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.full([1], -1.0, tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = ks0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tmp1.to(tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp0 + tmp2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = 2.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = ks1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tmp4 * tmp6
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = ks2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = tmp7 * tmp9
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp11 = tmp10.to(tl.float64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp12 = tmp0 + tmp11
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tmp3 / tmp12
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = x0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp17 = tmp16 * tmp14
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp18 = 0.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp19 = triton_helpers.maximum(tmp17, tmp18)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tmp19.to(tl.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp21 = tmp20.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp22 = tmp19 - tmp21
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp18)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp24 = 1.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp25 = triton_helpers.minimum(tmp23, tmp24)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ut/cutcr5axvyv6eakmm5d4cu7rhr2edt77l5nuxsztyvjy7dkf7ooi.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.sub, aten.clamp]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_4 => clamp_max_3, clamp_min_3, sub_36
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_36 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_3, %convert_element_type_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_36, 0.0), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %clamp_max_3 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused_clamp_sub_8 = async_compile.triton('triton_poi_fused_clamp_sub_8', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_sub_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused_clamp_sub_8(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 10
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = x0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = 0.4444444444444444
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = 0.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = tmp5 - tmp7
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = 1.0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qn/cqn4nn3sib3vlkjalwcstmfh3hnqmp6askck337zku6j7fwbqplk.py
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4, x_5], Original ATen: [aten._native_batch_norm_legit, aten.view, aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.squeeze]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_3 => add_17, mul_23, rsqrt, sub_5, var_mean, view_2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_4 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_73, add_86, add_99, mul_65, mul_78, mul_91, sub_28, sub_32, sub_37
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   x_5 => squeeze_2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_17 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_17,), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %rsqrt), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %view_2 : [num_users=4] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_23, [1, 10, 5, %sym_size_int_2]), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_2, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_2, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_2, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_2, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_28 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_65 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_28, %clamp_max_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_73 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_65), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_32 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_78 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_32, %clamp_max_2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_86 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_78), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_37 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_86, %add_73), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_91 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_37, %clamp_max_3), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_99 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_73, %mul_91), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %squeeze_2 : [num_users=1] = call_function[target=torch.ops.aten.squeeze.dim](args = (%add_99, 2), kwargs = {})
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9', '''
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 1048576}, 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x1 = ((xindex // ks0) % 10)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = (xindex % ks0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x2 = xindex // ks2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x3 = xindex
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp11 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp21 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp28 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp36 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp46 = tl.load(in_ptr8 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 5, tl.int32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp0 < 0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = ks1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = tmp5 < 0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tl.where(tmp8, tmp7, tmp5)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = tl.load(in_ptr2 + (tmp9 + ks3*ks4*tmp4 + 5*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp12 = tmp10 - tmp11
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = ks5
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = tmp13 / tmp15
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp17 = 1e-05
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp18 = tmp16 + tmp17
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp19 = libdevice.rsqrt(tmp18)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tmp12 * tmp19
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp22 = tmp21 + tmp1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp23 = tmp21 < 0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp24 = tl.where(tmp23, tmp22, tmp21)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp25 = tl.load(in_ptr2 + (tmp9 + ks3*ks4*tmp24 + 5*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp26 = tmp25 - tmp11
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp27 = tmp26 * tmp19
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp29 = tmp28 + tmp6
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp30 = tmp28 < 0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp31 = tl.where(tmp30, tmp29, tmp28)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp32 = tl.load(in_ptr2 + (tmp31 + ks3*ks4*tmp24 + 5*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp33 = tmp32 - tmp11
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp34 = tmp33 * tmp19
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp35 = tmp34 - tmp27
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp37 = tmp35 * tmp36
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp38 = tmp27 + tmp37
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp39 = tl.load(in_ptr2 + (tmp31 + ks3*ks4*tmp4 + 5*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp40 = tmp39 - tmp11
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp41 = tmp40 * tmp19
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp42 = tmp41 - tmp20
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp43 = tmp42 * tmp36
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp44 = tmp20 + tmp43
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp45 = tmp44 - tmp38
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp47 = tmp45 * tmp46
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp48 = tmp38 + tmp47
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp48, xmask)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] async_compile.wait(globals())
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] del async_compile
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def call(args):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     args.clear()
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     s0 = primals_1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     s1 = primals_2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(primals_3, (1, 1, s0, s1), (s0*s1, s0*s1, s1, 1))
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(primals_4, (10, 1, 5), (5, 5, 1))
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(primals_5, (10, ), (1, ))
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(primals_3, (1, 1, s0*s1), (s0*s1, s0*s1, 1), 0), primals_4, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, (-4) + s0*s1), ((-40) + 10*s0*s1, (-4) + s0*s1, 1))
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         ps0 = s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         ps1 = 5*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 10, 5, s0*s1), (50*s0*s1, 5*s0*s1, s0*s1, 1), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.constant_pad_nd]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 50*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(buf0, primals_5, buf1, ps0, ps1, s0, s1, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf0
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del primals_5
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, 1, 1, 3), (30, 3, 30, 30, 1), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 10, 1, 1, 3), (30, 3, 30, 30, 1), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 10, 1, 1, 3), (30, 3, 30, 30, 1), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_1_r0_numel = (2 + 5*s0*s1) // 3
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_1.run(buf1, buf2, buf3, buf4, ps1, s0, s1, 30, triton_red_fused__native_batch_norm_legit_1_r0_numel, grid=grid(30), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 10, 1, 1), (10, 1, 10, 10), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, 1, 1), (10, 1, 10, 10), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 10, 1, 1), (10, 1, 10, 10), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_per_fused__native_batch_norm_legit_2.run(buf2, buf3, buf4, buf5, buf6, buf8, ps1, 10, 3, grid=grid(10), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf2
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf3
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf4
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf9 = empty_strided_cuda((10, 1), (1, 1), torch.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._to_copy]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__to_copy_3.run(buf9, 10, grid=grid(10), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf10 = empty_strided_cuda((10, 1), (1, 1), torch.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.add, aten.clamp]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_add_clamp_4.run(buf10, 10, grid=grid(10), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf11 = empty_strided_cuda((2*s0*s1, ), (1, ), torch.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__to_copy_arange_clamp_view_5_xnumel = 2*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__to_copy_arange_clamp_view_5.run(buf11, ps0, s0, s1, triton_poi_fused__to_copy_arange_clamp_view_5_xnumel, grid=grid(triton_poi_fused__to_copy_arange_clamp_view_5_xnumel), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf12 = empty_strided_cuda((2*s0*s1, ), (1, ), torch.int64)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.add, aten.clamp]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_add_clamp_6_xnumel = 2*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_add_clamp_6.run(buf12, ps0, s0, s1, triton_poi_fused_add_clamp_6_xnumel, grid=grid(triton_poi_fused_add_clamp_6_xnumel), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf15 = empty_strided_cuda((2*s0*s1, ), (1, ), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.sub]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__to_copy_arange_clamp_sub_view_7_xnumel = 2*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__to_copy_arange_clamp_sub_view_7.run(buf15, ps0, s0, s1, triton_poi_fused__to_copy_arange_clamp_sub_view_7_xnumel, grid=grid(triton_poi_fused__to_copy_arange_clamp_sub_view_7_xnumel), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf17 = empty_strided_cuda((10, 1), (1, 1), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.sub, aten.clamp]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_clamp_sub_8.run(buf17, 10, grid=grid(10), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         ps2 = 2*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         ps3 = 20*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf13 = empty_strided_cuda((1, 10, 10, 2*s0*s1), (200*s0*s1, 20*s0*s1, 2*s0*s1, 1), torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf16 = buf13; del buf13  # reuse
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf19 = buf16; del buf16  # reuse
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4, x_5], Original ATen: [aten._native_batch_norm_legit, aten.view, aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.squeeze]
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9_xnumel = 200*s0*s1
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9.run(buf19, buf10, buf11, buf1, buf5, buf6, buf9, buf12, buf15, buf17, ps2, ps0, ps3, s0, s1, ps1, triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9_xnumel, grid=grid(triton_poi_fused__native_batch_norm_legit__unsafe_index_add_mul_squeeze_sub_view_9_xnumel), stream=stream0)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf6
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     return (buf19, primals_4, reinterpret_tensor(primals_3, (1, 1, s0*s1), (s0*s1, s0*s1, 1), 0), buf1, reinterpret_tensor(buf8, (10, ), (1, ), 0), buf9, buf10, buf11, buf12, buf15, buf17, reinterpret_tensor(buf5, (1, 10, 1, 1), (10, 1, 1, 1), 0), s0, s1, s0*s1, )
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_1 = 64
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_2 = 64
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_3 = rand_strided((1, 1, 64, 64), (4096, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_4 = rand_strided((10, 1, 5), (5, 5, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_5 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] if __name__ == "__main__":
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:23:04.922000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:04.937000 2827036 site-packages/torch/_inductor/graph.py:2022] [250/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fx/cfxydhhwjomnovladl63jgiwtfsctayzc2agtjzxsfdneh7umdrg.py
I0204 16:23:05.463000 2827036 site-packages/torch/_inductor/graph.py:2056] [250/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fx/cfxydhhwjomnovladl63jgiwtfsctayzc2agtjzxsfdneh7umdrg.py
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] Output code: 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # AOT ID: ['58_backward']
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import torch
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import math
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import random
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import os
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import tempfile
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from math import inf, nan
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from cmath import nanj
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch import device, empty_strided
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     grid,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     split_scan_grid,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     grid_combo_kernels,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     start_graph,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     end_graph,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     cooperative_reduction_grid,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] aten = torch.ops.aten
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] async_compile = AsyncCompile()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xc/cxcubixbfuo2eyt4x5oihmogakylnukaey4x6omraqx4uxdakizp.py
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.new_zeros, aten._unsafe_index_put]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_108 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tangents_1, %clamp_max_3), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_109 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_108, %clamp_max_2), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %full : [num_users=4] = call_function[target=torch.ops.aten.full.default](args = ([1, 10, 5, %sym_size_int_2], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put.default](args = (%full, [None, None, %clamp_max, %clamp_max_1], %mul_109, True), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused__unsafe_index_put_mul_new_zeros_0 = async_compile.triton('triton_poi_fused__unsafe_index_put_mul_new_zeros_0', '''
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 262144}, 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_put_mul_new_zeros_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused__unsafe_index_put_mul_new_zeros_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = 0.0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ok/cokjxndfruezuavgejx2yqjvouuizcyvrhkqegttlod5oy7fx4im.py
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.neg, aten.add, aten.new_zeros, aten._unsafe_index_put]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_108 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tangents_1, %clamp_max_3), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_108,), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_108 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%tangents_1, %neg), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_109 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_108, %clamp_max_2), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_109,), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_109 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_108, %neg_1), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_110 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_108, %clamp_max_2), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %neg_2 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_110,), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_110 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_108, %neg_2), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %full : [num_users=4] = call_function[target=torch.ops.aten.full.default](args = ([1, 10, 5, %sym_size_int_2], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put.default](args = (%full, [None, None, %clamp_max, %clamp_max_1], %mul_109, True), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %index_put_1 : [num_users=1] = call_function[target=torch.ops.aten.index_put.default](args = (%full, [None, None, %clamp_max, %convert_element_type_3], %add_109, True), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %index_put_2 : [num_users=1] = call_function[target=torch.ops.aten.index_put.default](args = (%full, [None, None, %convert_element_type_1, %clamp_max_1], %mul_110, True), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %index_put_3 : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%full, [None, None, %convert_element_type_1, %convert_element_type_3], %add_110, True), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1 = async_compile.triton('triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1', '''
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 1048576}, 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*i64', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1', 'mutated_arg_names': ['out_ptr0', 'out_ptr1', 'out_ptr2', 'out_ptr3'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, out_ptr2, out_ptr3, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x1 = ((xindex // ks0) % 10)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = (xindex % ks0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x3 = xindex
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x2 = xindex // ks3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp12 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp17 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp25 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 5, tl.int32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tmp0 < 0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 5)) | ~(xmask), "index out of bounds: 0 <= tmp4 < 5")
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = ks1*ks2
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tmp6 < 0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = tl.where(tmp9, tmp8, tmp6)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.device_assert(((0 <= tmp10) & (tmp10 < ks1*ks2)) | ~(xmask), "index out of bounds: 0 <= tmp10 < ks1*ks2")
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tmp12 * tmp13
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = tmp14 * tmp15
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp18 = tmp17 + tmp1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp19 = tmp17 < 0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp17)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.device_assert(((0 <= tmp20) & (tmp20 < 5)) | ~(xmask), "index out of bounds: 0 <= tmp20 < 5")
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp22 = -tmp14
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp23 = tmp12 + tmp22
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp24 = tmp23 * tmp15
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp26 = tmp25 + tmp7
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp27 = tmp25 < 0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp28 = tl.where(tmp27, tmp26, tmp25)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.device_assert(((0 <= tmp28) & (tmp28 < ks1*ks2)) | ~(xmask), "index out of bounds: 0 <= tmp28 < ks1*ks2")
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp30 = -tmp16
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp31 = tmp14 + tmp30
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp32 = -tmp24
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp33 = tmp23 + tmp32
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.atomic_add(out_ptr0 + (tmp10 + ks1*ks2*tmp4 + 5*ks1*ks2*x2), tmp16, xmask, sem='relaxed')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.atomic_add(out_ptr1 + (tmp10 + ks1*ks2*tmp20 + 5*ks1*ks2*x2), tmp24, xmask, sem='relaxed')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.atomic_add(out_ptr2 + (tmp28 + ks1*ks2*tmp4 + 5*ks1*ks2*x2), tmp31, xmask, sem='relaxed')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.atomic_add(out_ptr3 + (tmp28 + ks1*ks2*tmp20 + 5*ks1*ks2*x2), tmp33, xmask, sem='relaxed')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ux/cuxfq7syhw3xgqkrt6jck4vdziync5kshv4i77ji7wahw4r3pzke.py
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.add, aten.view, aten.native_batch_norm_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_111 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%index_put, %index_put_1), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_112 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_111, %index_put_2), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_113 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_112, %index_put_3), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %view_5 : [num_users=3] = call_function[target=torch.ops.aten.reshape.default](args = (%add_113, [1, 10, 5, %sym_size_int_2]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_5, [0, 2, 3]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_42 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %unsqueeze_3), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_111 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_5, %sub_42), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_111, [0, 2, 3]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_red_fused_add_native_batch_norm_backward_view_2 = async_compile.triton('triton_red_fused_add_native_batch_norm_backward_view_2', '''
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.reduction(
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 8192},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_native_batch_norm_backward_view_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_red_fused_add_native_batch_norm_backward_view_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 30
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rnumel = r0_numel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rbase = r0_base
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = (xindex % 3)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x1 = xindex // 3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     _tmp13 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x3 = xindex
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     _tmp22 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         roffset = r0_offset
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         rindex = r0_index
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_2 = r0_index
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp0 = r0_2 + x0*((2 + 5*ks0*ks1) // 3)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp1 = 5*ks0*ks1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (5*ks0*ks1*x1 + (((r0_2 + x0*((2 + 5*ks0*ks1) // 3)) % (5*ks0*ks1)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp4 = tl.load(in_ptr1 + (5*ks0*ks1*x1 + (((r0_2 + x0*((2 + 5*ks0*ks1) // 3)) % (5*ks0*ks1)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp5 = tmp3 + tmp4
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp6 = tl.load(in_ptr2 + (5*ks0*ks1*x1 + (((r0_2 + x0*((2 + 5*ks0*ks1) // 3)) % (5*ks0*ks1)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp7 = tmp5 + tmp6
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp8 = tl.load(in_ptr3 + (5*ks0*ks1*x1 + (((r0_2 + x0*((2 + 5*ks0*ks1) // 3)) % (5*ks0*ks1)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp9 = tmp7 + tmp8
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp10 = tl.full(tmp9.shape, 0, tmp9.dtype)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp11 = tl.where(tmp2, tmp9, tmp10)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp14 = _tmp13 + tmp12
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         _tmp13 = tl.where(r0_mask & xmask, tmp14, _tmp13)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp15 = tl.load(in_ptr4 + (5*ks0*ks1*x1 + (((r0_2 + x0*((2 + 5*ks0*ks1) // 3)) % (5*ks0*ks1)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp16 = tl.load(in_ptr5 + (tl.broadcast_to(x1, [XBLOCK, R0_BLOCK])), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp17 = tmp15 - tmp16
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp18 = tmp9 * tmp17
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp19 = tl.full(tmp18.shape, 0, tmp18.dtype)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp20 = tl.where(tmp2, tmp18, tmp19)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp21 = tl.broadcast_to(tmp20, [XBLOCK, R0_BLOCK])
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp23 = _tmp22 + tmp21
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         _tmp22 = tl.where(r0_mask & xmask, tmp23, _tmp22)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp22 = tl.sum(_tmp22, 1)[:, None]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp22, xmask)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3k/c3kwvoims4g5xzt23gwqaxwlrg5pq22otrskovdrqo5lvrnh57zm.py
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.add, aten.view, aten.native_batch_norm_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_111 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%index_put, %index_put_1), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_112 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_111, %index_put_2), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_113 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_112, %index_put_3), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %view_5 : [num_users=3] = call_function[target=torch.ops.aten.reshape.default](args = (%add_113, [1, 10, 5, %sym_size_int_2]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_5, [0, 2, 3]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_per_fused_add_native_batch_norm_backward_view_3 = async_compile.triton('triton_per_fused_add_native_batch_norm_backward_view_3', '''
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_native_batch_norm_backward_view_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_per_fused_add_native_batch_norm_backward_view_3(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 10
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_numel = 3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 4
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rnumel = r0_numel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_offset = 0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_mask = r0_index < r0_numel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     roffset = r0_offset
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rindex = r0_index
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_1 = r0_index
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 3*x0), r0_mask & xmask, other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tl.where(r0_mask & xmask, tmp1, 0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rc/crcu7zbyqfir5unqr2pdbvp6zfmcryauapojf4negunawpe2g4rg.py
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.add, aten.view, aten.native_batch_norm_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_111 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%index_put, %index_put_1), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_112 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_111, %index_put_2), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %add_113 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_112, %index_put_3), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %view_5 : [num_users=3] = call_function[target=torch.ops.aten.reshape.default](args = (%add_113, [1, 10, 5, %sym_size_int_2]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_42 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %unsqueeze_3), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_118 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_42, %unsqueeze_9), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_44 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %mul_118), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sub_45 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_44, %unsqueeze_6), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_poi_fused_add_native_batch_norm_backward_view_4 = async_compile.triton('triton_poi_fused_add_native_batch_norm_backward_view_4', '''
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 262144}, 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_native_batch_norm_backward_view_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_poi_fused_add_native_batch_norm_backward_view_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x2 = xindex
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x1 = xindex // ks0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp5 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp7 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp8 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp10 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp14 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp19 = tl.load(in_ptr7 + (x1), xmask, eviction_policy='evict_last')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp4 = tmp2 + tmp3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp6 = tmp4 + tmp5
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp9 = tmp7 - tmp8
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp11 = (tl.full([], 1.00000000000000, tl.float64) / ((50*ks1*ks2) / 10))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp13 = tmp10 * tmp12
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp15 = tmp14 * tmp14
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp16 = tmp13 * tmp15
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp17 = tmp9 * tmp16
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp18 = tmp6 - tmp17
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tmp19 * tmp12
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp21 = tmp18 - tmp20
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp21, xmask)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4d/c4djn4f4ezcp4nwjwkdg54r4q74jiuy2ygscc6a3z6ehhe7t3cf6.py
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.view, aten.constant_pad_nd, aten.convolution_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] # Graph fragment:
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_117 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_12, 1.0), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %mul_119 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_45, %mul_117), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %view_6 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_119, [1, 10, 5, %sym_size_int_2]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %constant_pad_nd_1 : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%view_6, [-2, -2, -2, -2]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%squeeze_3, [0, 2]), kwargs = {})
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_red_fused_constant_pad_nd_convolution_backward_native_batch_norm_backward_view_5 = async_compile.triton('triton_red_fused_constant_pad_nd_convolution_backward_native_batch_norm_backward_view_5', '''
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] import triton.language as tl
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton_heuristics.reduction(
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4096},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     filename=__file__,
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_constant_pad_nd_convolution_backward_native_batch_norm_backward_view_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] @triton.jit
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def triton_red_fused_constant_pad_nd_convolution_backward_native_batch_norm_backward_view_5(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xnumel = 10
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rnumel = r0_numel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     rbase = r0_base
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     x0 = xindex
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     _tmp20 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         roffset = r0_offset
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         rindex = r0_index
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         r0_1 = r0_index
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp0 = tl.full([1, 1], 2, tl.int64)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp1 = tl.full([1, 1], 0, tl.int64)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp2 = tmp0 >= tmp1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp3 = tl.full([1, 1], 5, tl.int64)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp4 = tmp0 < tmp3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp5 = 2 + r0_1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp6 = tmp5 >= tmp1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp7 = ks0*ks1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp8 = tmp5 < tmp7
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp9 = tmp2 & tmp4
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp10 = tmp9 & tmp6
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp11 = tmp10 & tmp8
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp12 = tl.load(in_ptr0 + (2 + ks2 + r0_1 + 5*ks0*ks1*x0), r0_mask & tmp11 & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp13 = tl.load(in_ptr1 + (tl.broadcast_to(x0, [XBLOCK, R0_BLOCK])), r0_mask & tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp14 = 1.0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp15 = tmp13 * tmp14
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp16 = tmp12 * tmp15
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp18 = tl.where(tmp11, tmp16, tmp17)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp19 = tl.broadcast_to(tmp18, [XBLOCK, R0_BLOCK])
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tmp21 = _tmp20 + tmp19
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         _tmp20 = tl.where(r0_mask & xmask, tmp21, _tmp20)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         tl.store(out_ptr0 + (r0_1 + ((-4)*x0) + ks0*ks1*x0), tmp18, r0_mask & xmask)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tmp20 = tl.sum(_tmp20, 1)[:, None]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp20, xmask)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] ''', device_str='cuda')
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] async_compile.wait(globals())
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] del async_compile
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def call(args):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_1, primals_2, sym_size_int_2, primals_4, view, constant_pad_nd, squeeze_1, convert_element_type_1, clamp_max, convert_element_type_3, clamp_max_1, clamp_max_2, clamp_max_3, unsqueeze_3, tangents_1 = args
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     args.clear()
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     s0 = primals_1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     s1 = primals_2
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(primals_4, (10, 1, 5), (5, 5, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(view, (1, 1, s0*s1), (s0*s1, s0*s1, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(constant_pad_nd, (1, 10, 5, s0*s1), (50*s0*s1, 5*s0*s1, s0*s1, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(squeeze_1, (10, ), (1, ))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(convert_element_type_1, (10, 1), (1, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(clamp_max, (10, 1), (1, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(convert_element_type_3, (2*s0*s1, ), (1, ))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(clamp_max_1, (2*s0*s1, ), (1, ))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(clamp_max_2, (2*s0*s1, ), (1, ))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(clamp_max_3, (10, 1), (1, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(unsqueeze_3, (1, 10, 1, 1), (10, 1, 1, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 10, 10, 2*s0*s1), (200*s0*s1, 20*s0*s1, 2*s0*s1, 1))
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 10, 5, s0*s1), (50*s0*s1, 5*s0*s1, s0*s1, 1), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.new_zeros, aten._unsafe_index_put]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel = 50*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0.run(buf0, triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel, grid=grid(triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, 5, s0*s1), (50*s0*s1, 5*s0*s1, s0*s1, 1), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.neg, aten.add, aten.new_zeros, aten._unsafe_index_put]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel = 50*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0.run(buf2, triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel, grid=grid(triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 10, 5, s0*s1), (50*s0*s1, 5*s0*s1, s0*s1, 1), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.neg, aten.add, aten.new_zeros, aten._unsafe_index_put]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel = 50*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0.run(buf4, triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel, grid=grid(triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, 5, s0*s1), (50*s0*s1, 5*s0*s1, s0*s1, 1), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel = 50*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_mul_new_zeros_0.run(buf6, triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel, grid=grid(triton_poi_fused__unsafe_index_put_mul_new_zeros_0_xnumel), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         ps0 = 2*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         ps1 = 20*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.neg, aten.add, aten.new_zeros, aten._unsafe_index_put]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1_xnumel = 200*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1.run(clamp_max, clamp_max_1, tangents_1, clamp_max_3, clamp_max_2, convert_element_type_1, convert_element_type_3, buf0, buf4, buf2, buf6, ps0, s0, s1, ps1, triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1_xnumel, grid=grid(triton_poi_fused__unsafe_index_put_add_mul_neg_new_zeros_1_xnumel), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del clamp_max
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del clamp_max_1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del clamp_max_2
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del clamp_max_3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del convert_element_type_1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del convert_element_type_3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del tangents_1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf8 = empty_strided_cuda((10, 3), (3, 1), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf10 = empty_strided_cuda((10, 3), (3, 1), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.add, aten.view, aten.native_batch_norm_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_red_fused_add_native_batch_norm_backward_view_2_r0_numel = (2 + 5*s0*s1) // 3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_red_fused_add_native_batch_norm_backward_view_2.run(buf0, buf2, buf4, buf6, constant_pad_nd, unsqueeze_3, buf8, buf10, s0, s1, 30, triton_red_fused_add_native_batch_norm_backward_view_2_r0_numel, grid=grid(30), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf9 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.add, aten.view, aten.native_batch_norm_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_per_fused_add_native_batch_norm_backward_view_3.run(buf8, buf9, 10, 3, grid=grid(10), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf8
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf11 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.add, aten.view, aten.native_batch_norm_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_per_fused_add_native_batch_norm_backward_view_3.run(buf10, buf11, 10, 3, grid=grid(10), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf10
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         ps2 = 5*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf12 = constant_pad_nd; del constant_pad_nd  # reuse
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.add, aten.view, aten.native_batch_norm_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_add_native_batch_norm_backward_view_4_xnumel = 50*s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_poi_fused_add_native_batch_norm_backward_view_4.run(buf12, buf0, buf2, buf4, buf6, unsqueeze_3, buf11, squeeze_1, buf9, ps2, s0, s1, triton_poi_fused_add_native_batch_norm_backward_view_4_xnumel, grid=grid(triton_poi_fused_add_native_batch_norm_backward_view_4_xnumel), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf0
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf11
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf2
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf4
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf6
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del unsqueeze_3
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf13 = empty_strided_cuda((1, 10, 1, (-4) + s0*s1), ((-40) + 10*s0*s1, (-4) + s0*s1, (-4) + s0*s1, 1), torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf14 = buf9; del buf9  # reuse
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.view, aten.constant_pad_nd, aten.convolution_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_red_fused_constant_pad_nd_convolution_backward_native_batch_norm_backward_view_5_r0_numel = (-4) + s0*s1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         triton_red_fused_constant_pad_nd_convolution_backward_native_batch_norm_backward_view_5.run(buf12, squeeze_1, buf13, buf14, s0, s1, ps0, 10, triton_red_fused_constant_pad_nd_convolution_backward_native_batch_norm_backward_view_5_r0_numel, grid=grid(10), stream=stream0)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf12
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del squeeze_1
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf15 = torch.ops.aten.convolution_backward.default(reinterpret_tensor(buf13, (1, 10, (-4) + s0*s1), (0, (-4) + s0*s1, 1), 0), view, primals_4, [10], [1], [0], [1], False, [0], 1, [False, True, False])
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf13
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del primals_4
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del view
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         buf16 = buf15[1]
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]         del buf15
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     return (None, None, None, buf16, buf14, )
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_1 = 64
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_2 = 64
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     sym_size_int_2 = 4096
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     primals_4 = rand_strided((10, 1, 5), (5, 5, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     view = rand_strided((1, 1, 4096), (4096, 4096, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     constant_pad_nd = rand_strided((1, 10, 5, 4096), (204800, 20480, 4096, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     squeeze_1 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     convert_element_type_1 = rand_strided((10, 1), (1, 1), device='cuda:0', dtype=torch.int64)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     clamp_max = rand_strided((10, 1), (1, 1), device='cuda:0', dtype=torch.int64)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     convert_element_type_3 = rand_strided((8192, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     clamp_max_1 = rand_strided((8192, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     clamp_max_2 = rand_strided((8192, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     clamp_max_3 = rand_strided((10, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     unsqueeze_3 = rand_strided((1, 10, 1, 1), (10, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     tangents_1 = rand_strided((1, 10, 10, 8192), (819200, 81920, 8192, 1), device='cuda:0', dtype=torch.float32)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, sym_size_int_2, primals_4, view, constant_pad_nd, squeeze_1, convert_element_type_1, clamp_max, convert_element_type_3, clamp_max_1, clamp_max_2, clamp_max_3, unsqueeze_3, tangents_1])
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] if __name__ == "__main__":
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:23:05.937000 2827036 site-packages/torch/_inductor/graph.py:2014] [250/0_1] [__output_code] 
V0204 16:23:05.948000 2827036 site-packages/torch/_inductor/graph.py:2022] [250/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sh/cshihdntx3cqw3w3ohxrljarvyxxhfihmczhrvuxm3rncej34b32.py
I0204 16:23:06.491000 2827036 site-packages/torch/_inductor/graph.py:2056] [250/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sh/cshihdntx3cqw3w3ohxrljarvyxxhfihmczhrvuxm3rncej34b32.py

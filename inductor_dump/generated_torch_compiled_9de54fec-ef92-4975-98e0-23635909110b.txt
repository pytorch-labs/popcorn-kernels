V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] Output code: 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # AOT ID: ['8_forward']
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import torch
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import random
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import os
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import tempfile
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from math import inf, nan
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from cmath import nanj
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch import device, empty_strided
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     grid,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     split_scan_grid,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     grid_combo_kernels,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     start_graph,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     end_graph,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     cooperative_reduction_grid,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] aten = torch.ops.aten
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] async_compile = AsyncCompile()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n3/cn3qoe6o3rzr6r6advqsmdf4meiixv4tq53kafaevps23tmpql7h.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x => convolution
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_1 => var_mean
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1, 1], [1, 1, 1], [1, 1, 1], False, [0, 0, 0], 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_red_fused__native_batch_norm_legit_convolution_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_convolution_0', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 64, 'r0_': 8192},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_red_fused__native_batch_norm_legit_convolution_0(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 64
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 8192
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rbase = r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x3 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x1 = xindex // 4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_2 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_2 + 8192*x3), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tl.store(in_out_ptr0 + (r0_2 + 8192*x3), tmp2, r0_mask & xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp5, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp6, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6x/c6xw3xmxy4gkkoip3z5qkihx74rjcaxtvimkv4r34jf3kn6r26vm.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_1 => add, rsqrt, var_mean
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_per_fused__native_batch_norm_legit_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_1', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 16, 'r0_': 4},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_per_fused__native_batch_norm_legit_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 16
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     R0_BLOCK: tl.constexpr = 4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_offset = 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_1 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x0 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp13 = tmp10[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp14 = tmp11[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp15 = tmp12[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp16 = 32768.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp17 = tmp14 / tmp16
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp18 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp20, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vv/cvvxjgboyq24ciarbmcda5ounvtu2ia6wkl3rrrisfarq5lvboyq.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_3], Original ATen: [aten._native_batch_norm_legit, aten.unsqueeze]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_1 => add, mul, rsqrt, sub, var_mean
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_3 => unsqueeze
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %unsqueeze : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%view_2, -2), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_poi_fused__native_batch_norm_legit_unsqueeze_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_unsqueeze_2', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'y': 16384, 'x': 32}, tile_hint=TileHint.DEFAULT,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_unsqueeze_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_unsqueeze_2(in_ptr0, in_ptr1, in_ptr2, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ynumel = 16384
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 32
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x2 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     y3 = yindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     y1 = yindex // 1024
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 32*y3), xmask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y1), None, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y1), None, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = 32768.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (y3 + 16384*x2), tmp9, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nt/cntyexuvg72zpw54rjrhp63fnjouzx4xucbicezw5xzqrj375nzh.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.max_pool2d_with_indices]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_3 => _low_memory_max_pool2d_with_offsets, getitem_3
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%unsqueeze, [1, 2], [1, 2], [0, 0], [1, 1], False), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_3 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_3', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'y': 16, 'x': 16384}, tile_hint=TileHint.DEFAULT,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i8', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_3(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ynumel = 16
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 16384
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ymask = yindex < ynumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x1 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     y0 = yindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 32768*y0), ymask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16384 + x1 + 32768*y0), ymask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tmp1 > tmp0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.full([1, 1], 1, tl.int8)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int8)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x1 + 16384*y0), tmp5, ymask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (y0 + 16*x1), tmp6, ymask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x4/cx47pdf6nfbnaisadu6ettt6rqwl5wbbk5hc3vudoljxz3w227ro.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_5 => convolution_1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_6 => var_mean_1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%view_3, %primals_4, %primals_5, [1, 1, 1], [1, 1, 1], [1, 1, 1], False, [0, 0, 0], 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_red_fused__native_batch_norm_legit_convolution_4 = async_compile.triton('triton_red_fused__native_batch_norm_legit_convolution_4', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 64, 'r0_': 8192},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_convolution_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_red_fused__native_batch_norm_legit_convolution_4(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 64
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 8192
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rbase = r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x3 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x1 = xindex // 2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_2 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_2 + 8192*x3), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tl.store(in_out_ptr0 + (r0_2 + 8192*x3), tmp2, r0_mask & xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp5, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp6, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tq/ctqieicuqouce4xhubknnf35y2o3rl5lh26oiok2fna462l3fzwm.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_6 => add_1, rsqrt_1, var_mean_1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_4, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_per_fused__native_batch_norm_legit_5 = async_compile.triton('triton_per_fused__native_batch_norm_legit_5', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 32, 'r0_': 2},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_per_fused__native_batch_norm_legit_5(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 32
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_offset = 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_1 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x0 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 2*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 2*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 2*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp13 = tmp10[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp14 = tmp11[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp15 = tmp12[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp16 = 16384.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp17 = tmp14 / tmp16
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp18 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp20, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tl/ctlqzjcdzmtdpdj6aetbctjovxc55gx2mysuxdqy2j3jckhsimsl.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.bernoulli]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_7 => inductor_lookup_seed_default, inductor_random_default_1, lt
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 32, 1, 1, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %lt : [num_users=2] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default_1, 0.5), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_poi_fused_bernoulli_6 = async_compile.triton('triton_poi_fused_bernoulli_6', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 32}, 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i1', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_poi_fused_bernoulli_6(in_ptr0, out_ptr1, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 32
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x0 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = x0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = 0.5
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tmp2 < tmp3
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qe/cqezwp7deft3yxgjjzbfmnhmclpgccpfm4nnc2zju7v67cqx2cwo.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7], Original ATen: [aten._native_batch_norm_legit, aten._to_copy, aten.add, aten.mul]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_6 => add_1, mul_1, rsqrt_1, sub_1, var_mean_1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_7 => add_2, add_3, add_4, convert_element_type, mul_2, mul_3, mul_4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_4, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %getitem_5), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt_1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt, torch.float32), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%convert_element_type, -1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%add_2, 1.558387861036063), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_2, 0.7791939305180315), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type, 0.8864048946659319), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %mul_3), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %add_3), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_poi_fused__native_batch_norm_legit__to_copy_add_mul_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit__to_copy_add_mul_7', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 524288}, 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*i1', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit__to_copy_add_mul_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_poi_fused__native_batch_norm_legit__to_copy_add_mul_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 524288
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x2 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x1 = xindex // 16384
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last').to(tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = 16384.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp12 = 0.8864048946659319
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp14 = tmp9 * tmp13
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp15 = -1.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp16 = tmp11 + tmp15
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp17 = 1.558387861036063
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp19 = 0.7791939305180315
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp21 = tmp14 + tmp20
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp21, None)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pa/cpatqj74qhmsbi6cerv7blykyhtlohzcjenvkdp5gc36apu6c566.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_8, x_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_8 => convolution_2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_9 => var_mean_2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %convolution_2 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%add_4, %primals_6, %primals_7, [1, 1, 1], [1, 1, 1], [1, 1, 1], False, [0, 0, 0], 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_2 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_2, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_red_fused__native_batch_norm_legit_convolution_8 = async_compile.triton('triton_red_fused__native_batch_norm_legit_convolution_8', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 128, 'r0_': 8192},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_convolution_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_red_fused__native_batch_norm_legit_convolution_8(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 128
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 8192
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rbase = r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x3 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x1 = xindex // 2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_2 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_2 + 8192*x3), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tl.store(in_out_ptr0 + (r0_2 + 8192*x3), tmp2, r0_mask & xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp5, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp6, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/h3/ch36l6fon54mbqt55u77fkiabg4gg5um5eqiore4nwovdb2sxlnw.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_9 => add_5, rsqrt_2, var_mean_2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_2 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_2, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_6, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt_2 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_per_fused__native_batch_norm_legit_9 = async_compile.triton('triton_per_fused__native_batch_norm_legit_9', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 64, 'r0_': 2},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_per_fused__native_batch_norm_legit_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 64
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_offset = 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_1 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x0 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 2*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 2*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 2*x0), xmask, other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp13 = tmp10[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp14 = tmp11[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp15 = tmp12[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp16 = 16384.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp17 = tmp14 / tmp16
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp18 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp20, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bp/cbpmfzfmu4iigygx464zdtuac4e5q4n2fsnvgczpw4xlckgrqc24.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_9, x_11], Original ATen: [aten._native_batch_norm_legit, aten.unsqueeze]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_11 => unsqueeze_1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_9 => add_5, mul_5, rsqrt_2, sub_2, var_mean_2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_2 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_2, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_6, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt_2 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %getitem_7), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt_2), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %unsqueeze_1 : [num_users=2] = call_function[target=torch.ops.aten.unsqueeze.default](args = (%view_8, -2), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_poi_fused__native_batch_norm_legit_unsqueeze_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_unsqueeze_10', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'y': 65536, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_unsqueeze_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_unsqueeze_10(in_ptr0, in_ptr1, in_ptr2, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ynumel = 65536
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 16
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ymask = yindex < ynumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x2 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     y3 = yindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     y1 = yindex // 1024
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y1), ymask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y1), ymask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = 16384.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (y3 + 65536*x2), tmp9, xmask & ymask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2n/c2np6psh42fki4rpl73h2t4bcdvgcf3v5lj2og6dl7n5wxh42jc2.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_11], Original ATen: [aten.max_pool2d_with_indices]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_11 => _low_memory_max_pool2d_with_offsets_1, getitem_9
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets_1 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%unsqueeze_1, [1, 2], [1, 2], [0, 0], [1, 1], False), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %getitem_9 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_11 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_11', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'y': 8, 'x': 65536}, tile_hint=TileHint.DEFAULT,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i8', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_11(in_ptr0, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ynumel = 8
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 65536
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     ymask = yindex < ynumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x1 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     y0 = yindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1 + 131072*y0), ymask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (65536 + x1 + 131072*y0), ymask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tmp1 > tmp0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = tl.full([1, 1], 1, tl.int8)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tl.full([1, 1], 0, tl.int8)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x1 + 65536*y0), tmp5, ymask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (y0 + 8*x1), tmp6, ymask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4g/c4gjpgvvkj5nihqpl4jgndyu32ff522n4riatsuanmrui5fxlxxs.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_13, x_14, x_15], Original ATen: [aten.convolution, aten._native_batch_norm_legit, aten.bernoulli, aten._to_copy, aten.add, aten.mul]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_13 => convolution_3
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_14 => add_6, mul_6, rsqrt_3, sub_3, var_mean_3
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_15 => add_7, add_8, add_9, convert_element_type_1, inductor_lookup_seed_default_1, inductor_random_default, lt_1, mul_7, mul_8, mul_9
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %convolution_3 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%view_9, %primals_8, %primals_9, [1, 1, 1], [1, 1, 1], [1, 1, 1], False, [0, 0, 0], 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_3 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_3, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_10, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt_3 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_3, %getitem_11), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %rsqrt_3), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 128, 1, 1, 1], %inductor_lookup_seed_default_1, rand), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %lt_1 : [num_users=2] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %convert_element_type_1 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt_1, torch.float32), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%convert_element_type_1, -1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%add_7, 1.558387861036063), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_7, 0.7791939305180315), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type_1, 0.8864048946659319), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_6, %mul_8), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_9 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %add_8), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_red_fused__native_batch_norm_legit__to_copy_add_bernoulli_convolution_mul_12 = async_compile.triton('triton_red_fused__native_batch_norm_legit__to_copy_add_bernoulli_convolution_mul_12', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 128, 'r0_': 8192},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr1': '*i1', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 8, 9), 'tt.equal_to': (7,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit__to_copy_add_bernoulli_convolution_mul_12', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_red_fused__native_batch_norm_legit__to_copy_add_bernoulli_convolution_mul_12(in_out_ptr0, in_ptr0, in_ptr1, out_ptr1, out_ptr2, out_ptr4, out_ptr5, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 128
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 8192
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rbase = r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x0 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = x0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp3 = 0.5
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tmp2 < tmp3
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_1 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp5 = tl.load(in_out_ptr0 + (r0_1 + 8192*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp7 = tmp5 + tmp6
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp9_mean_next, tmp9_m2_next, tmp9_weight_next = triton_helpers.welford_reduce(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]             tmp8, tmp9_mean, tmp9_m2, tmp9_weight, roffset == 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp9_mean = tl.where(r0_mask & xmask, tmp9_mean_next, tmp9_mean)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp9_m2 = tl.where(r0_mask & xmask, tmp9_m2_next, tmp9_m2)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp9_weight = tl.where(r0_mask & xmask, tmp9_weight_next, tmp9_weight)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 8192*x0), tmp7, r0_mask & xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp12, tmp13, tmp14 = triton_helpers.welford(tmp9_mean, tmp9_m2, tmp9_weight, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp9 = tmp12[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp10 = tmp13[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp11 = tmp14[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp9, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_1 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp15 = tl.load(in_out_ptr0 + (r0_1 + 8192*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp16 = tmp15 - tmp9
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp17 = 8192.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp18 = tmp10 / tmp17
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp19 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp20 = tmp18 + tmp19
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp21 = libdevice.rsqrt(tmp20)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp22 = tmp16 * tmp21
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp23 = tmp4.to(tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp24 = 0.8864048946659319
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp25 = tmp23 * tmp24
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp26 = tmp22 * tmp25
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp27 = -1.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp28 = tmp23 + tmp27
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp29 = 1.558387861036063
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp30 = tmp28 * tmp29
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp31 = 0.7791939305180315
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp32 = tmp30 + tmp31
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp33 = tmp26 + tmp32
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tl.store(out_ptr4 + (r0_1 + 8192*x0), tmp33, r0_mask & xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp34 = 8192.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp35 = tmp10 / tmp34
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp36 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp37 = tmp35 + tmp36
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp38 = libdevice.rsqrt(tmp37)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr5 + (x0), tmp38, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ui/cui7kjh7k55bpkmzedknxfno7exrljzb3zqns47ecwpzyrr3fqve.py
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Topologically Sorted Source Nodes: [x_16, x_17], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_16 => convolution_4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   x_17 => add_10, mul_10, rsqrt_4, sub_4, var_mean_4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] # Graph fragment:
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %convolution_4 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%add_9, %primals_10, %primals_11, [1, 1, 1], [1, 1, 1], [1, 1, 1], False, [0, 0, 0], 1), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %var_mean_4 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_4, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_12, 1e-05), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %rsqrt_4 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_10,), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %getitem_13), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %rsqrt_4), kwargs = {})
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_red_fused__native_batch_norm_legit_convolution_13 = async_compile.triton('triton_red_fused__native_batch_norm_legit_convolution_13', '''
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] import triton.language as tl
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton_heuristics.reduction(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     size_hints={'x': 256, 'r0_': 8192},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     filename=__file__,
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_convolution_13', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] @triton.jit
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def triton_red_fused__native_batch_norm_legit_convolution_13(in_out_ptr0, in_ptr0, out_ptr0, out_ptr2, out_ptr3, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xnumel = 256
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_numel = 8192
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rnumel = r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     rbase = r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     x0 = xindex
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_1 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 8192*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 8192*x0), tmp2, r0_mask & xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         roffset = r0_offset
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         rindex = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         r0_1 = r0_index
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp10 = tl.load(in_out_ptr0 + (r0_1 + 8192*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp11 = tmp10 - tmp4
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp12 = 8192.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp13 = tmp5 / tmp12
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp14 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp15 = tmp13 + tmp14
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp16 = libdevice.rsqrt(tmp15)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tmp17 = tmp11 * tmp16
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         tl.store(out_ptr2 + (r0_1 + 8192*x0), tmp17, r0_mask & xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp18 = 8192.0
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp19 = tmp5 / tmp18
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp20 = 1e-05
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tmp22 = libdevice.rsqrt(tmp21)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp22, xmask)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] ''', device_str='cuda')
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] async_compile.wait(globals())
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] del async_compile
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def call(args):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     args.clear()
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_1, (16, 1, 3, 3, 3), (27, 27, 9, 3, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_3, (1, 1, 32, 32, 32), (32768, 32768, 1024, 32, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_4, (32, 16, 3, 3, 3), (432, 27, 9, 3, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_6, (64, 32, 3, 3, 3), (864, 27, 9, 3, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_8, (128, 64, 3, 3, 3), (1728, 27, 9, 3, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_9, (128, ), (1, ))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_10, (256, 128, 3, 3, 3), (3456, 27, 9, 3, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     assert_size_stride(primals_11, (256, ), (1, ))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         assert_size_stride(buf0, (1, 16, 32, 32, 32), (524288, 32768, 1024, 32, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf2 = empty_strided_cuda((1, 16, 1, 1, 1, 4), (64, 4, 64, 64, 64, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf3 = empty_strided_cuda((1, 16, 1, 1, 1, 4), (64, 4, 64, 64, 64, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf4 = empty_strided_cuda((1, 16, 1, 1, 1, 4), (64, 4, 64, 64, 64, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_red_fused__native_batch_norm_legit_convolution_0.run(buf1, primals_2, buf2, buf3, buf4, 64, 8192, grid=grid(64), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del primals_2
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf5 = empty_strided_cuda((1, 16, 1, 1, 1), (16, 1, 16, 16, 16), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf6 = empty_strided_cuda((1, 16, 1, 1, 1), (16, 1, 16, 16, 16), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf8 = empty_strided_cuda((1, 16, 1, 1, 1), (16, 1, 16, 16, 16), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_per_fused__native_batch_norm_legit_1.run(buf2, buf3, buf4, buf5, buf6, buf8, 16, 4, grid=grid(16), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf10 = empty_strided_cuda((1, 16384, 1, 32), (524288, 1, 524288, 16384), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_3], Original ATen: [aten._native_batch_norm_legit, aten.unsqueeze]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_unsqueeze_2.run(buf1, buf5, buf6, buf10, 16384, 32, grid=grid(16384, 32), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del buf6
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf11 = empty_strided_cuda((1, 16384, 1, 16), (262144, 1, 262144, 16384), torch.int8)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf12 = empty_strided_cuda((1, 16384, 1, 16), (262144, 16, 16, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.max_pool2d_with_indices]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_3.run(buf10, buf11, buf12, 16, 16384, grid=grid(16, 16384), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.convolution]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf13 = extern_kernels.convolution(reinterpret_tensor(buf12, (1, 16, 32, 32, 16), (0, 16384, 512, 16, 1), 0), primals_4, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         assert_size_stride(buf13, (1, 32, 32, 32, 16), (524288, 16384, 512, 16, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf14 = buf13; del buf13  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf15 = reinterpret_tensor(buf4, (1, 32, 1, 1, 1, 2), (64, 2, 64, 64, 64, 1), 0); del buf4  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf16 = reinterpret_tensor(buf3, (1, 32, 1, 1, 1, 2), (64, 2, 64, 64, 64, 1), 0); del buf3  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf17 = reinterpret_tensor(buf2, (1, 32, 1, 1, 1, 2), (64, 2, 64, 64, 64, 1), 0); del buf2  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_red_fused__native_batch_norm_legit_convolution_4.run(buf14, primals_5, buf15, buf16, buf17, 64, 8192, grid=grid(64), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del primals_5
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf18 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 32, 32, 32), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf19 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 32, 32, 32), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf21 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 32, 32, 32), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_per_fused__native_batch_norm_legit_5.run(buf15, buf16, buf17, buf18, buf19, buf21, 32, 2, grid=grid(32), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf22 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf22)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf24 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 1, 1, 1), torch.bool)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.bernoulli]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_poi_fused_bernoulli_6.run(buf22, buf24, 0, 32, grid=grid(32), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf25 = empty_strided_cuda((1, 32, 32, 32, 16), (524288, 16384, 512, 16, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7], Original ATen: [aten._native_batch_norm_legit, aten._to_copy, aten.add, aten.mul]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_poi_fused__native_batch_norm_legit__to_copy_add_mul_7.run(buf14, buf18, buf19, buf24, buf25, 524288, grid=grid(524288), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del buf19
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.convolution]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf26 = extern_kernels.convolution(buf25, primals_6, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         assert_size_stride(buf26, (1, 64, 32, 32, 16), (1048576, 16384, 512, 16, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf27 = buf26; del buf26  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf28 = empty_strided_cuda((1, 64, 1, 1, 1, 2), (128, 2, 128, 128, 128, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf29 = empty_strided_cuda((1, 64, 1, 1, 1, 2), (128, 2, 128, 128, 128, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf30 = empty_strided_cuda((1, 64, 1, 1, 1, 2), (128, 2, 128, 128, 128, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8, x_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_red_fused__native_batch_norm_legit_convolution_8.run(buf27, primals_7, buf28, buf29, buf30, 128, 8192, grid=grid(128), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del primals_7
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf31 = reinterpret_tensor(buf17, (1, 64, 1, 1, 1), (64, 1, 64, 64, 64), 0); del buf17  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf32 = reinterpret_tensor(buf16, (1, 64, 1, 1, 1), (64, 1, 64, 64, 64), 0); del buf16  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf34 = reinterpret_tensor(buf15, (1, 64, 1, 1, 1), (64, 1, 64, 64, 64), 0); del buf15  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_per_fused__native_batch_norm_legit_9.run(buf28, buf29, buf30, buf31, buf32, buf34, 64, 2, grid=grid(64), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del buf28
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf36 = empty_strided_cuda((1, 65536, 1, 16), (1048576, 1, 1048576, 65536), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9, x_11], Original ATen: [aten._native_batch_norm_legit, aten.unsqueeze]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_unsqueeze_10.run(buf27, buf31, buf32, buf36, 65536, 16, grid=grid(65536, 16), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del buf32
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf37 = empty_strided_cuda((1, 65536, 1, 8), (524288, 1, 524288, 65536), torch.int8)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf38 = empty_strided_cuda((1, 65536, 1, 8), (524288, 8, 8, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_11], Original ATen: [aten.max_pool2d_with_indices]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_11.run(buf36, buf37, buf38, 8, 65536, grid=grid(8, 65536), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.convolution]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf39 = extern_kernels.convolution(reinterpret_tensor(buf38, (1, 64, 32, 32, 8), (0, 8192, 256, 8, 1), 0), primals_8, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         assert_size_stride(buf39, (1, 128, 32, 32, 8), (1048576, 8192, 256, 8, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf46 = empty_strided_cuda((1, 128, 1, 1, 1), (128, 1, 1, 1, 1), torch.bool)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf40 = buf39; del buf39  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf41 = reinterpret_tensor(buf30, (1, 128, 1, 1, 1), (128, 1, 128, 128, 128), 0); del buf30  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf47 = empty_strided_cuda((1, 128, 32, 32, 8), (1048576, 8192, 256, 8, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf44 = reinterpret_tensor(buf29, (1, 128, 1, 1, 1), (128, 1, 128, 128, 128), 0); del buf29  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_13, x_14, x_15], Original ATen: [aten.convolution, aten._native_batch_norm_legit, aten.bernoulli, aten._to_copy, aten.add, aten.mul]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_red_fused__native_batch_norm_legit__to_copy_add_bernoulli_convolution_mul_12.run(buf40, buf22, primals_9, buf46, buf41, buf47, buf44, 1, 128, 8192, grid=grid(128), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del buf22
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del primals_9
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_16], Original ATen: [aten.convolution]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf48 = extern_kernels.convolution(buf47, primals_10, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         assert_size_stride(buf48, (1, 256, 32, 32, 8), (2097152, 8192, 256, 8, 1))
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf49 = buf48; del buf48  # reuse
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf50 = empty_strided_cuda((1, 256, 1, 1, 1), (256, 1, 256, 256, 256), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf53 = empty_strided_cuda((1, 256, 32, 32, 8), (2097152, 8192, 256, 8, 1), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         buf54 = empty_strided_cuda((1, 256, 1, 1, 1), (256, 1, 256, 256, 256), torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         # Topologically Sorted Source Nodes: [x_16, x_17], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         triton_red_fused__native_batch_norm_legit_convolution_13.run(buf49, primals_11, buf50, buf53, buf54, 256, 8192, grid=grid(256), stream=stream0)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]         del primals_11
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     return (buf53, primals_1, primals_3, primals_4, primals_6, primals_8, primals_10, buf1, reinterpret_tensor(buf8, (16, ), (1, ), 0), buf10, buf11, reinterpret_tensor(buf12, (1, 16, 32, 32, 16), (262144, 16384, 512, 16, 1), 0), buf14, reinterpret_tensor(buf21, (32, ), (1, ), 0), buf24, buf25, buf27, reinterpret_tensor(buf34, (64, ), (1, ), 0), buf36, buf37, reinterpret_tensor(buf38, (1, 64, 32, 32, 8), (524288, 8192, 256, 8, 1), 0), buf40, reinterpret_tensor(buf44, (128, ), (1, ), 0), buf46, buf47, buf49, reinterpret_tensor(buf54, (256, ), (1, ), 0), reinterpret_tensor(buf50, (1, 256, 1, 1, 1), (256, 1, 1, 1, 1), 0), reinterpret_tensor(buf41, (1, 128, 1, 1, 1), (128, 1, 1, 1, 1), 0), reinterpret_tensor(buf31, (1, 64, 1, 1, 1), (64, 1, 1, 1, 1), 0), reinterpret_tensor(buf18, (1, 32, 1, 1, 1), (32, 1, 1, 1, 1), 0), reinterpret_tensor(buf5, (1, 16, 1, 1, 1), (16, 1, 1, 1, 1), 0), )
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_1 = rand_strided((16, 1, 3, 3, 3), (27, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_3 = rand_strided((1, 1, 32, 32, 32), (32768, 32768, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_4 = rand_strided((32, 16, 3, 3, 3), (432, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_6 = rand_strided((64, 32, 3, 3, 3), (864, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_8 = rand_strided((128, 64, 3, 3, 3), (1728, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_9 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_10 = rand_strided((256, 128, 3, 3, 3), (3456, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     primals_11 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] if __name__ == "__main__":
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:27:40.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [20/0] [__output_code] 
V0205 11:27:40.307000 3201829 site-packages/torch/_inductor/graph.py:2022] [20/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ke/cke5jsatb7qdtxl2wbq34w4gr3hurb2mvi5an2uhznapsppjcbyh.py
I0205 11:27:40.952000 3201829 site-packages/torch/_inductor/graph.py:2056] [20/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ke/cke5jsatb7qdtxl2wbq34w4gr3hurb2mvi5an2uhznapsppjcbyh.py

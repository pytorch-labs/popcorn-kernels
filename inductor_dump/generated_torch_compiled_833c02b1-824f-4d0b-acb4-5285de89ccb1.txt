V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] Output code: 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # AOT ID: ['14_inference']
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import torch
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import math
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import random
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import os
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import tempfile
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from math import inf, nan
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from cmath import nanj
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch import device, empty_strided
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import triton
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import triton.language as tl
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     grid,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     split_scan_grid,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     grid_combo_kernels,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     start_graph,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     end_graph,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     cooperative_reduction_grid,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] )
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] aten = torch.ops.aten
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] async_compile = AsyncCompile()
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lf/clfjgwe3jge6ghixmrwfowmjmgkyxej4scezbll4x4wq5blze6pa.py
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.hardswish, aten._softmax]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # Source node to ATen node mapping:
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   x => add, clamp_max, clamp_min, mul
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   x_1 => exp, sum_1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # Graph fragment:
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg3_1, 3), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add, 0), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg3_1, %clamp_max), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 1), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [-3], True), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 6), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-3], True), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] triton_red_fused__softmax_hardswish_0 = async_compile.triton('triton_red_fused__softmax_hardswish_0', '''
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import triton
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import triton.language as tl
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] @triton_heuristics.reduction(
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     size_hints={'x': 1024, 'r0_': 4},
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     filename=__file__,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_hardswish_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] )
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] @triton.jit
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] def triton_red_fused__softmax_hardswish_0(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     rnumel = r0_numel
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     xmask = xindex < xnumel
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     rbase = r0_base
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     x0 = xindex
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     _tmp11 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         roffset = r0_offset
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         rindex = r0_index
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         r0_1 = r0_index
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + ks0*ks1*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp1 = 3.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp3 = 0.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp5 = 6.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp7 = tmp0 * tmp6
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp8 = 1.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp9 = tmp7 * tmp8
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp10 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp12 = triton_helpers.maximum(_tmp11, tmp10)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         _tmp11 = tl.where(r0_mask & xmask, tmp12, _tmp11)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp11 = triton_helpers.max2(_tmp11, 1)[:, None]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     _tmp28 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         roffset = r0_offset
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         rindex = r0_index
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         r0_1 = r0_index
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp13 = tl.load(in_ptr0 + (x0 + ks0*ks1*r0_1), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp14 = 3.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp15 = tmp13 + tmp14
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp16 = 0.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp18 = 6.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp19 = triton_helpers.minimum(tmp17, tmp18)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp20 = tmp13 * tmp19
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp21 = 1.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp22 = tmp20 * tmp21
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp23 = tmp22 - tmp11
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp24 = 0.16666666666666666
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp25 = tmp23 * tmp24
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp26 = tl_math.exp(tmp25)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp27 = tl.broadcast_to(tmp26, [XBLOCK, R0_BLOCK])
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         tmp29 = _tmp28 + tmp27
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         _tmp28 = tl.where(r0_mask & xmask, tmp29, _tmp28)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp28 = tl.sum(_tmp28, 1)[:, None]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp28, xmask)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] ''', device_str='cuda')
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ga/cgaxlyzx7wh65qjmu7inb3uyuphe6yac7nljrktwh3lpb35iac7z.py
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x, x_1], Original ATen: [aten.log_sigmoid_forward, aten.hardswish, aten._softmax]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # Source node to ATen node mapping:
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   x => add, clamp_max, clamp_min, mul
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   x_1 => div_1, exp
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   x_3 => abs_1, exp_1, full_default, log1p, minimum, neg, sub_10
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] # Graph fragment:
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg3_1, 3), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add, 0), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg3_1, %clamp_max), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, 1), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 6), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %squeeze), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%squeeze,), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1 = async_compile.triton('triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1', '''
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import triton
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] import triton.language as tl
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     size_hints={'x': 4096}, 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     filename=__file__,
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     min_elem_per_thread=0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] )
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] @triton.jit
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] def triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     xmask = xindex < xnumel
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     x2 = xindex
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     x0 = (xindex % ks0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp1 = 3.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp3 = 0.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp5 = 6.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp7 = tmp0 * tmp6
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp8 = 1.0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp11 = tmp9 - tmp10
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp12 = 0.16666666666666666
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp16 = tmp14 / tmp15
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp3, tmp16)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp18 = tl_math.abs(tmp16)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp19 = -tmp18
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp20 = tl_math.exp(tmp19)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp21 = libdevice.log1p(tmp20)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tmp22 = tmp17 - tmp21
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp22, xmask)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] ''', device_str='cuda')
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] async_compile.wait(globals())
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] del async_compile
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] def call(args):
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     args.clear()
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     s0 = arg0_1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     s1 = arg1_1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     s2 = arg2_1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         buf0 = empty_strided_cuda((1, 1, s1, s2), (s1*s2, s1*s2, s2, 1), torch.float32)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         buf1 = empty_strided_cuda((1, 1, s1, s2), (s1*s2, s1*s2, s2, 1), torch.float32)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.hardswish, aten._softmax]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         triton_red_fused__softmax_hardswish_0_xnumel = s1*s2
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         triton_red_fused__softmax_hardswish_0.run(arg3_1, buf0, buf1, s1, s2, triton_red_fused__softmax_hardswish_0_xnumel, s0, grid=grid(triton_red_fused__softmax_hardswish_0_xnumel), stream=stream0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         ps0 = s1*s2
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         buf2 = empty_strided_cuda((1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x, x_1], Original ATen: [aten.log_sigmoid_forward, aten.hardswish, aten._softmax]
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1_xnumel = s0*s1*s2
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1.run(arg3_1, buf0, buf1, buf2, ps0, triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1_xnumel, grid=grid(triton_poi_fused__softmax_hardswish_log_sigmoid_forward_1_xnumel), stream=stream0)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         del arg3_1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         del buf0
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]         del buf1
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     return (buf2, )
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     arg0_1 = 3
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     arg1_1 = 32
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     arg2_1 = 32
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     arg3_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] if __name__ == "__main__":
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:40:16.564000 2062045 site-packages/torch/_inductor/graph.py:2014] [33/0] [__output_code] 
V0205 10:40:16.568000 2062045 site-packages/torch/_inductor/graph.py:2022] [33/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/w4/cw46hlirkbrksnt7z7phbikeu7vrnjutbzotyslpbn2otylyjloy.py
I0205 10:40:17.081000 2062045 site-packages/torch/_inductor/graph.py:2056] [33/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/w4/cw46hlirkbrksnt7z7phbikeu7vrnjutbzotyslpbn2otylyjloy.py

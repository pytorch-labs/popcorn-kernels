V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] Output code: 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # AOT ID: ['24_forward']
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import torch
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import math
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import random
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import os
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import tempfile
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from math import inf, nan
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from cmath import nanj
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch import device, empty_strided
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton.language as tl
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     grid,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     split_scan_grid,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     grid_combo_kernels,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     start_graph,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     end_graph,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] aten = torch.ops.aten
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mc/cmclyeod4zvn2pvfdkh6f55n2cys5ofg7gtt454pouxkpa2qykfq.py
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   x => var_mean
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Graph fragment:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_0', '''
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton.language as tl
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 8192},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     filename=__file__,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton.jit
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xnumel = 40
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     r0_numel = 8192
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     rnumel = r0_numel
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     rbase = r0_base
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     x0 = xindex
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         roffset = r0_offset
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         rindex = r0_index
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         r0_1 = r0_index
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 8192*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp4, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2e/c2ecvt4gup44cjr3qtoa2qgznoicupyukf5bswk6x2miwjn7rj3s.py
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   x => add_1, add_2, add_3, mul_1, mul_2, mul_3, mul_4, mul_5, rsqrt, var_mean
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Graph fragment:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, 0.9), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, 1.000030518509476), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, 0.1), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_4, 0.9), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %mul_5), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_3, %add_2), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add_3), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_per_fused__native_batch_norm_legit_functional_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_functional_1', '''
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton.language as tl
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     filename=__file__,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_functional_1', 'mutated_arg_names': ['in_ptr3', 'in_ptr4', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton.jit
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] def triton_per_fused__native_batch_norm_legit_functional_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr4, out_ptr6, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xnumel = 10
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     r0_numel = 4
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 4
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     rnumel = r0_numel
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     r0_offset = 0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     roffset = r0_offset
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     rindex = r0_index
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     r0_1 = r0_index
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     x0 = xindex
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp25 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp30 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp13 = tmp10[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp14 = tmp11[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp15 = tmp12[:, None]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp16 = 32768.0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp17 = tmp14 / tmp16
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp18 = 1e-05
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp19 = tmp17 + tmp18
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp20 = libdevice.rsqrt(tmp19)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp21 = 1.000030518509476
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp22 = tmp17 * tmp21
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp23 = 0.1
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp24 = tmp22 * tmp23
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp26 = 0.9
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp27 = tmp25 * tmp26
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp28 = tmp24 + tmp27
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp29 = tmp13 * tmp23
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp31 = tmp30 * tmp26
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp32 = tmp29 + tmp31
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp20, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp28, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp32, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z2/cz2zzymju6rxvnrncwdi2d4fz2skg6zk2ivulqphevcuvkklfd6q.py
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   x => add_4, mul, mul_6, sub
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   x_1 => abs_1, gt, mul_7, mul_8, sign, sub_1, where
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Graph fragment:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %getitem_1), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %unsqueeze_2), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %add_4 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_5), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_4,), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%add_4,), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, 0.5), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %mul_7), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 0), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %sub_1, %mul_8), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_poi_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_2', '''
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton.language as tl
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     size_hints={'x': 524288}, 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     filename=__file__,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton.jit
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] def triton_poi_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xnumel = 327680
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     x2 = xindex
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     x1 = xindex // 32768
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp5 = tl.load(in_ptr3 + (x1), None, eviction_policy='evict_last')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp7 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp4 = tmp2 * tmp3
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp6 = tmp4 * tmp5
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp9 = tl_math.abs(tmp8)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp10 = 0.5
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp11 = tmp9 > tmp10
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp12 = tl.full([1], 0, tl.int32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp13 = tmp12 < tmp8
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp14 = tmp13.to(tl.int8)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp15 = tmp8 < tmp12
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp16 = tmp15.to(tl.int8)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp17 = tmp14 - tmp16
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp18 = tmp17.to(tmp8.dtype)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp19 = tmp18 * tmp10
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp20 = tmp8 - tmp19
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp21 = 0.0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp22 = tmp8 * tmp21
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp23 = tl.where(tmp11, tmp20, tmp22)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp23, None)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nl/cnlfoopsrk3smklpmbwoglre3mzb6fcyjenthtpfuwdwjidhfwf4.py
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   x_3 => convolution
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Graph fragment:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%view, %primals_7, %primals_8, [2], [0], [1], True, [0], 1), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_poi_fused_convolution_3 = async_compile.triton('triton_poi_fused_convolution_3', '''
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton.language as tl
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     size_hints={'x': 2097152}, 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     filename=__file__,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton.jit
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] def triton_poi_fused_convolution_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xnumel = 1310780
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     x2 = xindex
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     x1 = xindex // 65539
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fs/cfs3nmgl4l5xvkgz27cv7xsyvyaekrh2hglrejoncwmeo6zanutj.py
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   add_ => add
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] # Graph fragment:
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, 1), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_2, %add), kwargs = {})
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_poi_fused_add_4 = async_compile.triton('triton_poi_fused_add_4', '''
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] import triton.language as tl
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     filename=__file__,
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_4', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] @triton.jit
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] def triton_poi_fused_add_4(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xnumel = 1
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] async_compile.wait(globals())
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] del async_compile
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] def call(args):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     args.clear()
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_1, (1, 10, 32, 32, 32), (327680, 32768, 1024, 32, 1))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_2, (), ())
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_3, (10, ), (1, ))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_4, (10, ), (1, ))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_5, (10, ), (1, ))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_6, (10, ), (1, ))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_7, (10, 20, 5), (100, 5, 1))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     assert_size_stride(primals_8, (20, ), (1, ))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 10, 1, 1, 1, 4), (40, 4, 40, 40, 40, 1), torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 10, 1, 1, 1, 4), (40, 4, 40, 40, 40, 1), torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, 1, 1, 1, 4), (40, 4, 40, 40, 40, 1), torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_0.run(primals_1, buf0, buf1, buf2, 40, 8192, grid=grid(40), stream=stream0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         triton_per_fused__native_batch_norm_legit_functional_1.run(buf0, buf1, buf2, primals_4, primals_3, buf3, buf6, primals_4, primals_3, 10, 4, grid=grid(10), stream=stream0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         del buf0
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         del buf1
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         del buf2
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         del primals_3
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         del primals_4
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 10, 32, 32, 32), (327680, 32768, 1024, 32, 1), torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf8 = buf7; del buf7  # reuse
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_2.run(buf8, primals_1, buf3, buf6, primals_5, primals_6, 327680, grid=grid(327680), stream=stream0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf9 = extern_kernels.convolution(reinterpret_tensor(buf8, (1, 10, 32768), (0, 32768, 1), 0), primals_7, stride=(2,), padding=(0,), dilation=(1,), transposed=True, output_padding=(0,), groups=1, bias=None)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         assert_size_stride(buf9, (1, 20, 65539), (1310780, 65539, 1))
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         triton_poi_fused_convolution_3.run(buf10, primals_8, 1310780, grid=grid(1310780), stream=stream0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         del primals_8
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         triton_poi_fused_add_4.run(primals_2, primals_2, 1, grid=grid(1), stream=stream0)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]         del primals_2
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     return (reinterpret_tensor(buf10, (1, 20, 65539, 1, 1), (1310780, 65539, 1, 1, 1), 0), primals_1, primals_5, primals_6, primals_7, buf3, buf6, reinterpret_tensor(buf8, (1, 10, 32768), (327680, 32768, 1), 0), )
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_1 = rand_strided((1, 10, 32, 32, 32), (327680, 32768, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_2 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_3 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_4 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_5 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_6 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_7 = rand_strided((10, 20, 5), (100, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     primals_8 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] if __name__ == "__main__":
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:28:47.377000 3201829 site-packages/torch/_inductor/graph.py:2014] [80/0_1] [__output_code] 
V0205 11:28:47.386000 3201829 site-packages/torch/_inductor/graph.py:2022] [80/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zd/czdh6bnnlgjqhz4eyuyc6rhloyxcrq6smtbqf45yprgfpqxfwopr.py
I0205 11:28:47.566000 3201829 site-packages/torch/_inductor/graph.py:2056] [80/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zd/czdh6bnnlgjqhz4eyuyc6rhloyxcrq6smtbqf45yprgfpqxfwopr.py

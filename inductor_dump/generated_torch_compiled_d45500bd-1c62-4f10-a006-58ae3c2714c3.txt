W0127 12:54:06.566000 2031468 site-packages/torch/utils/_sympy/interp.py:176] [318/0_1] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
W0127 12:54:06.569000 2031468 site-packages/torch/utils/_sympy/interp.py:176] [318/0_1] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
W0127 12:54:06.572000 2031468 site-packages/torch/utils/_sympy/interp.py:176] [318/0_1] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
W0127 12:54:06.791000 2031468 site-packages/torch/utils/_sympy/interp.py:176] [318/0_1] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] Output code: 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # AOT ID: ['87_inference']
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import torch
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import math
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import random
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import os
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import tempfile
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from math import inf, nan
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from cmath import nanj
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch import device, empty_strided
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton.language as tl
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     grid,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     split_scan_grid,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     grid_combo_kernels,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     start_graph,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     end_graph,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] aten = torch.ops.aten
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rs/crskuld6jenluj4rizsahgnikbtaiscfdqjwcdyjgnrg7gnendwh.py
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.constant_pad_nd, aten.view, aten._native_batch_norm_legit]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   x => constant_pad_nd
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   x_1 => add_8, mul_15, rsqrt, sub_4, var_mean, view, view_1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   x_2 => var_mean_1, view_2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Graph fragment:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %constant_pad_nd : [num_users=3] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg2_1, [2, 2, 2, 2], 3.0), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%constant_pad_nd, [1, 3, %sym_size_int, %sym_size_int_1]), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_8,), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %rsqrt), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %view_1 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_15, [1, 3, %sym_size_int, %sym_size_int_1]), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %view_2 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%view_1, [1, 3, %sym_size_int, %sym_size_int_1]), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_2, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_constant_pad_nd_view_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_constant_pad_nd_view_0', '''
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton.language as tl
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 8192},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     filename=__file__,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_constant_pad_nd_view_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 4, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton.jit
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_constant_pad_nd_view_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xnumel = 3
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     rnumel = r0_numel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     rbase = r0_base
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     x0 = xindex
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp14_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp14_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp14_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         roffset = r0_offset
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         rindex = r0_index
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_2 = r0_index // ks0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_1 = (r0_index % ks0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp0 = (-2) + r0_2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp1 = tl.full([1, 1], 0, tl.int64)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp2 = tmp0 >= tmp1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp3 = ks1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp4 = tmp0 < tmp3
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp5 = (-2) + r0_1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp6 = tmp5 >= tmp1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp7 = ks2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp8 = tmp5 < tmp7
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp9 = tmp2 & tmp4
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp10 = tmp9 & tmp6
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp11 = tmp10 & tmp8
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp12 = tl.load(in_ptr0 + ((-2) + r0_1 + ((-2)*ks2) + ks2*r0_2 + ks1*ks2*x0), r0_mask & tmp11 & xmask, eviction_policy='evict_last', other=3.0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp14_mean_next, tmp14_m2_next, tmp14_weight_next = triton_helpers.welford_reduce(
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]             tmp13, tmp14_mean, tmp14_m2, tmp14_weight, roffset == 0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp14_mean = tl.where(r0_mask & xmask, tmp14_mean_next, tmp14_mean)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp14_m2 = tl.where(r0_mask & xmask, tmp14_m2_next, tmp14_m2)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp14_weight = tl.where(r0_mask & xmask, tmp14_weight_next, tmp14_weight)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp17, tmp18, tmp19 = triton_helpers.welford(tmp14_mean, tmp14_m2, tmp14_weight, 1)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp14 = tmp17[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp15 = tmp18[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp16 = tmp19[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp15, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp42_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp42_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp42_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         roffset = r0_offset
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         rindex = r0_index
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_2 = r0_index // ks0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_1 = (r0_index % ks0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp20 = (-2) + r0_2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp21 = tl.full([1, 1], 0, tl.int64)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp22 = tmp20 >= tmp21
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp23 = ks1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp24 = tmp20 < tmp23
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp25 = (-2) + r0_1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp26 = tmp25 >= tmp21
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp27 = ks2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp28 = tmp25 < tmp27
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp29 = tmp22 & tmp24
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp30 = tmp29 & tmp26
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp31 = tmp30 & tmp28
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp32 = tl.load(in_ptr0 + ((-2) + r0_1 + ((-2)*ks2) + ks2*r0_2 + ks1*ks2*x0), r0_mask & tmp31 & xmask, eviction_policy='evict_last', other=3.0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp33 = tmp32 - tmp14
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp34 = 16 + 4*ks1 + 4*ks2 + ks1*ks2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp35 = tmp34.to(tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp36 = tmp15 / tmp35
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp37 = 1e-05
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp38 = tmp36 + tmp37
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp39 = libdevice.rsqrt(tmp38)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp40 = tmp33 * tmp39
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp41 = tl.broadcast_to(tmp40, [XBLOCK, R0_BLOCK])
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp42_mean_next, tmp42_m2_next, tmp42_weight_next = triton_helpers.welford_reduce(
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]             tmp41, tmp42_mean, tmp42_m2, tmp42_weight, roffset == 0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp42_mean = tl.where(r0_mask & xmask, tmp42_mean_next, tmp42_mean)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp42_m2 = tl.where(r0_mask & xmask, tmp42_m2_next, tmp42_m2)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp42_weight = tl.where(r0_mask & xmask, tmp42_weight_next, tmp42_weight)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp45, tmp46, tmp47 = triton_helpers.welford(tmp42_mean, tmp42_m2, tmp42_weight, 1)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp42 = tmp45[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp43 = tmp46[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp44 = tmp47[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp42, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp43, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] ''', device_str='cuda')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wx/cwxceqdppnx66achky5hkgynjh3esjr7od2ollxwu3afb6e6gdue.py
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.constant_pad_nd, aten.view, aten._native_batch_norm_legit]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   x => constant_pad_nd
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   x_1 => add_8, mul_15, rsqrt, sub_4, var_mean, view, view_1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   x_2 => add_21, mul_35, rsqrt_1, sub_11, var_mean_1, view_2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Graph fragment:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %constant_pad_nd : [num_users=3] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg2_1, [2, 2, 2, 2], 3.0), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%constant_pad_nd, [1, 3, %sym_size_int, %sym_size_int_1]), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_8,), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %rsqrt), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %view_1 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_15, [1, 3, %sym_size_int, %sym_size_int_1]), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %view_2 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%view_1, [1, 3, %sym_size_int, %sym_size_int_1]), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_2, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %getitem_3), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_21,), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %rsqrt_1), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1', '''
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton.language as tl
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     filename=__file__,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton.jit
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] def triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     x2 = xindex // ks4
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     x4 = xindex
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp13 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp15 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp23 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp25 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp0 = (-2) + x1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp3 = ks2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp5 = (-2) + x0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp7 = ks3
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp9 = tmp2 & tmp4
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp11 = tmp10 & tmp8
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-2) + x0 + ((-2)*ks3) + ks3*x1 + ks2*ks3*x2), tmp11 & xmask, eviction_policy='evict_last', other=3.0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp14 = tmp12 - tmp13
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp16 = 16 + 4*ks2 + 4*ks3 + ks2*ks3
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp18 = tmp15 / tmp17
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp19 = 1e-05
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp20 = tmp18 + tmp19
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp22 = tmp14 * tmp21
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp24 = tmp22 - tmp23
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp26 = tmp25 / tmp17
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp27 = tmp26 + tmp19
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp28 = libdevice.rsqrt(tmp27)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp29 = tmp24 * tmp28
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp29, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] ''', device_str='cuda')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qd/cqdjvudwpqbdc5452vspwou6jdvswqcqsqhmr3iusrhbfgcf675k.py
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Topologically Sorted Source Nodes: [mean, var], Original ATen: [aten.mean, aten.var]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   mean => mean
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   var => var
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Graph fragment:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_3, [2, 3], True), kwargs = {})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%view_3, [2, 3]), kwargs = {correction: 1, keepdim: True})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_red_fused_mean_var_2 = async_compile.triton('triton_red_fused_mean_var_2', '''
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton.language as tl
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 8192},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     filename=__file__,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mean_var_2', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton.jit
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] def triton_red_fused_mean_var_2(in_out_ptr0, in_out_ptr1, in_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xnumel = 3
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     rnumel = r0_numel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     rbase = r0_base
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     x0 = xindex
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         roffset = r0_offset
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         rindex = r0_index
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         r0_1 = r0_index
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 16*x0 + 4*ks0*x0 + 4*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]             tmp1, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp10 = 16 + 4*ks0 + 4*ks1 + ks0*ks1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp12 = tmp2 / tmp11
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp13 = 1.0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp14 = tmp11 - tmp13
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp15 = 0.0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp17 = tmp5 / tmp16
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.debug_barrier()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp12, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.debug_barrier()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(in_out_ptr1 + (x0), tmp17, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] ''', device_str='cuda')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/th/cthizqnhk7qckq4qoloorp7dymijkxlg4szaetvka4sb6o3gmef2.py
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Topologically Sorted Source Nodes: [target], Original ATen: [aten.zeros_like]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   target => full_default
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] # Graph fragment:
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 3], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_poi_fused_zeros_like_3 = async_compile.triton('triton_poi_fused_zeros_like_3', '''
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] import triton.language as tl
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     size_hints={'x': 4}, 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     filename=__file__,
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_zeros_like_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] @triton.jit
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] def triton_poi_fused_zeros_like_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xnumel = 3
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     x0 = xindex
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tmp0 = 0.0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] ''', device_str='cuda')
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] async_compile.wait(globals())
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] del async_compile
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] def call(args):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     args.clear()
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     s1 = arg0_1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     s2 = arg1_1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     assert_size_stride(arg2_1, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         ps0 = 4 + s2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.constant_pad_nd, aten.view, aten._native_batch_norm_legit]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_constant_pad_nd_view_0_r0_numel = 16 + 4*s1 + 4*s2 + s1*s2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_constant_pad_nd_view_0.run(arg2_1, buf0, buf1, buf3, buf4, ps0, s1, s2, 3, triton_red_fused__native_batch_norm_legit_constant_pad_nd_view_0_r0_numel, grid=grid(3), stream=stream0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         ps1 = 4 + s1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         ps2 = 16 + 4*s1 + 4*s2 + s1*s2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 3, 4 + s1, 4 + s2), (48 + 12*s1 + 12*s2 + 3*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.constant_pad_nd, aten.view, aten._native_batch_norm_legit]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1_xnumel = 48 + 12*s1 + 12*s2 + 3*s1*s2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1.run(arg2_1, buf0, buf1, buf3, buf4, buf6, ps0, ps1, s1, s2, ps2, triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1_xnumel, grid=grid(triton_poi_fused__native_batch_norm_legit_constant_pad_nd_view_1_xnumel), stream=stream0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         del arg2_1
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         del buf0
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf7 = buf4; del buf4  # reuse
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf11 = buf3; del buf3  # reuse
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf8 = buf7; del buf7  # reuse
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf13 = buf11; del buf11  # reuse
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mean, var], Original ATen: [aten.mean, aten.var]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         triton_red_fused_mean_var_2_r0_numel = 16 + 4*s1 + 4*s2 + s1*s2
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         triton_red_fused_mean_var_2.run(buf8, buf13, buf6, s1, s2, 3, triton_red_fused_mean_var_2_r0_numel, grid=grid(3), stream=stream0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         del buf6
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         buf9 = reinterpret_tensor(buf1, (1, 3), (3, 1), 0); del buf1  # reuse
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         # Topologically Sorted Source Nodes: [target], Original ATen: [aten.zeros_like]
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]         triton_poi_fused_zeros_like_3.run(buf9, 3, grid=grid(3), stream=stream0)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     return (reinterpret_tensor(buf8, (1, 3), (3, 1), 0), buf9, reinterpret_tensor(buf13, (1, 3), (3, 1), 0), )
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     arg0_1 = 64
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     arg1_1 = 64
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     arg2_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] if __name__ == "__main__":
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:54:07.000000 2031468 site-packages/torch/_inductor/graph.py:2014] [318/0_1] [__output_code] 
V0127 12:54:07.007000 2031468 site-packages/torch/_inductor/graph.py:2022] [318/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qa/cqah7bpiuzusnl3bscg74tt3uynvh3hyghcdjmmp7gf7yuux2rpb.py
I0127 12:54:07.249000 2031468 site-packages/torch/_inductor/graph.py:2056] [318/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qa/cqah7bpiuzusnl3bscg74tt3uynvh3hyghcdjmmp7gf7yuux2rpb.py

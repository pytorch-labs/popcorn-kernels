V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] Output code: 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # AOT ID: ['187_forward']
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import torch
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import math
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import random
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import os
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import tempfile
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from math import inf, nan
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from cmath import nanj
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch import device, empty_strided
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     grid,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     split_scan_grid,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     grid_combo_kernels,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     start_graph,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     end_graph,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] aten = torch.ops.aten
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/em/cemxlsmv5zrtzu6pvrv6z5kk3guekecedvwayihwj2liqoenvhbq.py
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_2, x_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x => convolution
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x_2 => add_10, add_11, add_12, mul_16, mul_17, mul_18, mul_19, mul_20, rsqrt, var_mean
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x_4 => relu
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_5, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%unsqueeze, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_10,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, 0.9), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_16, %mul_17), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_18, 0.1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_8, 0.9), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_19, %mul_20), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_3,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_11), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_8, %add_12), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0', '''
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4096},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 16
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rbase = r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     x0 = xindex
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp2, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp21 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp10 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp11 = tmp10 - tmp4
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp12 = ks0*ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp13 = tmp12.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp14 = tmp5 / tmp13
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp15 = 1e-05
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp16 = tmp14 + tmp15
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp18 = tmp11 * tmp17
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp20 = tmp18 * tmp19
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp22 = tmp20 + tmp21
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp23 = tl.full([1, 1], 0, tl.int32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*ks1*x0), tmp24, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp36 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp41 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp25 = ks0*ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp26 = tmp25.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp27 = tmp5 / tmp26
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp28 = 1e-05
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp29 = tmp27 + tmp28
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp30 = libdevice.rsqrt(tmp29)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp31 = (((16*ks0*ks1) / 16) / ((tl.full([], -1.00000000000000, tl.float64)) + ((16*ks0*ks1) / 16)))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp33 = tmp27 * tmp32
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp34 = 0.1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp35 = tmp33 * tmp34
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp37 = 0.9
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp38 = tmp36 * tmp37
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp39 = tmp35 + tmp38
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp40 = tmp4 * tmp34
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp42 = tmp41 * tmp37
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp43 = tmp40 + tmp42
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp30, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp39, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp43, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x2/cx24uxsfxfcvd4a2fhyxamjpdzex3xg6vp6zck7twrzefscdpt43.py
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_7, x_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x_5 => convolution_1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x_7 => add_41, add_42, add_43, mul_55, mul_56, mul_57, mul_58, mul_59, rsqrt_1, var_mean_1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x_9 => relu_1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_11, %primals_12, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%unsqueeze_7, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_41 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_41,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_4, 0.1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_14, 0.9), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_42 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_55, %mul_56), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_57 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_6, %truediv_3), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_58 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_57, 0.1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_15, 0.9), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_43 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_58, %mul_59), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%squeeze_7,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %copy__4 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_14, %add_42), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %copy__5 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_15, %add_43), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_relu_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_relu_1', '''
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 4096},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_relu_1', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_relu_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 32
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rbase = r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     x0 = xindex
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp2, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp21 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp10 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp11 = tmp10 - tmp4
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp12 = ks0*ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp13 = tmp12.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp14 = tmp5 / tmp13
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp15 = 1e-05
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp16 = tmp14 + tmp15
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp18 = tmp11 * tmp17
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp20 = tmp18 * tmp19
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp22 = tmp20 + tmp21
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp23 = tl.full([1, 1], 0, tl.int32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*ks1*x0), tmp24, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp36 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp41 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp25 = ks0*ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp26 = tmp25.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp27 = tmp5 / tmp26
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp28 = 1e-05
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp29 = tmp27 + tmp28
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp30 = libdevice.rsqrt(tmp29)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp31 = (((32*ks0*ks1) / 32) / ((tl.full([], -1.00000000000000, tl.float64)) + ((32*ks0*ks1) / 32)))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp33 = tmp27 * tmp32
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp34 = 0.1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp35 = tmp33 * tmp34
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp37 = 0.9
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp38 = tmp36 * tmp37
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp39 = tmp35 + tmp38
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp40 = tmp4 * tmp34
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp42 = tmp41 * tmp37
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp43 = tmp40 + tmp42
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp30, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp39, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp43, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xq/cxquji7y2kckm7wa4mmuevvowlfucr3w5a5tga2hhdracbrvc4zr.py
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_10, x_12, target, mse_loss], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.randn_like, aten.mse_loss]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   mse_loss => mean, pow_1, sub_42
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   target => inductor_lookup_seed_default, inductor_random_default
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x_10 => convolution_2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   x_12 => add_72, add_73, add_74, add_75, mul_93, mul_94, mul_95, mul_96, mul_97, mul_98, mul_99, rsqrt_2, sub_32, var_mean_2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %scalar_tensor_default_1 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_3,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %scalar_tensor_default_2 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_4,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_1, %primals_18, %primals_19, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %var_mean_2 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%unsqueeze_14, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_72 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_4, 1e-05), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %rsqrt_2 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_72,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_32 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_14, %getitem_5), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_93 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_32, %rsqrt_2), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_94 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_8, 0.1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_95 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_21, 0.9), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_73 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_94, %mul_95), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_96 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_10, %truediv_5), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 64), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default, %scalar_tensor_default_1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_tensor_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_tensor_4, %scalar_tensor_default_2), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_97 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_96, 0.1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_98 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_22, 0.9), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_74 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_97, %mul_98), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_99 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_93, %unsqueeze_17), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_75 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_99, %unsqueeze_20), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %inductor_random_default : [num_users=2] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 64, %primals_3, %primals_4], %inductor_lookup_seed_default, randn), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_42 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_11, %inductor_random_default), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_42, 2), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_1,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %convert_element_type_default : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_5, torch.float64), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %true_divide_tensor : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%full_default_2, %convert_element_type_default), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %convert_element_type_default_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor, torch.float32), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_tensor_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_42, %convert_element_type_default_1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %copy__7 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_21, %add_73), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %copy__8 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_22, %add_74), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_mse_loss_randn_like_2 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_mse_loss_randn_like_2', '''
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 4096},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr6': '*fp32', 'out_ptr8': '*fp32', 'out_ptr10': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_mse_loss_randn_like_2', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr4', 'in_ptr5', 'out_ptr10', 'out_ptr8'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_mse_loss_randn_like_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, out_ptr3, out_ptr4, out_ptr5, out_ptr6, out_ptr8, out_ptr10, ks0, ks1, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 64
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rbase = r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     x0 = xindex
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp2, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp21 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp41 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp10 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp11 = tmp10 - tmp4
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp12 = ks0*ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp13 = tmp12.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp14 = tmp5 / tmp13
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp15 = 1e-05
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp16 = tmp14 + tmp15
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp18 = tmp11 * tmp17
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp20 = tmp18 * tmp19
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp22 = tmp20 + tmp21
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp23 = tl.load(in_ptr3 + load_seed_offset)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp24 = r0_1 + ks0*ks1*x0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp25 = tl.randn(tmp23, (tmp24).to(tl.uint32))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp26 = tmp22 - tmp25
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp27 = 64.0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp28 = ks0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp29 = tmp28.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp30 = tmp27 * tmp29
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp31 = ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp32 = tmp31.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp33 = tmp30 * tmp32
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp34 = tmp33.to(tl.float64)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp35 = tl.full([1, 1], 2.0, tl.float64)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp36 = tmp35 / tmp34
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp37 = tmp36.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp38 = tmp26 * tmp37
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp39 = tmp26 * tmp26
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp40 = tl.broadcast_to(tmp39, [XBLOCK, R0_BLOCK])
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp42 = _tmp41 + tmp40
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp41 = tl.where(r0_mask & xmask, tmp42, _tmp41)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*ks1*x0), tmp22, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(out_ptr3 + (r0_1 + ks0*ks1*x0), tmp25, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(out_ptr4 + (r0_1 + ks0*ks1*x0), tmp38, r0_mask & xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp41 = tl.sum(_tmp41, 1)[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp41, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp54 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp59 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp43 = ks0*ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp44 = tmp43.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp45 = tmp5 / tmp44
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp46 = 1e-05
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp47 = tmp45 + tmp46
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp48 = libdevice.rsqrt(tmp47)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp49 = (((64*ks0*ks1) / 64) / ((tl.full([], -1.00000000000000, tl.float64)) + ((64*ks0*ks1) / 64)))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp50 = tmp49.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp51 = tmp45 * tmp50
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp52 = 0.1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp53 = tmp51 * tmp52
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp55 = 0.9
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp56 = tmp54 * tmp55
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp57 = tmp53 + tmp56
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp58 = tmp4 * tmp52
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp60 = tmp59 * tmp55
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp61 = tmp58 + tmp60
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp48, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr8 + (x0), tmp57, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr10 + (x0), tmp61, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2h/c2hdxanayihwfewf2kok26wwj6r6hmzkhwxevov65qtspzbbllsv.py
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [var], Original ATen: [aten.ones_like]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   var => full_default_1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 64, %primals_3, %primals_4], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_poi_fused_ones_like_3 = async_compile.triton('triton_poi_fused_ones_like_3', '''
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 262144}, 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_ones_like_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_poi_fused_ones_like_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     x0 = xindex
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp0 = 1.0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/co/ccoqgdvupup6v4xbakd5jo6endrpduvjal3cfohcswgskhfqpsju.py
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [mse_loss], Original ATen: [aten.mse_loss]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   mse_loss => mean, pow_1, sub_42
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_42 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_11, %inductor_random_default), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_42, 2), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%pow_1,), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_per_fused_mse_loss_4 = async_compile.triton('triton_per_fused_mse_loss_4', '''
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 1, 'r0_': 64},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mse_loss_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_per_fused_mse_loss_4(in_out_ptr0, in_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_numel = 64
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 64
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_offset = 0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     roffset = r0_offset
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rindex = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_0 = r0_index
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp4 = 64*ks0*ks1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp6 = tmp3 / tmp5
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.debug_barrier()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp6, None)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xi/cxinzgk5c64upvq3p6fz5yujyvaywtyib3vryytapotw3v6z6tr7.py
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   add_ => add_9
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_6, 1), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_9), kwargs = {})
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_poi_fused_add_5 = async_compile.triton('triton_poi_fused_add_5', '''
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_5', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_poi_fused_add_5(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 1
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] async_compile.wait(globals())
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] del async_compile
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def call(args):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24 = args
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     args.clear()
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     s1 = primals_3
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     s2 = primals_4
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_6, (), ())
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_11, (32, 16, 3, 3), (144, 9, 3, 1))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_12, (32, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_13, (), ())
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_14, (32, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_15, (32, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_16, (32, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_17, (32, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_18, (64, 32, 3, 3), (288, 9, 3, 1))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_19, (64, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_20, (), ())
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_21, (64, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_22, (64, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_23, (64, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_24, (64, ), (1, ))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_5, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         assert_size_stride(buf0, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 16, 1, 1, 1), (16, 1, 16, 16, 16), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 16, 1, 1, 1), (16, 1, 16, 16, 16), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_2, x_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0_r0_numel = s1*s2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0.run(buf1, primals_2, primals_9, primals_10, primals_8, primals_7, buf2, buf6, buf5, primals_8, primals_7, s1, s2, 16, triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0_r0_numel, grid=grid(16), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_10
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_7
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_8
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.convolution]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_11, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         assert_size_stride(buf7, (1, 32, s1, s2), (32*s1*s2, s1*s2, s2, 1))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf8 = buf7; del buf7  # reuse
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf9 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 32, 32, 32), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf13 = empty_strided_cuda((1, 32, s1, s2), (32*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf12 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 32, 32, 32), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_7, x_9], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_relu_1_r0_numel = s1*s2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_relu_1.run(buf8, primals_12, primals_16, primals_17, primals_15, primals_14, buf9, buf13, buf12, primals_15, primals_14, s1, s2, 32, triton_red_fused__native_batch_norm_legit_functional_convolution_relu_1_r0_numel, grid=grid(32), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_12
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_14
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_15
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_17
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf14 = extern_kernels.convolution(buf13, primals_18, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         assert_size_stride(buf14, (1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1))
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf21 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf21)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf15 = buf14; del buf14  # reuse
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf16 = empty_strided_cuda((1, 64, 1, 1, 1), (64, 1, 64, 64, 64), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf20 = empty_strided_cuda((1, 64, 1, s1, s2), (64*s1*s2, s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf22 = empty_strided_cuda((1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf26 = empty_strided_cuda((1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf24 = empty_strided_cuda((1, 64, 1, 1, 1), (64, 1, 64, 64, 64), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf19 = empty_strided_cuda((1, 64, 1, 1, 1), (64, 1, 64, 64, 64), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_10, x_12, target, mse_loss], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.randn_like, aten.mse_loss]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_mse_loss_randn_like_2_r0_numel = s1*s2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_mse_loss_randn_like_2.run(buf15, primals_19, primals_23, primals_24, buf21, primals_22, primals_21, buf16, buf20, buf22, buf26, buf24, buf19, primals_22, primals_21, s1, s2, 0, 64, triton_red_fused__native_batch_norm_legit_functional_convolution_mse_loss_randn_like_2_r0_numel, grid=grid(64), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf21
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_19
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_21
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_22
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_24
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf23 = empty_strided_cuda((1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [var], Original ATen: [aten.ones_like]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_poi_fused_ones_like_3_xnumel = 64*s1*s2
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_poi_fused_ones_like_3.run(buf23, triton_poi_fused_ones_like_3_xnumel, grid=grid(triton_poi_fused_ones_like_3_xnumel), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf25 = empty_strided_cuda((), (), torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf51 = buf25; del buf25  # reuse
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mse_loss], Original ATen: [aten.mse_loss]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_per_fused_mse_loss_4.run(buf51, buf24, s1, s2, 1, 64, grid=grid(1), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf24
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_poi_fused_add_5.run(primals_6, primals_6, 1, grid=grid(1), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_6
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add__1], Original ATen: [aten.add]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_poi_fused_add_5.run(primals_13, primals_13, 1, grid=grid(1), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_13
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add__2], Original ATen: [aten.add]
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_poi_fused_add_5.run(primals_20, primals_20, 1, grid=grid(1), stream=stream0)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_20
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     return (reinterpret_tensor(buf20, (1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1), 0), buf22, buf23, buf51, primals_1, primals_5, primals_9, primals_11, primals_16, primals_18, primals_23, reinterpret_tensor(buf1, (1, 16, 1, s1, s2), (16*s1*s2, s1*s2, s1*s2, s2, 1), 0), reinterpret_tensor(buf5, (16, ), (1, ), 0), buf6, reinterpret_tensor(buf8, (1, 32, 1, s1, s2), (32*s1*s2, s1*s2, s1*s2, s2, 1), 0), reinterpret_tensor(buf12, (32, ), (1, ), 0), buf13, reinterpret_tensor(buf15, (1, 64, 1, s1, s2), (64*s1*s2, s1*s2, s1*s2, s2, 1), 0), reinterpret_tensor(buf19, (64, ), (1, ), 0), buf26, reinterpret_tensor(buf16, (1, 64, 1, 1, 1), (64, 1, 1, 1, 1), 0), reinterpret_tensor(buf9, (1, 32, 1, 1, 1), (32, 1, 1, 1, 1), 0), reinterpret_tensor(buf2, (1, 16, 1, 1, 1), (16, 1, 1, 1, 1), 0), s1, s2, )
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_3 = 64
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_4 = 64
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_5 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_6 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_11 = rand_strided((32, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_12 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_13 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_14 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_15 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_16 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_17 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_18 = rand_strided((64, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_19 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_20 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_21 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_22 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_23 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_24 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24])
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] if __name__ == "__main__":
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:55:40.117000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:40.138000 3201829 site-packages/torch/_inductor/graph.py:2022] [712/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/rw/crwzmsrkpfhizujoj5xjw73lic4yvaxu3bksspglgilohkcflfkl.py
I0205 11:55:40.699000 3201829 site-packages/torch/_inductor/graph.py:2056] [712/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/rw/crwzmsrkpfhizujoj5xjw73lic4yvaxu3bksspglgilohkcflfkl.py
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] Output code: 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # AOT ID: ['187_backward']
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import torch
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import math
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import random
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import os
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import tempfile
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from math import inf, nan
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from cmath import nanj
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch import device, empty_strided
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     grid,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     split_scan_grid,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     grid_combo_kernels,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     start_graph,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     end_graph,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] aten = torch.ops.aten
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ts/cts7wl6o6bpf6nx66ki3i37lauvlkpzhfqe5dpywb35ilqtm2qep.py
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%unsqueeze_21, [0, 2, 3, 4]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_44 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_14, %unsqueeze_25), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_123 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_21, %sub_44), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_123, [0, 2, 3, 4]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_131 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_44, %unsqueeze_33), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_46 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_21, %mul_131), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_47 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_46, %unsqueeze_29), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_132 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_47, %unsqueeze_37), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_133 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_9), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%squeeze_12, [0, 2, 3]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_red_fused_convolution_backward_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused_convolution_backward_native_batch_norm_backward_0', '''
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 4096},
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_native_batch_norm_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_red_fused_convolution_backward_native_batch_norm_backward_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, out_ptr3, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 64
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rbase = r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     x0 = xindex
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp7 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp14 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp1 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp9 = tl.load(in_ptr2 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4 = tmp1 * tmp3
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp5 = tmp0 + tmp4
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp8 = _tmp7 + tmp6
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp7 = tl.where(r0_mask & xmask, tmp8, _tmp7)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp11 = tmp9 - tmp10
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp12 = tmp5 * tmp11
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp15 = _tmp14 + tmp13
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp14 = tl.where(r0_mask & xmask, tmp15, _tmp14)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp7 = tl.sum(_tmp7, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp14 = tl.sum(_tmp14, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp7, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp18 = tl.load(in_ptr1 + (0))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp19 = tl.broadcast_to(tmp18, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp27 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp34 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp38 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp16 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp17 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp22 = tl.load(in_ptr2 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp20 = tmp17 * tmp19
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp21 = tmp16 + tmp20
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp23 = tmp22 - tmp10
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp24 = (tl.full([], 1.00000000000000, tl.float64) / ((64*ks0*ks1) / 64))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp25 = tmp24.to(tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp26 = tmp14 * tmp25
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp28 = tmp27 * tmp27
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp29 = tmp26 * tmp28
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp30 = tmp23 * tmp29
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp31 = tmp21 - tmp30
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp32 = tmp7 * tmp25
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp33 = tmp31 - tmp32
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp35 = tmp27 * tmp34
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp36 = tmp33 * tmp35
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp37 = tl.broadcast_to(tmp36, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp39 = _tmp38 + tmp37
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp38 = tl.where(r0_mask & xmask, tmp39, _tmp38)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp36, r0_mask & xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp38 = tl.sum(_tmp38, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp38, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp40 = tmp14 * tmp27
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp40, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gr/cgrhnimlxtkwxv4rb4g4rondvndht5s7dbft27nydcvcxbsycfee.py
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%unsqueeze_38, [0, 2, 3, 4]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_48 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_7, %unsqueeze_42), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_134 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_38, %sub_48), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_5 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_134, [0, 2, 3, 4]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_142 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_48, %unsqueeze_50), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_50 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_38, %mul_142), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_51 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_50, %unsqueeze_46), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_143 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_51, %unsqueeze_54), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_144 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_5, %squeeze_5), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%squeeze_13, [0, 2, 3]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_red_fused_convolution_backward_native_batch_norm_backward_1 = async_compile.triton('triton_red_fused_convolution_backward_native_batch_norm_backward_1', '''
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 4096},
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_native_batch_norm_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_red_fused_convolution_backward_native_batch_norm_backward_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 32
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rbase = r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     x0 = xindex
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp6 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp13 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp8 = tl.load(in_ptr1 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp1 = 0.0
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp2 = tmp0 <= tmp1
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4 = tl.where(tmp2, tmp1, tmp3)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp7 = _tmp6 + tmp5
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp6 = tl.where(r0_mask & xmask, tmp7, _tmp6)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp10 = tmp8 - tmp9
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp11 = tmp4 * tmp10
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp14 = _tmp13 + tmp12
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp13 = tl.where(r0_mask & xmask, tmp14, _tmp13)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp6 = tl.sum(_tmp6, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp25 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp32 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp36 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp15 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp18 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp20 = tl.load(in_ptr1 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp16 = 0.0
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp17 = tmp15 <= tmp16
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp19 = tl.where(tmp17, tmp16, tmp18)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp21 = tmp20 - tmp9
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp22 = (tl.full([], 1.00000000000000, tl.float64) / ((32*ks0*ks1) / 32))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp23 = tmp22.to(tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp24 = tmp13 * tmp23
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp26 = tmp25 * tmp25
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp27 = tmp24 * tmp26
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp28 = tmp21 * tmp27
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp29 = tmp19 - tmp28
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp30 = tmp6 * tmp23
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp31 = tmp29 - tmp30
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp33 = tmp25 * tmp32
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp34 = tmp31 * tmp33
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp35 = tl.broadcast_to(tmp34, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp37 = _tmp36 + tmp35
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp36 = tl.where(r0_mask & xmask, tmp37, _tmp36)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp34, r0_mask & xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp36 = tl.sum(_tmp36, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp36, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp38 = tmp13 * tmp25
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp38, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/t4/ct4jlmskvnaq23fu4mkw5ub43xx5ci43kzktkhvgiv4onxkqxtbv.py
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] # Graph fragment:
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_7 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%unsqueeze_55, [0, 2, 3, 4]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_52 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze, %unsqueeze_59), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_145 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_55, %sub_52), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_8 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_145, [0, 2, 3, 4]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_153 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_52, %unsqueeze_67), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_54 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_55, %mul_153), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sub_55 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_54, %unsqueeze_63), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_154 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_55, %unsqueeze_71), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %mul_155 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_8, %squeeze_1), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] #   %sum_9 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%squeeze_14, [0, 2, 3]), kwargs = {})
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_red_fused_convolution_backward_native_batch_norm_backward_2 = async_compile.triton('triton_red_fused_convolution_backward_native_batch_norm_backward_2', '''
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] import triton.language as tl
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4096},
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     filename=__file__,
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_native_batch_norm_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] )
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] @triton.jit
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def triton_red_fused_convolution_backward_native_batch_norm_backward_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xnumel = 16
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     rbase = r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     x0 = xindex
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp6 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp13 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp8 = tl.load(in_ptr1 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp1 = 0.0
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp2 = tmp0 <= tmp1
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp4 = tl.where(tmp2, tmp1, tmp3)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp7 = _tmp6 + tmp5
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp6 = tl.where(r0_mask & xmask, tmp7, _tmp6)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp10 = tmp8 - tmp9
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp11 = tmp4 * tmp10
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp14 = _tmp13 + tmp12
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp13 = tl.where(r0_mask & xmask, tmp14, _tmp13)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp6 = tl.sum(_tmp6, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp25 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp32 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     _tmp36 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         rindex = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp15 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp18 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp20 = tl.load(in_ptr1 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp16 = 0.0
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp17 = tmp15 <= tmp16
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp19 = tl.where(tmp17, tmp16, tmp18)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp21 = tmp20 - tmp9
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp22 = (tl.full([], 1.00000000000000, tl.float64) / ((16*ks0*ks1) / 16))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp23 = tmp22.to(tl.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp24 = tmp13 * tmp23
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp26 = tmp25 * tmp25
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp27 = tmp24 * tmp26
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp28 = tmp21 * tmp27
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp29 = tmp19 - tmp28
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp30 = tmp6 * tmp23
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp31 = tmp29 - tmp30
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp33 = tmp25 * tmp32
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp34 = tmp31 * tmp33
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp35 = tl.broadcast_to(tmp34, [XBLOCK, R0_BLOCK])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tmp37 = _tmp36 + tmp35
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         _tmp36 = tl.where(r0_mask & xmask, tmp37, _tmp36)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp34, r0_mask & xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp36 = tl.sum(_tmp36, 1)[:, None]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp36, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tmp38 = tmp13 * tmp25
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp38, xmask)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] async_compile.wait(globals())
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] del async_compile
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def call(args):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_3, primals_4, primals_1, primals_5, primals_9, primals_11, primals_16, primals_18, primals_23, unsqueeze, squeeze_1, relu, unsqueeze_7, squeeze_5, relu_1, unsqueeze_14, squeeze_9, mul_tensor_6, unsqueeze_25, unsqueeze_42, unsqueeze_59, tangents_1, tangents_2 = args
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     args.clear()
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     s1 = primals_3
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     s2 = primals_4
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_11, (32, 16, 3, 3), (144, 9, 3, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_16, (32, ), (1, ))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_18, (64, 32, 3, 3), (288, 9, 3, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(primals_23, (64, ), (1, ))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(unsqueeze, (1, 16, 1, s1, s2), (16*s1*s2, s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(squeeze_1, (16, ), (1, ))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(relu, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(unsqueeze_7, (1, 32, 1, s1, s2), (32*s1*s2, s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(squeeze_5, (32, ), (1, ))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(relu_1, (1, 32, s1, s2), (32*s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(unsqueeze_14, (1, 64, 1, s1, s2), (64*s1*s2, s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(squeeze_9, (64, ), (1, ))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(mul_tensor_6, (1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(unsqueeze_25, (1, 64, 1, 1, 1), (64, 1, 1, 1, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(unsqueeze_42, (1, 32, 1, 1, 1), (32, 1, 1, 1, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(unsqueeze_59, (1, 16, 1, 1, 1), (16, 1, 1, 1, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1))
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     assert_size_stride(tangents_2, (), ())
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf0 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf2 = reinterpret_tensor(mul_tensor_6, (1, 64, 1, s1, s2), (64*s1*s2, s1*s2, s1*s2, s2, 1), 0); del mul_tensor_6  # reuse
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf4 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf3 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_0_r0_numel = s1*s2
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_0.run(buf2, tangents_1, tangents_2, unsqueeze_14, unsqueeze_25, squeeze_9, primals_23, buf0, buf4, buf3, s1, s2, 64, triton_red_fused_convolution_backward_native_batch_norm_backward_0_r0_numel, grid=grid(64), stream=stream0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_23
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del squeeze_9
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del tangents_1
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del tangents_2
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del unsqueeze_14
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del unsqueeze_25
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf5 = torch.ops.aten.convolution_backward.default(reinterpret_tensor(buf2, (1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1), 0), relu_1, primals_18, [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf2
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_18
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf6 = buf5[0]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf7 = buf5[1]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf5
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf8 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf11 = reinterpret_tensor(relu_1, (1, 32, 1, s1, s2), (32*s1*s2, s1*s2, s1*s2, s2, 1), 0); del relu_1  # reuse
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf12 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf10 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_1_r0_numel = s1*s2
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_1.run(buf11, buf6, unsqueeze_7, unsqueeze_42, squeeze_5, primals_16, buf8, buf12, buf10, s1, s2, 32, triton_red_fused_convolution_backward_native_batch_norm_backward_1_r0_numel, grid=grid(32), stream=stream0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf6
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_16
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del squeeze_5
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del unsqueeze_42
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del unsqueeze_7
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf13 = torch.ops.aten.convolution_backward.default(reinterpret_tensor(buf11, (1, 32, s1, s2), (0, s1*s2, s2, 1), 0), relu, primals_11, [32], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf11
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_11
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf14 = buf13[0]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf15 = buf13[1]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf13
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf16 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf19 = reinterpret_tensor(relu, (1, 16, 1, s1, s2), (16*s1*s2, s1*s2, s1*s2, s2, 1), 0); del relu  # reuse
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf20 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf18 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_2_r0_numel = s1*s2
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_2.run(buf19, buf14, unsqueeze, unsqueeze_59, squeeze_1, primals_9, buf16, buf20, buf18, s1, s2, 16, triton_red_fused_convolution_backward_native_batch_norm_backward_2_r0_numel, grid=grid(16), stream=stream0)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf14
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_9
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del squeeze_1
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del unsqueeze
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del unsqueeze_59
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf21 = torch.ops.aten.convolution_backward.default(reinterpret_tensor(buf19, (1, 16, s1, s2), (0, s1*s2, s2, 1), 0), primals_5, primals_1, [16], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf19
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_1
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del primals_5
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         buf22 = buf21[1]
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]         del buf21
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     return (buf22, buf20, None, None, None, None, None, None, buf18, buf16, buf15, buf12, None, None, None, buf10, buf8, buf7, buf4, None, None, None, buf3, buf0, )
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_3 = 64
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_4 = 64
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_5 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_11 = rand_strided((32, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_16 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_18 = rand_strided((64, 32, 3, 3), (288, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     primals_23 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     unsqueeze = rand_strided((1, 16, 1, 64, 64), (65536, 4096, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     squeeze_1 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     relu = rand_strided((1, 16, 64, 64), (65536, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     unsqueeze_7 = rand_strided((1, 32, 1, 64, 64), (131072, 4096, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     squeeze_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     relu_1 = rand_strided((1, 32, 64, 64), (131072, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     unsqueeze_14 = rand_strided((1, 64, 1, 64, 64), (262144, 4096, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     squeeze_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     mul_tensor_6 = rand_strided((1, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     unsqueeze_25 = rand_strided((1, 64, 1, 1, 1), (64, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     unsqueeze_42 = rand_strided((1, 32, 1, 1, 1), (32, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     unsqueeze_59 = rand_strided((1, 16, 1, 1, 1), (16, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tangents_1 = rand_strided((1, 64, 64, 64), (262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     tangents_2 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     fn = lambda: call([primals_3, primals_4, primals_1, primals_5, primals_9, primals_11, primals_16, primals_18, primals_23, unsqueeze, squeeze_1, relu, unsqueeze_7, squeeze_5, relu_1, unsqueeze_14, squeeze_9, mul_tensor_6, unsqueeze_25, unsqueeze_42, unsqueeze_59, tangents_1, tangents_2])
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] if __name__ == "__main__":
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:55:41.054000 3201829 site-packages/torch/_inductor/graph.py:2014] [712/0_1] [__output_code] 
V0205 11:55:41.067000 3201829 site-packages/torch/_inductor/graph.py:2022] [712/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/37/c374tvwk22cso3vmxlx65mien4he5z6jxza5rularkszms5qgml4.py
I0205 11:55:41.246000 3201829 site-packages/torch/_inductor/graph.py:2056] [712/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/37/c374tvwk22cso3vmxlx65mien4he5z6jxza5rularkszms5qgml4.py
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] Output code: 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] # AOT ID: ['188_forward']
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import torch
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import math
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import random
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import os
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import tempfile
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from math import inf, nan
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from cmath import nanj
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch import device, empty_strided
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import triton
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import triton.language as tl
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     grid,
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     split_scan_grid,
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     grid_combo_kernels,
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     start_graph,
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     end_graph,
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     cooperative_reduction_grid,
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] )
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] aten = torch.ops.aten
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] async_compile = AsyncCompile()
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jb/cjbu7npyh3qydrocgpicwj2q4upkgennbsdxiqadd2bzyz6zzvf6.py
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] # Topologically Sorted Source Nodes: [add], Original ATen: [aten.add]
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] # Source node to ATen node mapping:
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] #   add => add
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] # Graph fragment:
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] triton_poi_fused_add_0 = async_compile.triton('triton_poi_fused_add_0', '''
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import triton
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] import triton.language as tl
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     size_hints={'x': 1}, 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     filename=__file__,
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     min_elem_per_thread=0
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] )
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] @triton.jit
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] def triton_poi_fused_add_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     xnumel = 1
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp4, None)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] ''', device_str='cuda')
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] async_compile.wait(globals())
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] del async_compile
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] def call(args):
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     primals_1, primals_2 = args
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     args.clear()
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     assert_size_stride(primals_1, (), ())
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     assert_size_stride(primals_2, (), ())
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]         # Topologically Sorted Source Nodes: [add], Original ATen: [aten.add]
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]         triton_poi_fused_add_0.run(primals_2, primals_1, buf0, 1, grid=grid(1), stream=stream0)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]         del primals_1
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]         del primals_2
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     return (buf0, )
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     primals_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     primals_2 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] if __name__ == "__main__":
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:55:41.335000 3201829 site-packages/torch/_inductor/graph.py:2014] [713/0] [__output_code] 
V0205 11:55:41.336000 3201829 site-packages/torch/_inductor/graph.py:2022] [713/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2s/c2supltvrn4c252cbf2jjpi332yxwgdldkrzdhzzu5qnlx4phvst.py
I0205 11:55:41.398000 3201829 site-packages/torch/_inductor/graph.py:2056] [713/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2s/c2supltvrn4c252cbf2jjpi332yxwgdldkrzdhzzu5qnlx4phvst.py

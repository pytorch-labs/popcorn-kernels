V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] Output code: 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # AOT ID: ['45_forward']
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import torch
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import math
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import random
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import os
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import tempfile
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from math import inf, nan
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from cmath import nanj
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch import device, empty_strided
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton.language as tl
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     grid,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     split_scan_grid,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     grid_combo_kernels,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     start_graph,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     end_graph,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] )
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] aten = torch.ops.aten
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eh/cehwp2aqp7lsowmw6qeil5epziqynht7zeuuldinyhp5vmgj5tyu.py
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   x => convolution
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Graph fragment:
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton.language as tl
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     filename=__file__,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] )
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] @triton.jit
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xnumel = 16384
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     x2 = xindex
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     x1 = xindex // 1024
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), None)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), None, eviction_policy='evict_last')
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, None)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cd/ccdl4xixiatckfq2qrhimlni5dbuhpmljghavpmlyktmnirlkimc.py
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.rand]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   x_2 => inductor_lookup_seed_default, inductor_random_default
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Graph fragment:
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 1, 3], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] triton_poi_fused_rand_1 = async_compile.triton('triton_poi_fused_rand_1', '''
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton.language as tl
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     filename=__file__,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] )
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] @triton.jit
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] def triton_poi_fused_rand_1(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xnumel = 3
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     x0 = xindex
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp1 = x0
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5w/c5wu4x2heme5xwzdbxonoiblld7brqa6c473ykfrhxphjgtewn23.py
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten.avg_pool2d, aten.abs, aten.add, aten.div]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   x_5 => avg_pool2d
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   x_6 => abs_1, add, div
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] # Graph fragment:
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%unsqueeze_1, [1, 2], [1, 2]), kwargs = {})
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%squeeze_1,), kwargs = {})
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_1, 1), kwargs = {})
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%squeeze_1, %add), kwargs = {})
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] triton_poi_fused_abs_add_avg_pool2d_div_2 = async_compile.triton('triton_poi_fused_abs_add_avg_pool2d_div_2', '''
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] import triton.language as tl
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     filename=__file__,
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_avg_pool2d_div_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] )
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] @triton.jit
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] def triton_poi_fused_abs_add_avg_pool2d_div_2(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xnumel = 256
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     x0 = xindex
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0), xmask, eviction_policy='evict_last')
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0), xmask, eviction_policy='evict_last')
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp2 = tmp1 + tmp0
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp3 = 0.5
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp4 = tmp2 * tmp3
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp5 = tl_math.abs(tmp4)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp6 = 1.0
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tmp8 = tmp4 / tmp7
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp8, xmask)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] async_compile.wait(globals())
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] del async_compile
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] def call(args):
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     args.clear()
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     assert_size_stride(primals_3, (1, 3, 32, 32), (3072, 1024, 32, 1))
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         assert_size_stride(buf0, (1, 16, 32, 32), (16384, 1024, 32, 1))
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_2, 16384, grid=grid(16384), stream=stream0)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         del primals_2
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf2 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf2)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 1, 3), (3, 3, 1), torch.float32)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.rand]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         triton_poi_fused_rand_1.run(buf2, buf3, 0, 3, grid=grid(3), stream=stream0)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         del buf2
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.fractional_max_pool3d]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf4 = torch.ops.aten.fractional_max_pool3d.default(reinterpret_tensor(buf1, (1, 1, 16, 32, 32), (0, 0, 1024, 32, 1), 0), [2, 2, 2], [8, 8, 8], buf3)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         del buf3
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf5 = buf4[0]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf6 = buf4[1]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         del buf4
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 8, 1, 32), (256, 32, 32, 1), torch.float32)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 8, 32), (256, 32, 1), torch.float32)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten.avg_pool2d, aten.abs, aten.add, aten.div]
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]         triton_poi_fused_abs_add_avg_pool2d_div_2.run(buf5, buf7, buf8, 256, grid=grid(256), stream=stream0)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     return (reinterpret_tensor(buf8, (1, 32, 8), (256, 1, 32), 0), primals_1, primals_3, reinterpret_tensor(buf1, (1, 1, 16, 32, 32), (16384, 16384, 1024, 32, 1), 0), buf6, reinterpret_tensor(buf5, (1, 8, 1, 64), (512, 64, 64, 1), 0), buf7, )
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] if __name__ == "__main__":
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:41:40.219000 2062045 site-packages/torch/_inductor/graph.py:2014] [115/0_1] [__output_code] 
V0205 10:41:40.223000 2062045 site-packages/torch/_inductor/graph.py:2022] [115/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2z/c2z2oymu4zxfi5fjb6oucckqbho2tde7ywjj5bwk76nbwxblkd7h.py
I0205 10:41:40.357000 2062045 site-packages/torch/_inductor/graph.py:2056] [115/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2z/c2z2oymu4zxfi5fjb6oucckqbho2tde7ywjj5bwk76nbwxblkd7h.py

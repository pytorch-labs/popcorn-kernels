W0127 11:21:54.751000 703210 site-packages/torch/_inductor/utils.py:1611] [25/0_1] DeviceCopy in input program
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] Output code: 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # AOT ID: ['6_inference']
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import torch
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import math
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import random
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import os
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import tempfile
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from math import inf, nan
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from cmath import nanj
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch import device, empty_strided
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import triton
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import triton.language as tl
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     grid,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     split_scan_grid,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     grid_combo_kernels,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     start_graph,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     end_graph,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] )
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] aten = torch.ops.aten
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i5/ci5bzemam6j6gspu6f5uhgmy2uxeobinzbjyfxmg6q74eco7bu5w.py
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] #   x => inductor_lookup_seed_default, inductor_random_default
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # Graph fragment:
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 1, 2], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] triton_poi_fused_rand_0 = async_compile.triton('triton_poi_fused_rand_0', '''
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import triton
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import triton.language as tl
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     size_hints={'x': 2}, 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     filename=__file__,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] )
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] @triton.jit
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] def triton_poi_fused_rand_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xnumel = 2
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     x0 = xindex
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp1 = x0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] ''', device_str='cuda')
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7v/c7vj37jxfzhbyvgytmzsgwkev5q4t7w2mz4dq64ngxmqfyur4462.py
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.fractional_max_pool2d]
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] #   x => fractional_max_pool2d
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] # Graph fragment:
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] #   %fractional_max_pool2d : [num_users=1] = call_function[target=torch.ops.aten.fractional_max_pool2d.default](args = (%arg2_1, [2, 2], [14, 14], %inductor_random_default), kwargs = {})
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] triton_poi_fused_fractional_max_pool2d_1 = async_compile.triton('triton_poi_fused_fractional_max_pool2d_1', '''
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import triton
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] import triton.language as tl
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     size_hints={'x': 256}, 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     filename=__file__,
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_fractional_max_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] )
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] @triton.jit
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] def triton_poi_fused_fractional_max_pool2d_1(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xnumel = 196
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     x1 = xindex // 14
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     x0 = (xindex % 14)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     x2 = xindex
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp22 = tl.load(in_ptr0 + (1))
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp2 = ((-2) + ks0) / 13
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp3 = tmp2.to(tl.float32)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp4 = x1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp6 = tmp5 + tmp1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp7 = tmp6 * tmp3
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp8 = libdevice.floor(tmp7)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp9 = tmp1 * tmp3
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp10 = libdevice.floor(tmp9)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp11 = tmp8 - tmp10
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp12 = tmp11.to(tl.int64)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp13 = tl.full([1], 13, tl.int64)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp14 = tmp5 < tmp13
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp15 = (-2) + ks0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp16 = tl.where(tmp14, tmp12, tmp15)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp17 = ks0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp18 = tmp16 + tmp17
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp19 = tmp16 < 0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp16)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tl.device_assert(((0 <= tmp20) & (tmp20 < ks0)) | ~(xmask), "index out of bounds: 0 <= tmp20 < ks0")
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp24 = ((-2) + ks1) / 13
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp26 = x0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp27 = tmp26.to(tl.float32)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp28 = tmp27 + tmp23
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp29 = tmp28 * tmp25
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp30 = libdevice.floor(tmp29)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp31 = tmp23 * tmp25
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp32 = libdevice.floor(tmp31)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp33 = tmp30 - tmp32
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp34 = tmp33.to(tl.int64)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp35 = tmp27 < tmp13
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp36 = (-2) + ks1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp37 = tl.where(tmp35, tmp34, tmp36)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp38 = ks1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp39 = tmp37 + tmp38
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp40 = tmp37 < 0
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp41 = tl.where(tmp40, tmp39, tmp37)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tl.device_assert(((0 <= tmp41) & (tmp41 < ks1)) | ~(xmask), "index out of bounds: 0 <= tmp41 < ks1")
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp43 = tl.load(in_ptr1 + (tmp41 + ks1*tmp20), xmask, eviction_policy='evict_last')
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp44 = tl.load(in_ptr1 + (1 + tmp41 + ks1*tmp20), xmask, eviction_policy='evict_last')
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp45 = triton_helpers.maximum(tmp44, tmp43)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp46 = tl.load(in_ptr1 + (ks1 + tmp41 + ks1*tmp20), xmask, eviction_policy='evict_last')
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp47 = triton_helpers.maximum(tmp46, tmp45)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp48 = tl.load(in_ptr1 + (1 + ks1 + tmp41 + ks1*tmp20), xmask, eviction_policy='evict_last')
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tmp49 = triton_helpers.maximum(tmp48, tmp47)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp49, xmask)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] ''', device_str='cuda')
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] cpp_fused_randint_2 = async_compile.cpp_pybinding(['int64_t*'], '''
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] extern "C"  void kernel(int64_t* in_out_ptr0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] {
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     {
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         {
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]             {
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]                 auto tmp0 = in_out_ptr0[static_cast<int64_t>(0L)];
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]                 auto tmp2 = static_cast<int64_t>(0);
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]                 auto tmp3 = static_cast<int64_t>(10);
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]                 auto tmp4 = randint64_cpu(tmp0, tmp1, tmp2, tmp3);
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]                 in_out_ptr0[static_cast<int64_t>(0L)] = tmp4;
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]             }
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         }
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     }
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] }
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] ''')
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] async_compile.wait(globals())
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] del async_compile
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] def call(args):
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     args.clear()
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     s0 = arg0_1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     s1 = arg1_1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     assert_size_stride(arg2_1, (1, 1, s0, s1), (s0*s1, s0*s1, s1, 1))
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 1, 2), (2, 2, 1), torch.float32)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         triton_poi_fused_rand_0.run(buf0, buf1, 0, 2, grid=grid(2), stream=stream0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 1, 14, 14), (196, 196, 14, 1), torch.float32)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.fractional_max_pool2d]
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         triton_poi_fused_fractional_max_pool2d_1.run(buf1, arg2_1, buf2, s0, s1, 196, grid=grid(196), stream=stream0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         del arg2_1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         del buf1
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     buf3 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf3)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     buf4 = buf3; del buf3  # reuse
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     cpp_fused_randint_2(buf4)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         buf5 = buf0; del buf0  # reuse
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         buf5.copy_(buf4, False)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]         del buf4
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     return (reinterpret_tensor(buf2, (1, 196), (196, 1), 0), buf5, )
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     arg0_1 = 28
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     arg1_1 = 28
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     arg2_1 = rand_strided((1, 1, 28, 28), (784, 784, 28, 1), device='cuda:0', dtype=torch.float32)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] if __name__ == "__main__":
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:21:54.834000 703210 site-packages/torch/_inductor/graph.py:2014] [25/0_1] [__output_code] 
V0127 11:21:54.837000 703210 site-packages/torch/_inductor/graph.py:2022] [25/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5s/c5sqsv4agwv2fjoem4ksbbzt44jd5d2axhio2of2apxelm43mxlv.py
I0127 11:21:55.029000 703210 site-packages/torch/_inductor/graph.py:2056] [25/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5s/c5sqsv4agwv2fjoem4ksbbzt44jd5d2axhio2of2apxelm43mxlv.py
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] Output code: 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # AOT ID: ['7_inference']
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import torch
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import math
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import random
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import os
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import tempfile
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from math import inf, nan
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from cmath import nanj
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch import device, empty_strided
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import triton
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import triton.language as tl
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     grid,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     split_scan_grid,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     grid_combo_kernels,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     start_graph,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     end_graph,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] )
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] aten = torch.ops.aten
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dm/cdmw37k76o4zcpt735fnzkfaiadd43q2douycf67jnmxnwveyy5o.py
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # Topologically Sorted Source Nodes: [target], Original ATen: [aten.randn_like]
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] #   target => inductor_lookup_seed_default, inductor_random_default
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # Graph fragment:
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1], %inductor_lookup_seed_default, randn), kwargs = {})
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] triton_poi_fused_randn_like_0 = async_compile.triton('triton_poi_fused_randn_like_0', '''
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import triton
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import triton.language as tl
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     filename=__file__,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_randn_like_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] )
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] @triton.jit
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] def triton_poi_fused_randn_like_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xnumel = 1
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     tmp2 = tl.randn(tmp0, (tmp1).to(tl.uint32))
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp2, None)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] ''', device_str='cuda')
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jg/cjg4hukfhamjmnaywtpq6yavt6wf65w3qphao55emeqt6fjya5ij.py
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # Topologically Sorted Source Nodes: [var], Original ATen: [aten.ones_like]
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] #   var => full_default
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] # Graph fragment:
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] triton_poi_fused_ones_like_1 = async_compile.triton('triton_poi_fused_ones_like_1', '''
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import triton
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] import triton.language as tl
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     filename=__file__,
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_ones_like_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] )
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] @triton.jit
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] def triton_poi_fused_ones_like_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xnumel = 1
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     tmp0 = 1.0
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] ''', device_str='cuda')
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] async_compile.wait(globals())
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] del async_compile
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] def call(args):
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     arg0_1, = args
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     args.clear()
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     assert_size_stride(arg0_1, (1, ), (1, ))
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         buf1 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         # Topologically Sorted Source Nodes: [target], Original ATen: [aten.randn_like]
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         triton_poi_fused_randn_like_0.run(buf0, buf1, 0, 1, grid=grid(1), stream=stream0)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         del buf0
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         buf2 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         # Topologically Sorted Source Nodes: [var], Original ATen: [aten.ones_like]
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]         triton_poi_fused_ones_like_1.run(buf2, 1, grid=grid(1), stream=stream0)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     return (buf1, buf2, )
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     arg0_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] if __name__ == "__main__":
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:21:55.159000 703210 site-packages/torch/_inductor/graph.py:2014] [26/0_1] [__output_code] 
V0127 11:21:55.161000 703210 site-packages/torch/_inductor/graph.py:2022] [26/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tc/ctcuiy2ug66a7x5evvo5zvpnb6ki6nazy65fqe57bbx2i6muuf6p.py
I0127 11:21:55.307000 703210 site-packages/torch/_inductor/graph.py:2056] [26/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tc/ctcuiy2ug66a7x5evvo5zvpnb6ki6nazy65fqe57bbx2i6muuf6p.py

W0205 11:53:40.279000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [526/0] failed while executing pow_by_natural([VR[8, int_oo], VR[-1, -1]])
W0205 11:53:40.591000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [526/0] failed while executing pow_by_natural([VR[2, int_oo], VR[-1, -1]])
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] Output code: 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # AOT ID: ['149_inference']
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import torch
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import math
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import random
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import os
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import tempfile
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from math import inf, nan
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from cmath import nanj
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch import device, empty_strided
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton.language as tl
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     grid,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     split_scan_grid,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     grid_combo_kernels,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     start_graph,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     end_graph,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     cooperative_reduction_grid,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] )
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] aten = torch.ops.aten
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] async_compile = AsyncCompile()
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5x/c5xv7is7efqicdttlumlmu7f6mmcvemjpyhxzkxxsdw7rr65uefs.py
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   x => var_mean
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Graph fragment:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton.language as tl
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton_heuristics.reduction(
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     filename=__file__,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] )
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton.jit
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xnumel = 3
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     rnumel = r0_numel
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     rbase = r0_base
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x0 = xindex
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         roffset = r0_offset
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         rindex = r0_index
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         r0_1 = r0_index
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         )
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] ''', device_str='cuda')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bq/cbqdmqcmirv567ynw7luc7dm2nhkpvfgrvyqjus3opua7fa2gf2l.py
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit, aten.view, aten.replication_pad2d]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   x => add_4, mul_11, rsqrt, sub_2, var_mean, view_1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   x_1 => _unsafe_index, _unsafe_index_1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Graph fragment:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_4,), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %view_1 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_11, [1, 3, %arg0_1, %arg1_1]), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_1, [None, None, %clamp_max, None]), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1]), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1', '''
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton.language as tl
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     size_hints={'x': 16384}, 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     filename=__file__,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] )
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton.jit
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x0 = (xindex % ks0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x2 = xindex // ks2
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x3 = xindex
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (ks4*(((-1) + ks3) * (((-1) + ks3) <= (((0) * ((0) >= ((-2) + x1)) + ((-2) + x1) * (((-2) + x1) > (0))))) + (((0) * ((0) >= ((-2) + x1)) + ((-2) + x1) * (((-2) + x1) > (0)))) * ((((0) * ((0) >= ((-2) + x1)) + ((-2) + x1) * (((-2) + x1) > (0)))) < ((-1) + ks3))) + ks3*ks4*x2 + (((-1) + ks4) * (((-1) + ks4) <= (((0) * ((0) >= ((-2) + x0)) + ((-2) + x0) * (((-2) + x0) > (0))))) + (((0) * ((0) >= ((-2) + x0)) + ((-2) + x0) * (((-2) + x0) > (0)))) * ((((0) * ((0) >= ((-2) + x0)) + ((-2) + x0) * (((-2) + x0) > (0)))) < ((-1) + ks4)))), xmask, eviction_policy='evict_last')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp4 = ks3*ks4
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp6 = tmp3 / tmp5
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp7 = 1e-05
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp9 = libdevice.rsqrt(tmp8)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp10 = tmp2 * tmp9
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] ''', device_str='cuda')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zh/czhktruck5ervyvrr6zwegxieil7ckfbbiqzp6zgoqtt4w5emwts.py
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.pixel_unshuffle]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   x_4 => clone
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Graph fragment:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_poi_fused_pixel_unshuffle_2 = async_compile.triton('triton_poi_fused_pixel_unshuffle_2', '''
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton.language as tl
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     size_hints={'x': 4096}, 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     filename=__file__,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_pixel_unshuffle_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] )
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton.jit
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] def triton_poi_fused_pixel_unshuffle_2(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x0 = (xindex % ks0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x2 = xindex // ks2
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x3 = xindex
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 8*x1 + 16*x2 + 2*ks4*x1 + 4*ks3*x2 + 4*ks4*x2 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 8*x1 + 16*x2 + 2*ks4*x1 + 4*ks3*x2 + 4*ks4*x2 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (4 + ks4 + 2*x0 + 8*x1 + 16*x2 + 2*ks4*x1 + 4*ks3*x2 + 4*ks4*x2 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (5 + ks4 + 2*x0 + 8*x1 + 16*x2 + 2*ks4*x1 + 4*ks3*x2 + 4*ks4*x2 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp7 = 0.5
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp9 = 0.7071067811865476
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp10 = tmp6 * tmp9
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp11 = libdevice.erf(tmp10)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp12 = 1.0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp14 = tmp8 * tmp13
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp14, xmask)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] ''', device_str='cuda')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oa/coayvwkhlgoqd276b2ncuh5srjfdgandbi6k4fwtrcye33sn6e5f.py
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._adaptive_avg_pool2d]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   x_6 => _adaptive_avg_pool2d
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] # Graph fragment:
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] #   %_adaptive_avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%unsqueeze, [1, 128]), kwargs = {})
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d_3 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_3', '''
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] import triton.language as tl
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     size_hints={'x': 32768}, 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     filename=__file__,
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] )
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] @triton.jit
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_3(in_ptr0, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x0 = (xindex % 128)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x1 = xindex // 128
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     x2 = xindex
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp3 = (17*x0) // 128
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp4 = (144 + 17*x0) // 128
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp6 = tmp2 & tmp5
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (2*((17*x0) // 128) + 4*((x1 % (1 + (ks0 // 4)))) + 2*(ks1 // 4)*(triton_helpers.div_floor_integer(((x1 // (1 + (ks0 // 4))) % 12),  2)) + 4*(ks0 // 4)*(triton_helpers.div_floor_integer(((x1 // (1 + (ks0 // 4))) % 12),  4)) + 4*(ks1 // 4)*((x1 % (1 + (ks0 // 4)))) + 4*(ks0 // 4)*(ks1 // 4)*(triton_helpers.div_floor_integer(((x1 // (1 + (ks0 // 4))) % 12),  4)) + (((x1 // (1 + (ks0 // 4))) % 12))), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp8 = 1 + ((17*x0) // 128)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp9 = tmp8 < tmp4
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp10 = tmp2 & tmp9
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (2 + 2*((17*x0) // 128) + 4*((x1 % (1 + (ks0 // 4)))) + 2*(ks1 // 4)*(triton_helpers.div_floor_integer(((x1 // (1 + (ks0 // 4))) % 12),  2)) + 4*(ks0 // 4)*(triton_helpers.div_floor_integer(((x1 // (1 + (ks0 // 4))) % 12),  4)) + 4*(ks1 // 4)*((x1 % (1 + (ks0 // 4)))) + 4*(ks0 // 4)*(ks1 // 4)*(triton_helpers.div_floor_integer(((x1 // (1 + (ks0 // 4))) % 12),  4)) + (((x1 // (1 + (ks0 // 4))) % 12))), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp12 = tmp11 + tmp7
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp13 = 1.0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp15 = tl.where(tmp6, tmp13, tmp14)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp16 = 1.0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp18 = tl.where(tmp10, tmp16, tmp17)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp19 = tmp18 + tmp15
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tmp20 = tmp12 / tmp19
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp20, xmask)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] ''', device_str='cuda')
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] async_compile.wait(globals())
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] del async_compile
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] def call(args):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     args.clear()
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     s1 = arg0_1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     s2 = arg1_1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     assert_size_stride(arg2_1, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         buf1 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_red_fused__native_batch_norm_legit_0_r0_numel = s1*s2
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg2_1, buf0, buf1, s1, s2, 3, triton_red_fused__native_batch_norm_legit_0_r0_numel, grid=grid(3), stream=stream0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         ps0 = 4 + s2
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         ps1 = 4 + s1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         ps2 = 16 + 4*s1 + 4*s2 + s1*s2
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         buf3 = empty_strided_cuda((1, 3, 4 + s1, 4 + s2), (48 + 12*s1 + 12*s2 + 3*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit, aten.view, aten.replication_pad2d]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1_xnumel = 48 + 12*s1 + 12*s2 + 3*s1*s2
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1.run(arg2_1, buf0, buf1, buf3, ps0, ps1, ps2, s1, s2, triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1_xnumel, grid=grid(triton_poi_fused__native_batch_norm_legit_replication_pad2d_view_1_xnumel), stream=stream0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         del arg2_1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         del buf0
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         del buf1
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         ps3 = 2 + 2*(s2 // 4)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         ps4 = 2 + 2*(s1 // 4)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         ps5 = 4 + 4*(s1 // 4) + 4*(s2 // 4) + 4*(s1 // 4)*(s2 // 4)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         buf4 = empty_strided_cuda((1, 3, 2, 2, 1 + (s1 // 4), 1 + (s2 // 4)), (12 + 12*(s1 // 4) + 12*(s2 // 4) + 12*(s1 // 4)*(s2 // 4), 4 + 4*(s1 // 4) + 4*(s2 // 4) + 4*(s1 // 4)*(s2 // 4), 2 + 2*(s2 // 4), 1, 4 + 4*(s2 // 4), 2), torch.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.pixel_unshuffle]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_poi_fused_pixel_unshuffle_2_xnumel = 12 + 12*(s1 // 4) + 12*(s2 // 4) + 12*(s1 // 4)*(s2 // 4)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_poi_fused_pixel_unshuffle_2.run(buf3, buf4, ps3, ps4, ps5, s1, s2, triton_poi_fused_pixel_unshuffle_2_xnumel, grid=grid(triton_poi_fused_pixel_unshuffle_2_xnumel), stream=stream0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         del buf3
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         buf5 = empty_strided_cuda((1, 3*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))) + 3*(s1 // 4)*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))), 1, 128), (384*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))) + 384*(s1 // 4)*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))), 128, 128, 1), torch.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten._adaptive_avg_pool2d]
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_3_xnumel = 384*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))) + 384*(s1 // 4)*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4)))
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_3.run(buf4, buf5, s1, s2, triton_poi_fused__adaptive_avg_pool2d_3_xnumel, grid=grid(triton_poi_fused__adaptive_avg_pool2d_3_xnumel), stream=stream0)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]         del buf4
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     return (reinterpret_tensor(buf5, (1, 3*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))), 1 + (s1 // 4), 128), (384*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))) + 384*(s1 // 4)*((2 + (s1 // 2)) // (1 + (s1 // 4)))*((2 + (s2 // 2)) // (1 + (s2 // 4))), 128 + 128*(s1 // 4), 128, 1), 0), )
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     arg0_1 = 64
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     arg1_1 = 64
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     arg2_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] if __name__ == "__main__":
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:53:41.087000 3201829 site-packages/torch/_inductor/graph.py:2014] [526/0] [__output_code] 
V0205 11:53:41.095000 3201829 site-packages/torch/_inductor/graph.py:2022] [526/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2j/c2jhbsq3uik2lkrhwaw6xgvq2bgpetv5cagsjznrhcor7uvxa7pp.py
I0205 11:53:41.287000 3201829 site-packages/torch/_inductor/graph.py:2056] [526/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2j/c2jhbsq3uik2lkrhwaw6xgvq2bgpetv5cagsjznrhcor7uvxa7pp.py

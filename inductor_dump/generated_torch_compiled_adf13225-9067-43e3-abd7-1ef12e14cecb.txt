V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] Output code: 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # AOT ID: ['60_forward']
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import torch
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import math
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import random
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import os
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import tempfile
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from math import inf, nan
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from cmath import nanj
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch import device, empty_strided
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton.language as tl
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     grid,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     split_scan_grid,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     grid_combo_kernels,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     start_graph,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     end_graph,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     cooperative_reduction_grid,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] )
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] aten = torch.ops.aten
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] async_compile = AsyncCompile()
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ph/cphnyanyh62ohvgdn4hgmxlc62qktfhfrdgwvhkw4cf75mczs6ji.py
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.native_layer_norm]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   x => add, add_1, mul, mul_1, rsqrt, sub, var_mean
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Graph fragment:
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_4, [2]), kwargs = {correction: 0, keepdim: True})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_4, %getitem_1), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_1), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_2), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_per_fused_native_layer_norm_0 = async_compile.triton('triton_per_fused_native_layer_norm_0', '''
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton.language as tl
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     size_hints={'x': 64, 'r0_': 64},
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     filename=__file__,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_layer_norm_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 4, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] )
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton.jit
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def triton_per_fused_native_layer_norm_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_numel = 64
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     R0_BLOCK: tl.constexpr = 64
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rnumel = r0_numel
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xmask = xindex < xnumel
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_offset = 0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     roffset = r0_offset
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rindex = r0_index
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_1 = r0_index
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     x0 = xindex
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 64*x0), xmask, other=0.0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (r0_1), None, eviction_policy='evict_last')
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp26 = tl.load(in_ptr2 + (r0_1), None, eviction_policy='evict_last')
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 64, tl.int32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp10 = tmp7 / tmp9
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp11 = tmp1 - tmp10
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp17 = 64.0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp18 = tmp16 / tmp17
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp19 = 1e-05
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp22 = tmp0 - tmp10
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp23 = tmp22 * tmp21
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp27 = tmp25 + tmp26
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.debug_barrier()
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp21, xmask)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr1 + (r0_1 + 64*x0), tmp27, xmask)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] ''', device_str='cuda')
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nv/cnv6cacjbapcmtf4qel3mrvoelzqrm7jsozf5ffl72vwwubjouvh.py
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, instance_norm, x_sim], Original ATen: [aten.copy, aten._native_batch_norm_legit_functional, aten.mean, aten.linalg_vector_norm, aten.clamp_min, aten.div, aten.mul, aten.sum]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   instance_norm => add_39, add_42, mean, mean_1, mul_55, mul_61, rsqrt_1, sub_21, var_mean_1
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   x_2 => copy
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   x_sim => clamp_min, div, mul_126, pow_1, pow_2, sum_1, sum_3
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Graph fragment:
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_1, %slice_2), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %slice_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%empty, %copy, 1, 2, %sub_6), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %slice_scatter_default_1 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %slice_8, 1, 0, 2), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %slice_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_1, %slice_14, 1, %sub_6, %add_14), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_4, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %add_39 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_39,), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %getitem_3), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %rsqrt_1), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_61 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_55, %unsqueeze_4), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %add_42 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_61, %unsqueeze_7), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_6, [0]), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_8, [0]), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%squeeze_3, 2), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1], True), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%pow_2, 1e-08), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%squeeze_3, %clamp_min), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_126 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %div), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_126, [1]), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %mean), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %mean_1), kwargs = {})
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_red_fused__native_batch_norm_legit_functional_clamp_min_copy_div_linalg_vector_norm_mean_mul_sum_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_clamp_min_copy_div_linalg_vector_norm_mean_mul_sum_1', '''
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton.language as tl
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton_heuristics.reduction(
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     size_hints={'x': 1, 'r0_': 8192},
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     filename=__file__,
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': (12,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_clamp_min_copy_div_linalg_vector_norm_mean_mul_sum_1', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr1', 'in_ptr2', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] )
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton.jit
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_clamp_min_copy_div_linalg_vector_norm_mean_mul_sum_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, out_ptr3, out_ptr5, out_ptr7, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xnumel = 1
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rnumel = r0_numel
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rbase = r0_base
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp53_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp53_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp53_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         roffset = r0_offset
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         rindex = r0_index
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_0 = r0_index
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp0 = r0_0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp1 = 2 + 64*ks0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp2 = tmp0 >= tmp1
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp3 = tl.broadcast_to(r0_0 + ((-64)*ks0), [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp4 = tl.full([1, 1], 2, tl.int64)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp5 = tmp3 < tmp4
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp6 = tmp5 & tmp2
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp7 = tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp8 = tl.full([1, 1], 2, tl.int64)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp9 = tmp7 >= tmp8
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp10 = tl.broadcast_to(2 + 64*ks0, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp11 = tmp7 < tmp10
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp12 = tmp9 & tmp11
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp13 = tmp12 & tmp6
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp14 = tl.load(in_ptr0 + (tl.broadcast_to((((-2) + r0_0) % (64*ks0)), [XBLOCK, R0_BLOCK])), r0_mask & tmp13, eviction_policy='evict_last', other=0.0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp15 = float("nan")
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp16 = tl.where(tmp12, tmp14, tmp15)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp18 = tl.where(tmp6, tmp16, tmp17)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp19 = tmp3 >= tmp4
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp20 = tl.broadcast_to(2 + 64*ks0, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp21 = tmp3 < tmp20
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp22 = tmp19 & tmp21
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp23 = tmp22 & tmp2
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp24 = tl.load(in_ptr0 + (tl.broadcast_to((((-2) + r0_0 + ((-64)*ks0)) % (64*ks0)), [XBLOCK, R0_BLOCK])), r0_mask & tmp23, eviction_policy='evict_last', other=0.0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp25 = float("nan")
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp26 = tl.where(tmp22, tmp24, tmp25)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp27 = tl.where(tmp5, tmp18, tmp26)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp29 = tl.where(tmp2, tmp27, tmp28)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp30 = tl.full([1, 1], 2, tl.int64)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp31 = tmp0 < tmp30
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp32 = tl.broadcast_to(r0_0 + 64*ks0, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp33 = tl.full([1, 1], 2, tl.int64)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp34 = tmp32 >= tmp33
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp35 = tl.broadcast_to(2 + 64*ks0, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp36 = tmp32 < tmp35
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp37 = tmp34 & tmp36
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp38 = tmp37 & tmp31
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp39 = tl.load(in_ptr0 + (tl.broadcast_to((((-2) + r0_0 + 64*ks0) % (64*ks0)), [XBLOCK, R0_BLOCK])), r0_mask & tmp38, eviction_policy='evict_last', other=0.0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp40 = float("nan")
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp41 = tl.where(tmp37, tmp39, tmp40)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp42 = tl.full(tmp41.shape, 0.0, tmp41.dtype)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp43 = tl.where(tmp31, tmp41, tmp42)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp44 = tmp0 >= tmp30
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp45 = tmp0 < tmp1
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp46 = tmp44 & tmp45
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp47 = tl.load(in_ptr0 + (tl.broadcast_to((((-2) + r0_0) % (64*ks0)), [XBLOCK, R0_BLOCK])), r0_mask & tmp46, eviction_policy='evict_last', other=0.0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp48 = float("nan")
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp49 = tl.where(tmp46, tmp47, tmp48)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp50 = tl.where(tmp31, tmp43, tmp49)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp51 = tl.where(tmp2, tmp29, tmp50)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp52 = tl.broadcast_to(tmp51, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp53_mean_next, tmp53_m2_next, tmp53_weight_next = triton_helpers.welford_reduce(
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]             tmp52, tmp53_mean, tmp53_m2, tmp53_weight, roffset == 0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         )
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp53_mean = tl.where(r0_mask, tmp53_mean_next, tmp53_mean)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp53_m2 = tl.where(r0_mask, tmp53_m2_next, tmp53_m2)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp53_weight = tl.where(r0_mask, tmp53_weight_next, tmp53_weight)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tl.store(out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp51, r0_mask)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp56, tmp57, tmp58 = triton_helpers.welford(tmp53_mean, tmp53_m2, tmp53_weight, 1)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp53 = tmp56[:, None]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp54 = tmp57[:, None]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp55 = tmp58[:, None]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp53, None)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp67 = tl.load(in_ptr1 + (0))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp68 = tl.broadcast_to(tmp67, [XBLOCK, 1])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp78 = tl.load(in_ptr2 + (0))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp79 = tl.broadcast_to(tmp78, [XBLOCK, 1])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp59 = 4 + 64*ks0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp60 = tmp59.to(tl.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp61 = tmp54 / tmp60
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp62 = 1e-05
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp63 = tmp61 + tmp62
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp64 = libdevice.rsqrt(tmp63)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp65 = 0.1
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp66 = tmp53 * tmp65
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp69 = 0.9
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp70 = tmp68 * tmp69
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp71 = tmp66 + tmp70
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp72 = 1.0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp73 = tmp71 / tmp72
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp74 = (((4 + 64*ks0) / 1) / ((tl.full([], -1.00000000000000, tl.float64)) + ((4 + 64*ks0) / 1)))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp75 = tmp74.to(tl.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp76 = tmp61 * tmp75
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp77 = tmp76 * tmp65
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp80 = tmp79 * tmp69
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp81 = tmp77 + tmp80
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp82 = tmp81 / tmp72
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr3 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp64, None)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr5 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp73, None)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr7 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp82, None)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp86 = tl.load(in_ptr3 + (0))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp87 = tl.broadcast_to(tmp86, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp89 = tl.load(in_ptr4 + (0))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp90 = tl.broadcast_to(tmp89, [XBLOCK, R0_BLOCK])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         roffset = r0_offset
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         rindex = r0_index
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_0 = r0_index
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp83 = tl.load(out_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp84 = tmp83 - tmp53
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp85 = tmp84 * tmp64
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp88 = tmp85 * tmp87
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp91 = tmp88 + tmp90
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp92 = tmp91 * tmp91
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp93 = libdevice.sqrt(tmp92)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp94 = 1e-08
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp95 = triton_helpers.maximum(tmp93, tmp94)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp96 = tmp91 / tmp95
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp97 = tmp96 * tmp96
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp97, r0_mask)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] ''', device_str='cuda')
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] async_compile.wait(globals())
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] del async_compile
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def call(args):
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     args.clear()
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     s0 = primals_3
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_1, (64, ), (1, ))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_4, (1, s0, 64), (64*s0, 64, 1))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_5, (1, ), (1, ))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_6, (1, ), (1, ))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_8, (1, ), (1, ))
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf0 = empty_strided_cuda((1, s0, 1), (s0, 1, 1), torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf1 = empty_strided_cuda((1, s0, 1), (s0, 1, s0), torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf3 = reinterpret_tensor(buf1, (1, s0, 1), (s0, 1, 1), 0); del buf1  # reuse
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf4 = empty_strided_cuda((1, s0, 64), (64*s0, 64, 1), torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.native_layer_norm]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_per_fused_native_layer_norm_0.run(buf3, primals_4, primals_1, primals_2, buf0, buf4, s0, 64, grid=grid(s0), stream=stream0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del primals_1
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del primals_2
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf6 = empty_strided_cuda((1, 4 + 64*s0), (4 + 64*s0, 1), torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf7 = empty_strided_cuda((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf10 = empty_strided_cuda((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf11 = empty_strided_cuda((1, 1, 1, 1, 4 + 64*s0), (4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 1), torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf12 = reinterpret_tensor(buf11, (1, 1, 4 + 64*s0), (4 + 64*s0, 4 + 64*s0, 1), 0); del buf11  # reuse
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, instance_norm, x_sim], Original ATen: [aten.copy, aten._native_batch_norm_legit_functional, aten.mean, aten.linalg_vector_norm, aten.clamp_min, aten.div, aten.mul, aten.sum]
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_clamp_min_copy_div_linalg_vector_norm_mean_mul_sum_1_r0_numel = 4 + 64*s0
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_clamp_min_copy_div_linalg_vector_norm_mean_mul_sum_1.run(buf12, buf4, primals_5, primals_6, primals_7, primals_8, buf6, buf7, buf10, primals_5, primals_6, s0, 1, triton_red_fused__native_batch_norm_legit_functional_clamp_min_copy_div_linalg_vector_norm_mean_mul_sum_1_r0_numel, grid=grid(1), stream=stream0)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del buf4
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del primals_5
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del primals_6
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     return (buf12, primals_4, primals_7, primals_8, buf0, buf3, reinterpret_tensor(buf6, (1, 1, 1, 4 + 64*s0), (4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 1), 0), buf7, buf10, s0, 64*s0, 4 + 64*s0, 2 + 64*s0, 64*s0, 64*s0, 4 + 64*s0, )
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_1 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_3 = 64
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_4 = rand_strided((1, 64, 64), (4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_5 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_6 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_8 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] if __name__ == "__main__":
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:31:14.724000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:14.732000 3201829 site-packages/torch/_inductor/graph.py:2022] [205/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xl/cxl6dlmigy2gpaeyzah2qfixezh6bkp5itkrmryofwvwaxrdx6cc.py
I0205 11:31:15.030000 3201829 site-packages/torch/_inductor/graph.py:2056] [205/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xl/cxl6dlmigy2gpaeyzah2qfixezh6bkp5itkrmryofwvwaxrdx6cc.py
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] Output code: 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # AOT ID: ['60_backward']
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import torch
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import math
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import random
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import os
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import tempfile
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from math import inf, nan
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from cmath import nanj
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch import device, empty_strided
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton.language as tl
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     grid,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     split_scan_grid,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     grid_combo_kernels,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     start_graph,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     end_graph,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     cooperative_reduction_grid,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] )
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] aten = torch.ops.aten
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] async_compile = AsyncCompile()
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ye/cyeenwdwerr6u5nudxpf4u2b76lwh4yovcm654nvbsyne6obnger.py
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Topologically Sorted Source Nodes: [instance_norm], Original ATen: [aten._native_batch_norm_legit_functional, aten.native_batch_norm_backward]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   instance_norm => add_42, mul_55, mul_61, sub_21
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Graph fragment:
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %getitem_3), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %rsqrt_1), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_61 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_55, %unsqueeze_4), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %add_42 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_61, %unsqueeze_7), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_10, [0, 2, 3, 4]), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sub_40 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %unsqueeze_13), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_140 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_10, %sub_40), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sum_5 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_140, [0, 2, 3, 4]), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_146 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_40, %unsqueeze_21), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sub_42 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_10, %mul_146), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_148 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_5, %squeeze_1), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_red_fused__native_batch_norm_legit_functional_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_native_batch_norm_backward_0', '''
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton.language as tl
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton_heuristics.reduction(
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     size_hints={'x': 1, 'r0_': 8192},
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     filename=__file__,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': (10,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_native_batch_norm_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] )
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton.jit
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_native_batch_norm_backward_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, out_ptr3, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xnumel = 1
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rnumel = r0_numel
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rbase = r0_base
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp11 = tl.broadcast_to(tmp10, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     _tmp33 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     _tmp37 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         roffset = r0_offset
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         rindex = r0_index
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_0 = r0_index
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp13 = tl.load(in_ptr4 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp3 = tmp0 - tmp2
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp6 = tmp3 * tmp5
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp9 = tmp6 * tmp8
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp12 = tmp9 + tmp11
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp14 = tmp12 * tmp12
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp15 = libdevice.sqrt(tmp14)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp16 = 1e-08
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp18 = tmp12 / tmp17
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp19 = tmp13 * tmp18
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp20 = tmp19 / tmp17
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp21 = tmp20 + tmp20
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp22 = -tmp19
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp23 = tmp18 / tmp17
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp24 = tmp22 * tmp23
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp25 = 0.0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp26 = tmp15 == tmp25
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp27 = tmp12 / tmp15
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp28 = tl.where(tmp26, tmp25, tmp27)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp29 = tmp24 * tmp28
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp30 = tmp21 + tmp29
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp31 = tmp30 + tmp29
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp32 = tl.broadcast_to(tmp31, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp34 = _tmp33 + tmp32
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         _tmp33 = tl.where(r0_mask, tmp34, _tmp33)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp35 = tmp31 * tmp3
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp36 = tl.broadcast_to(tmp35, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp38 = _tmp37 + tmp36
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         _tmp37 = tl.where(r0_mask, tmp38, _tmp37)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tl.store(out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp12, r0_mask)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp33 = tl.sum(_tmp33, 1)[:, None]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp37 = tl.sum(_tmp37, 1)[:, None]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp33, None)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp60 = tl.load(in_ptr0 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp61 = tl.broadcast_to(tmp60, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp66 = tl.load(in_ptr1 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp67 = tl.broadcast_to(tmp66, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         roffset = r0_offset
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         rindex = r0_index
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_0 = r0_index
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp39 = tl.load(in_ptr4 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp40 = tl.load(out_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp59 = tl.load(in_out_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp41 = tmp40 * tmp40
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp42 = libdevice.sqrt(tmp41)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp43 = 1e-08
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp44 = triton_helpers.maximum(tmp42, tmp43)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp45 = tmp40 / tmp44
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp46 = tmp39 * tmp45
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp47 = tmp46 / tmp44
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp48 = tmp47 + tmp47
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp49 = -tmp46
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp50 = tmp45 / tmp44
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp51 = tmp49 * tmp50
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp52 = 0.0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp53 = tmp42 == tmp52
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp54 = tmp40 / tmp42
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp55 = tl.where(tmp53, tmp52, tmp54)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp56 = tmp51 * tmp55
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp57 = tmp48 + tmp56
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp58 = tmp57 + tmp56
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp62 = tmp59 - tmp61
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp63 = (tl.full([], 1.00000000000000, tl.float64) / ((4 + 64*ks0) / 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp64 = tmp63.to(tl.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp65 = tmp37 * tmp64
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp68 = tmp67 * tmp67
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp69 = tmp65 * tmp68
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp70 = tmp62 * tmp69
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp71 = tmp58 - tmp70
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp71, r0_mask)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp72 = tl.load(in_ptr1 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp73 = tl.broadcast_to(tmp72, [XBLOCK, 1])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp74 = tmp37 * tmp73
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr3 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp74, None)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] ''', device_str='cuda')
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2y/c2yr3miukz6zclaospf2bq3vmcbj2wdlx322t32xbyy33aqnfjel.py
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.clone, aten.zeros_like, aten.copy, aten.slice_backward, aten.add]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Graph fragment:
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_18,), kwargs = {memory_format: torch.contiguous_format})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %full_default_2 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1, 2], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %copy_6 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_18, %full_default_2), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%view_12, %copy_6, 1, %sub_6, %add_14), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %full_2 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1, %add_14], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%full_2, %clone_2, 1, 2, 4), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %add_88 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%slice_scatter_default, %slice_scatter_default_1), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1 = async_compile.triton('triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1', '''
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton.language as tl
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     size_hints={'x': 8192}, 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     filename=__file__,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     min_elem_per_thread=0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] )
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton.jit
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xmask = xindex < xnumel
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     x0 = xindex
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (x0), xmask)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp13 = tl.load(in_ptr2 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp14 = tl.broadcast_to(tmp13, [XBLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp15 = tl.load(in_ptr3 + (0))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp0 = x0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp1 = 2 + 64*ks0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp3 = 0.0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp4 = tl.full(tmp3.shape, 0.0, tmp3.dtype)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp9 = (tl.full([], 1.00000000000000, tl.float64) / ((4 + 64*ks0) / 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp11 = tmp8 * tmp10
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp12 = tmp6 - tmp11
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp17 = tmp14 * tmp16
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp18 = tmp12 * tmp17
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp19 = tl.where(tmp2, tmp5, tmp18)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp20 = tl.full([1], 2, tl.int64)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp21 = tmp0 >= tmp20
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp22 = tl.full([1], 4, tl.int64)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp23 = tmp0 < tmp22
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp24 = tmp21 & tmp23
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (x0 + 64*ks0), tmp24 & xmask, other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp24, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp27 = tl.broadcast_to((tl.full([], 1.00000000000000, tl.float64) / ((4 + 64*ks0) / 1)), [XBLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp28 = tmp27.to(tl.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp29 = tmp26 * tmp28
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp30 = tmp25 - tmp29
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp31 = tl.load(in_ptr2 + (tl.full([XBLOCK], 0, tl.int32)), tmp24, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp32 = tl.load(in_ptr3 + (tl.full([XBLOCK], 0, tl.int32)), tmp24, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp33 = tmp31 * tmp32
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp34 = tmp30 * tmp33
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp36 = tl.where(tmp24, tmp34, tmp35)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp37 = 0.0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp38 = tl.where(tmp24, tmp36, tmp37)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp39 = tmp19 + tmp38
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp39, xmask)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] ''', device_str='cuda')
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lt/cltn33dc7kfvynnf4q2ixporjbinms32txbra7bgcqatbsjq2xpp.py
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.native_layer_norm, aten.native_layer_norm_backward]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   x => mul, sub
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] # Graph fragment:
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_4, %getitem_1), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %mul_154 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_13, %mul), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sum_8 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_154, [0, 1]), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] #   %sum_9 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_13, [0, 1]), kwargs = {})
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_red_fused_native_layer_norm_native_layer_norm_backward_2 = async_compile.triton('triton_red_fused_native_layer_norm_native_layer_norm_backward_2', '''
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] import triton.language as tl
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton_heuristics.reduction(
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     size_hints={'x': 64, 'r0_': 64},
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     filename=__file__,
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_layer_norm_native_layer_norm_backward_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] )
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] @triton.jit
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def triton_red_fused_native_layer_norm_native_layer_norm_backward_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xnumel = 64
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rnumel = r0_numel
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     xmask = xindex < xnumel
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rbase = r0_base
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     x0 = xindex
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     _tmp24 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     _tmp27 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         roffset = r0_offset
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         rindex = r0_index
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         r0_1 = r0_index
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp6 = tl.load(in_ptr0 + (2 + x0 + 64*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp17 = tl.load(in_ptr1 + (x0 + 64*r0_1), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp18 = tl.load(in_ptr2 + (r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp20 = tl.load(in_ptr3 + (r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp0 = 2 + x0 + 64*r0_1
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp1 = tl.full([1, 1], 2, tl.int64)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp2 = tmp0 < tmp1
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp3 = 0.0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp4 = tl.full(tmp3.shape, 0.0, tmp3.dtype)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp7 = tl.where(tmp2, tmp5, tmp6)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp8 = 64*ks0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp9 = tmp0 >= tmp8
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp10 = 2 + 64*ks0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp11 = tmp0 < tmp10
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp12 = tmp9 & tmp11
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp13 = tl.load(in_ptr0 + (2 + x0 + ((-64)*ks0) + 64*r0_1), r0_mask & tmp12 & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp14 = 0.0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp15 = tl.where(tmp12, tmp13, tmp14)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp16 = tmp7 + tmp15
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp19 = tmp17 - tmp18
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp21 = tmp19 * tmp20
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp22 = tmp16 * tmp21
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp23 = tl.broadcast_to(tmp22, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp25 = _tmp24 + tmp23
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         _tmp24 = tl.where(r0_mask & xmask, tmp25, _tmp24)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp26 = tl.broadcast_to(tmp16, [XBLOCK, R0_BLOCK])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         tmp28 = _tmp27 + tmp26
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         _tmp27 = tl.where(r0_mask & xmask, tmp28, _tmp27)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp24 = tl.sum(_tmp24, 1)[:, None]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tmp27 = tl.sum(_tmp27, 1)[:, None]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp24, xmask)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp27, xmask)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] ''', device_str='cuda')
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] async_compile.wait(globals())
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] del async_compile
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def call(args):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_3, sym_size_int_1, add_14, sub_6, sub_8, sub_16, sym_size_int_6, primals_4, primals_7, primals_8, getitem_1, rsqrt, view_3, getitem_3, rsqrt_1, tangents_1 = args
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     args.clear()
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     s0 = primals_3
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_4, (1, s0, 64), (64*s0, 64, 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_7, (1, ), (1, ))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(primals_8, (1, ), (1, ))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(getitem_1, (1, s0, 1), (s0, 1, 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(rsqrt, (1, s0, 1), (s0, 1, 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(view_3, (1, 1, 1, 4 + 64*s0), (4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(getitem_3, (1, 1, 1, 1, 1), (1, 1, 1, 1, 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(rsqrt_1, (1, 1, 1, 1, 1), (1, 1, 1, 1, 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     assert_size_stride(tangents_1, (1, 1, 4 + 64*s0), (4 + 64*s0, 4 + 64*s0, 1))
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf0 = empty_strided_cuda((1, 1, 1, 1, 4 + 64*s0), (4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 1), torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf1 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf3 = reinterpret_tensor(view_3, (1, 1, 1, 1, 4 + 64*s0), (4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 4 + 64*s0, 1), 0); del view_3  # reuse
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf7 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         # Topologically Sorted Source Nodes: [instance_norm], Original ATen: [aten._native_batch_norm_legit_functional, aten.native_batch_norm_backward]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_native_batch_norm_backward_0_r0_numel = 4 + 64*s0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_native_batch_norm_backward_0.run(buf3, getitem_3, rsqrt_1, primals_7, primals_8, tangents_1, buf0, buf1, buf7, s0, 1, triton_red_fused__native_batch_norm_legit_functional_native_batch_norm_backward_0_r0_numel, grid=grid(1), stream=stream0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del getitem_3
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del primals_8
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del tangents_1
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf4 = reinterpret_tensor(buf0, (1, 4 + 64*s0), (4 + 64*s0, 1), 0); del buf0  # reuse
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.clone, aten.zeros_like, aten.copy, aten.slice_backward, aten.add]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1_xnumel = 4 + 64*s0
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1.run(buf3, buf1, rsqrt_1, primals_7, buf4, s0, triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1_xnumel, grid=grid(triton_poi_fused_add_clone_copy_slice_backward_zeros_like_1_xnumel), stream=stream0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del buf3
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del primals_7
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del rsqrt_1
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf5 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         buf6 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.native_layer_norm, aten.native_layer_norm_backward]
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         triton_red_fused_native_layer_norm_native_layer_norm_backward_2.run(buf4, primals_4, getitem_1, rsqrt, buf5, buf6, s0, 64, s0, grid=grid(64), stream=stream0)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del buf4
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del getitem_1
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del primals_4
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]         del rsqrt
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     return (buf5, buf6, None, None, None, None, buf7, buf1, )
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_3 = 64
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     sym_size_int_1 = 4096
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     add_14 = 4100
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     sub_6 = 4098
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     sub_8 = 4096
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     sub_16 = 4096
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     sym_size_int_6 = 4100
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_4 = rand_strided((1, 64, 64), (4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_7 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     primals_8 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     getitem_1 = rand_strided((1, 64, 1), (64, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rsqrt = rand_strided((1, 64, 1), (64, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     view_3 = rand_strided((1, 1, 1, 4100), (4100, 4100, 4100, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     getitem_3 = rand_strided((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     rsqrt_1 = rand_strided((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     tangents_1 = rand_strided((1, 1, 4100), (4100, 4100, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     fn = lambda: call([primals_3, sym_size_int_1, add_14, sub_6, sub_8, sub_16, sym_size_int_6, primals_4, primals_7, primals_8, getitem_1, rsqrt, view_3, getitem_3, rsqrt_1, tangents_1])
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] if __name__ == "__main__":
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:31:15.438000 3201829 site-packages/torch/_inductor/graph.py:2014] [205/0] [__output_code] 
V0205 11:31:15.449000 3201829 site-packages/torch/_inductor/graph.py:2022] [205/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/np/cnpwjkadxrlg7khwmxuepv7rmafudmhjnu7k77rmxkpax3q4ycyc.py
I0205 11:31:15.681000 3201829 site-packages/torch/_inductor/graph.py:2056] [205/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/np/cnpwjkadxrlg7khwmxuepv7rmafudmhjnu7k77rmxkpax3q4ycyc.py

W0205 14:29:54.297000 1612526 site-packages/torch/_inductor/utils.py:1611] [143/0_1] DeviceCopy in input program
W0205 14:29:54.832000 1612526 site-packages/torch/utils/_sympy/interp.py:176] [143/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 14:29:55.025000 1612526 site-packages/torch/utils/_sympy/interp.py:176] [143/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] Output code: 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # AOT ID: ['34_forward']
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import torch
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import math
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import random
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import os
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import tempfile
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from math import inf, nan
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from cmath import nanj
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch import device, empty_strided
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     grid,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     split_scan_grid,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     grid_combo_kernels,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     start_graph,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     end_graph,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     cooperative_reduction_grid,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] aten = torch.ops.aten
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] async_compile = AsyncCompile()
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x5/cx5qvgvamrfsd234eadifxoo4dxsf5h2ch3fibtyic52uqfkwks6.py
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.copy]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   x_1 => copy
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Graph fragment:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_5, %slice_6), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_tensor_1, %copy, 1, 1, 2), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_tensor, %slice_scatter_default, 2, 1, %add_3), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %slice_scatter_default_2 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%empty, %slice_scatter_default_1, 3, 1, %add_5), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %slice_scatter_default_3 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_2, %slice_15, 3, 0, 1), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_poi_fused_copy_0 = async_compile.triton('triton_poi_fused_copy_0', '''
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     filename=__file__,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton.jit
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def triton_poi_fused_copy_0(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x1 = ((xindex // ks0) % ks2)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x2 = xindex // ks4
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x4 = xindex
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp0 = x0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp3 = ks1 + x0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp5 = tmp3 >= tmp4
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp6 = tl.broadcast_to(1 + ks1, [XBLOCK])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp7 = tmp3 < tmp6
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp8 = tmp5 & tmp7
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp9 = tmp8 & tmp2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp10 = x1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp12 = tmp10 >= tmp11
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp13 = tl.broadcast_to(1 + ks3, [XBLOCK])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp14 = tmp10 < tmp13
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp15 = tmp12 & tmp14
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp16 = tmp15 & tmp9
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp17 = x2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp18 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp19 = tmp17 >= tmp18
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp20 = tl.full([1], 2, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp21 = tmp17 < tmp20
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp22 = tmp19 & tmp21
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp23 = tmp22 & tmp16
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-1) + x0 + ks1*x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp25 = tl.load(in_ptr1 + (ks1 + x4), tmp16 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp26 = tl.where(tmp22, tmp24, tmp25)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp27 = tl.full(tmp26.shape, 0.0, tmp26.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp28 = tl.where(tmp16, tmp26, tmp27)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp29 = tl.load(in_ptr1 + (ks1 + x4), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp30 = tl.where(tmp15, tmp28, tmp29)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp31 = tl.full(tmp30.shape, 0.0, tmp30.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp32 = tl.where(tmp9, tmp30, tmp31)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp33 = float("nan")
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp34 = tl.where(tmp8, tmp32, tmp33)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp36 = tl.where(tmp2, tmp34, tmp35)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp37 = tmp0 >= tmp1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp38 = 1 + ks1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp39 = tmp0 < tmp38
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp40 = tmp37 & tmp39
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp41 = x1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp42 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp43 = tmp41 >= tmp42
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp44 = tl.broadcast_to(1 + ks3, [XBLOCK])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp45 = tmp41 < tmp44
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp46 = tmp43 & tmp45
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp47 = tmp46 & tmp40
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp48 = x2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp49 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp50 = tmp48 >= tmp49
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp51 = tl.full([1], 2, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp52 = tmp48 < tmp51
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp53 = tmp50 & tmp52
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp54 = tmp53 & tmp47
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp55 = tl.load(in_ptr0 + ((-1) + x0 + ((-1)*ks1) + ks1*x1), tmp54 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp56 = tl.load(in_ptr1 + (x4), tmp47 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp57 = tl.where(tmp53, tmp55, tmp56)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp58 = tl.full(tmp57.shape, 0.0, tmp57.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp59 = tl.where(tmp47, tmp57, tmp58)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp60 = tl.load(in_ptr1 + (x4), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp61 = tl.where(tmp46, tmp59, tmp60)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp62 = tl.full(tmp61.shape, 0.0, tmp61.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp63 = tl.where(tmp40, tmp61, tmp62)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp64 = float("nan")
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp65 = tl.where(tmp40, tmp63, tmp64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp66 = tl.where(tmp2, tmp36, tmp65)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp66, xmask)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] ''', device_str='cuda')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tl/ctlx2ginm3xztngcgzqs7rpml74o2wlccx5ku7vt7yxyycd72y7x.py
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Graph fragment:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %slice_scatter_default_4 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_3, %slice_20, 3, %add_5, %add_6), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %slice_scatter_default_5 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_4, %slice_25, 2, 0, 1), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %slice_scatter_default_6 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_5, %slice_30, 2, %add_3, %add_4), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     filename=__file__,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton.jit
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x4 = xindex // ks0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x3 = xindex
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp41 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp0 = x1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp1 = 1 + ks2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp3 = x1 + ((-1)*ks2)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp6 = tmp5 & tmp2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp7 = x0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp8 = tl.broadcast_to(1 + ks3, [XBLOCK])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp9 = tmp7 >= tmp8
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 2*x4 + ks3*x4), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + (x3), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp13 = tl.where(tmp9, tmp11, tmp12)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp15 = tl.where(tmp6, tmp13, tmp14)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp16 = x0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp17 = tl.broadcast_to(1 + ks3, [XBLOCK])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp18 = tmp16 >= tmp17
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp19 = tmp18 & tmp2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp20 = tl.load(in_ptr0 + (1 + ((-2)*ks2) + 2*x4 + ks3*x4 + ((-1)*ks2*ks3)), tmp19 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp21 = tl.load(in_ptr0 + (x3 + ((-2)*ks2) + ((-1)*ks2*ks3)), tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp22 = tl.where(tmp18, tmp20, tmp21)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp23 = tl.where(tmp5, tmp15, tmp22)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp24 = tl.full(tmp23.shape, 0.0, tmp23.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp25 = tl.where(tmp2, tmp23, tmp24)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp26 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp27 = tmp0 < tmp26
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp28 = x0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp29 = tl.broadcast_to(1 + ks3, [XBLOCK])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp30 = tmp28 >= tmp29
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp31 = tmp30 & tmp27
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp32 = tl.load(in_ptr0 + (1 + 2*ks2 + 2*x4 + ks2*ks3 + ks3*x4), tmp31 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp33 = tl.load(in_ptr0 + (x3 + 2*ks2 + ks2*ks3), tmp27 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp34 = tl.where(tmp30, tmp32, tmp33)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp36 = tl.where(tmp27, tmp34, tmp35)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp37 = x0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp38 = 1 + ks3
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp39 = tmp37 >= tmp38
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp40 = tl.load(in_ptr0 + (1 + 2*x4 + ks3*x4), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp42 = tl.where(tmp39, tmp40, tmp41)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp43 = tl.where(tmp27, tmp36, tmp42)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp44 = tl.where(tmp2, tmp25, tmp43)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp44, xmask)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] ''', device_str='cuda')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zq/czq2ptskwaihtdw7xqj4qlzlipalahfwu2kg2l2kwy3aeeljs3aj.py
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Topologically Sorted Source Nodes: [long], Original ATen: [aten._to_copy]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   long => convert_element_type
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Graph fragment:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_3, torch.int64), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_poi_fused__to_copy_2 = async_compile.triton('triton_poi_fused__to_copy_2', '''
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     size_hints={'x': 8192}, 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     filename=__file__,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton.jit
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def triton_poi_fused__to_copy_2(in_ptr0, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x0 = xindex
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (2*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + 4*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + ks1*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + 2*ks0*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + 2*ks1*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + ks0*ks1*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + ((1 + ks1) * ((1 + ks1) <= (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0))))) + (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) * ((((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) < (1 + ks1)))), xmask, eviction_policy='evict_last')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp0 = x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp1 = tl.full([1], 2, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp3 = (-1) + (x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1))
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp6 = tmp5 & tmp2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 2*ks0 + 2*ks1 + 2*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + ks0*ks1 + ks1*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + ((1 + ks1) * ((1 + ks1) <= (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0))))) + (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) * ((((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) < (1 + ks1)))), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp8 = tl.load(in_ptr0 + ((-4) + ((-2)*ks0) + ((-2)*ks1) + 2*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + 4*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + ks1*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + ((-1)*ks0*ks1) + 2*ks0*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + 2*ks1*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + ks0*ks1*(x0 // (36 + 6*ks0 + 6*ks1 + ks0*ks1)) + ((1 + ks1) * ((1 + ks1) <= (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0))))) + (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) * ((((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) < (1 + ks1)))), tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp9 = tl.where(tmp5, tmp7, tmp8)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp11 = tl.where(tmp2, tmp9, tmp10)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp12 = tl.full([1], 1, tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + (4 + 2*ks0 + 2*ks1 + 2*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + ks0*ks1 + ks1*((1 + ks0) * ((1 + ks0) <= (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0))))) + (((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) * ((((0) * ((0) >= ((-2) + (((x0 // (6 + ks1)) % (6 + ks0))))) + ((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) * (((-2) + (((x0 // (6 + ks1)) % (6 + ks0)))) > (0)))) < (1 + ks0))) + ((1 + ks1) * ((1 + ks1) <= (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0))))) + (((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) * ((((0) * ((0) >= ((-2) + ((x0 % (6 + ks1))))) + ((-2) + ((x0 % (6 + ks1)))) * (((-2) + ((x0 % (6 + ks1)))) > (0)))) < (1 + ks1)))), tmp13 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp16 = tl.where(tmp13, tmp14, tmp15)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp17 = tl.where(tmp2, tmp11, tmp16)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp18 = tmp17.to(tl.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp18, xmask)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] ''', device_str='cuda')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] cpp_fused_randint_3 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'const int64_t', 'const int64_t'], '''
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                        int64_t* out_ptr0,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                        const int64_t ks0,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                        const int64_t ks1)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] {
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     {
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         #pragma GCC ivdep
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(108L + 18L*ks0 + 18L*ks1 + 3L*ks0*ks1); x0+=static_cast<int64_t>(1L))
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         {
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]             {
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                 {
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                     auto tmp1 = x0;
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                     auto tmp3 = static_cast<int64_t>(0);
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                     auto tmp4 = static_cast<int64_t>(1000);
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp5;
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]                 }
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]             }
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         }
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     }
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] }
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] ''')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ke/ckesldipim3yvsp3lfb3ba5kj26mb2rqju7rg42advhya7cjkxp6.py
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.embedding]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   x_5 => embedding
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Graph fragment:
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %embedding : [num_users=1] = call_function[target=torch.ops.aten.embedding.default](args = (%primals_4, %convert_element_type), kwargs = {})
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_poi_fused_embedding_4 = async_compile.triton('triton_poi_fused_embedding_4', '''
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     size_hints={'x': 1048576}, 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     filename=__file__,
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton.jit
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def triton_poi_fused_embedding_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x1 = xindex // 128
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x0 = (xindex % 128)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x2 = xindex
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 1000, tl.int32)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp3 = tmp0 < 0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 1000)) | ~(xmask), "index out of bounds: 0 <= tmp4 < 1000")
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 128*tmp4), xmask)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] ''', device_str='cuda')
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] async_compile.wait(globals())
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] del async_compile
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def call(args):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     args.clear()
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     s0 = primals_1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     s1 = primals_2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     assert_size_stride(primals_3, (1, s0, s1), (s0*s1, s1, 1))
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     assert_size_stride(primals_4, (1000, 128), (128, 1))
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     buf5 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf5)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 2 + s0, 2 + s1), (12 + 6*s0 + 6*s1 + 3*s0*s1, 4 + 2*s0 + 2*s1 + s0*s1, 2 + s1, 1), torch.float32)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         ps0 = 2 + s1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         ps1 = 2 + s0
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         ps2 = 4 + 2*s0 + 2*s1 + s0*s1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 3, 2 + s0, 2 + s1), (12 + 6*s0 + 6*s1 + 3*s0*s1, 4 + 2*s0 + 2*s1 + s0*s1, 2 + s1, 1), torch.float32)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.copy]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_copy_0_xnumel = 12 + 6*s0 + 6*s1 + 3*s0*s1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_copy_0.run(primals_3, buf0, buf1, ps0, s1, ps1, s0, ps2, triton_poi_fused_copy_0_xnumel, grid=grid(triton_poi_fused_copy_0_xnumel), stream=stream0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         del primals_3
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf2 = buf0; del buf0  # reuse
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_1_xnumel = 12 + 6*s0 + 6*s1 + 3*s0*s1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_1.run(buf1, buf2, ps0, ps1, s0, s1, triton_poi_fused_1_xnumel, grid=grid(triton_poi_fused_1_xnumel), stream=stream0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         del buf1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf3 = empty_strided_cuda((108 + 18*s0 + 18*s1 + 3*s0*s1, ), (1, ), torch.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         # Topologically Sorted Source Nodes: [long], Original ATen: [aten._to_copy]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused__to_copy_2_xnumel = 108 + 18*s0 + 18*s1 + 3*s0*s1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused__to_copy_2.run(buf2, buf3, s0, s1, triton_poi_fused__to_copy_2_xnumel, grid=grid(triton_poi_fused__to_copy_2_xnumel), stream=stream0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         del buf2
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     buf6 = empty_strided_cpu((108 + 18*s0 + 18*s1 + 3*s0*s1, ), (1, ), torch.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     cpp_fused_randint_3(buf5, buf6, s0, s1)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     del buf5
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf7 = empty_strided_cuda((108 + 18*s0 + 18*s1 + 3*s0*s1, ), (1, ), torch.int64)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf7.copy_(buf6, False)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         del buf6
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf4 = empty_strided_cuda((108 + 18*s0 + 18*s1 + 3*s0*s1, 128), (128, 1), torch.float32)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.embedding]
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_embedding_4_xnumel = 13824 + 2304*s0 + 2304*s1 + 384*s0*s1
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_embedding_4.run(buf3, primals_4, buf4, triton_poi_fused_embedding_4_xnumel, grid=grid(triton_poi_fused_embedding_4_xnumel), stream=stream0)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         del primals_4
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     return (buf4, buf7, buf3, s0, s1, )
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_1 = 32
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_2 = 32
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_3 = rand_strided((1, 32, 32), (1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_4 = rand_strided((1000, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] if __name__ == "__main__":
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:29:55.504000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:55.513000 1612526 site-packages/torch/_inductor/graph.py:2022] [143/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xa/cxaodkakzddp6dvroe3a446z4t5gmpswrshdy7zgplbdq67exbpk.py
I0205 14:29:56.485000 1612526 site-packages/torch/_inductor/graph.py:2056] [143/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xa/cxaodkakzddp6dvroe3a446z4t5gmpswrshdy7zgplbdq67exbpk.py
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] Output code: 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # AOT ID: ['34_backward']
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import torch
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import math
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import random
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import os
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import tempfile
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from math import inf, nan
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from cmath import nanj
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch import device, empty_strided
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     grid,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     split_scan_grid,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     grid_combo_kernels,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     start_graph,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     end_graph,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     cooperative_reduction_grid,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] aten = torch.ops.aten
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] async_compile = AsyncCompile()
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fg/cfgafk3fokwz5smaxlwxlx3ixm7km4mmbico44tgmp7a4kpv4otc.py
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Graph fragment:
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1000, 128], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_poi_fused_embedding_dense_backward_0 = async_compile.triton('triton_poi_fused_embedding_dense_backward_0', '''
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     size_hints={'x': 131072}, 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     filename=__file__,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_dense_backward_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton.jit
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def triton_poi_fused_embedding_dense_backward_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xnumel = 128000
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x0 = xindex
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp0 = 0.0
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] ''', device_str='cuda')
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rm/crmwtqarzglz2meg4czdaxyods5pczxpapjm4ig4crno3kwowdj5.py
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] # Graph fragment:
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%unsqueeze, %full_default, %tangents_1), kwargs = {})
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1000, 128], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%full_default_1, [%convert_element_type], %where, True), kwargs = {})
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_poi_fused_embedding_dense_backward_1 = async_compile.triton('triton_poi_fused_embedding_dense_backward_1', '''
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] import triton.language as tl
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     size_hints={'x': 1048576}, 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     filename=__file__,
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_dense_backward_1', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] )
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] @triton.jit
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def triton_poi_fused_embedding_dense_backward_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x1 = xindex // 128
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x2 = xindex
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     x0 = (xindex % 128)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp8 = tl.load(in_ptr1 + (x2), xmask)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 1000, tl.int32)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp3 = tmp0 < 0
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 1000)) | ~(xmask), "index out of bounds: 0 <= tmp4 < 1000")
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp6 = tl.full([1], -1, tl.int64)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp7 = tmp0 == tmp6
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp9 = 0.0
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tmp10 = tl.where(tmp7, tmp9, tmp8)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tl.atomic_add(out_ptr0 + (x0 + 128*tmp4), tmp10, xmask, sem='relaxed')
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] ''', device_str='cuda')
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] async_compile.wait(globals())
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] del async_compile
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def call(args):
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_1, primals_2, convert_element_type, tangents_1 = args
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     args.clear()
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     s0 = primals_1
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     s1 = primals_2
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     assert_size_stride(convert_element_type, (108 + 18*s0 + 18*s1 + 3*s0*s1, ), (1, ))
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     assert_size_stride(tangents_1, (108 + 18*s0 + 18*s1 + 3*s0*s1, 128), (128, 1))
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         buf0 = empty_strided_cuda((1000, 128), (128, 1), torch.float32)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_embedding_dense_backward_0.run(buf0, 128000, grid=grid(128000), stream=stream0)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_embedding_dense_backward_1_xnumel = 13824 + 2304*s0 + 2304*s1 + 384*s0*s1
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         triton_poi_fused_embedding_dense_backward_1.run(convert_element_type, tangents_1, buf0, triton_poi_fused_embedding_dense_backward_1_xnumel, grid=grid(triton_poi_fused_embedding_dense_backward_1_xnumel), stream=stream0)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         del convert_element_type
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]         del tangents_1
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     return (None, None, None, buf0, )
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_1 = 32
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     primals_2 = 32
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     convert_element_type = rand_strided((4332, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     tangents_1 = rand_strided((4332, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, convert_element_type, tangents_1])
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] if __name__ == "__main__":
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:29:56.539000 1612526 site-packages/torch/_inductor/graph.py:2014] [143/0_1] [__output_code] 
V0205 14:29:56.542000 1612526 site-packages/torch/_inductor/graph.py:2022] [143/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/si/csiruhx7ytvyvopcf7m2oya55yz45hwkvbjbnlmniaektqu7mo4n.py
I0205 14:29:56.677000 1612526 site-packages/torch/_inductor/graph.py:2056] [143/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/si/csiruhx7ytvyvopcf7m2oya55yz45hwkvbjbnlmniaektqu7mo4n.py
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0] failed while attempting to run meta for aten.amax.default
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0] Traceback (most recent call last):
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_subclasses/fake_tensor.py", line 2376, in _dispatch_impl
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     r = func(*args, **kwargs)
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_ops.py", line 749, in __call__
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     return self._op(*args, **kwargs)
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]            ~~~~~~~~^^^^^^^^^^^^^^^^^
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_refs/__init__.py", line 2418, in amax
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     return _reduction(
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]         a,
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     ...<6 lines>...
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]         output_dtype_kind=REDUCTION_OUTPUT_TYPE_KIND.SAME,
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     )
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_refs/__init__.py", line 2207, in _reduction
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     dims = utils.reduction_dims(a.shape, dims)
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_prims_common/__init__.py", line 1761, in reduction_dims
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     dims = tuple(canonicalize_dim(len(shape), idx) for idx in dims)
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_prims_common/__init__.py", line 1761, in <genexpr>
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     dims = tuple(canonicalize_dim(len(shape), idx) for idx in dims)
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]                  ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_prims_common/__init__.py", line 701, in canonicalize_dim
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0]     raise IndexError(msg)
E0205 14:29:56.866000 1612526 site-packages/torch/_subclasses/fake_tensor.py:2380] [144/0] IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1)

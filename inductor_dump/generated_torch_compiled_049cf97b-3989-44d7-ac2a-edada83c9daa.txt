V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] Output code: 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # AOT ID: ['14_forward']
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import torch
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import math
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import random
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import os
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import tempfile
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from math import inf, nan
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from cmath import nanj
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch import device, empty_strided
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     grid,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     split_scan_grid,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     grid_combo_kernels,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     start_graph,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     end_graph,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     cooperative_reduction_grid,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] aten = torch.ops.aten
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] _quantized = torch.ops._quantized
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] async_compile = AsyncCompile()
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ij/cijfobhteprcibciy6hq3jafptrbpna2o4m5wqb7akzcm5ir2jig.py
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   x => var_mean
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_4, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_0', '''
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.reduction(
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xnumel = 16
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rnumel = r0_numel
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rbase = r0_base
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x0 = (xindex % 2)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x1 = xindex // 2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp13_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp13_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp13_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x3 = xindex
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         roffset = r0_offset
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         rindex = r0_index
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_2 = r0_index
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp0 = r0_2 + x0*((1 + ks0*ks1*ks2) // 2)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp1 = ks0*ks1*ks2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (ks0*ks1*ks2*x1 + (((r0_2 + x0*((1 + ks0*ks1*ks2) // 2)) % (ks0*ks1*ks2)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp4 = 0.0
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp5 = tl.full(tmp4.shape, 0, tmp4.dtype)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp6 = tl.where(tmp2, tmp4, tmp5)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp7 = 1.0
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp8 = tl.full(tmp7.shape, 0, tmp7.dtype)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp9 = tl.where(tmp2, tmp7, tmp8)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp10 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp11 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp13_mean_next, tmp13_m2_next, tmp13_weight_next = triton_helpers.welford_combine(
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]             tmp13_mean, tmp13_m2, tmp13_weight,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]             tmp10, tmp11, tmp12
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         )
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp13_mean = tl.where(r0_mask & xmask, tmp13_mean_next, tmp13_mean)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp13_m2 = tl.where(r0_mask & xmask, tmp13_m2_next, tmp13_m2)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp13_weight = tl.where(r0_mask & xmask, tmp13_weight_next, tmp13_weight)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp16, tmp17, tmp18 = triton_helpers.welford(tmp13_mean, tmp13_m2, tmp13_weight, 1)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp13 = tmp16[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp14 = tmp17[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp15 = tmp18[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp14, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr2 + (x3), tmp15, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gb/cgb76qppwyc3wft4kb6ojy2gi7fncicxqyvt2fk5n6rrbdelty3w.py
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   x => add_1, add_2, add_3, mul_10, mul_11, mul_12, mul_13, mul_14, rsqrt, var_mean
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_4, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %mul_11), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_12, 0.1), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, 0.9), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_13, %mul_14), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_2), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_3), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_per_fused__native_batch_norm_legit_functional_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_functional_1', '''
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 8, 'r0_': 2},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_functional_1', 'mutated_arg_names': ['in_ptr3', 'in_ptr4', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_per_fused__native_batch_norm_legit_functional_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, out_ptr2, out_ptr4, out_ptr6, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xnumel = 8
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_numel = 2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rnumel = r0_numel
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_offset = 0
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     roffset = r0_offset
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rindex = r0_index
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_1 = r0_index
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x0 = xindex
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 2*x0), xmask, other=0.0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 2*x0), xmask, other=0.0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 2*x0), xmask, other=0.0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp27 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp32 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp13 = tmp10[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp14 = tmp11[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp15 = tmp12[:, None]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp16 = ks0*ks1*ks2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp18 = tmp14 / tmp17
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp19 = 1e-05
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp20 = tmp18 + tmp19
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp22 = (((8*ks0*ks1*ks2) / 8) / ((tl.full([], -1.00000000000000, tl.float64)) + ((8*ks0*ks1*ks2) / 8)))
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp24 = tmp18 * tmp23
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp25 = 0.1
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp26 = tmp24 * tmp25
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp28 = 0.9
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp29 = tmp27 * tmp28
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp30 = tmp26 + tmp29
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp31 = tmp13 * tmp25
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp33 = tmp32 * tmp28
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp34 = tmp31 + tmp33
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp21, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp30, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp34, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ry/cryhg2plg4cv3dt4lxhwcfim5wv4ewjy4wo4jgcjb2w3kjgjxtmb.py
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.clone]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   x_2 => clone
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_poi_fused_clone_2 = async_compile.triton('triton_poi_fused_clone_2', '''
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 131072}, 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_poi_fused_clone_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x0 = (xindex % ks0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x1 = ((xindex // ks0) % 8)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x2 = xindex // ks1
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x3 = xindex
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + ks3*ks4*x2 + ks2*ks3*ks4*x1), xmask, eviction_policy='evict_last')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp11 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp13 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp4 = ks2*ks3*ks4
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp6 = tmp3 / tmp5
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp7 = 1e-05
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp9 = libdevice.rsqrt(tmp8)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp10 = tmp2 * tmp9
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp12 = tmp10 * tmp11
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp14, xmask)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/36/c36fsokdqemetuxowygjraqhmkvfqomdt7tvtednpyk77ioklyqe.py
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   add_ => add
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_5, 1), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add), kwargs = {})
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_poi_fused_add_3 = async_compile.triton('triton_poi_fused_add_3', '''
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 1}, 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_3', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_poi_fused_add_3(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xnumel = 1
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] async_compile.wait(globals())
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] del async_compile
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def call(args):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     args.clear()
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     s1 = primals_1
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     s2 = primals_2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     s3 = primals_3
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(primals_4, (1, 8, s1, s2, s3), (8*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(primals_5, (), ())
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(primals_6, (8, ), (1, ))
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(primals_7, (8, ), (1, ))
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(primals_8, (8, ), (1, ))
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(primals_9, (8, ), (1, ))
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         torch.cuda.set_device(0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 8, 1, 1, 1, 2), (16, 2, 16, 16, 16, 1), torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 8, 1, 1, 1, 2), (16, 2, 16, 16, 16, 1), torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 8, 1, 1, 1, 2), (16, 2, 16, 16, 16, 1), torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_0_r0_numel = (1 + s1*s2*s3) // 2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_0.run(primals_4, buf0, buf1, buf2, s1, s2, s3, 16, triton_red_fused__native_batch_norm_legit_functional_0_r0_numel, grid=grid(16), stream=stream0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 8, 1, 1, 1), (8, 1, 8, 8, 8), torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 8, 1, 1, 1), (8, 1, 8, 8, 8), torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 8, 1, 1, 1), (8, 1, 8, 8, 8), torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_per_fused__native_batch_norm_legit_functional_1.run(buf0, buf1, buf2, primals_7, primals_6, buf3, buf4, buf6, primals_7, primals_6, s1, s2, s3, 8, 2, grid=grid(8), stream=stream0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del buf0
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del buf1
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del buf2
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del primals_6
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del primals_7
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         ps0 = s2*s3
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         ps1 = 8*s2*s3
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf7 = empty_strided_cuda((1, s1, 8, s2, s3), (8*s1*s2*s3, 8*s2*s3, s2*s3, s3, 1), torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.clone]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_poi_fused_clone_2_xnumel = 8*s1*s2*s3
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_poi_fused_clone_2.run(primals_4, buf3, buf4, primals_8, primals_9, buf7, ps0, ps1, s1, s2, s3, triton_poi_fused_clone_2_xnumel, grid=grid(triton_poi_fused_clone_2_xnumel), stream=stream0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del buf4
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del primals_8
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del primals_9
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_poi_fused_add_3.run(primals_5, primals_5, 1, grid=grid(1), stream=stream0)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del primals_5
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     return (reinterpret_tensor(buf7, (1, s1, 8*s2*s3), (8*s1*s2*s3, 8*s2*s3, 1), 0), s1, s2, s3, primals_4, reinterpret_tensor(buf6, (8, ), (1, ), 0), reinterpret_tensor(buf3, (1, 8, 1, 1, 1), (8, 1, 1, 1, 1), 0), s1, s2, s3, )
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_1 = 16
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_2 = 32
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_3 = 32
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_4 = rand_strided((1, 8, 16, 32, 32), (131072, 16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_5 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_6 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_7 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_8 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_9 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] if __name__ == "__main__":
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:38:13.830000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:13.835000 1685906 site-packages/torch/_inductor/graph.py:2022] [61/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wz/cwzifv3qeytmjdmo55korojou42s6txfgvj2vug4ojmfjqclunjs.py
I0124 17:38:14.335000 1685906 site-packages/torch/_inductor/graph.py:2056] [61/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wz/cwzifv3qeytmjdmo55korojou42s6txfgvj2vug4ojmfjqclunjs.py
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] Output code: 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # AOT ID: ['14_backward']
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import torch
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import math
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import random
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import os
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import tempfile
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from math import inf, nan
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from cmath import nanj
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch import device, empty_strided
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     grid,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     split_scan_grid,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     grid_combo_kernels,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     start_graph,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     end_graph,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     cooperative_reduction_grid,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] aten = torch.ops.aten
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] _quantized = torch.ops._quantized
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] async_compile = AsyncCompile()
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cs/ccszsrsqdmfth55336zwljcaex66za6g5uimeaqn5hgp7qkqdpet.py
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%permute_1, [0, 2, 3, 4]), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_red_fused_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused_native_batch_norm_backward_0', '''
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.reduction(
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_batch_norm_backward_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_red_fused_native_batch_norm_backward_0(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xnumel = 16
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rnumel = r0_numel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rbase = r0_base
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x1 = xindex // 8
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x0 = (xindex % 8)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     _tmp5 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x3 = xindex
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         roffset = r0_offset
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         rindex = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_2 = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp0 = r0_2 + x1*((1 + ks0*ks1*ks2) // 2)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp1 = ks0*ks1*ks2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (ks1*ks2*x0 + 8*ks1*ks2*((((r0_2 + x1*((1 + ks0*ks1*ks2) // 2)) // (ks1*ks2)) % ks0)) + (((r0_2 + x1*((1 + ks0*ks1*ks2) // 2)) % (ks1*ks2)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp6 = _tmp5 + tmp4
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         _tmp5 = tl.where(r0_mask & xmask, tmp6, _tmp5)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp5, xmask)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/52/c52j5ga4wfsqlypwy6yo3bt5i3uyk5mg2ipiudntu57f6pxwrar5.py
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%permute_1, [0, 2, 3, 4]), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_per_fused_native_batch_norm_backward_1 = async_compile.triton('triton_per_fused_native_batch_norm_backward_1', '''
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 8, 'r0_': 2},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_batch_norm_backward_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_per_fused_native_batch_norm_backward_1(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xnumel = 8
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_numel = 2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rnumel = r0_numel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_offset = 0
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     roffset = r0_offset
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rindex = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_1 = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x0 = xindex
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 8*r0_1), xmask, other=0.0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5r/c5rek34ql7bane3gkrqcyxnkpxecazie55u2ebluh6qeq75gqs4o.py
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_4, %unsqueeze_9), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_53 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_1, %sub_13), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_53, [0, 2, 3, 4]), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_red_fused_native_batch_norm_backward_2 = async_compile.triton('triton_red_fused_native_batch_norm_backward_2', '''
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.reduction(
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_batch_norm_backward_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_red_fused_native_batch_norm_backward_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xnumel = 16
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rnumel = r0_numel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rbase = r0_base
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x0 = (xindex % 2)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x1 = xindex // 2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     _tmp11 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x3 = xindex
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         roffset = r0_offset
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         rindex = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         r0_2 = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp0 = r0_2 + x0*((1 + ks0*ks1*ks2) // 2)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp1 = ks0*ks1*ks2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (ks1*ks2*x1 + 8*ks1*ks2*((((r0_2 + x0*((1 + ks0*ks1*ks2) // 2)) // (ks1*ks2)) % ks0)) + (((r0_2 + x0*((1 + ks0*ks1*ks2) // 2)) % (ks1*ks2)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp4 = tl.load(in_ptr1 + (ks0*ks1*ks2*x1 + (((r0_2 + x0*((1 + ks0*ks1*ks2) // 2)) % (ks0*ks1*ks2)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp5 = tl.load(in_ptr2 + (tl.broadcast_to(x1, [XBLOCK, R0_BLOCK])), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp6 = tmp4 - tmp5
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp7 = tmp3 * tmp6
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp8 = tl.full(tmp7.shape, 0, tmp7.dtype)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp9 = tl.where(tmp2, tmp7, tmp8)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp10 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         tmp12 = _tmp11 + tmp10
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         _tmp11 = tl.where(r0_mask & xmask, tmp12, _tmp11)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp11 = tl.sum(_tmp11, 1)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp11, xmask)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3h/c3hk3gd2nmj7sgkzlw5xnddgu5l6roaujf7k4exhhewo33lbrbr2.py
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] # Graph fragment:
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_4, %unsqueeze_9), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_53 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_1, %sub_13), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_53, [0, 2, 3, 4]), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] #   %mul_64 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_per_fused_native_batch_norm_backward_3 = async_compile.triton('triton_per_fused_native_batch_norm_backward_3', '''
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] import triton.language as tl
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     size_hints={'x': 8, 'r0_': 2},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     filename=__file__,
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_batch_norm_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] )
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] @triton.jit
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def triton_per_fused_native_batch_norm_backward_3(in_out_ptr0, in_ptr0, in_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xnumel = 8
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_numel = 2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rnumel = r0_numel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_offset = 0
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     roffset = r0_offset
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     rindex = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     r0_1 = r0_index
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     x0 = xindex
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 2*x0), xmask, other=0.0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tmp6 = tmp4 * tmp5
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.debug_barrier()
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] ''', device_str='cuda')
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] async_compile.wait(globals())
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] del async_compile
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def call(args):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, squeeze_1, unsqueeze_9, tangents_1 = args
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     args.clear()
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     s1 = primals_1
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     s2 = primals_2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     s3 = primals_3
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(primals_4, (1, 8, s1, s2, s3), (8*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(squeeze_1, (8, ), (1, ))
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(unsqueeze_9, (1, 8, 1, 1, 1), (8, 1, 1, 1, 1))
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     assert_size_stride(tangents_1, (1, s1, 8*s2*s3), (8*s1*s2*s3, 8*s2*s3, 1))
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         torch.cuda.set_device(0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf0 = empty_strided_cuda((8, 2), (1, 8), torch.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0_r0_numel = (1 + s1*s2*s3) // 2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0.run(tangents_1, buf0, s1, s2, s3, 16, triton_red_fused_native_batch_norm_backward_0_r0_numel, grid=grid(16), stream=stream0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf1 = empty_strided_cuda((8, ), (1, ), torch.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_per_fused_native_batch_norm_backward_1.run(buf0, buf1, 8, 2, grid=grid(8), stream=stream0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf2 = reinterpret_tensor(buf0, (8, 2), (2, 1), 0); del buf0  # reuse
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_2_r0_numel = (1 + s1*s2*s3) // 2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_2.run(tangents_1, primals_4, unsqueeze_9, buf2, s1, s2, s3, 16, triton_red_fused_native_batch_norm_backward_2_r0_numel, grid=grid(16), stream=stream0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del primals_4
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del tangents_1
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del unsqueeze_9
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf3 = empty_strided_cuda((8, ), (1, ), torch.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         buf4 = buf3; del buf3  # reuse
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         triton_per_fused_native_batch_norm_backward_3.run(buf4, buf2, squeeze_1, 8, 2, grid=grid(8), stream=stream0)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del buf2
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]         del squeeze_1
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     return (None, None, None, None, None, None, None, buf4, buf1, )
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_1 = 16
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_2 = 32
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_3 = 32
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     primals_4 = rand_strided((1, 8, 16, 32, 32), (131072, 16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     squeeze_1 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     unsqueeze_9 = rand_strided((1, 8, 1, 1, 1), (8, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     tangents_1 = rand_strided((1, 16, 8192), (131072, 8192, 1), device='cuda:0', dtype=torch.float32)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, squeeze_1, unsqueeze_9, tangents_1])
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] if __name__ == "__main__":
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:38:14.646000 1685906 site-packages/torch/_inductor/graph.py:2014] [61/0_1] [__output_code] 
V0124 17:38:14.650000 1685906 site-packages/torch/_inductor/graph.py:2022] [61/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3c/c3cpcqur7q6ftuzda4bbjswow7n7utftr7bh4zyzrkxwyzxpiiou.py
I0124 17:38:14.787000 1685906 site-packages/torch/_inductor/graph.py:2056] [61/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3c/c3cpcqur7q6ftuzda4bbjswow7n7utftr7bh4zyzrkxwyzxpiiou.py

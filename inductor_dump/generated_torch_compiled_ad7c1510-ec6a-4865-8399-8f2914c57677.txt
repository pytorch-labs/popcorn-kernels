W0205 11:31:08.156000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [200/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] Output code: 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # AOT ID: ['58_inference']
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import torch
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import math
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import random
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import os
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import tempfile
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from math import inf, nan
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from cmath import nanj
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch import device, empty_strided
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import triton
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import triton.language as tl
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     grid,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     split_scan_grid,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     grid_combo_kernels,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     start_graph,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     end_graph,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] )
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] aten = torch.ops.aten
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u3/cu3aievr3wyhdqine2fx3kvdc4bp2vmyxi5si3o6ka2broovqkdw.py
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] #   x => constant_pad_nd
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # Graph fragment:
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg4_1, [1, 1, 1, 1, 1, 1], 0.0), kwargs = {})
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import triton
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import triton.language as tl
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     size_hints={'x': 8192}, 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     filename=__file__,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'ks7': 'i32', 'ks8': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] )
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] @triton.jit
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, ks7, ks8, xnumel, XBLOCK : tl.constexpr):
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x6 = ((xindex // ks0) % ks1)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x1 = ((xindex // ks3) % ks4)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x0 = (xindex % ks3)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x2 = ((xindex // ks7) % ks1)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x3 = xindex // ks8
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x10 = xindex
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp0 = (-1) + x6
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp3 = ks2
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp5 = (-1) + x1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp7 = ks5
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp9 = (-1) + x0
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp10 = tmp9 >= tmp1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp11 = ks6
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp12 = tmp9 < tmp11
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp13 = tmp2 & tmp4
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp14 = tmp13 & tmp6
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp15 = tmp14 & tmp8
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp16 = tmp15 & tmp10
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp17 = tmp16 & tmp12
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp18 = tl.load(in_ptr0 + ((-1) + x0 + ((-1)*ks6) + ks6*x1 + ((-1)*ks5*ks6) + ks5*ks6*x2 + ks2*ks5*ks6*x3), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tl.store(out_ptr0 + (x10), tmp18, xmask)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hx/chxk5h2bw2xtcolzvbgjxzt47cppw5rgckvltenvwglyzcochzpo.py
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.constant_pad_nd, aten.view]
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] #   x => constant_pad_nd
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] #   x_1 => view
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] # Graph fragment:
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg4_1, [1, 1, 1, 1, 1, 1], 0.0), kwargs = {})
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] #   %view : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%constant_pad_nd, [1, %arg0_1, -1]), kwargs = {})
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] triton_poi_fused_constant_pad_nd_view_1 = async_compile.triton('triton_poi_fused_constant_pad_nd_view_1', '''
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import triton
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] import triton.language as tl
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     size_hints={'x': 8192}, 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     filename=__file__,
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_view_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] )
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] @triton.jit
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_view_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, xnumel, XBLOCK : tl.constexpr):
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x1 = xindex // ks0
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     x2 = xindex
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*(((x0 // ks2) % ks3)) + 4*(x0 // ks1) + 8*x1 + ks6*(((x0 // ks2) % ks3)) + 2*ks5*(x0 // ks1) + 2*ks6*(x0 // ks1) + 4*ks4*x1 + 4*ks5*x1 + 4*ks6*x1 + ks5*ks6*(x0 // ks1) + 2*ks4*ks5*x1 + 2*ks4*ks6*x1 + 2*ks5*ks6*x1 + ks4*ks5*ks6*x1 + ((x0 % ks2))), xmask, eviction_policy='evict_last')
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] async_compile.wait(globals())
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] del async_compile
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] def call(args):
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     args.clear()
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     s0 = arg0_1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     s1 = arg1_1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     s2 = arg2_1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     s3 = arg3_1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     assert_size_stride(arg4_1, (1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         ps0 = 4 + 2*s2 + 2*s3 + s2*s3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         ps1 = 2 + s1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         ps2 = 2 + s3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         ps3 = 2 + s2
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         ps4 = 4 + 2*s2 + 2*s3 + s2*s3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         ps5 = 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 2 + s1, 2 + s2, 2 + s3), (8*s0 + 4*s0*s1 + 4*s0*s2 + 4*s0*s3 + 2*s0*s1*s2 + 2*s0*s1*s3 + 2*s0*s2*s3 + s0*s1*s2*s3, 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3, 4 + 2*s2 + 2*s3 + s2*s3, 2 + s3, 1), torch.float32)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 8*s0 + 4*s0*s1 + 4*s0*s2 + 4*s0*s3 + 2*s0*s1*s2 + 2*s0*s1*s3 + 2*s0*s2*s3 + s0*s1*s2*s3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(arg4_1, buf0, ps0, ps1, s1, ps2, ps3, s2, s3, ps4, ps5, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         del arg4_1
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         ps6 = 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         buf1 = empty_strided_cuda((1, s0, 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3), (8*s0 + 4*s0*s1 + 4*s0*s2 + 4*s0*s3 + 2*s0*s1*s2 + 2*s0*s1*s3 + 2*s0*s2*s3 + s0*s1*s2*s3, 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3, 1), torch.float32)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.constant_pad_nd, aten.view]
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_view_1_xnumel = 8*s0 + 4*s0*s1 + 4*s0*s2 + 4*s0*s3 + 2*s0*s1*s2 + 2*s0*s1*s3 + 2*s0*s2*s3 + s0*s1*s2*s3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_view_1.run(buf0, buf1, ps6, ps0, ps2, ps3, s1, s2, s3, triton_poi_fused_constant_pad_nd_view_1_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_view_1_xnumel), stream=stream0)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]         del buf0
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     return (buf1, )
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     arg0_1 = 3
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     arg1_1 = 10
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     arg2_1 = 10
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     arg3_1 = 10
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     arg4_1 = rand_strided((1, 3, 10, 10, 10), (3000, 1000, 100, 10, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] if __name__ == "__main__":
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:31:08.871000 3201829 site-packages/torch/_inductor/graph.py:2014] [200/0_1] [__output_code] 
V0205 11:31:08.875000 3201829 site-packages/torch/_inductor/graph.py:2022] [200/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mj/cmjx34f32bphk4n4ekzzqdpruttpq6zujr7ljlyup6zgow3uetf3.py
I0205 11:31:09.028000 3201829 site-packages/torch/_inductor/graph.py:2056] [200/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mj/cmjx34f32bphk4n4ekzzqdpruttpq6zujr7ljlyup6zgow3uetf3.py

V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] Output code: 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # AOT ID: ['89_inference']
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import torch
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import math
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import random
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import os
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import tempfile
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from math import inf, nan
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from cmath import nanj
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch import device, empty_strided
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton.language as tl
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     grid,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     split_scan_grid,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     grid_combo_kernels,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     start_graph,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     end_graph,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     cooperative_reduction_grid,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] aten = torch.ops.aten
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] async_compile = AsyncCompile()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rs/crstuuu6rmzvq3rq35enxgmujhsqxh7wjnffz7ecyu5qycqpo2yl.py
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.max_unpool2d]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   x => full
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Graph fragment:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([%arg0_1, 10, %sub_7, %sub_9], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_poi_fused_max_unpool2d_0 = async_compile.triton('triton_poi_fused_max_unpool2d_0', '''
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton.language as tl
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     size_hints={'x': 131072}, 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     filename=__file__,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     min_elem_per_thread=0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton.jit
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] def triton_poi_fused_max_unpool2d_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xmask = xindex < xnumel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x0 = xindex
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp0 = 0.0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] ''', device_str='cuda')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5y/c5yjmskdwul3perx5rm73gd5asoaj5hmegheaghit6cpl2a2fvgc.py
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Topologically Sorted Source Nodes: [max_pool2d, x], Original ATen: [aten.max_pool2d_with_indices, aten.max_unpool2d]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   max_pool2d => _low_memory_max_pool2d_offsets_to_indices, _low_memory_max_pool2d_with_offsets
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   x => add_13, index_put, mul_12
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Graph fragment:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%arg3_1, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %_low_memory_max_pool2d_offsets_to_indices : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_offsets_to_indices.default](args = (%getitem_1, 2, %arg2_1, [2, 2], [0, 0]), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %mul_11), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_low_memory_max_pool2d_offsets_to_indices, %mul_12), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%view_2, [%view_1], %view_3), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1', '''
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton.language as tl
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     size_hints={'x': 32768}, 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     filename=__file__,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1', 'mutated_arg_names': ['out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     min_elem_per_thread=0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton.jit
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1(in_ptr0, out_ptr1, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xmask = xindex < xnumel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x0 = (xindex % ks0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x2 = xindex // ks2
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x3 = xindex
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (1 + ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (2*((x3 % ks0)) + 2*ks4*(((x3 // ks0) % ks1)) + ks3*ks4*(x3 // ks2)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp36 = tl.load(in_ptr0 + (1 + 2*((x3 % ks0)) + 2*ks4*(((x3 // ks0) % ks1)) + ks3*ks4*(x3 // ks2)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp38 = tl.load(in_ptr0 + (ks4 + 2*((x3 % ks0)) + 2*ks4*(((x3 // ks0) % ks1)) + ks3*ks4*(x3 // ks2)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp40 = tl.load(in_ptr0 + (1 + ks4 + 2*((x3 % ks0)) + 2*ks4*(((x3 // ks0) % ks1)) + ks3*ks4*(x3 // ks2)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp2 = tmp1 > tmp0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int8)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp4 = tl.full([1], 0, tl.int8)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp1, tmp0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp8 = tmp7 > tmp6
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp9 = tl.full([1], 2, tl.int8)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp10 = tl.where(tmp8, tmp9, tmp5)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp7, tmp6)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp13 = tmp12 > tmp11
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp14 = tl.full([1], 3, tl.int8)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp15 = tl.where(tmp13, tmp14, tmp10)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp12, tmp11)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp17 = tl.full([1], 2, tl.int32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp18 = tl.where((tmp15 < 0) != (tmp17 < 0), tl.where(tmp15 % tmp17 != 0, tmp15 // tmp17 - 1, tmp15 // tmp17), tmp15 // tmp17)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp19 = tmp18 * tmp17
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp20 = tmp15 - tmp19
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp21 = 2*x1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp22 = tmp21 + tmp18
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp23 = 2*x0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp24 = tmp23 + tmp20
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp25 = ks4
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp26 = tmp22 * tmp25
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp27 = tmp26 + tmp24
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp28 = 4*ks0*ks1*x2
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp30 = 40*ks0*ks1*ks5
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp32 = tmp29 < 0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp33 = tl.where(tmp32, tmp31, tmp29)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.device_assert(((0 <= tmp33) & (tmp33 < 40*ks5*(ks3 // 2)*(ks4 // 2))) | ~(xmask), "index out of bounds: 0 <= tmp33 < 40*ks5*(ks3 // 2)*(ks4 // 2)")
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp37 = triton_helpers.maximum(tmp36, tmp35)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp38, tmp37)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp39)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to((tmp33 % (40*ks0*ks1*ks5)), [XBLOCK])), tmp41, xmask)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] ''', device_str='cuda')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yn/cyndgwilze4gb3ylo66ym6jhrs5pnvijk4jxbox23ynjnlcuc56l.py
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._native_batch_norm_legit]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   x_2 => var_mean
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Graph fragment:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_5, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_red_fused__native_batch_norm_legit_2 = async_compile.triton('triton_red_fused__native_batch_norm_legit_2', '''
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton.language as tl
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton_heuristics.reduction(
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     size_hints={'x': 128, 'r0_': 1024},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     filename=__file__,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton.jit
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] def triton_red_fused__native_batch_norm_legit_2(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, ks2, ks3, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     rnumel = r0_numel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xmask = xindex < xnumel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     rbase = r0_base
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x0 = xindex
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp10_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp10_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp10_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         roffset = r0_offset
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         rindex = r0_index
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_1 = (r0_index % ks0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_2 = r0_index // ks0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 2*ks1*((((r0_1 + 2*ks1*r0_2) // (2*ks1)) % (2*ks2))) + 4*ks1*ks2*((((r0_1 + 2*ks1*r0_2 + 4*ks1*ks2*((x0 % 10))) // (4*ks1*ks2)) % 10)) + 40*ks1*ks2*((((r0_1 + 2*ks1*r0_2 + 4*ks1*ks2*((x0 % 10)) + 40*ks1*ks2*(x0 // 10)) // (40*ks1*ks2)) % ks3))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + 2*ks1*((((r0_1 + 2*ks1*r0_2) // ks0) % (2*ks2))) + 4*ks1*ks2*((((r0_1 + 2*ks1*r0_2 + 4*ks1*ks2*((x0 % 10))) // (4*ks1*ks2)) % 10)) + 40*ks1*ks2*((((r0_1 + 2*ks1*r0_2 + 4*ks1*ks2*((x0 % 10)) + 40*ks1*ks2*(x0 // 10)) // (40*ks1*ks2)) % ks3))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp10_mean_next, tmp10_m2_next, tmp10_weight_next = triton_helpers.welford_reduce(
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]             tmp9, tmp10_mean, tmp10_m2, tmp10_weight, roffset == 0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp10_mean = tl.where(r0_mask & xmask, tmp10_mean_next, tmp10_mean)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp10_m2 = tl.where(r0_mask & xmask, tmp10_m2_next, tmp10_m2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp10_weight = tl.where(r0_mask & xmask, tmp10_weight_next, tmp10_weight)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp2 = tmp5[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp3 = tmp6[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp13, tmp14, tmp15 = triton_helpers.welford(tmp10_mean, tmp10_m2, tmp10_weight, 1)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp10 = tmp13[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp11 = tmp14[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp12 = tmp15[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp11, xmask)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] ''', device_str='cuda')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u7/cu7xnacbnet6tr2expr6zo6ujvk7i3ni2fqaaffne7jh5hhk3mu3.py
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Topologically Sorted Source Nodes: [dist_pos, dist_neg], Original ATen: [aten.sub, aten.add, aten.norm]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   dist_neg => add_88, pow_3, sub_48, sum_2
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   dist_pos => add_70, pow_1, sub_39, sum_1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Graph fragment:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %sub_39 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_1, %slice_2), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %add_70 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_39, 1e-06), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_70, 2.0), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [4]), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %sub_48 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_1, %slice_3), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %add_88 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_48, 1e-06), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_88, 2.0), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [4]), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_red_fused_add_norm_sub_3 = async_compile.triton('triton_red_fused_add_norm_sub_3', '''
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton.language as tl
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton_heuristics.reduction(
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     size_hints={'x': 2048, 'r0_': 32},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     filename=__file__,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_norm_sub_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton.jit
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] def triton_red_fused_add_norm_sub_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     rnumel = r0_numel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xmask = xindex < xnumel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     rbase = r0_base
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x0 = (xindex % ks0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x1 = ((xindex // ks0) % 10)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x2 = xindex // ks1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x4 = xindex // ks0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x4), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x4), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (x4 + 10*(ks5 // 3)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x4 + 10*(ks5 // 3)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     _tmp24 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     x5 = xindex
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp30 = tl.load(in_ptr1 + (x4 + 10*((2*ks5) // 3)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp32 = tl.load(in_ptr2 + (x4 + 10*((2*ks5) // 3)), xmask, eviction_policy='evict_last')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     _tmp41 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         roffset = r0_offset
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         rindex = r0_index
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_3 = r0_index
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_3 + 2*ks2*((((r0_3 + 2*ks2*x0) // ks4) % (2*ks3))) + 4*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1) // (4*ks2*ks3)) % 10)) + 40*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1 + 40*ks2*ks3*((x2 % ks5))) // (40*ks2*ks3)) % ks5))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp11 = tl.load(in_ptr0 + (r0_3 + 2*ks2*((((r0_3 + 2*ks2*x0) // ks4) % ks0)) + 4*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1) // (4*ks2*ks3)) % 10)) + 40*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1 + 40*ks2*ks3*(((x2 + (ks5 // 3)) % ks5))) // (40*ks2*ks3)) % ks5))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp26 = tl.load(in_ptr0 + (r0_3 + 2*ks2*((((r0_3 + 2*ks2*x0) // ks4) % ks0)) + 4*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1) // (4*ks2*ks3)) % 10)) + 40*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1 + 40*ks2*ks3*((x2 % ks5))) // (40*ks2*ks3)) % ks5))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp29 = tl.load(in_ptr0 + (r0_3 + 2*ks2*((((r0_3 + 2*ks2*x0) // ks4) % ks0)) + 4*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1) // (4*ks2*ks3)) % 10)) + 40*ks2*ks3*((((r0_3 + 2*ks2*x0 + 4*ks2*ks3*x1 + 40*ks2*ks3*(((x2 + ((2*ks5) // 3)) % ks5))) // (40*ks2*ks3)) % ks5))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp4 = 4*ks2*ks3
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp5 = tmp4.to(tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp6 = tmp3 / tmp5
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp7 = 1e-05
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp8 = tmp6 + tmp7
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp9 = libdevice.rsqrt(tmp8)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp10 = tmp2 * tmp9
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp13 = tmp11 - tmp12
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp15 = tmp14 / tmp5
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp16 = tmp15 + tmp7
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp18 = tmp13 * tmp17
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp19 = tmp10 - tmp18
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp20 = 1e-06
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp21 = tmp19 + tmp20
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp22 = tmp21 * tmp21
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp23 = tl.broadcast_to(tmp22, [XBLOCK, R0_BLOCK])
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp25 = _tmp24 + tmp23
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         _tmp24 = tl.where(r0_mask & xmask, tmp25, _tmp24)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp27 = tmp26 - tmp1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp28 = tmp27 * tmp9
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp31 = tmp29 - tmp30
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp33 = tmp32 / tmp5
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp34 = tmp33 + tmp7
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp35 = libdevice.rsqrt(tmp34)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp36 = tmp31 * tmp35
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp37 = tmp28 - tmp36
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp38 = tmp37 + tmp20
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp39 = tmp38 * tmp38
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp40 = tl.broadcast_to(tmp39, [XBLOCK, R0_BLOCK])
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp42 = _tmp41 + tmp40
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         _tmp41 = tl.where(r0_mask & xmask, tmp42, _tmp41)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp24 = tl.sum(_tmp24, 1)[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp41 = tl.sum(_tmp41, 1)[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp24, xmask)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.store(out_ptr1 + (x5), tmp41, xmask)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] ''', device_str='cuda')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2c/c2ca3gcbqbebfcyldizpwbrzniv7psrtq4pc2pcznhjw6fgrbsc3.py
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Topologically Sorted Source Nodes: [dist_pos, add, dist_neg, sub, loss, loss_1], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   add => add_100
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   dist_neg => pow_4
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   dist_pos => pow_2
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   loss => clamp_min
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   loss_1 => mean
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   sub => sub_59
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] # Graph fragment:
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %add_100 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, 1.0), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %sub_59 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_100, %pow_4), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_59, 0), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min,), kwargs = {})
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_red_fused_add_clamp_min_mean_norm_sub_4 = async_compile.triton('triton_red_fused_add_clamp_min_mean_norm_sub_4', '''
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] import triton.language as tl
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton_heuristics.reduction(
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     size_hints={'x': 1, 'r0_': 2048},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     filename=__file__,
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_clamp_min_mean_norm_sub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] @triton.jit
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] def triton_red_fused_add_clamp_min_mean_norm_sub_4(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xnumel = 1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     rnumel = r0_numel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     rbase = r0_base
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     _tmp10 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         roffset = r0_offset
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         rindex = r0_index
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         r0_0 = r0_index
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp1 = libdevice.sqrt(tmp0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp2 = 1.0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp3 = tmp1 + tmp2
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp5 = libdevice.sqrt(tmp4)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp6 = tmp3 - tmp5
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp7 = 0.0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         tmp11 = _tmp10 + tmp9
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         _tmp10 = tl.where(r0_mask, tmp11, _tmp10)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp10 = tl.sum(_tmp10, 1)[:, None]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp12 = 20*ks0*(ks1 // 3)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tmp14 = tmp10 / tmp13
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.debug_barrier()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp14, None)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] ''', device_str='cuda')
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] async_compile.wait(globals())
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] del async_compile
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] def call(args):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     args.clear()
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     s0 = arg0_1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     s2 = arg1_1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     s3 = arg2_1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     assert_size_stride(arg3_1, (s0, 10, s2, s3), (10*s2*s3, s2*s3, s3, 1))
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         buf1 = empty_strided_cuda((s0, 10, 2*(s2 // 2), 2*(s3 // 2)), (40*(s2 // 2)*(s3 // 2), 4*(s2 // 2)*(s3 // 2), 2*(s3 // 2), 1), torch.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.max_unpool2d]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_poi_fused_max_unpool2d_0_xnumel = 40*s0*(s2 // 2)*(s3 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_poi_fused_max_unpool2d_0.run(buf1, triton_poi_fused_max_unpool2d_0_xnumel, grid=grid(triton_poi_fused_max_unpool2d_0_xnumel), stream=stream0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         ps0 = s3 // 2
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         ps1 = s2 // 2
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         ps2 = (s2 // 2)*(s3 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         # Topologically Sorted Source Nodes: [max_pool2d, x], Original ATen: [aten.max_pool2d_with_indices, aten.max_unpool2d]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1_xnumel = 10*s0*(s2 // 2)*(s3 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1.run(arg3_1, buf1, ps0, ps1, ps2, s2, s3, s0, triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1_xnumel, grid=grid(triton_poi_fused_max_pool2d_with_indices_max_unpool2d_1_xnumel), stream=stream0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         del arg3_1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         ps3 = 2*(s3 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         buf3 = empty_strided_cuda((1, 10*s0, 1, 1, 1), (10*s0, 1, 10*s0, 10*s0, 10*s0), torch.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         buf4 = empty_strided_cuda((1, 10*s0, 1, 1, 1), (10*s0, 1, 10*s0, 10*s0, 10*s0), torch.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._native_batch_norm_legit]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused__native_batch_norm_legit_2_xnumel = 10*s0
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused__native_batch_norm_legit_2_r0_numel = 4*(s2 // 2)*(s3 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused__native_batch_norm_legit_2.run(buf1, buf3, buf4, ps3, ps0, ps1, s0, triton_red_fused__native_batch_norm_legit_2_xnumel, triton_red_fused__native_batch_norm_legit_2_r0_numel, grid=grid(triton_red_fused__native_batch_norm_legit_2_xnumel), stream=stream0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         ps4 = 2*(s2 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         ps5 = 20*(s2 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         buf6 = empty_strided_cuda((s0 // 3, 10, 1, 2*(s2 // 2)), (20*(s2 // 2), 2*(s2 // 2), 20*(s0 // 3)*(s2 // 2), 1), torch.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         buf7 = empty_strided_cuda((s0 // 3, 10, 1, 2*(s2 // 2)), (20*(s2 // 2), 2*(s2 // 2), 20*(s0 // 3)*(s2 // 2), 1), torch.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         # Topologically Sorted Source Nodes: [dist_pos, dist_neg], Original ATen: [aten.sub, aten.add, aten.norm]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused_add_norm_sub_3_xnumel = 20*(s0 // 3)*(s2 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused_add_norm_sub_3_r0_numel = 2*(s3 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused_add_norm_sub_3.run(buf1, buf3, buf4, buf6, buf7, ps4, ps5, ps0, ps1, ps3, s0, triton_red_fused_add_norm_sub_3_xnumel, triton_red_fused_add_norm_sub_3_r0_numel, grid=grid(triton_red_fused_add_norm_sub_3_xnumel), stream=stream0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         del buf1
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         del buf3
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         del buf4
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         # Topologically Sorted Source Nodes: [dist_pos, add, dist_neg, sub, loss, loss_1], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean]
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused_add_clamp_min_mean_norm_sub_4_r0_numel = 20*(s0 // 3)*(s2 // 2)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         triton_red_fused_add_clamp_min_mean_norm_sub_4.run(buf9, buf6, buf7, ps1, s0, 1, triton_red_fused_add_clamp_min_mean_norm_sub_4_r0_numel, grid=grid(1), stream=stream0)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         del buf6
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]         del buf7
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     return (buf9, )
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     arg0_1 = 12
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     arg1_1 = 32
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     arg2_1 = 32
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     arg3_1 = rand_strided((12, 10, 32, 32), (10240, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] if __name__ == "__main__":
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:44:51.645000 2062045 site-packages/torch/_inductor/graph.py:2014] [286/0] [__output_code] 
V0205 10:44:51.658000 2062045 site-packages/torch/_inductor/graph.py:2022] [286/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ox/coxnkx4djdrvev3j3kjyrj33ozupnqudzoixawvtn4b6ezzxs7h7.py
I0205 10:44:52.717000 2062045 site-packages/torch/_inductor/graph.py:2056] [286/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ox/coxnkx4djdrvev3j3kjyrj33ozupnqudzoixawvtn4b6ezzxs7h7.py

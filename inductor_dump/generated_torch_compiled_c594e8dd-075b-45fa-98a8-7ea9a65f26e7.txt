V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] Output code: 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # AOT ID: ['111_forward']
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import torch
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import math
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import random
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import os
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import tempfile
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from math import inf, nan
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from cmath import nanj
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch import device, empty_strided
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     grid,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     split_scan_grid,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     grid_combo_kernels,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     start_graph,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     end_graph,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] aten = torch.ops.aten
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/o6/co66mosum6sm5mhkvznukwec2pl5npypgw3pbj7x76a4stm5vg4n.py
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, x_2, x_3, x_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.bernoulli, aten._to_copy, aten.add, aten.mul, aten.tanh, aten.neg]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x => convolution
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_1 => add_4, add_5, add_6, add_7, mul_10, mul_11, mul_5, mul_6, mul_7, mul_8, mul_9, rsqrt, sub_1, var_mean
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_2 => add_20, add_33, add_52, convert_element_type, inductor_lookup_seed_default, inductor_random_default, lt_1, mul_31, mul_44, mul_48
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_3 => tanh
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_4 => neg
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %convolution : [num_users=5] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_4, %primals_1, %primals_2, [1], [0], [1], True, [0], 1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_4,), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %mul_7), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_8, 0.1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, 0.9), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %mul_10), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 10, %sym_size_int], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %lt_1 : [num_users=2] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt_1, torch.float32), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%convert_element_type, -1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%add_20, 1.558387861036063), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_33 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_31, 0.7791939305180315), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_44 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type, 0.8864048946659319), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_48 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, %mul_44), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_52 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_48, %add_33), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add_52,), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %neg : [num_users=2] = call_function[target=torch.ops.aten.neg.default](args = (%tanh,), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_5), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_6), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional__to_copy_add_bernoulli_convolution_mul_neg_tanh_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional__to_copy_add_bernoulli_convolution_mul_neg_tanh_0', '''
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 128},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'out_ptr8': '*i1', 'out_ptr9': '*fp32', 'ks0': 'i32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional__to_copy_add_bernoulli_convolution_mul_neg_tanh_0', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional__to_copy_add_bernoulli_convolution_mul_neg_tanh_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, out_ptr4, out_ptr6, out_ptr8, out_ptr9, ks0, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xnumel = 10
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rbase = r0_base
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     x0 = xindex
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         rindex = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_1 = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + ks0*x0), tmp2, r0_mask & xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp21 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp26 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp10 = 4 + ks0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp12 = tmp5 / tmp11
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp13 = 1e-05
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp15 = libdevice.rsqrt(tmp14)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp16 = (((40 + 10*ks0) / 10) / ((tl.full([], -1.00000000000000, tl.float64)) + ((40 + 10*ks0) / 10)))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp18 = tmp12 * tmp17
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp19 = 0.1
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp20 = tmp18 * tmp19
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp22 = 0.9
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp23 = tmp21 * tmp22
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp24 = tmp20 + tmp23
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp25 = tmp4 * tmp19
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp27 = tmp26 * tmp22
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp28 = tmp25 + tmp27
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp15, xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp24, xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp28, xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp37 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp39 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         rindex = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_1 = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp34 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp29 = tl.load(in_ptr3 + load_seed_offset)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp30 = r0_1 + 4*x0 + ks0*x0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp31 = tl.rand(tmp29, (tmp30).to(tl.uint32))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp32 = 0.5
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp33 = tmp31 < tmp32
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp35 = tmp34 - tmp4
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp36 = tmp35 * tmp15
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp38 = tmp36 * tmp37
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp40 = tmp38 + tmp39
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp41 = tmp33.to(tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp42 = 0.8864048946659319
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp43 = tmp41 * tmp42
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp44 = tmp40 * tmp43
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp45 = -1.0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp46 = tmp41 + tmp45
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp47 = 1.558387861036063
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp48 = tmp46 * tmp47
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp49 = 0.7791939305180315
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp50 = tmp48 + tmp49
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp51 = tmp44 + tmp50
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp52 = libdevice.tanh(tmp51)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp53 = -tmp52
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tl.store(out_ptr8 + (r0_1 + 4*x0 + ks0*x0), tmp33, r0_mask & xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tl.store(out_ptr9 + (r0_1 + 4*x0 + ks0*x0), tmp53, r0_mask & xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hm/chmjvswwd76ii4uj5c66zqamjfqkkvnsvqthb6tsx6ipjjcj3xhj.py
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._softmax]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_4 => amax, exp, sub_21, sum_1
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%neg, [1], True), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%neg, %amax), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_21,), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_per_fused__softmax_1 = async_compile.triton('triton_per_fused__softmax_1', '''
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 128, 'r0_': 16},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_per_fused__softmax_1(in_ptr0, out_ptr0, out_ptr1, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_numel = 10
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_offset = 0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_mask = r0_index < r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     roffset = r0_offset
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rindex = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_1 = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     x0 = xindex
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*r0_1 + ks0*r0_1), r0_mask & xmask, other=0.0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp3 = tl.where(r0_mask & xmask, tmp1, float("-inf"))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp5 = tmp0 - tmp4
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp9 = tl.where(r0_mask & xmask, tmp7, 0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, xmask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/it/citi6hin5ikymvp7qpyrnlcqgwgsc76xq2vgfr37brm6eziuqnbs.py
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_6], Original ATen: [aten._softmax, aten.linalg_vector_norm, aten.clamp_min, aten.div, aten.mul, aten.sum]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_4 => div, exp, sub_21
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_6 => clamp_min, div_1, mul_82, pow_1, pow_2, sum_2, sum_4
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%neg, %amax), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_21,), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%view, 2), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1], True), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%pow_2, 1e-08), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%view, %clamp_min), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_82 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_1, %div_1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_82, [1]), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_red_fused__softmax_clamp_min_div_linalg_vector_norm_mul_sum_2 = async_compile.triton('triton_red_fused__softmax_clamp_min_div_linalg_vector_norm_mul_sum_2', '''
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_clamp_min_div_linalg_vector_norm_mul_sum_2', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_red_fused__softmax_clamp_min_div_linalg_vector_norm_mul_sum_2(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, out_ptr0, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xnumel = 1
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rbase = r0_base
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     _tmp8 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         rindex = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_2 = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_0 = (r0_index % ks0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_2), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp1 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp2 = tmp0 - tmp1
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp3 = tl_math.exp(tmp2)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp5 = tmp3 / tmp4
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp6 = tmp5 * tmp5
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp9 = _tmp8 + tmp7
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         _tmp8 = tl.where(r0_mask, tmp9, _tmp8)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0_2, [XBLOCK, R0_BLOCK])), tmp5, r0_mask)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp8 = tl.sum(_tmp8, 1)[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp10 = libdevice.sqrt(tmp8)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.debug_barrier()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp10, None)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     _tmp17 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         rindex = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_2 = r0_index
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp11 = tl.load(in_out_ptr0 + (r0_2), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp12 = 1e-08
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp13 = triton_helpers.maximum(tmp10, tmp12)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp14 = tmp11 / tmp13
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp15 = tmp14 * tmp14
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp16 = tl.broadcast_to(tmp15, [XBLOCK, R0_BLOCK])
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp18 = _tmp17 + tmp16
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         _tmp17 = tl.where(r0_mask, tmp18, _tmp17)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp17 = tl.sum(_tmp17, 1)[:, None]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp17, None)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/36/c36fsokdqemetuxowygjraqhmkvfqomdt7tvtednpyk77ioklyqe.py
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   add_ => add_3
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_5, 1), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_3), kwargs = {})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_poi_fused_add_3 = async_compile.triton('triton_poi_fused_add_3', '''
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_3', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_poi_fused_add_3(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xnumel = 1
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eo/ceobiagrkdtkrs2e5kucjp7xfgwxdhg7ydcs35qhu2mdy5qr2mux.py
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [to], Original ATen: [aten._to_copy]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   to => full_default
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 0), kwargs = {dtype: torch.int64, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_poi_fused__to_copy_4 = async_compile.triton('triton_poi_fused__to_copy_4', '''
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_poi_fused__to_copy_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xnumel = 1
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] async_compile.wait(globals())
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] del async_compile
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def call(args):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     args.clear()
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     s0 = primals_3
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_1, (1, 10, 5), (50, 5, 1))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_2, (10, ), (1, ))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_5, (), ())
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_6, (10, ), (1, ))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_7, (10, ), (1, ))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_8, (10, ), (1, ))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_9, (10, ), (1, ))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_4, primals_1, stride=(1,), padding=(0,), dilation=(1,), transposed=True, output_padding=(0,), groups=1, bias=None)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, 4 + s0), (40 + 10*s0, 4 + s0, 1))
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf6 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf6)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, 1), (10, 1, 1), torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 10, 1), (10, 1, 1), torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 10, 4 + s0), (40 + 10*s0, 4 + s0, 1), torch.bool)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf9 = empty_strided_cuda((1, 10, 4 + s0), (40 + 10*s0, 4 + s0, 1), torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, x_2, x_3, x_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.bernoulli, aten._to_copy, aten.add, aten.mul, aten.tanh, aten.neg]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional__to_copy_add_bernoulli_convolution_mul_neg_tanh_0_r0_numel = 4 + s0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional__to_copy_add_bernoulli_convolution_mul_neg_tanh_0.run(buf1, primals_2, primals_7, primals_6, buf6, primals_8, primals_9, buf2, buf5, primals_7, primals_6, buf8, buf9, s0, 0, 10, triton_red_fused__native_batch_norm_legit_functional__to_copy_add_bernoulli_convolution_mul_neg_tanh_0_r0_numel, grid=grid(10), stream=stream0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_2
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_6
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_7
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf10 = empty_strided_cuda((1, 1, 4 + s0), (4 + s0, 4 + s0, 1), torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf11 = empty_strided_cuda((1, 1, 4 + s0), (4 + s0, 4 + s0, 1), torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._softmax]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_per_fused__softmax_1_xnumel = 4 + s0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_per_fused__softmax_1.run(buf9, buf10, buf11, s0, triton_per_fused__softmax_1_xnumel, 10, grid=grid(triton_per_fused__softmax_1_xnumel), stream=stream0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         ps0 = 4 + s0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf12 = buf9; del buf9  # reuse
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf13 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf14 = buf13; del buf13  # reuse
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf15 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_6], Original ATen: [aten._softmax, aten.linalg_vector_norm, aten.clamp_min, aten.div, aten.mul, aten.sum]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused__softmax_clamp_min_div_linalg_vector_norm_mul_sum_2_r0_numel = 40 + 10*s0
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused__softmax_clamp_min_div_linalg_vector_norm_mul_sum_2.run(buf12, buf14, buf10, buf11, buf15, ps0, 1, triton_red_fused__softmax_clamp_min_div_linalg_vector_norm_mul_sum_2_r0_numel, grid=grid(1), stream=stream0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del buf10
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del buf11
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_poi_fused_add_3.run(primals_5, primals_5, 1, grid=grid(1), stream=stream0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_5
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf24 = buf6; del buf6  # reuse
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [to], Original ATen: [aten._to_copy]
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_poi_fused__to_copy_4.run(buf24, 1, grid=grid(1), stream=stream0)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     return (reinterpret_tensor(buf15, (1, 1), (1, 1), 0), buf24, primals_1, primals_4, primals_8, primals_9, buf1, buf2, buf5, buf8, buf12, buf14, s0, 4 + s0, )
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_1 = rand_strided((1, 10, 5), (50, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_2 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_3 = 64
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 64), (64, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_5 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_6 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_7 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_8 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_9 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] if __name__ == "__main__":
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:34:59.011000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.023000 3201829 site-packages/torch/_inductor/graph.py:2022] [403/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/n5/cn5jbdhsbmtntxtotzkq6gp4a2w4ldjxm57x2buxss2ml74fbakw.py
I0205 11:34:59.358000 3201829 site-packages/torch/_inductor/graph.py:2056] [403/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/n5/cn5jbdhsbmtntxtotzkq6gp4a2w4ldjxm57x2buxss2ml74fbakw.py
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] Output code: 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # AOT ID: ['111_backward']
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import torch
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import math
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import random
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import os
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import tempfile
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from math import inf, nan
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from cmath import nanj
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch import device, empty_strided
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     grid,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     split_scan_grid,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     grid_combo_kernels,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     start_graph,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     end_graph,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] aten = torch.ops.aten
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hy/chyyr4gh7iqmgd6fqfrscq55dfppv4c7zykhbhzmmlbdgkxt7lo6.py
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.clamp_min, aten.div, aten.mul, aten.neg, aten.sum]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_6 => clamp_min, div_1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%pow_2, 1e-08), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%view, %clamp_min), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_85 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%expand, %div_1), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %div_4 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%div_1, %clamp_min), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_85,), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_87 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg_1, %div_4), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_87, [1], True), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_red_fused_clamp_min_div_mul_neg_sum_0 = async_compile.triton('triton_red_fused_clamp_min_div_mul_neg_sum_0', '''
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_clamp_min_div_mul_neg_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_red_fused_clamp_min_div_mul_neg_sum_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xnumel = 1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rbase = r0_base
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     _tmp13 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         rindex = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_0 = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp2 = tl.load(in_ptr1 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp5 = 1e-08
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp7 = tmp2 / tmp6
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp8 = tmp1 * tmp7
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp9 = -tmp8
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp10 = tmp7 / tmp6
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp11 = tmp9 * tmp10
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp14 = _tmp13 + tmp12
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         _tmp13 = tl.where(r0_mask, tmp14, _tmp13)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp13, None)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2e/c2eh7kh6dcmluwgpwopicmetz3dsqopo4g4p7rtzfm2s2iwhhrns.py
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten._softmax_backward_data]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_91 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %div), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_91, [1], True), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_per_fused__softmax_backward_data_1 = async_compile.triton('triton_per_fused__softmax_backward_data_1', '''
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 128, 'r0_': 16},
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_backward_data_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_per_fused__softmax_backward_data_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_numel = 10
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_offset = 0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_mask = r0_index < r0_numel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     roffset = r0_offset
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rindex = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_1 = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     x0 = xindex
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0 + 4*r0_1 + ks0*r0_1), r0_mask & xmask, other=0.0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp11 = tl.load(in_ptr3 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp5 = 1e-08
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp7 = tmp2 / tmp6
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp8 = tmp1 * tmp7
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp9 = tmp8 / tmp6
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp10 = tmp9 + tmp9
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp13 = 0.0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp14 = tmp4 == tmp13
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp15 = tmp2 / tmp4
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp16 = tl.where(tmp14, tmp13, tmp15)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp17 = tmp12 * tmp16
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp18 = tmp10 + tmp17
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp19 = tmp18 + tmp17
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp20 = tmp19 * tmp2
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp23 = tl.where(r0_mask & xmask, tmp21, 0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp24 = tl.sum(tmp23, 1)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp24, xmask)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2p/c2p6rynj37oe6bpluf4vtg2rygmaboswdbxv5qvk7q5mrgvppbey.py
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2, x_3], Original ATen: [aten._softmax_backward_data, aten.neg, aten._native_batch_norm_legit_functional, aten._to_copy, aten.add, aten.mul, aten.tanh, aten.tanh_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_1 => add_7, mul_11, mul_5, sub_1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_2 => add_20, add_33, add_52, convert_element_type, mul_31, mul_44, mul_48
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   x_3 => tanh
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] # Graph fragment:
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_91 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_3, %div), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %neg_3 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%div,), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %fma : [num_users=1] = call_function[target=torch.ops.prims.fma.default](args = (%neg_3, %sum_7, %mul_91), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %neg_4 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%fma,), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_1), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt_1, torch.float32), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%convert_element_type, -1), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%add_20, 1.558387861036063), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_33 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_31, 0.7791939305180315), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_44 : [num_users=2] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type, 0.8864048946659319), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_48 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, %mul_44), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %add_52 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_48, %add_33), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add_52,), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_92 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tanh, %tanh), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_28 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %mul_92), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_93 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg_4, %sub_28), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_94 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_93, %mul_44), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_8 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_94, [0, 2]), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_29 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_4), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_95 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_94, %sub_29), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_9 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_95, [0, 2]), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_102 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_29, %unsqueeze_8), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_31 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_94, %mul_102), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sub_32 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_31, %unsqueeze_6), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_103 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_32, %unsqueeze_10), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %mul_104 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_9, %squeeze_1), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] #   %sum_10 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_103, [0, 2]), kwargs = {})
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional__softmax_backward_data__to_copy_add_convolution_backward_mul_native_batch_norm_backward_neg_tanh_tanh_backward_2 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional__softmax_backward_data__to_copy_add_convolution_backward_mul_native_batch_norm_backward_neg_tanh_tanh_backward_2', '''
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] import triton.language as tl
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 128},
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     filename=__file__,
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*i1', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional__softmax_backward_data__to_copy_add_convolution_backward_mul_native_batch_norm_backward_neg_tanh_tanh_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] )
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] @triton.jit
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional__softmax_backward_data__to_copy_add_convolution_backward_mul_native_batch_norm_backward_neg_tanh_tanh_backward_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, out_ptr2, out_ptr3, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xnumel = 10
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rbase = r0_base
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     x0 = xindex
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp3 = tl.load(in_ptr1 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp5 = tl.load(in_ptr2 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp13 = tl.load(in_ptr3 + (0))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp14 = tl.broadcast_to(tmp13, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp26 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp28 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp30 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp32 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     _tmp53 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     _tmp57 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         rindex = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_1 = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp2 = tl.load(in_ptr0 + (r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp25 = tl.load(in_ptr4 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp34 = tl.load(in_ptr9 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0).to(tl.int1)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp1 = -tmp0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp7 = 1e-08
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp9 = tmp0 / tmp8
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp10 = tmp4 * tmp9
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp11 = tmp10 / tmp8
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp12 = tmp11 + tmp11
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp15 = 0.0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp16 = tmp6 == tmp15
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp17 = tmp0 / tmp6
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp18 = tl.where(tmp16, tmp15, tmp17)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp19 = tmp14 * tmp18
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp20 = tmp12 + tmp19
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp21 = tmp20 + tmp19
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp22 = tmp21 * tmp0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp23 = libdevice.fma(tmp1, tmp2, tmp22)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp24 = -tmp23
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp27 = tmp25 - tmp26
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp29 = tmp27 * tmp28
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp31 = tmp29 * tmp30
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp33 = tmp31 + tmp32
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp35 = tmp34.to(tl.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp36 = 0.8864048946659319
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp37 = tmp35 * tmp36
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp38 = tmp33 * tmp37
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp39 = -1.0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp40 = tmp35 + tmp39
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp41 = 1.558387861036063
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp42 = tmp40 * tmp41
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp43 = 0.7791939305180315
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp44 = tmp42 + tmp43
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp45 = tmp38 + tmp44
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp46 = libdevice.tanh(tmp45)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp47 = tmp46 * tmp46
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp48 = 1.0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp49 = tmp48 - tmp47
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp50 = tmp24 * tmp49
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp51 = tmp50 * tmp37
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp52 = tl.broadcast_to(tmp51, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp54 = _tmp53 + tmp52
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         _tmp53 = tl.where(r0_mask & xmask, tmp54, _tmp53)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp55 = tmp51 * tmp27
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp56 = tl.broadcast_to(tmp55, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp58 = _tmp57 + tmp56
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         _tmp57 = tl.where(r0_mask & xmask, tmp58, _tmp57)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + ks0*x0), tmp50, r0_mask & xmask)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp53 = tl.sum(_tmp53, 1)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp57 = tl.sum(_tmp57, 1)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp53, xmask)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     _tmp79 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         rindex = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         r0_1 = r0_index
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp59 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp60 = tl.load(in_ptr9 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp65 = tl.load(in_ptr4 + (r0_1 + 4*x0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp61 = tmp60.to(tl.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp62 = 0.8864048946659319
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp63 = tmp61 * tmp62
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp64 = tmp59 * tmp63
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp66 = tmp65 - tmp26
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp67 = (tl.full([], 1.00000000000000, tl.float64) / ((40 + 10*ks0) / 10))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp68 = tmp67.to(tl.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp69 = tmp57 * tmp68
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp70 = tmp28 * tmp28
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp71 = tmp69 * tmp70
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp72 = tmp66 * tmp71
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp73 = tmp64 - tmp72
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp74 = tmp53 * tmp68
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp75 = tmp73 - tmp74
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp76 = tmp28 * tmp30
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp77 = tmp75 * tmp76
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp78 = tl.broadcast_to(tmp77, [XBLOCK, R0_BLOCK])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tmp80 = _tmp79 + tmp78
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         _tmp79 = tl.where(r0_mask & xmask, tmp80, _tmp79)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + ks0*x0), tmp77, r0_mask & xmask)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp79 = tl.sum(_tmp79, 1)[:, None]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp79, xmask)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tmp81 = tmp57 * tmp28
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp81, xmask)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] async_compile.wait(globals())
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] del async_compile
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def call(args):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_3, sym_size_int, primals_1, primals_4, primals_8, primals_9, convolution, getitem_1, rsqrt, lt_1, div, pow_2, tangents_1 = args
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     args.clear()
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     s0 = primals_3
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_1, (1, 10, 5), (50, 5, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_8, (10, ), (1, ))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(primals_9, (10, ), (1, ))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(convolution, (1, 10, 4 + s0), (40 + 10*s0, 4 + s0, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(getitem_1, (1, 10, 1), (10, 1, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(rsqrt, (1, 10, 1), (10, 1, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(lt_1, (1, 10, 4 + s0), (40 + 10*s0, 4 + s0, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(div, (1, 10, 4 + s0), (40 + 10*s0, 4 + s0, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(pow_2, (1, 1), (1, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 1), (1, 1))
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.clamp_min, aten.div, aten.mul, aten.neg, aten.sum]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused_clamp_min_div_mul_neg_sum_0_r0_numel = 40 + 10*s0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused_clamp_min_div_mul_neg_sum_0.run(tangents_1, div, pow_2, buf0, 1, triton_red_fused_clamp_min_div_mul_neg_sum_0_r0_numel, grid=grid(1), stream=stream0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 1, 4 + s0), (4 + s0, 4 + s0, 1), torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten._softmax_backward_data]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_per_fused__softmax_backward_data_1_xnumel = 4 + s0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_per_fused__softmax_backward_data_1.run(tangents_1, div, pow_2, buf0, buf1, s0, triton_per_fused__softmax_backward_data_1_xnumel, 10, grid=grid(triton_per_fused__softmax_backward_data_1_xnumel), stream=stream0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf2 = div; del div  # reuse
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf3 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf5 = buf2; del buf2  # reuse
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf7 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf6 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2, x_3], Original ATen: [aten._softmax_backward_data, aten.neg, aten._native_batch_norm_legit_functional, aten._to_copy, aten.add, aten.mul, aten.tanh, aten.tanh_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional__softmax_backward_data__to_copy_add_convolution_backward_mul_native_batch_norm_backward_neg_tanh_tanh_backward_2_r0_numel = 4 + s0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional__softmax_backward_data__to_copy_add_convolution_backward_mul_native_batch_norm_backward_neg_tanh_tanh_backward_2.run(buf5, buf1, tangents_1, pow_2, buf0, convolution, getitem_1, rsqrt, primals_8, primals_9, lt_1, buf3, buf7, buf6, s0, 10, triton_red_fused__native_batch_norm_legit_functional__softmax_backward_data__to_copy_add_convolution_backward_mul_native_batch_norm_backward_neg_tanh_tanh_backward_2_r0_numel, grid=grid(10), stream=stream0)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del buf0
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del buf1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del convolution
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del getitem_1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del lt_1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del pow_2
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_8
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_9
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del rsqrt
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del tangents_1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf8 = torch.ops.aten.convolution_backward.default(buf5, primals_4, primals_1, [10], [1], [0], [1], True, [0], 1, [False, True, False])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del buf5
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_1
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del primals_4
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         buf9 = buf8[1]
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]         del buf8
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     return (buf9, buf7, None, None, None, None, None, buf6, buf3, )
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_3 = 64
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     sym_size_int = 68
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_1 = rand_strided((1, 10, 5), (50, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 64), (64, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_8 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     primals_9 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     convolution = rand_strided((1, 10, 68), (680, 68, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     getitem_1 = rand_strided((1, 10, 1), (10, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     rsqrt = rand_strided((1, 10, 1), (10, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     lt_1 = rand_strided((1, 10, 68), (680, 68, 1), device='cuda:0', dtype=torch.bool)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     div = rand_strided((1, 10, 68), (680, 68, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     pow_2 = rand_strided((1, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     tangents_1 = rand_strided((1, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     fn = lambda: call([primals_3, sym_size_int, primals_1, primals_4, primals_8, primals_9, convolution, getitem_1, rsqrt, lt_1, div, pow_2, tangents_1])
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] if __name__ == "__main__":
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:34:59.651000 3201829 site-packages/torch/_inductor/graph.py:2014] [403/0_1] [__output_code] 
V0205 11:34:59.660000 3201829 site-packages/torch/_inductor/graph.py:2022] [403/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kk/ckk5arhpvpzsocsi5ryb5tjjjzpq32tuygwjkubuteb654znnynr.py
I0205 11:34:59.998000 3201829 site-packages/torch/_inductor/graph.py:2056] [403/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kk/ckk5arhpvpzsocsi5ryb5tjjjzpq32tuygwjkubuteb654znnynr.py

V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] Output code: 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # AOT ID: ['3_forward']
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import torch
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import math
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import random
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import os
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import tempfile
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from math import inf, nan
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from cmath import nanj
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch import device, empty_strided
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton.language as tl
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     grid,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     split_scan_grid,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     grid_combo_kernels,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     start_graph,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     end_graph,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     cooperative_reduction_grid,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] )
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] aten = torch.ops.aten
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] _quantized = torch.ops._quantized
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] async_compile = AsyncCompile()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/h4/ch4psr6rognv5nnb6drmoy2hsaambmyibu5y6sk4xkxzud4bswl6.py
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.native_group_norm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Source node to ATen node mapping:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_2 => add, rsqrt, var_mean
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Graph fragment:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_per_fused_native_group_norm_0 = async_compile.triton('triton_per_fused_native_group_norm_0', '''
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton.language as tl
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     size_hints={'x': 8, 'r0_': 16},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     filename=__file__,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_group_norm_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] )
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton.jit
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] def triton_per_fused_native_group_norm_0(in_out_ptr0, in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xnumel = 8
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_numel = 16
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     rnumel = r0_numel
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xmask = xindex < xnumel
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_offset = 0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     roffset = r0_offset
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     rindex = r0_index
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_1 = r0_index
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     x0 = xindex
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 16*x0), xmask, other=0.0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp10 = tmp7 / tmp9
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp11 = tmp1 - tmp10
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp12 = tmp11 * tmp11
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp17 = 16.0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp18 = tmp16 / tmp17
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp19 = 1e-05
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp20 = tmp18 + tmp19
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.debug_barrier()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp21, xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] ''', device_str='cuda')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7m/c7mohw7g3qrwkrh3a7wxinlsvnswsxku7mnjfrvbmjskakm7dhai.py
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3, x_4], Original ATen: [aten.native_group_norm, aten.tanh, aten.sub]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Source node to ATen node mapping:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_2 => add_1, mul_1
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_3 => sub_1, tanh
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_4 => tanh_1
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Graph fragment:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_2, %unsqueeze_1), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %unsqueeze), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add_1,), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %tanh), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %tanh_1 : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%sub_1,), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_poi_fused_native_group_norm_sub_tanh_1 = async_compile.triton('triton_poi_fused_native_group_norm_sub_tanh_1', '''
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton.language as tl
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton_heuristics.pointwise(
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     size_hints={'x': 128}, 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     filename=__file__,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_group_norm_sub_tanh_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     min_elem_per_thread=0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] )
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton.jit
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] def triton_poi_fused_native_group_norm_sub_tanh_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xnumel = 128
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xmask = xindex < xnumel
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     x0 = xindex
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 // 16), xmask, eviction_policy='evict_last')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0 // 16), xmask, eviction_policy='evict_last')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp2 = tmp0 - tmp1
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp4 = tmp2 * tmp3
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp6 = tmp4 * tmp5
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp8 = tmp6 + tmp7
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp9 = libdevice.tanh(tmp8)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp10 = tmp8 - tmp9
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp11, xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] ''', device_str='cuda')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ib/cib7qeaukwxvrr7kgrfnrqmnfrrwkyhy3uqnhk3yhr5l6w5j3gij.py
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.native_group_norm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Source node to ATen node mapping:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_6 => add_2, rsqrt_1, var_mean_1
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Graph fragment:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_3, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_2,), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_per_fused_native_group_norm_2 = async_compile.triton('triton_per_fused_native_group_norm_2', '''
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton.language as tl
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     size_hints={'x': 4, 'r0_': 16},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     filename=__file__,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_group_norm_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] )
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton.jit
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] def triton_per_fused_native_group_norm_2(in_out_ptr0, in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xnumel = 4
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_numel = 16
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     rnumel = r0_numel
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xmask = xindex < xnumel
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_offset = 0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     roffset = r0_offset
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     rindex = r0_index
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     r0_1 = r0_index
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     x0 = xindex
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 16*x0), xmask, other=0.0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp8 = tl.full([XBLOCK, 1], 16, tl.int32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp10 = tmp7 / tmp9
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp11 = tmp1 - tmp10
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp12 = tmp11 * tmp11
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp15 = tl.where(xmask, tmp13, 0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp17 = 16.0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp18 = tmp16 / tmp17
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp19 = 1e-05
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp20 = tmp18 + tmp19
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp21 = libdevice.rsqrt(tmp20)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.debug_barrier()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp21, xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] ''', device_str='cuda')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sl/cslrhitqkejcj5jfgkobcdnnps25d3wx6x34xysviqjnpchhmbrw.py
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.native_group_norm, aten.sigmoid, aten.elu]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Source node to ATen node mapping:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_6 => add_3, mul_3
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_7 => sigmoid
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   x_8 => expm1, gt, mul_4, mul_6, where
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Graph fragment:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_4, %unsqueeze_3), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %unsqueeze_2), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_3,), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%sigmoid, 0), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, 1.0), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %expm1 : [num_users=1] = call_function[target=torch.ops.aten.expm1.default](args = (%mul_4,), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%expm1, 1.0), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %mul_4, %mul_6), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_poi_fused_elu_native_group_norm_sigmoid_3 = async_compile.triton('triton_poi_fused_elu_native_group_norm_sigmoid_3', '''
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton.language as tl
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton_heuristics.pointwise(
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     size_hints={'x': 64}, 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     filename=__file__,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_elu_native_group_norm_sigmoid_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     min_elem_per_thread=0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] )
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton.jit
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] def triton_poi_fused_elu_native_group_norm_sigmoid_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xnumel = 64
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xmask = xindex < xnumel
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     x0 = xindex
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 // 16), xmask, eviction_policy='evict_last')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0 // 16), xmask, eviction_policy='evict_last')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp2 = tmp0 - tmp1
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp4 = tmp2 * tmp3
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp6 = tmp4 * tmp5
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp8 = tmp6 + tmp7
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp9 = tl.sigmoid(tmp8)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp10 = 0.0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp11 = tmp9 > tmp10
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp12 = 1.0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp13 = tmp9 * tmp12
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp14 = libdevice.expm1(tmp13)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp15 = tmp14 * tmp12
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp16 = tl.where(tmp11, tmp13, tmp15)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp16, xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] ''', device_str='cuda')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3s/c3sw2apooutoepme6ste7avcm4nf3kdxp7cinsyzjw4mmo2qwwg7.py
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.tanh]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Source node to ATen node mapping:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   input_1 => add_tensor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   input_2 => tanh_2
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] # Graph fragment:
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_13), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] #   %tanh_2 : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%add_tensor,), kwargs = {})
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_poi_fused_addmm_tanh_4 = async_compile.triton('triton_poi_fused_addmm_tanh_4', '''
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] import triton.language as tl
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton_heuristics.pointwise(
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     size_hints={'x': 16}, 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     filename=__file__,
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_tanh_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     min_elem_per_thread=0
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] )
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] @triton.jit
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] def triton_poi_fused_addmm_tanh_4(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xnumel = 16
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     xmask = xindex < xnumel
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     x0 = xindex
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tmp3 = libdevice.tanh(tmp2)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] ''', device_str='cuda')
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] async_compile.wait(globals())
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] del async_compile
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] def call(args):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15 = args
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     args.clear()
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_1, (1, 3, 64, 64), (12288, 4096, 64, 1))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_2, (128, 12288), (12288, 1))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_3, (128, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_4, (128, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_5, (128, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_6, (64, 128), (128, 1))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_10, (32, 64), (64, 1))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_11, (32, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_12, (16, 32), (32, 1))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_13, (16, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_14, (10, 16), (16, 1))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     assert_size_stride(primals_15, (10, ), (1, ))
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         torch.cuda.set_device(0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf0 = empty_strided_cuda((1, 128), (128, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.addmm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         extern_kernels.addmm(primals_3, reinterpret_tensor(primals_1, (1, 12288), (12288, 1), 0), reinterpret_tensor(primals_2, (12288, 128), (1, 12288), 0), alpha=1, beta=1, out=buf0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         del primals_2
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         del primals_3
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf1 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 1, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf2 = empty_strided_cuda((1, 8, 1, 1), (8, 1, 8, 8), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf4 = reinterpret_tensor(buf2, (1, 8, 1, 1), (8, 1, 1, 1), 0); del buf2  # reuse
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.native_group_norm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         triton_per_fused_native_group_norm_0.run(buf4, buf0, buf1, 8, 16, grid=grid(8), stream=stream0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf5 = empty_strided_cuda((1, 128), (128, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3, x_4], Original ATen: [aten.native_group_norm, aten.tanh, aten.sub]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         triton_poi_fused_native_group_norm_sub_tanh_1.run(buf6, buf0, buf1, buf4, primals_4, primals_5, 128, grid=grid(128), stream=stream0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf7 = empty_strided_cuda((1, 64), (64, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.addmm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         extern_kernels.addmm(primals_7, buf6, reinterpret_tensor(primals_6, (128, 64), (1, 128), 0), alpha=1, beta=1, out=buf7)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         del primals_7
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf8 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf9 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf11 = reinterpret_tensor(buf9, (1, 4, 1, 1), (4, 1, 1, 1), 0); del buf9  # reuse
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.native_group_norm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         triton_per_fused_native_group_norm_2.run(buf11, buf7, buf8, 4, 16, grid=grid(4), stream=stream0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf12 = empty_strided_cuda((1, 64), (64, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf13 = buf12; del buf12  # reuse
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7, x_8], Original ATen: [aten.native_group_norm, aten.sigmoid, aten.elu]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         triton_poi_fused_elu_native_group_norm_sigmoid_3.run(buf13, buf7, buf8, buf11, primals_8, primals_9, 64, grid=grid(64), stream=stream0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf14 = empty_strided_cuda((1, 32), (32, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9], Original ATen: [aten.addmm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         extern_kernels.addmm(primals_11, buf13, reinterpret_tensor(primals_10, (64, 32), (1, 64), 0), alpha=1, beta=1, out=buf14)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         del primals_11
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf15 = empty_strided_cuda((1, 16), (16, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         extern_kernels.mm(buf14, reinterpret_tensor(primals_12, (32, 16), (1, 32), 0), out=buf15)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.tanh]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         triton_poi_fused_addmm_tanh_4.run(buf16, primals_13, 16, grid=grid(16), stream=stream0)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         del primals_13
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         buf17 = empty_strided_cuda((1, 10), (10, 1), torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         extern_kernels.addmm(primals_15, buf16, reinterpret_tensor(primals_14, (16, 10), (1, 16), 0), alpha=1, beta=1, out=buf17)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]         del primals_15
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     return (buf17, primals_4, primals_5, primals_8, primals_9, reinterpret_tensor(primals_1, (1, 12288), (12288, 1), 0), buf0, buf1, buf4, buf6, buf7, buf8, buf11, buf13, buf14, buf16, primals_14, primals_12, primals_10, primals_6, )
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_2 = rand_strided((128, 12288), (12288, 1), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_3 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_4 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_5 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_6 = rand_strided((64, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_10 = rand_strided((32, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_11 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_12 = rand_strided((16, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_13 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_14 = rand_strided((10, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     primals_15 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15])
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] if __name__ == "__main__":
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 13:06:10.074000 3748873 site-packages/torch/_inductor/graph.py:2014] [11/0] [__output_code] 
V0127 13:06:10.081000 3748873 site-packages/torch/_inductor/graph.py:2022] [11/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h7/ch7taqnc6r74mpw4zcu3aal4ykn35r2d4juvjnkkogbmfurawjg6.py
I0127 13:06:10.269000 3748873 site-packages/torch/_inductor/graph.py:2056] [11/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h7/ch7taqnc6r74mpw4zcu3aal4ykn35r2d4juvjnkkogbmfurawjg6.py

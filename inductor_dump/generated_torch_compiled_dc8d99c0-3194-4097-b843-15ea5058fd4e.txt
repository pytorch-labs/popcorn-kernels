V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] Output code: 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # AOT ID: ['174_forward']
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import torch
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import math
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import random
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import os
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import tempfile
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from math import inf, nan
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from cmath import nanj
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch import device, empty_strided
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     grid,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     split_scan_grid,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     grid_combo_kernels,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     start_graph,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     end_graph,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     cooperative_reduction_grid,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] aten = torch.ops.aten
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] async_compile = AsyncCompile()
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/u2/cu22nfwt7imnlllasywysyx3elaivig535epuv2cngzuxoq5fnc3.py
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_2], Original ATen: [aten.embedding, aten.silu]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   x => embedding
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   x_2 => mul_7, sigmoid
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Graph fragment:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %embedding : [num_users=2] = call_function[target=torch.ops.aten.embedding.default](args = (%primals_1, %primals_4), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%unsqueeze,), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %mul_7 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %sigmoid), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_poi_fused_embedding_silu_0 = async_compile.triton('triton_poi_fused_embedding_silu_0', '''
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     size_hints={'x': 32768}, 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     filename=__file__,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_silu_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     min_elem_per_thread=0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton.jit
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def triton_poi_fused_embedding_silu_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x1 = xindex // 128
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x0 = (xindex % 128)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x2 = xindex
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1000, tl.int32)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp3 = tmp0 < 0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 1000)) | ~(xmask), "index out of bounds: 0 <= tmp4 < 1000")
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 128*tmp4), xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] ''', device_str='cuda')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2d/c2dxxxmrvcag5pqzzma5xf267hz4jspad25ae6ukj3nq2egy7soo.py
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.max_unpool2d]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   x_3 => full
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Graph fragment:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([%primals_2, 1, %sub_11, 128], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_poi_fused_max_unpool2d_1 = async_compile.triton('triton_poi_fused_max_unpool2d_1', '''
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     size_hints={'x': 32768}, 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     filename=__file__,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool2d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     min_elem_per_thread=0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton.jit
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def triton_poi_fused_max_unpool2d_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x0 = xindex
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp0 = 0.0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] ''', device_str='cuda')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yc/cyc56245ot2gogppmy76z3l2xikv5ymzue7drmsfnknl3jrd5zll.py
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Topologically Sorted Source Nodes: [max_pool2d, x_3], Original ATen: [aten.max_pool2d_with_indices, aten.max_unpool2d]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   max_pool2d => _low_memory_max_pool2d_offsets_to_indices, _low_memory_max_pool2d_with_offsets
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   x_3 => index_put
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Graph fragment:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %_low_memory_max_pool2d_with_offsets : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%mul_7, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %_low_memory_max_pool2d_offsets_to_indices : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_offsets_to_indices.default](args = (%getitem_1, 2, 128, [2, 2], [0, 0]), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %index_put : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%view_2, [%view_1], %view_3), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2', '''
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     size_hints={'x': 8192}, 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     filename=__file__,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2', 'mutated_arg_names': ['out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     min_elem_per_thread=0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton.jit
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x0 = (xindex % 64)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x1 = ((xindex // 64) % ks0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x2 = xindex // ks1
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x3 = xindex
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 256*x1 + 128*ks2*x2), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 256*x1 + 128*ks2*x2), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (128 + 2*x0 + 256*x1 + 128*ks2*x2), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (129 + 2*x0 + 256*x1 + 128*ks2*x2), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (2*((x3 % 64)) + 256*(((x3 // 64) % ks0)) + 128*ks2*(x3 // ks1)), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp36 = tl.load(in_ptr0 + (1 + 2*((x3 % 64)) + 256*(((x3 // 64) % ks0)) + 128*ks2*(x3 // ks1)), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp38 = tl.load(in_ptr0 + (128 + 2*((x3 % 64)) + 256*(((x3 // 64) % ks0)) + 128*ks2*(x3 // ks1)), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp40 = tl.load(in_ptr0 + (129 + 2*((x3 % 64)) + 256*(((x3 // 64) % ks0)) + 128*ks2*(x3 // ks1)), xmask, eviction_policy='evict_last')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp2 = tmp1 > tmp0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int8)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp4 = tl.full([1], 0, tl.int8)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp8 = tmp7 > tmp6
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp9 = tl.full([1], 2, tl.int8)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp10 = tl.where(tmp8, tmp9, tmp5)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp7, tmp6)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp13 = tmp12 > tmp11
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp14 = tl.full([1], 3, tl.int8)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp15 = tl.where(tmp13, tmp14, tmp10)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp12, tmp11)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp17 = tl.full([1], 2, tl.int32)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp18 = tl.where((tmp15 < 0) != (tmp17 < 0), tl.where(tmp15 % tmp17 != 0, tmp15 // tmp17 - 1, tmp15 // tmp17), tmp15 // tmp17)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp19 = tmp18 * tmp17
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp20 = tmp15 - tmp19
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp21 = 2*x1
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp22 = tmp21 + tmp18
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp23 = 2*x0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp24 = tmp23 + tmp20
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp25 = tl.full([1], 128, tl.int64)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp26 = tmp22 * tmp25
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp27 = tmp26 + tmp24
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp28 = 256*ks0*(x3 // ks1)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp30 = 256*ks0*ks3
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp32 = tmp29 < 0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp33 = tl.where(tmp32, tmp31, tmp29)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.device_assert(((0 <= tmp33) & (tmp33 < 256*ks3*(ks2 // 2))) | ~(xmask), "index out of bounds: 0 <= tmp33 < 256*ks3*(ks2 // 2)")
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp37 = triton_helpers.maximum(tmp36, tmp35)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp38, tmp37)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp39)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp27, xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(tmp33, [XBLOCK])), tmp41, xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] ''', device_str='cuda')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gi/cgijbthl7iwiozrfkyqxa3ehaxd7ai2rs3pl2avgfcdxgv2v3n56.py
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.silu]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   x_4 => mul_31, sigmoid_1
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Graph fragment:
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%view_4,), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_4, %sigmoid_1), kwargs = {})
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_poi_fused_silu_3 = async_compile.triton('triton_poi_fused_silu_3', '''
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     size_hints={'x': 32768}, 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     filename=__file__,
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_silu_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     min_elem_per_thread=0
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton.jit
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def triton_poi_fused_silu_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x0 = xindex
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] ''', device_str='cuda')
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] async_compile.wait(globals())
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] del async_compile
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def call(args):
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     args.clear()
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     s0 = primals_2
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     s1 = primals_3
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(primals_1, (1000, 128), (128, 1))
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(primals_4, (s0, s1), (s1, 1))
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf0 = empty_strided_cuda((s0, s1, 128), (128*s1, 128, 1), torch.float32)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf1 = empty_strided_cuda((s0, 1, s1, 128), (128*s1, 128*s1, 128, 1), torch.float32)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_2], Original ATen: [aten.embedding, aten.silu]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_embedding_silu_0_xnumel = 128*s0*s1
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_embedding_silu_0.run(primals_4, primals_1, buf0, buf1, triton_poi_fused_embedding_silu_0_xnumel, grid=grid(triton_poi_fused_embedding_silu_0_xnumel), stream=stream0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         del primals_1
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf3 = empty_strided_cuda((s0, 1, 2*(s1 // 2), 128), (256*(s1 // 2), 1, 128, 1), torch.float32)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.max_unpool2d]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_max_unpool2d_1_xnumel = 256*s0*(s1 // 2)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_max_unpool2d_1.run(buf3, triton_poi_fused_max_unpool2d_1_xnumel, grid=grid(triton_poi_fused_max_unpool2d_1_xnumel), stream=stream0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         ps0 = s1 // 2
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         ps1 = 64*(s1 // 2)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf2 = empty_strided_cuda((s0, 1, s1 // 2, 64), (64*(s1 // 2), 64*(s1 // 2), 64, 1), torch.int64)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         # Topologically Sorted Source Nodes: [max_pool2d, x_3], Original ATen: [aten.max_pool2d_with_indices, aten.max_unpool2d]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2_xnumel = 64*s0*(s1 // 2)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2.run(buf1, buf2, buf3, ps0, ps1, s1, s0, triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2_xnumel, grid=grid(triton_poi_fused_max_pool2d_with_indices_max_unpool2d_2_xnumel), stream=stream0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf5 = empty_strided_cuda((s0, 1, 2*(s1 // 2), 128), (256*(s1 // 2), 1, 128, 1), torch.float32)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.silu]
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_silu_3_xnumel = 256*s0*(s1 // 2)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_silu_3.run(buf3, buf5, triton_poi_fused_silu_3_xnumel, grid=grid(triton_poi_fused_silu_3_xnumel), stream=stream0)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     return (reinterpret_tensor(buf5, (s0, 2*(s1 // 2), 128), (256*(s1 // 2), 128, 1), 0), primals_4, buf0, buf1, buf2, reinterpret_tensor(buf3, (256*s0*(s1 // 2), ), (1, ), 0), s0, s1, 2*(s1 // 2), )
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_1 = rand_strided((1000, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_2 = 10
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_3 = 20
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_4 = rand_strided((10, 20), (20, 1), device='cuda:0', dtype=torch.int64)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] if __name__ == "__main__":
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:54:50.001000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.007000 3201829 site-packages/torch/_inductor/graph.py:2022] [652/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4y/c4y474wssy4a23gt4ff5wavvkqyauu4wu4g7kscwaete2tbicvkq.py
I0205 11:54:50.231000 3201829 site-packages/torch/_inductor/graph.py:2056] [652/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4y/c4y474wssy4a23gt4ff5wavvkqyauu4wu4g7kscwaete2tbicvkq.py
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] Output code: 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # AOT ID: ['174_backward']
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import torch
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import math
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import random
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import os
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import tempfile
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from math import inf, nan
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from cmath import nanj
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch import device, empty_strided
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     grid,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     split_scan_grid,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     grid_combo_kernels,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     start_graph,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     end_graph,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     cooperative_reduction_grid,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] aten = torch.ops.aten
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] async_compile = AsyncCompile()
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b2/cb23nxdvyllyexhavnec3ou4e2o4bk2j2jw2qdbnhe52rkduiqnu.py
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.gather]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Graph fragment:
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %gather : [num_users=1] = call_function[target=torch.ops.aten.gather.default](args = (%view_6, -1, %view_5), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_poi_fused_gather_0 = async_compile.triton('triton_poi_fused_gather_0', '''
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     size_hints={'x': 8192}, 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     filename=__file__,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gather_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     min_elem_per_thread=0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton.jit
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def triton_poi_fused_gather_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x2 = xindex
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x1 = xindex // ks1
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp1 = 256*(ks0 // 2)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp3 = tmp0 < 0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 256*(ks0 // 2))) | ~(xmask), "index out of bounds: 0 <= tmp4 < 256*(ks0 // 2)")
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (256*x1*(ks0 // 2) + ((tmp4 % (256*(ks0 // 2))))), xmask, eviction_policy='evict_last')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (256*x1*(ks0 // 2) + ((tmp4 % (256*(ks0 // 2))))), xmask, eviction_policy='evict_last')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp8 = tl.sigmoid(tmp7)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp9 = 1.0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp10 = tmp9 - tmp8
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp11 = tmp7 * tmp10
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp12 = tmp11 + tmp9
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp13 = tmp8 * tmp12
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp14 = tmp6 * tmp13
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp14, xmask)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] ''', device_str='cuda')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/in/cingrknkkwlh3mcwlmnu7af32fy5tx2jjj72oo4tpare3wvuc4x3.py
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Graph fragment:
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1000, 128], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_poi_fused_embedding_dense_backward_1 = async_compile.triton('triton_poi_fused_embedding_dense_backward_1', '''
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     size_hints={'x': 131072}, 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     filename=__file__,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_dense_backward_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     min_elem_per_thread=0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton.jit
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def triton_poi_fused_embedding_dense_backward_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xnumel = 128000
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x0 = xindex
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp0 = 0.0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] ''', device_str='cuda')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5g/c5g2byghziz4yhz7firhfa2fedoic3u34mosi6tdh2gmax7im722.py
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices_backward, aten.fill, aten.silu, aten.sub, aten.mul, aten.add, aten.embedding_dense_backward]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   x_2 => sigmoid
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] # Graph fragment:
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %max_pool2d_with_indices_backward : [num_users=1] = call_function[target=torch.ops.aten.max_pool2d_with_indices_backward.default](args = (%view_7, %mul_7, [2, 2], [2, 2], [0, 0], [1, 1], False, %_low_memory_max_pool2d_offsets_to_indices), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([%primals_2, 1, %primals_3, 128], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%unsqueeze,), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default, %sigmoid), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %mul_42 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %sub_21), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %add_42 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_42, 1), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %mul_43 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %add_42), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %mul_44 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%max_pool2d_with_indices_backward, %mul_43), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%unsqueeze_2, %full_default_1, %squeeze_1), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1000, 128], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] #   %index_put_1 : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%full_default_2, [%primals_4], %where, True), kwargs = {})
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2 = async_compile.triton('triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2', '''
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] import triton.language as tl
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     size_hints={'x': 32768}, 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     filename=__file__,
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*i64', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2', 'mutated_arg_names': ['in_out_ptr0', 'out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     min_elem_per_thread=0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] )
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] @triton.jit
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x0 = (xindex % 128)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x1 = ((xindex // 128) % ks0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x2 = xindex // ks1
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x4 = (xindex % ks1)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x5 = xindex
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     x3 = xindex // 128
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (64*((((0) * ((0) >= (x1 // 2)) + (x1 // 2) * ((x1 // 2) > (0)))) * ((((0) * ((0) >= (x1 // 2)) + (x1 // 2) * ((x1 // 2) > (0)))) <= ((-1) + ((ks0 // 2) * ((ks0 // 2) <= (1 + (x1 // 2))) + (1 + (x1 // 2)) * ((1 + (x1 // 2)) < (ks0 // 2))))) + ((-1) + ((ks0 // 2) * ((ks0 // 2) <= (1 + (x1 // 2))) + (1 + (x1 // 2)) * ((1 + (x1 // 2)) < (ks0 // 2)))) * (((-1) + ((ks0 // 2) * ((ks0 // 2) <= (1 + (x1 // 2))) + (1 + (x1 // 2)) * ((1 + (x1 // 2)) < (ks0 // 2)))) < (((0) * ((0) >= (x1 // 2)) + (x1 // 2) * ((x1 // 2) > (0)))))) + 64*x2*(ks0 // 2) + ((((0) * ((0) >= (x0 // 2)) + (x0 // 2) * ((x0 // 2) > (0)))) * ((((0) * ((0) >= (x0 // 2)) + (x0 // 2) * ((x0 // 2) > (0)))) <= ((-1) + ((64) * ((64) <= (1 + (x0 // 2))) + (1 + (x0 // 2)) * ((1 + (x0 // 2)) < (64))))) + ((-1) + ((64) * ((64) <= (1 + (x0 // 2))) + (1 + (x0 // 2)) * ((1 + (x0 // 2)) < (64)))) * (((-1) + ((64) * ((64) <= (1 + (x0 // 2))) + (1 + (x0 // 2)) * ((1 + (x0 // 2)) < (64)))) < (((0) * ((0) >= (x0 // 2)) + (x0 // 2) * ((x0 // 2) > (0))))))), xmask, eviction_policy='evict_last')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (64*((((0) * ((0) >= (x1 // 2)) + (x1 // 2) * ((x1 // 2) > (0)))) * ((((0) * ((0) >= (x1 // 2)) + (x1 // 2) * ((x1 // 2) > (0)))) <= ((-1) + ((ks0 // 2) * ((ks0 // 2) <= (1 + (x1 // 2))) + (1 + (x1 // 2)) * ((1 + (x1 // 2)) < (ks0 // 2))))) + ((-1) + ((ks0 // 2) * ((ks0 // 2) <= (1 + (x1 // 2))) + (1 + (x1 // 2)) * ((1 + (x1 // 2)) < (ks0 // 2)))) * (((-1) + ((ks0 // 2) * ((ks0 // 2) <= (1 + (x1 // 2))) + (1 + (x1 // 2)) * ((1 + (x1 // 2)) < (ks0 // 2)))) < (((0) * ((0) >= (x1 // 2)) + (x1 // 2) * ((x1 // 2) > (0)))))) + 64*x2*(ks0 // 2) + ((((0) * ((0) >= (x0 // 2)) + (x0 // 2) * ((x0 // 2) > (0)))) * ((((0) * ((0) >= (x0 // 2)) + (x0 // 2) * ((x0 // 2) > (0)))) <= ((-1) + ((64) * ((64) <= (1 + (x0 // 2))) + (1 + (x0 // 2)) * ((1 + (x0 // 2)) < (64))))) + ((-1) + ((64) * ((64) <= (1 + (x0 // 2))) + (1 + (x0 // 2)) * ((1 + (x0 // 2)) < (64)))) * (((-1) + ((64) * ((64) <= (1 + (x0 // 2))) + (1 + (x0 // 2)) * ((1 + (x0 // 2)) < (64)))) < (((0) * ((0) >= (x0 // 2)) + (x0 // 2) * ((x0 // 2) > (0))))))), xmask, eviction_policy='evict_last')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp6 = tl.load(in_out_ptr0 + (x5), xmask, eviction_policy='evict_last')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp2 = x4
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp3 = tmp0 == tmp2
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp4 = 0.0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp5 = tl.where(tmp3, tmp1, tmp4)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp8 = 1.0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp9 = tmp8 - tmp7
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp10 = tmp6 * tmp9
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp11 = tmp10 + tmp8
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp12 = tmp7 * tmp11
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp13 = tmp5 * tmp12
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp15 = tl.full([XBLOCK], 1000, tl.int32)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp17 = tmp14 < 0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp18 = tl.where(tmp17, tmp16, tmp14)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.device_assert(((0 <= tmp18) & (tmp18 < 1000)) | ~(xmask), "index out of bounds: 0 <= tmp18 < 1000")
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp20 = tl.full([1], -1, tl.int64)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp21 = tmp14 == tmp20
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tmp22 = tl.where(tmp21, tmp4, tmp13)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tl.atomic_add(out_ptr0 + (x0 + 128*tmp18), tmp22, xmask, sem='relaxed')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] ''', device_str='cuda')
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] async_compile.wait(globals())
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] del async_compile
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def call(args):
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_2, primals_3, sub_11, primals_4, embedding, mul_7, _low_memory_max_pool2d_offsets_to_indices, index_put, tangents_1 = args
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     args.clear()
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     s0 = primals_2
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     s1 = primals_3
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(primals_4, (s0, s1), (s1, 1))
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(embedding, (s0, s1, 128), (128*s1, 128, 1))
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(mul_7, (s0, 1, s1, 128), (128*s1, 128*s1, 128, 1))
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(_low_memory_max_pool2d_offsets_to_indices, (s0, 1, s1 // 2, 64), (64*(s1 // 2), 64*(s1 // 2), 64, 1))
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(index_put, (256*s0*(s1 // 2), ), (1, ))
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     assert_size_stride(tangents_1, (s0, 2*(s1 // 2), 128), (256*(s1 // 2), 128, 1))
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         ps0 = 64*(s1 // 2)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf0 = empty_strided_cuda((s0, 1, 64*(s1 // 2)), (64*(s1 // 2), 64*s0*(s1 // 2), 1), torch.float32)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.gather]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_gather_0_xnumel = 64*s0*(s1 // 2)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_gather_0.run(_low_memory_max_pool2d_offsets_to_indices, tangents_1, index_put, buf0, s1, ps0, triton_poi_fused_gather_0_xnumel, grid=grid(triton_poi_fused_gather_0_xnumel), stream=stream0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         del index_put
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         del tangents_1
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf2 = empty_strided_cuda((1000, 128), (128, 1), torch.float32)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_embedding_dense_backward_1.run(buf2, 128000, grid=grid(128000), stream=stream0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         ps1 = 128*s1
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         buf1 = reinterpret_tensor(embedding, (s0, 1, s1, 128), (128*s1, 128*s1, 128, 1), 0); del embedding  # reuse
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices_backward, aten.fill, aten.silu, aten.sub, aten.mul, aten.add, aten.embedding_dense_backward]
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2_xnumel = 128*s0*s1
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2.run(buf1, _low_memory_max_pool2d_offsets_to_indices, buf0, primals_4, buf2, s1, ps1, triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2_xnumel, grid=grid(triton_poi_fused_add_embedding_dense_backward_fill_max_pool2d_with_indices_backward_mul_silu_sub_2_xnumel), stream=stream0)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         del _low_memory_max_pool2d_offsets_to_indices
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         del buf0
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         del buf1
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]         del primals_4
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     return (buf2, None, None, None, )
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_2 = 10
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_3 = 20
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     sub_11 = 20
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     primals_4 = rand_strided((10, 20), (20, 1), device='cuda:0', dtype=torch.int64)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     embedding = rand_strided((10, 20, 128), (2560, 128, 1), device='cuda:0', dtype=torch.float32)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     mul_7 = rand_strided((10, 1, 20, 128), (2560, 2560, 128, 1), device='cuda:0', dtype=torch.float32)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     _low_memory_max_pool2d_offsets_to_indices = rand_strided((10, 1, 10, 64), (640, 640, 64, 1), device='cuda:0', dtype=torch.int64)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     index_put = rand_strided((25600, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     tangents_1 = rand_strided((10, 20, 128), (2560, 128, 1), device='cuda:0', dtype=torch.float32)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     fn = lambda: call([primals_2, primals_3, sub_11, primals_4, embedding, mul_7, _low_memory_max_pool2d_offsets_to_indices, index_put, tangents_1])
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] if __name__ == "__main__":
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:54:50.777000 3201829 site-packages/torch/_inductor/graph.py:2014] [652/0] [__output_code] 
V0205 11:54:50.782000 3201829 site-packages/torch/_inductor/graph.py:2022] [652/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jz/cjzci6qmbmdjt4cvv74hnlqsannzzhcmemixldxlilaede6gogwi.py
I0205 11:54:51.039000 3201829 site-packages/torch/_inductor/graph.py:2056] [652/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jz/cjzci6qmbmdjt4cvv74hnlqsannzzhcmemixldxlilaede6gogwi.py

V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] Output code: 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # AOT ID: ['86_inference']
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import torch
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import math
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import random
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import os
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import tempfile
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from math import inf, nan
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from cmath import nanj
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch import device, empty_strided
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import triton
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import triton.language as tl
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     grid,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     split_scan_grid,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     grid_combo_kernels,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     start_graph,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     end_graph,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     cooperative_reduction_grid,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] )
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] aten = torch.ops.aten
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] _quantized = torch.ops._quantized
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] async_compile = AsyncCompile()
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/73/c73he5bw5ynh5pzgtog7qwntvlzvymxnu6tnilmcniicbs4bkewk.py
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, loss], Original ATen: [aten.replication_pad3d, aten.hardswish, aten.huber_loss]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # Source node to ATen node mapping:
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   loss => abs_1, lt_8, mean, mul_24, mul_25, mul_26, sigmoid, sub_26, where
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   x => _unsafe_index, _unsafe_index_1, _unsafe_index_2
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   x_1 => add_11, clamp_max_3, clamp_min_3, div, mul_6
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # Graph fragment:
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg4_1, [None, None, %clamp_max, None, None]), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1, None]), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_1, [None, None, None, None, %clamp_max_2]), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, 3), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_11, 0), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 6), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%_unsafe_index_2, %clamp_max_3), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_6, 6), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%div,), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %abs_1 : [num_users=4] = call_function[target=torch.ops.aten.abs.default](args = (%sigmoid,), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %lt_8 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_24, %abs_1), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %sub_26 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_26, 1.0), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt_8, %mul_25, %mul_26), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] triton_red_fused_hardswish_huber_loss_replication_pad3d_0 = async_compile.triton('triton_red_fused_hardswish_huber_loss_replication_pad3d_0', '''
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import triton
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import triton.language as tl
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] @triton_heuristics.reduction(
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     filename=__file__,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_hardswish_huber_loss_replication_pad3d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] )
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] @triton.jit
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] def triton_red_fused_hardswish_huber_loss_replication_pad3d_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xnumel = 15
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     rnumel = r0_numel
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xmask = xindex < xnumel
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     rbase = r0_base
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     x0 = xindex
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     _tmp26 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         r0_index = r0_offset + r0_base
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         r0_mask = r0_index < r0_numel
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         roffset = r0_offset
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         rindex = r0_index
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         r0_1 = r0_index
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp0 = r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp1 = 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp2 = tmp0 < tmp1
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (ks3*(((-1) + ks2) * (((-1) + ks2) <= (((0) * ((0) >= ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2))))) + ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2)))) * (((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2)))) > (0))))) + (((0) * ((0) >= ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2))))) + ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2)))) * (((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2)))) > (0)))) * ((((0) * ((0) >= ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2))))) + ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2)))) * (((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (2 + ks3)) % (2 + ks2)))) > (0)))) < ((-1) + ks2))) + ks2*ks3*(((-1) + ks1) * (((-1) + ks1) <= (((0) * ((0) >= ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1))))) + ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1)))) * (((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1)))) > (0))))) + (((0) * ((0) >= ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1))))) + ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1)))) * (((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1)))) > (0)))) * ((((0) * ((0) >= ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1))))) + ((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1)))) * (((-1) + ((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (4 + 2*ks2 + 2*ks3 + ks2*ks3)) % (2 + ks1)))) > (0)))) < ((-1) + ks1))) + ks1*ks2*ks3*((((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) // (8 + 4*ks1 + 4*ks2 + 4*ks3 + 2*ks1*ks2 + 2*ks1*ks3 + 2*ks2*ks3 + ks1*ks2*ks3)) % ks0)) + (((-1) + ks3) * (((-1) + ks3) <= (((0) * ((0) >= ((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3))))) + ((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3)))) * (((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3)))) > (0))))) + (((0) * ((0) >= ((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3))))) + ((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3)))) * (((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3)))) > (0)))) * ((((0) * ((0) >= ((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3))))) + ((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3)))) * (((-1) + (((r0_1 + x0*((14 + 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3) // 15)) % (2 + ks3)))) > (0)))) < ((-1) + ks3)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp4 = 3.0
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp5 = tmp3 + tmp4
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp6 = 0.0
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp8 = 6.0
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp9 = triton_helpers.minimum(tmp7, tmp8)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp10 = tmp3 * tmp9
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp11 = 0.16666666666666666
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp12 = tmp10 * tmp11
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp13 = tl.sigmoid(tmp12)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp14 = tl_math.abs(tmp13)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp15 = 1.0
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp16 = tmp14 < tmp15
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp17 = 0.5
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp18 = tmp14 * tmp17
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp19 = tmp18 * tmp14
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp20 = tmp14 - tmp17
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp21 = tmp20 * tmp15
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp22 = tl.where(tmp16, tmp19, tmp21)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp23 = tl.full(tmp22.shape, 0, tmp22.dtype)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp24 = tl.where(tmp2, tmp22, tmp23)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp25 = tl.broadcast_to(tmp24, [XBLOCK, R0_BLOCK])
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         tmp27 = _tmp26 + tmp25
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         _tmp26 = tl.where(r0_mask & xmask, tmp27, _tmp26)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp26 = tl.sum(_tmp26, 1)[:, None]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp26, xmask)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] ''', device_str='cuda')
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hq/chqtpbjt4qdporqhehikm3hq5pbx4kaflhxukckkqoga6ya2osgp.py
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, loss], Original ATen: [aten.replication_pad3d, aten.hardswish, aten.huber_loss]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # Source node to ATen node mapping:
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   loss => abs_1, lt_8, mean, mul_24, mul_25, mul_26, sigmoid, sub_26, where
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   x => _unsafe_index, _unsafe_index_1, _unsafe_index_2
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   x_1 => add_11, clamp_max_3, clamp_min_3, div, mul_6
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] # Graph fragment:
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg4_1, [None, None, %clamp_max, None, None]), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1, None]), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_1, [None, None, None, None, %clamp_max_2]), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, 3), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_11, 0), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 6), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%_unsafe_index_2, %clamp_max_3), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_6, 6), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%div,), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %abs_1 : [num_users=4] = call_function[target=torch.ops.aten.abs.default](args = (%sigmoid,), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %lt_8 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_24 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_24, %abs_1), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %sub_26 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_26, 1.0), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt_8, %mul_25, %mul_26), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] triton_per_fused_hardswish_huber_loss_replication_pad3d_1 = async_compile.triton('triton_per_fused_hardswish_huber_loss_replication_pad3d_1', '''
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import triton
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] import triton.language as tl
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] @triton_heuristics.persistent_reduction(
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     size_hints={'x': 1, 'r0_': 16},
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     filename=__file__,
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_hardswish_huber_loss_replication_pad3d_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] )
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] @triton.jit
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] def triton_per_fused_hardswish_huber_loss_replication_pad3d_1(in_out_ptr0, in_ptr0, ks0, ks1, ks2, ks3, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xnumel = 1
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     r0_numel = 15
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     rnumel = r0_numel
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     r0_offset = 0
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     r0_mask = r0_index < r0_numel
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     roffset = r0_offset
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     rindex = r0_index
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     r0_0 = r0_index
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp3 = tl.where(r0_mask, tmp1, 0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp5 = 8*ks0 + 4*ks0*ks1 + 4*ks0*ks2 + 4*ks0*ks3 + 2*ks0*ks1*ks2 + 2*ks0*ks1*ks3 + 2*ks0*ks2*ks3 + ks0*ks1*ks2*ks3
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tmp7 = tmp4 / tmp6
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tl.debug_barrier()
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp7, None)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] ''', device_str='cuda')
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] async_compile.wait(globals())
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] del async_compile
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] def call(args):
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     args.clear()
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     s0 = arg0_1
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     s1 = arg1_1
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     s2 = arg2_1
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     s3 = arg3_1
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     assert_size_stride(arg4_1, (1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         torch.cuda.set_device(0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         buf0 = empty_strided_cuda((15, ), (1, ), torch.float32)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, loss], Original ATen: [aten.replication_pad3d, aten.hardswish, aten.huber_loss]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         triton_red_fused_hardswish_huber_loss_replication_pad3d_0_r0_numel = (14 + 8*s0 + 4*s0*s1 + 4*s0*s2 + 4*s0*s3 + 2*s0*s1*s2 + 2*s0*s1*s3 + 2*s0*s2*s3 + s0*s1*s2*s3) // 15
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         triton_red_fused_hardswish_huber_loss_replication_pad3d_0.run(arg4_1, buf0, s0, s1, s2, s3, 15, triton_red_fused_hardswish_huber_loss_replication_pad3d_0_r0_numel, grid=grid(15), stream=stream0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         del arg4_1
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, loss], Original ATen: [aten.replication_pad3d, aten.hardswish, aten.huber_loss]
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         triton_per_fused_hardswish_huber_loss_replication_pad3d_1.run(buf2, buf0, s0, s1, s2, s3, 1, 15, grid=grid(1), stream=stream0)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]         del buf0
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     return (buf2, )
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     arg0_1 = 3
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     arg1_1 = 32
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     arg2_1 = 32
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     arg3_1 = 32
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     arg4_1 = rand_strided((1, 3, 32, 32, 32), (98304, 32768, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] if __name__ == "__main__":
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:41:23.057000 1685906 site-packages/torch/_inductor/graph.py:2014] [363/0] [__output_code] 
V0124 17:41:23.061000 1685906 site-packages/torch/_inductor/graph.py:2022] [363/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/65/c65fiqvymxhg3a4vwvv2hk47o3b7jpstri5knprpjp5qint5avg3.py
I0124 17:41:23.300000 1685906 site-packages/torch/_inductor/graph.py:2056] [363/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/65/c65fiqvymxhg3a4vwvv2hk47o3b7jpstri5knprpjp5qint5avg3.py

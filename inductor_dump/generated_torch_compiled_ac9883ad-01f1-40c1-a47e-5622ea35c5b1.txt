V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] Output code: 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # AOT ID: ['56_forward']
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import torch
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import math
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import random
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import os
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import tempfile
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from math import inf, nan
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from cmath import nanj
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch import device, empty_strided
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     grid,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     split_scan_grid,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     grid_combo_kernels,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     start_graph,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     end_graph,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] aten = torch.ops.aten
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fk/cfkqdz7wfpl643poompd5sgmztlr7ycox3wdl33kaxr5e7i6dxco.py
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   add_ => add
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Graph fragment:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, 1), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_poi_fused_add_0 = async_compile.triton('triton_poi_fused_add_0', '''
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     filename=__file__,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_0', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton.jit
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def triton_poi_fused_add_0(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xnumel = 1
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m4/cm4lvg3qxmnxow7qoeki4e5xwxtxzb7sxtcjszbr2oe3tb4xfnta.py
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   x => add_1, add_2, add_3, add_4, mul_10, mul_11, mul_12, mul_6, mul_7, mul_8, mul_9, rsqrt, sub, var_mean
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Graph fragment:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_3, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_3, %getitem_1), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.9), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %mul_8), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, 0.1), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %mul_11), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_6, %unsqueeze_1), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %unsqueeze_3), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_2), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_3), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_1', '''
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     filename=__file__,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_1', 'mutated_arg_names': ['in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton.jit
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xnumel = 3
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     rnumel = r0_numel
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     rbase = r0_base
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x0 = xindex
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         roffset = r0_offset
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         rindex = r0_index
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_1 = r0_index
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp19 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         roffset = r0_offset
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         rindex = r0_index
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_1 = r0_index
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp10 = ks0*ks1
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp11 = tmp10.to(tl.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp12 = tmp3 / tmp11
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp13 = 1e-05
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp14 = tmp12 + tmp13
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp15 = libdevice.rsqrt(tmp14)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp16 = tmp9 * tmp15
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp18 = tmp16 * tmp17
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp20 = tmp18 + tmp19
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*ks1*x0), tmp20, r0_mask & xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp32 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp37 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp21 = ks0*ks1
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp23 = tmp3 / tmp22
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp24 = 1e-05
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp25 = tmp23 + tmp24
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp26 = libdevice.rsqrt(tmp25)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp27 = (((3*ks0*ks1) / 3) / ((tl.full([], -1.00000000000000, tl.float64)) + ((3*ks0*ks1) / 3)))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp28 = tmp27.to(tl.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp29 = tmp23 * tmp28
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp30 = 0.1
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp31 = tmp29 * tmp30
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp33 = 0.9
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp34 = tmp32 * tmp33
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp35 = tmp31 + tmp34
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp36 = tmp2 * tmp30
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp38 = tmp37 * tmp33
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp39 = tmp36 + tmp38
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp26, xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp35, xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp39, xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xi/cxiki7ebydbkc3yvy6ojizszetipt5wgwm7rax7f5ia73rdjzbbc.py
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.pixel_unshuffle]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   x_2 => clone
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Graph fragment:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_poi_fused_pixel_unshuffle_2 = async_compile.triton('triton_poi_fused_pixel_unshuffle_2', '''
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     filename=__file__,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'ks7': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_pixel_unshuffle_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton.jit
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def triton_poi_fused_pixel_unshuffle_2(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, ks7, xnumel, XBLOCK : tl.constexpr):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x4 = xindex // ks0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x5 = (xindex % ks1)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x6 = ((xindex // ks1) % ks2)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x0 = (xindex % 2)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x1 = ((xindex // 2) % ks5)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x2 = ((xindex // ks1) % 2)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x3 = ((xindex // ks6) % ks7)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x5 + 2*ks4*x6 + ks3*ks4*x4), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x5 + 2*ks4*x6 + ks3*ks4*x4), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (ks4 + 2*x5 + 2*ks4*x6 + ks3*ks4*x4), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (1 + ks4 + 2*x5 + 2*ks4*x6 + ks3*ks4*x4), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr0 + (x1 + x3*(ks4 // 4) + x0*(ks3 // 4)*(ks4 // 4) + 2*x2*(ks3 // 4)*(ks4 // 4) + 4*x4*(ks3 // 4)*(ks4 // 4)), tmp6, xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bq/cbqm2kssljn53e5fighzqeci326sqohykfmg3cldmacjsw66rzp2.py
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.permute]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   x_3 => permute_1
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Graph fragment:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %permute_1 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%view_2, [0, 2, 1]), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_poi_fused_permute_3 = async_compile.triton('triton_poi_fused_permute_3', '''
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     filename=__file__,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_permute_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton.jit
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def triton_poi_fused_permute_3(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x1 = xindex // ks0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x2 = xindex
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (ks1*ks2*((x1 % 12)) + ((x0 % (ks1*ks2)))), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4y/c4y5me6cqckdjnjra4ibqna6kartifsuhco5yx6fgsn4ztqqk5pf.py
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.max_pool2d_with_indices]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   x_1 => getitem_3
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Graph fragment:
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_poi_fused_max_pool2d_with_indices_4 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_4', '''
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     filename=__file__,
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i8', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton.jit
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def triton_poi_fused_max_pool2d_with_indices_4(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x2 = xindex // ks2
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x3 = xindex
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + (1 + ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp2 = tmp1 > tmp0
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int8)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int8)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp6 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp8 = tmp7 > tmp6
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp9 = tl.full([1], 2, tl.int8)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp10 = tl.where(tmp8, tmp9, tmp5)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp11 = triton_helpers.maximum(tmp7, tmp6)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp13 = tmp12 > tmp11
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp14 = tl.full([1], 3, tl.int8)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp15 = tl.where(tmp13, tmp14, tmp10)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp16 = triton_helpers.maximum(tmp12, tmp11)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] async_compile.wait(globals())
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] del async_compile
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def call(args):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     args.clear()
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     s1 = primals_1
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     s2 = primals_2
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(primals_3, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(primals_4, (), ())
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(primals_5, (3, ), (1, ))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(primals_6, (3, ), (1, ))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(primals_7, (3, ), (1, ))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(primals_8, (3, ), (1, ))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_poi_fused_add_0.run(primals_4, primals_4, 1, grid=grid(1), stream=stream0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del primals_4
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_1_r0_numel = s1*s2
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_1.run(primals_3, primals_7, primals_8, primals_6, primals_5, buf0, buf4, buf3, primals_6, primals_5, s1, s2, 3, triton_red_fused__native_batch_norm_legit_functional_1_r0_numel, grid=grid(3), stream=stream0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del primals_5
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del primals_6
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del primals_7
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del primals_8
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps0 = 4*(s1 // 4)*(s2 // 4)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps1 = 2*(s2 // 4)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps2 = 2*(s1 // 4)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps3 = s2 // 4
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps4 = 4*(s2 // 4)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps5 = s1 // 4
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 3, 2, 2, s1 // 4, s2 // 4), (12*(s1 // 4)*(s2 // 4), 4*(s1 // 4)*(s2 // 4), 2*(s1 // 4)*(s2 // 4), (s1 // 4)*(s2 // 4), s2 // 4, 1), torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.pixel_unshuffle]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_poi_fused_pixel_unshuffle_2_xnumel = 12*(s1 // 4)*(s2 // 4)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_poi_fused_pixel_unshuffle_2.run(buf4, buf6, ps0, ps1, ps2, s1, s2, ps3, ps4, ps5, triton_poi_fused_pixel_unshuffle_2_xnumel, grid=grid(triton_poi_fused_pixel_unshuffle_2_xnumel), stream=stream0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps6 = (4*(s1 // 4)*(s2 // 4)) // ((s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4))))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf7 = empty_strided_cuda((1, (4*(s1 // 4)*(s2 // 4)) // ((s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4)))), 3*(s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4)))), (3*(s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4)))*((4*(s1 // 4)*(s2 // 4)) // ((s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4))))), 1, (4*(s1 // 4)*(s2 // 4)) // ((s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4))))), torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.permute]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_poi_fused_permute_3_xnumel = 3*(s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4)))*((4*(s1 // 4)*(s2 // 4)) // ((s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4)))))
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_poi_fused_permute_3.run(buf6, buf7, ps6, ps3, ps5, triton_poi_fused_permute_3_xnumel, grid=grid(triton_poi_fused_permute_3_xnumel), stream=stream0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del buf6
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps7 = s2 // 2
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps8 = s1 // 2
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         ps9 = (s1 // 2)*(s2 // 2)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 3, s1 // 2, s2 // 2), (3*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.int8)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.max_pool2d_with_indices]
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_poi_fused_max_pool2d_with_indices_4_xnumel = 3*(s1 // 2)*(s2 // 2)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_poi_fused_max_pool2d_with_indices_4.run(buf4, buf5, ps7, ps8, ps9, s1, s2, triton_poi_fused_max_pool2d_with_indices_4_xnumel, grid=grid(triton_poi_fused_max_pool2d_with_indices_4_xnumel), stream=stream0)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     return (buf7, s1 // 4, s2 // 4, primals_3, reinterpret_tensor(buf3, (3, ), (1, ), 0), buf4, buf5, reinterpret_tensor(buf0, (1, 3, 1, 1), (3, 1, 1, 1), 0), s2, s1, s1 // 4, s2 // 4, 3*(s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4))), 2*(s1 // 4), s2 // 4, (3*(s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4)))) // 4, )
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_1 = 64
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_2 = 64
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_4 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_5 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_6 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_7 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_8 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] if __name__ == "__main__":
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:31:02.307000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:02.317000 3201829 site-packages/torch/_inductor/graph.py:2022] [195/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kt/ckt3vz6ca7ap3cj45wnpwztmfyafw2hnbji6vdcz3ndreoeqyrzt.py
I0205 11:31:02.493000 3201829 site-packages/torch/_inductor/graph.py:2056] [195/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kt/ckt3vz6ca7ap3cj45wnpwztmfyafw2hnbji6vdcz3ndreoeqyrzt.py
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] Output code: 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # AOT ID: ['56_backward']
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import torch
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import math
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import random
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import os
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import tempfile
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from math import inf, nan
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from cmath import nanj
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch import device, empty_strided
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     grid,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     split_scan_grid,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     grid_combo_kernels,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     start_graph,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     end_graph,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] aten = torch.ops.aten
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ww/cwwxa4jtzhcnxpg4pkyaxdw4fkjdemyqil3cetedbmrwdntg6ipd.py
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.pixel_shuffle, aten.max_pool2d_with_indices, aten.max_pool2d_with_indices_backward, aten.native_batch_norm_backward]
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   x_1 => _low_memory_max_pool2d_offsets_to_indices
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] # Graph fragment:
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%view_5,), kwargs = {memory_format: torch.channels_last})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %_low_memory_max_pool2d_offsets_to_indices : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_offsets_to_indices.default](args = (%getitem_3, 2, %primals_2, [2, 2], [0, 0]), kwargs = {})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %max_pool2d_with_indices_backward : [num_users=2] = call_function[target=torch.ops.aten.max_pool2d_with_indices_backward.default](args = (%clone_3, %add_4, [2, 2], [2, 2], [0, 0], [1, 1], False, %_low_memory_max_pool2d_offsets_to_indices), kwargs = {})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%max_pool2d_with_indices_backward, [0, 2, 3]), kwargs = {})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_3, %unsqueeze_6), kwargs = {})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_50 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%max_pool2d_with_indices_backward, %sub_15), kwargs = {})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_50, [0, 2, 3]), kwargs = {})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] #   %mul_60 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_red_fused_max_pool2d_with_indices_max_pool2d_with_indices_backward_native_batch_norm_backward_pixel_shuffle_0 = async_compile.triton('triton_red_fused_max_pool2d_with_indices_max_pool2d_with_indices_backward_native_batch_norm_backward_pixel_shuffle_0', '''
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] import triton.language as tl
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     filename=__file__,
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i8', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_max_pool2d_with_indices_max_pool2d_with_indices_backward_native_batch_norm_backward_pixel_shuffle_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] )
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] @triton.jit
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def triton_red_fused_max_pool2d_with_indices_max_pool2d_with_indices_backward_native_batch_norm_backward_pixel_shuffle_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xnumel = 3
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     rnumel = r0_numel
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     rbase = r0_base
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     x0 = xindex
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     _tmp18 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp21 = tl.load(in_out_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     _tmp25 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         roffset = r0_offset
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         rindex = r0_index
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_1 = (r0_index % ks0)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_2 = r0_index // ks0
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         r0_3 = r0_index
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + ((ks0 // 2)*((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) * ((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) <= ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2)))))) + ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) * (((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) < (((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))))) + x0*(ks0 // 2)*(ks1 // 2) + ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) * ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) <= ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2)))))) + ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) * (((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) < (((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0))))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp12 = tl.load(in_ptr1 + (2*((((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) * ((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) <= ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2)))))) + ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) * (((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) < (((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))))) % 2)) + 4*x0 + 3*(triton_helpers.div_floor_integer(ks0,  2*(ks0 // 4)))*(triton_helpers.div_floor_integer(ks1,  2*(ks1 // 4)))*(((((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) * ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) <= ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2)))))) + ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) * (((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) < (((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))))) // 2) % (ks0 // 4))) + 3*(ks0 // 4)*(triton_helpers.div_floor_integer(ks0,  2*(ks0 // 4)))*(triton_helpers.div_floor_integer(ks1,  2*(ks1 // 4)))*(((((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) * ((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) <= ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2)))))) + ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) * (((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) < (((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))))) // 2) % (ks1 // 4))) + ((((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) * ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) <= ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2)))))) + ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) * (((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) < (((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))))) % 2))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp20 = tl.load(in_ptr2 + (r0_3 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp1 = tl.full([1, 1], 2, tl.int32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp2 = tl.where((tmp0 < 0) != (tmp1 < 0), tl.where(tmp0 % tmp1 != 0, tmp0 // tmp1 - 1, tmp0 // tmp1), tmp0 // tmp1)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp3 = tmp2 * tmp1
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp4 = tmp0 - tmp3
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp5 = 2*((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) * ((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) <= ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2)))))) + ((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) * (((-1) + ((1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) <= (2*(ks1 // 4))) + (2*(ks1 // 4)) * ((2*(ks1 // 4)) < (1 + (r0_2 // 2))))) < (((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0))))))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp6 = tmp5 + tmp2
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp7 = 2*((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) * ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) <= ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2)))))) + ((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) * (((-1) + ((1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) <= (2*(ks0 // 4))) + (2*(ks0 // 4)) * ((2*(ks0 // 4)) < (1 + (r0_1 // 2))))) < (((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0))))))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp8 = tmp7 + tmp4
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp9 = ks0
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp10 = tmp6 * tmp9
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp11 = tmp10 + tmp8
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp13 = r0_3
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp14 = tmp11 == tmp13
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp15 = 0.0
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp16 = tl.where(tmp14, tmp12, tmp15)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp17 = tl.broadcast_to(tmp16, [XBLOCK, R0_BLOCK])
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp19 = _tmp18 + tmp17
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         _tmp18 = tl.where(r0_mask & xmask, tmp19, _tmp18)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp22 = tmp20 - tmp21
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp23 = tmp16 * tmp22
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp24 = tl.broadcast_to(tmp23, [XBLOCK, R0_BLOCK])
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         tmp26 = _tmp25 + tmp24
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         _tmp25 = tl.where(r0_mask & xmask, tmp26, _tmp25)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp18 = tl.sum(_tmp18, 1)[:, None]
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp25 = tl.sum(_tmp25, 1)[:, None]
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp18, xmask)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp27 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tmp28 = tmp25 * tmp27
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.debug_barrier()
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp28, xmask)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] ''', device_str='cuda')
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] async_compile.wait(globals())
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] del async_compile
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def call(args):
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_2, primals_1, floordiv, floordiv_1, sym_size_int_7, mul_38, floordiv_4, floordiv_6, primals_3, squeeze_1, add_4, getitem_3, unsqueeze_6, tangents_1 = args
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     args.clear()
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     s2 = primals_2
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     s1 = primals_1
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(primals_3, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(squeeze_1, (3, ), (1, ))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(add_4, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(getitem_3, (1, 3, s1 // 2, s2 // 2), (3*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(unsqueeze_6, (1, 3, 1, 1), (3, 1, 1, 1))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     assert_size_stride(tangents_1, (1, (s1 // 4)*(s2 // 4), 3*(s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4)))), (3*(s1 // 4)*(s1 // (2*(s1 // 4)))*(s2 // 4)*(s2 // (2*(s2 // 4))), 3*(s1 // (2*(s1 // 4)))*(s2 // (2*(s2 // 4))), 1))
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf1 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf2 = reinterpret_tensor(unsqueeze_6, (3, ), (1, ), 0); del unsqueeze_6  # reuse
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.pixel_shuffle, aten.max_pool2d_with_indices, aten.max_pool2d_with_indices_backward, aten.native_batch_norm_backward]
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_red_fused_max_pool2d_with_indices_max_pool2d_with_indices_backward_native_batch_norm_backward_pixel_shuffle_0_r0_numel = s1*s2
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         triton_red_fused_max_pool2d_with_indices_max_pool2d_with_indices_backward_native_batch_norm_backward_pixel_shuffle_0.run(buf3, getitem_3, tangents_1, primals_3, squeeze_1, buf1, s2, s1, 3, triton_red_fused_max_pool2d_with_indices_max_pool2d_with_indices_backward_native_batch_norm_backward_pixel_shuffle_0_r0_numel, grid=grid(3), stream=stream0)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del getitem_3
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del primals_3
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del squeeze_1
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]         del tangents_1
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     return (None, None, None, None, None, None, buf3, buf1, )
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_2 = 64
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_1 = 64
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     floordiv = 16
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     floordiv_1 = 16
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     sym_size_int_7 = 12
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     mul_38 = 32
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     floordiv_4 = 16
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     floordiv_6 = 3
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     squeeze_1 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     add_4 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     getitem_3 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.int8)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     unsqueeze_6 = rand_strided((1, 3, 1, 1), (3, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     tangents_1 = rand_strided((1, 256, 12), (3072, 12, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     fn = lambda: call([primals_2, primals_1, floordiv, floordiv_1, sym_size_int_7, mul_38, floordiv_4, floordiv_6, primals_3, squeeze_1, add_4, getitem_3, unsqueeze_6, tangents_1])
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] if __name__ == "__main__":
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:31:03.875000 3201829 site-packages/torch/_inductor/graph.py:2014] [195/0_1] [__output_code] 
V0205 11:31:03.879000 3201829 site-packages/torch/_inductor/graph.py:2022] [195/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ol/colum27bj4xpevp24eeqfygwtxlby563d3iezmumcxfr5npiyzcg.py
I0205 11:31:04.125000 3201829 site-packages/torch/_inductor/graph.py:2056] [195/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ol/colum27bj4xpevp24eeqfygwtxlby563d3iezmumcxfr5npiyzcg.py

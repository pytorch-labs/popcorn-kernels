V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] Output code: 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # AOT ID: ['23_forward']
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import torch
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import math
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import random
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import os
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import tempfile
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from math import inf, nan
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from cmath import nanj
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch import device, empty_strided
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton.language as tl
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     grid,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     split_scan_grid,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     grid_combo_kernels,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     start_graph,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     end_graph,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] aten = torch.ops.aten
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2r/c2rojbqogblfyneyams2g77n3dgycftaowe4pbnj53iz7pw67ecy.py
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.copy]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   x_1 => copy
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Graph fragment:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_5, %slice_6), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_tensor_1, %copy, 2, 1, 15), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_tensor, %slice_scatter_default, 3, 1, 15), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_2 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%empty, %slice_scatter_default_1, 4, 1, 15), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_3 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_2, %slice_18, 4, 0, 1), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_poi_fused_copy_0 = async_compile.triton('triton_poi_fused_copy_0', '''
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton.language as tl
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     size_hints={'x': 65536}, 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     filename=__file__,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton.jit
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def triton_poi_fused_copy_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xnumel = 40960
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x0 = (xindex % 16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x1 = ((xindex // 16) % 16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x2 = ((xindex // 256) % 16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x3 = xindex // 4096
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x5 = xindex
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp0 = x0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp3 = 14 + x0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp5 = tmp3 >= tmp4
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp6 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7 = tmp3 < tmp6
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp8 = tmp5 & tmp7
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp9 = tmp8 & tmp2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp10 = x1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp12 = tmp10 >= tmp11
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp13 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp14 = tmp10 < tmp13
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp15 = tmp12 & tmp14
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp16 = tmp15 & tmp9
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp17 = x2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp18 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp19 = tmp17 >= tmp18
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp20 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp21 = tmp17 < tmp20
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp22 = tmp19 & tmp21
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp23 = tmp22 & tmp16
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-197) + x0 + 14*x1 + 196*x2 + 2744*x3), tmp23, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp25 = tl.load(in_ptr1 + (x3), tmp23, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp26 = tmp24 + tmp25
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp27 = tl.full(tmp26.shape, 0.0, tmp26.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp28 = tl.where(tmp23, tmp26, tmp27)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp29 = tl.load(in_ptr2 + (14 + x5), tmp16, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp30 = tl.where(tmp22, tmp28, tmp29)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp31 = tl.full(tmp30.shape, 0.0, tmp30.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp32 = tl.where(tmp16, tmp30, tmp31)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp33 = tl.load(in_ptr2 + (14 + x5), tmp9, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp34 = tl.where(tmp15, tmp32, tmp33)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp36 = tl.where(tmp9, tmp34, tmp35)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp37 = float("nan")
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp38 = tl.where(tmp8, tmp36, tmp37)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp39 = tl.full(tmp38.shape, 0.0, tmp38.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp40 = tl.where(tmp2, tmp38, tmp39)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp41 = tmp0 >= tmp1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp42 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp43 = tmp0 < tmp42
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp44 = tmp41 & tmp43
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp45 = x1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp46 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp47 = tmp45 >= tmp46
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp48 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp49 = tmp45 < tmp48
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp50 = tmp47 & tmp49
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp51 = tmp50 & tmp44
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp52 = x2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp53 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp54 = tmp52 >= tmp53
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp55 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp56 = tmp52 < tmp55
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp57 = tmp54 & tmp56
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp58 = tmp57 & tmp51
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp59 = tl.load(in_ptr0 + ((-211) + x0 + 14*x1 + 196*x2 + 2744*x3), tmp58, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp60 = tl.load(in_ptr1 + (x3), tmp58, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp61 = tmp59 + tmp60
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp62 = tl.full(tmp61.shape, 0.0, tmp61.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp63 = tl.where(tmp58, tmp61, tmp62)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp64 = tl.load(in_ptr2 + (x5), tmp51, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp65 = tl.where(tmp57, tmp63, tmp64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp66 = tl.full(tmp65.shape, 0.0, tmp65.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp67 = tl.where(tmp51, tmp65, tmp66)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp68 = tl.load(in_ptr2 + (x5), tmp44, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp69 = tl.where(tmp50, tmp67, tmp68)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp70 = tl.full(tmp69.shape, 0.0, tmp69.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp71 = tl.where(tmp44, tmp69, tmp70)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp72 = float("nan")
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp73 = tl.where(tmp44, tmp71, tmp72)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp74 = tl.where(tmp2, tmp40, tmp73)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr0 + (x5), tmp74, None)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vr/cvrtgy77jg6ud2pfx2xsu2axcmnagyhkcqtq3jdqa5zzsxaosbaf.py
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Graph fragment:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_4 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_3, %slice_24, 4, 15, 16), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_5 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_4, %slice_30, 3, 0, 1), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_6 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_5, %slice_36, 3, 15, 16), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton.language as tl
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     size_hints={'x': 65536}, 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     filename=__file__,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton.jit
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xnumel = 40960
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x1 = ((xindex // 16) % 16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x0 = (xindex % 16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x3 = xindex // 16
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x4 = xindex
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp40 = tl.load(in_ptr0 + (x4), None)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp0 = x1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp1 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp3 = (-14) + x1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp6 = tmp5 & tmp2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7 = x0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp8 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp9 = tmp7 >= tmp8
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 16*x3), tmp10, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + (x4), tmp6, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp13 = tl.where(tmp9, tmp11, tmp12)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp14 = tl.full(tmp13.shape, 0.0, tmp13.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp15 = tl.where(tmp6, tmp13, tmp14)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp16 = x0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp17 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp18 = tmp16 >= tmp17
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp19 = tmp18 & tmp2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp20 = tl.load(in_ptr0 + ((-223) + 16*x3), tmp19, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp21 = tl.load(in_ptr0 + ((-224) + x4), tmp2, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp22 = tl.where(tmp18, tmp20, tmp21)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp23 = tl.where(tmp5, tmp15, tmp22)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp24 = tl.full(tmp23.shape, 0.0, tmp23.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp25 = tl.where(tmp2, tmp23, tmp24)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp26 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp27 = tmp0 < tmp26
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp28 = x0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp29 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp30 = tmp28 >= tmp29
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp31 = tmp30 & tmp27
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp32 = tl.load(in_ptr0 + (225 + 16*x3), tmp31, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp33 = tl.load(in_ptr0 + (224 + x4), tmp27, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp34 = tl.where(tmp30, tmp32, tmp33)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp36 = tl.where(tmp27, tmp34, tmp35)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp37 = x0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp38 = tmp37 >= tmp1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp39 = tl.load(in_ptr0 + (1 + 16*x3), tmp38, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp41 = tl.where(tmp38, tmp39, tmp40)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp42 = tl.where(tmp27, tmp36, tmp41)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp43 = tl.where(tmp2, tmp25, tmp42)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp43, None)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ur/curcb6phg2texb74q63v7nttrvmszguhgubfqoccwkgxqz2zcu7c.py
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Graph fragment:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_7 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_6, %slice_42, 2, 0, 1), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %slice_scatter_default_8 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_7, %slice_48, 2, 15, 16), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton.language as tl
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     size_hints={'x': 65536}, 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     filename=__file__,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton.jit
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xnumel = 40960
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x1 = ((xindex // 256) % 16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x0 = (xindex % 256)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x2 = xindex // 4096
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x3 = xindex
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (x3), None)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp0 = x1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp1 = tl.full([1], 15, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp3 = (-14) + x1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp6 = tmp5 & tmp2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (3584 + x0 + 4096*x2), tmp6, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp8 = tl.load(in_ptr0 + ((-3584) + x3), tmp2, other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp9 = tl.where(tmp5, tmp7, tmp8)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp11 = tl.where(tmp2, tmp9, tmp10)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp12 = tl.full([1], 1, tl.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + (3584 + x0 + 4096*x2), tmp13, eviction_policy='evict_last', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp16 = tl.where(tmp13, tmp14, tmp15)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp17 = tl.where(tmp2, tmp11, tmp16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, None)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7v/c7vbyjy32oc3vid2qeskzhtudn6rusfjszvikgbpo4t2rkyoj4y5.py
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.rand]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   x_2 => inductor_lookup_seed_default, inductor_random_default
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Graph fragment:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 10, 3], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_poi_fused_rand_3 = async_compile.triton('triton_poi_fused_rand_3', '''
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton.language as tl
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     size_hints={'x': 32}, 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     filename=__file__,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton.jit
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def triton_poi_fused_rand_3(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xnumel = 30
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x0 = xindex
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp1 = x0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/al/cal2cfa6errspg246zocu6s6xaa3x4zw766tlqnnptbh53s5bogp.py
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.rrelu_with_noise_functional, aten.native_group_norm]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   x_3 => le, mul, where
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   x_4 => add, rsqrt, var_mean
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Graph fragment:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %le : [num_users=2] = call_function[target=torch.ops.aten.le.Scalar](args = (%getitem, 0), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%getitem, %uniform), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%le, %mul, %getitem), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_red_fused_native_group_norm_rrelu_with_noise_functional_4 = async_compile.triton('triton_red_fused_native_group_norm_rrelu_with_noise_functional_4', '''
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton.language as tl
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     filename=__file__,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_group_norm_rrelu_with_noise_functional_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton.jit
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def triton_red_fused_native_group_norm_rrelu_with_noise_functional_4(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xnumel = 2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     r0_numel = 5000
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     rnumel = r0_numel
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     rbase = r0_base
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x0 = xindex
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         roffset = r0_offset
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         rindex = r0_index
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         r0_1 = r0_index
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 5000*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (r0_1 + 5000*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp1 = 0.0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp2 = tmp0 <= tmp1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp4 = tmp0 * tmp3
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp5 = tl.where(tmp2, tmp4, tmp0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp7_mean_next, tmp7_m2_next, tmp7_weight_next = triton_helpers.welford_reduce(
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]             tmp6, tmp7_mean, tmp7_m2, tmp7_weight, roffset == 0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp7_mean = tl.where(r0_mask & xmask, tmp7_mean_next, tmp7_mean)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp7_m2 = tl.where(r0_mask & xmask, tmp7_m2_next, tmp7_m2)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tmp7_weight = tl.where(r0_mask & xmask, tmp7_weight_next, tmp7_weight)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tl.store(out_ptr0 + (r0_1 + 5000*x0), tmp2, r0_mask & xmask)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 5000*x0), tmp5, r0_mask & xmask)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7_mean, tmp7_m2, tmp7_weight, 1)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7 = tmp10[:, None]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp8 = tmp11[:, None]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp9 = tmp12[:, None]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp7, xmask)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp8, xmask)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp13 = 5000.0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp14 = tmp8 / tmp13
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp15 = 1e-05
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp16 = tmp14 + tmp15
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp17 = libdevice.rsqrt(tmp16)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp17, xmask)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ns/cns4fhodnrcitlrakq7wlcbgonf3i73cbzodjqgq2nnku7zknmg5.py
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.pixel_unshuffle]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   x_6 => clone
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] # Graph fragment:
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_poi_fused_pixel_unshuffle_5 = async_compile.triton('triton_poi_fused_pixel_unshuffle_5', '''
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] import triton.language as tl
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     size_hints={'y': 64, 'x': 256}, tile_hint=TileHint.DEFAULT,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     filename=__file__,
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_pixel_unshuffle_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] @triton.jit
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def triton_poi_fused_pixel_unshuffle_5(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     ynumel = 40
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xnumel = 250
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     ymask = yindex < ynumel
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x3 = (xindex % 50)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x4 = xindex // 50
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     y0 = (yindex % 2)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     y1 = ((yindex // 2) % 2)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     y2 = yindex // 4
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     x6 = xindex
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     y7 = yindex
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 2*x3 + 100*y1 + 200*x4 + 1000*y2), xmask & ymask, eviction_policy='evict_last')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (y2 // 5), ymask, eviction_policy='evict_last')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (y2 // 5), ymask, eviction_policy='evict_last')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp10 = tl.load(in_ptr3 + (y2), ymask, eviction_policy='evict_last')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp12 = tl.load(in_ptr4 + (y2), ymask, eviction_policy='evict_last')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp4 = 5000.0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp5 = tmp3 / tmp4
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp6 = 1e-05
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp9 = tmp2 * tmp8
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp11 = tmp9 * tmp10
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tmp13 = tmp11 + tmp12
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     tl.store(out_ptr0 + (x6 + 250*y7), tmp13, xmask & ymask)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] async_compile.wait(globals())
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] del async_compile
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def call(args):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     args.clear()
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     assert_size_stride(primals_1, (10, 1, 3, 3, 3), (27, 27, 9, 3, 1))
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     assert_size_stride(primals_2, (10, ), (1, ))
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     assert_size_stride(primals_3, (1, 1, 16, 16, 16), (4096, 4096, 256, 16, 1))
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     assert_size_stride(primals_4, (10, ), (1, ))
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     assert_size_stride(primals_5, (10, ), (1, ))
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, 14, 14, 14), (27440, 2744, 196, 14, 1))
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 10, 16, 16, 16), (40960, 4096, 256, 16, 1), torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, 16, 16, 16), (40960, 4096, 256, 16, 1), torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.copy]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         triton_poi_fused_copy_0.run(buf0, primals_2, buf1, buf2, 40960, grid=grid(40960), stream=stream0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del buf0
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del primals_2
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf3 = buf1; del buf1  # reuse
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         triton_poi_fused_1.run(buf2, buf3, 40960, grid=grid(40960), stream=stream0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf4 = buf2; del buf2  # reuse
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         triton_poi_fused_2.run(buf3, buf4, 40960, grid=grid(40960), stream=stream0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del buf3
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf5 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf5)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, 3), (30, 3, 1), torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.rand]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         triton_poi_fused_rand_3.run(buf5, buf6, 0, 30, grid=grid(30), stream=stream0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del buf5
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.fractional_max_pool3d]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf7 = torch.ops.aten.fractional_max_pool3d.default(buf4, [2, 2, 2], [10, 10, 10], buf6)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del buf6
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf8 = buf7[0]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf9 = buf7[1]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del buf7
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.rrelu_with_noise_functional]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf11 = torch.ops.aten.uniform.default(buf8, 0.125, 0.3333333333333333)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf12 = buf11
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del buf11
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf10 = empty_strided_cuda((1, 10, 10, 10, 10), (10112, 1000, 100, 10, 1), torch.bool)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf13 = reinterpret_tensor(buf8, (1, 10, 10, 10, 10), (10016, 1000, 100, 10, 1), 0); del buf8  # reuse
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf14 = empty_strided_cuda((1, 2, 1, 1), (2, 1, 2, 2), torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf15 = empty_strided_cuda((1, 2, 1, 1), (2, 1, 2, 2), torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf17 = empty_strided_cuda((1, 2, 1, 1), (2, 1, 2, 2), torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.rrelu_with_noise_functional, aten.native_group_norm]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         triton_red_fused_native_group_norm_rrelu_with_noise_functional_4.run(buf13, buf12, buf10, buf14, buf15, buf17, 2, 5000, grid=grid(2), stream=stream0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         buf18 = empty_strided_cuda((1, 10, 2, 2, 5, 50), (10000, 1000, 500, 250, 50, 1), torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.pixel_unshuffle]
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         triton_poi_fused_pixel_unshuffle_5.run(buf13, buf14, buf15, primals_4, primals_5, buf18, 40, 250, grid=grid(40, 250), stream=stream0)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del buf15
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]         del primals_5
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     return (reinterpret_tensor(buf18, (1, 40, 5, 50, 1), (10000, 250, 50, 1, 1), 0), primals_1, primals_3, primals_4, buf4, buf9, buf10, buf12, buf13, reinterpret_tensor(buf14, (1, 2), (2, 1), 0), reinterpret_tensor(buf17, (1, 2), (2, 1), 0), )
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     primals_1 = rand_strided((10, 1, 3, 3, 3), (27, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     primals_2 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     primals_3 = rand_strided((1, 1, 16, 16, 16), (4096, 4096, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     primals_4 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     primals_5 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] if __name__ == "__main__":
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:40:55.504000 2062045 site-packages/torch/_inductor/graph.py:2014] [50/0_1] [__output_code] 
V0205 10:40:55.516000 2062045 site-packages/torch/_inductor/graph.py:2022] [50/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/uo/cuo3332j7cikztmefjhwk7fkgnptgtuff3g7whifzqdusm2bzurs.py
I0205 10:40:56.065000 2062045 site-packages/torch/_inductor/graph.py:2056] [50/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/uo/cuo3332j7cikztmefjhwk7fkgnptgtuff3g7whifzqdusm2bzurs.py

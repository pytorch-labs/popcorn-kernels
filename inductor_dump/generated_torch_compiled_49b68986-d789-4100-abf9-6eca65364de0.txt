V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] Output code: 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] # AOT ID: ['77_forward']
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import torch
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import math
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import random
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import os
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import tempfile
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from math import inf, nan
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from cmath import nanj
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import triton
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import triton.language as tl
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     grid,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     split_scan_grid,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     grid_combo_kernels,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     start_graph,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     end_graph,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] )
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zl/czlhxclsn5vjamff7clyvgrpaukxkcmjnfc5lvyauaafo4bsit3h.py
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional, aten.mean]
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   x => add, add_3, mean, mean_1, mul, mul_6, rsqrt, sub, var_mean
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] # Graph fragment:
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %getitem_1), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %unsqueeze_1), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_3), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_2, [0]), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_4, [0]), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_2, %mean), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_3, %mean_1), kwargs = {})
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_mean_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_mean_0', '''
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import triton
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] import triton.language as tl
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     filename=__file__,
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_mean_0', 'mutated_arg_names': ['in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] )
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] @triton.jit
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_mean_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     xnumel = 3
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     r0_numel = 4096
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     rnumel = r0_numel
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     rbase = r0_base
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     x0 = xindex
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         rindex = r0_index
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         r0_1 = r0_index
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         )
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp16 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp18 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         rindex = r0_index
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         r0_1 = r0_index
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + 4096*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp10 = 4096.0
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp11 = tmp3 / tmp10
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp12 = 1e-05
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp13 = tmp11 + tmp12
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp14 = libdevice.rsqrt(tmp13)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp15 = tmp9 * tmp14
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp17 = tmp15 * tmp16
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tmp19 = tmp17 + tmp18
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + 4096*x0), tmp19, r0_mask & xmask)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp29 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp36 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp20 = 4096.0
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp21 = tmp3 / tmp20
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp22 = 1e-05
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp23 = tmp21 + tmp22
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp24 = libdevice.rsqrt(tmp23)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp25 = 1.0002442002442002
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp26 = tmp21 * tmp25
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp27 = 0.1
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp28 = tmp26 * tmp27
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp30 = 0.9
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp31 = tmp29 * tmp30
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp32 = tmp28 + tmp31
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp33 = 1.0
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp34 = tmp32 / tmp33
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp35 = tmp2 * tmp27
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp37 = tmp36 * tmp30
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp38 = tmp35 + tmp37
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tmp39 = tmp38 / tmp33
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp24, xmask)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp34, xmask)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp39, xmask)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] del async_compile
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] def call(args):
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     args.clear()
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     assert_size_stride(primals_1, (1, 3, 64, 64), (12288, 4096, 64, 1))
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     assert_size_stride(primals_2, (3, ), (1, ))
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     assert_size_stride(primals_3, (3, ), (1, ))
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     assert_size_stride(primals_4, (3, ), (1, ))
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     assert_size_stride(primals_5, (3, ), (1, ))
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, 64, 64), (12288, 4096, 64, 1), torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional, aten.mean]
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_mean_0.run(primals_1, primals_4, primals_5, primals_3, primals_2, buf0, buf4, buf3, primals_3, primals_2, 3, 4096, grid=grid(3), stream=stream0)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         del primals_2
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         del primals_3
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         del primals_4
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]         del primals_5
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     return (buf4, primals_1, reinterpret_tensor(buf3, (3, ), (1, ), 0), reinterpret_tensor(buf0, (1, 3, 1, 1), (3, 1, 1, 1), 0), )
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     primals_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     primals_2 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     primals_3 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     primals_4 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     primals_5 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:02.969000 703210 site-packages/torch/_inductor/graph.py:2014] [338/0_1] [__output_code] 
V0127 11:35:02.973000 703210 site-packages/torch/_inductor/graph.py:2022] [338/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xf/cxfzccnpijnbaalre5vnocd6eirsdaujesybdicgg3evnr4pv6ge.py
I0127 11:35:03.116000 703210 site-packages/torch/_inductor/graph.py:2056] [338/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xf/cxfzccnpijnbaalre5vnocd6eirsdaujesybdicgg3evnr4pv6ge.py
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0] Graph break from `Tensor.item()`, consider setting:
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0]     torch._dynamo.config.capture_scalar_outputs = True
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0] or:
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0] to include these operations in the captured graph.
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0] 
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0] Graph break: from user code at:
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0]   File "<string>", line 32, in torch_dynamo_resume_in_forward_at_20
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0] 
W0127 11:35:03.154000 703210 site-packages/torch/_dynamo/variables/tensor.py:868] [339/0] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] Output code: 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # AOT ID: ['78_forward']
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import torch
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import math
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import random
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import os
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import tempfile
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from math import inf, nan
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from cmath import nanj
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton.language as tl
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     grid,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     split_scan_grid,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     grid_combo_kernels,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     start_graph,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     end_graph,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] )
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zl/czlhxclsn5vjamff7clyvgrpaukxkcmjnfc5lvyauaafo4bsit3h.py
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional, aten.mean]
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   x => add, add_3, mean, mean_1, mul, mul_6, rsqrt, sub, var_mean
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # Graph fragment:
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %getitem_1), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %unsqueeze_1), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_3), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_2, [0]), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_4, [0]), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_2, %mean), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_3, %mean_1), kwargs = {})
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_mean_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_mean_0', '''
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton.language as tl
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     filename=__file__,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_mean_0', 'mutated_arg_names': ['in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] )
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] @triton.jit
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_mean_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     xnumel = 3
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     r0_numel = 4096
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     rnumel = r0_numel
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     rbase = r0_base
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     x0 = xindex
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         rindex = r0_index
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         r0_1 = r0_index
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         )
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp16 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp18 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         rindex = r0_index
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         r0_1 = r0_index
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + 4096*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp10 = 4096.0
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp11 = tmp3 / tmp10
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp12 = 1e-05
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp13 = tmp11 + tmp12
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp14 = libdevice.rsqrt(tmp13)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp15 = tmp9 * tmp14
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp17 = tmp15 * tmp16
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tmp19 = tmp17 + tmp18
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + 4096*x0), tmp19, r0_mask & xmask)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp29 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp36 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp20 = 4096.0
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp21 = tmp3 / tmp20
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp22 = 1e-05
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp23 = tmp21 + tmp22
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp24 = libdevice.rsqrt(tmp23)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp25 = 1.0002442002442002
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp26 = tmp21 * tmp25
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp27 = 0.1
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp28 = tmp26 * tmp27
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp30 = 0.9
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp31 = tmp29 * tmp30
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp32 = tmp28 + tmp31
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp33 = 1.0
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp34 = tmp32 / tmp33
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp35 = tmp2 * tmp27
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp37 = tmp36 * tmp30
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp38 = tmp35 + tmp37
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp39 = tmp38 / tmp33
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp24, xmask)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp34, xmask)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp39, xmask)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] cpp_fused_max_randint_1 = async_compile.cpp_pybinding(['int64_t*', 'int64_t*'], '''
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] extern "C"  void kernel(int64_t* in_out_ptr0,
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                        int64_t* out_ptr0)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] {
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     {
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         {
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]             {
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                 auto tmp0 = in_out_ptr0[static_cast<int64_t>(0L)];
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                 auto tmp2 = static_cast<int64_t>(1);
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                 auto tmp3 = static_cast<int64_t>(4096);
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                 auto tmp4 = randint64_cpu(tmp0, tmp1, tmp2, tmp3);
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                 in_out_ptr0[static_cast<int64_t>(0L)] = tmp4;
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]                 out_ptr0[static_cast<int64_t>(0L)] = tmp4;
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]             }
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         }
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     }
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] }
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] ''')
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] del async_compile
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] def call(args):
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     args.clear()
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     assert_size_stride(primals_1, (1, 3, 64, 64), (12288, 4096, 64, 1))
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     assert_size_stride(primals_2, (3, ), (1, ))
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     assert_size_stride(primals_3, (3, ), (1, ))
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     assert_size_stride(primals_4, (3, ), (1, ))
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     assert_size_stride(primals_5, (3, ), (1, ))
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, 64, 64), (12288, 4096, 64, 1), torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit_functional, aten.mean]
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_mean_0.run(primals_1, primals_4, primals_5, primals_3, primals_2, buf0, buf4, buf3, primals_3, primals_2, 3, 4096, grid=grid(3), stream=stream0)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         del primals_2
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         del primals_3
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         del primals_5
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     buf5 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf5)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     buf6 = buf5; del buf5  # reuse
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     buf15 = empty_strided_cpu((), (), torch.int64)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     cpp_fused_max_randint_1(buf6, buf15)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     return (buf15, reinterpret_tensor(buf4, (4096, 1, 3), (1, 12288, 4096), 0), buf6, primals_1, primals_4, reinterpret_tensor(buf3, (3, ), (1, ), 0), reinterpret_tensor(buf0, (1, 3, 1, 1), (3, 1, 1, 1), 0), )
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     primals_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     primals_2 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     primals_3 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     primals_4 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     primals_5 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:03.362000 703210 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0127 11:35:03.366000 703210 site-packages/torch/_inductor/graph.py:2022] [339/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3j/c3jy64fdne5lk3aepc6lnwuf6rr2b7gi5oead6fdoekn2itgb7yh.py
I0127 11:35:04.408000 703210 site-packages/torch/_inductor/graph.py:2056] [339/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3j/c3jy64fdne5lk3aepc6lnwuf6rr2b7gi5oead6fdoekn2itgb7yh.py
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] Output code: 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # AOT ID: ['79_inference']
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import torch
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import math
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import random
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import os
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import tempfile
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from math import inf, nan
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from cmath import nanj
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] cpp_fused_full_randint_0 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'int64_t*'], '''
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                        int64_t* out_ptr0,
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                        int64_t* out_ptr1)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         #pragma GCC ivdep
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(366L); x0+=static_cast<int64_t>(1L))
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]             {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                 {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                     auto tmp1 = x0;
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                     auto tmp3 = static_cast<int64_t>(0);
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                     auto tmp4 = static_cast<int64_t>(3);
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp5;
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                 }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]             }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]             {
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                 auto tmp0 = static_cast<int64_t>(4096);
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp0;
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]             }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] }
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] ''')
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] del async_compile
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] def call(args):
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     buf0 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     buf1 = empty_strided_cpu((1, 366), (366, 1), torch.int64)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     buf2 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     cpp_fused_full_randint_0(buf0, buf1, buf2)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     return (buf1, buf2, )
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     fn = lambda: call([])
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:04.477000 703210 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0127 11:35:04.478000 703210 site-packages/torch/_inductor/graph.py:2022] [340/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/n4/cn4lybmyt247g3nl35cn54jkcziyvkf7nj3h3dy7xxfy6poqshx3.py
I0127 11:35:05.411000 703210 site-packages/torch/_inductor/graph.py:2056] [340/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/n4/cn4lybmyt247g3nl35cn54jkcziyvkf7nj3h3dy7xxfy6poqshx3.py

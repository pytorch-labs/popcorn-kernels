V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] Output code: 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # AOT ID: ['22_forward']
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import torch
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import math
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import random
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import os
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import tempfile
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from math import inf, nan
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from cmath import nanj
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch import device, empty_strided
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton.language as tl
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     grid,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     split_scan_grid,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     grid_combo_kernels,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     start_graph,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     end_graph,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] )
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] aten = torch.ops.aten
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gm/cgmkq56nwrfhk4s63dn5wpctlqg5d5dxgivny5lkjdwov7epltks.py
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.hardswish]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   x => convolution
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   x_1 => add_4, add_5, add_6, add_7, mul_10, mul_11, mul_5, mul_6, mul_7, mul_8, mul_9, rsqrt, sub_1, var_mean
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   x_2 => add_11, clamp_max, clamp_min, div, mul_15
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Graph fragment:
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %convolution : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_4, %primals_1, %primals_2, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_4,), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %mul_7), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_8, 0.1), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, 0.9), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %mul_10), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_7 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_1), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_7, 3), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_11, 0), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_7, %clamp_max), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_15, 6), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_5), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_6), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_hardswish_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_hardswish_0', '''
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton.language as tl
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 128},
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     filename=__file__,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_hardswish_0', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] )
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] @triton.jit
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_hardswish_0(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr4, out_ptr6, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xnumel = 10
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     rnumel = r0_numel
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     rbase = r0_base
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     x0 = xindex
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         roffset = r0_offset
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         rindex = r0_index
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_1 = r0_index
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         )
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), tmp2, r0_mask & xmask)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp21 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp26 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp10 = ((tl.full([], 0.0, tl.float64)) * ((tl.full([], 0.0, tl.float64)) >= ((-4) + ks0)) + ((-4) + ks0) * (((-4) + ks0) > (tl.full([], 0.0, tl.float64))))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp12 = tmp5 / tmp11
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp13 = 1e-05
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp15 = libdevice.rsqrt(tmp14)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp16 = ((((-40) + 10*ks0) / 10) / ((tl.full([], -1.00000000000000, tl.float64)) + (((-40) + 10*ks0) / 10)))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp18 = tmp12 * tmp17
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp19 = 0.1
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp20 = tmp18 * tmp19
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp22 = 0.9
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp23 = tmp21 * tmp22
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp24 = tmp20 + tmp23
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp25 = tmp4 * tmp19
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp27 = tmp26 * tmp22
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp28 = tmp25 + tmp27
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp15, xmask)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp24, xmask)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp28, xmask)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp32 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp34 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         roffset = r0_offset
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         rindex = r0_index
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_1 = r0_index
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp29 = tl.load(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp30 = tmp29 - tmp4
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp31 = tmp30 * tmp15
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp33 = tmp31 * tmp32
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp35 = tmp33 + tmp34
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp36 = 3.0
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp37 = tmp35 + tmp36
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp38 = 0.0
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp39 = triton_helpers.maximum(tmp37, tmp38)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp40 = 6.0
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp41 = triton_helpers.minimum(tmp39, tmp40)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp42 = tmp35 * tmp41
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp43 = 0.16666666666666666
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp44 = tmp42 * tmp43
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tl.store(in_out_ptr1 + (r0_1 + ((-4)*x0) + ks0*x0), tmp44, r0_mask & xmask)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zt/czti5ww3hkbfoh6kbq2q5vcy46pdzd2je37jucl26n23wpmvdlrl.py
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   add_ => add_3
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Graph fragment:
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_5, 1), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_3), kwargs = {})
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] triton_poi_fused_add_1 = async_compile.triton('triton_poi_fused_add_1', '''
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton.language as tl
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     filename=__file__,
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_1', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] )
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] @triton.jit
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] def triton_poi_fused_add_1(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xnumel = 1
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] async_compile.wait(globals())
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] del async_compile
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] def call(args):
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     args.clear()
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     s0 = primals_3
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_1, (10, 1, 5), (5, 5, 1))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_2, (10, ), (1, ))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_5, (), ())
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_6, (10, ), (1, ))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_7, (10, ), (1, ))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_8, (10, ), (1, ))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_9, (10, ), (1, ))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_4, primals_1, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, (-4) + s0), ((-40) + 10*s0, (-4) + s0, 1))
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, 1), (10, 1, 1), torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 10, 1), (10, 1, 1), torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, (-4) + s0), ((-40) + 10*s0, (-4) + s0, 1), torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.hardswish]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_hardswish_0_r0_numel = (-4) + s0
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_hardswish_0.run(buf1, buf7, primals_2, primals_7, primals_6, primals_8, primals_9, buf2, buf5, primals_7, primals_6, s0, 10, triton_red_fused__native_batch_norm_legit_functional_convolution_hardswish_0_r0_numel, grid=grid(10), stream=stream0)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_2
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_6
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_7
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         triton_poi_fused_add_1.run(primals_5, primals_5, 1, grid=grid(1), stream=stream0)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_5
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     return (reinterpret_tensor(buf7, (1, (-4) + s0, 10), ((-40) + 10*s0, 1, (-4) + s0), 0), primals_1, primals_4, primals_8, primals_9, buf1, buf2, buf5, s0, )
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_1 = rand_strided((10, 1, 5), (5, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_2 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_3 = 100
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 100), (100, 100, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_5 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_6 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_7 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_8 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_9 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] if __name__ == "__main__":
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:40:52.866000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:52.871000 2062045 site-packages/torch/_inductor/graph.py:2022] [48/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pi/cpivsfv6xhetrhdnakstg3zxteoikbnry6zmnuw6qythekzzjodj.py
I0205 10:40:53.034000 2062045 site-packages/torch/_inductor/graph.py:2056] [48/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pi/cpivsfv6xhetrhdnakstg3zxteoikbnry6zmnuw6qythekzzjodj.py
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] Output code: 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # AOT ID: ['22_backward']
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import torch
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import math
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import random
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import os
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import tempfile
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from math import inf, nan
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from cmath import nanj
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch import device, empty_strided
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton.language as tl
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     grid,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     split_scan_grid,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     grid_combo_kernels,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     start_graph,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     end_graph,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] )
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] aten = torch.ops.aten
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/43/c43qrudb4qdl7sgknhw5p7wss35mwsv3u2zgs5i7a2exe6iqvbha.py
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.hardswish_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   x_1 => add_7, mul_11, mul_5, sub_1
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] # Graph fragment:
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_7 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %unsqueeze_1), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%add_7, -3), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%add_7, 3), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_7, 3), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %add_18 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_1, 0.5), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_1, %add_18), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %mul_22, %permute_1), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %where_1 : [num_users=3] = call_function[target=torch.ops.aten.where.self](args = (%lt_1, %full_default, %where), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_1, [0, 2]), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sub_6 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_3), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_1, %sub_6), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_23, [0, 2]), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %unsqueeze_7), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%where_1, %mul_30), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_8, %unsqueeze_5), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_31 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_9), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_31, [0, 2]), kwargs = {})
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardswish_backward_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardswish_backward_native_batch_norm_backward_0', '''
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] import triton.language as tl
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 128},
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     filename=__file__,
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardswish_backward_native_batch_norm_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] )
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] @triton.jit
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardswish_backward_native_batch_norm_backward_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, out_ptr3, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xnumel = 10
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     rnumel = r0_numel
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     rbase = r0_base
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     x0 = xindex
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     _tmp23 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     _tmp27 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         roffset = r0_offset
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         rindex = r0_index
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_1 = r0_index
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp13 = tl.load(in_ptr5 + (x0 + 10*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp2 = tmp0 - tmp1
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp4 = tmp2 * tmp3
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp6 = tmp4 * tmp5
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp8 = tmp6 + tmp7
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp9 = -3.0
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp10 = tmp8 < tmp9
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp11 = 3.0
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp12 = tmp8 <= tmp11
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp14 = 0.3333333333333333
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp15 = tmp8 * tmp14
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp16 = 0.5
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp17 = tmp15 + tmp16
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp18 = tmp13 * tmp17
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp19 = tl.where(tmp12, tmp18, tmp13)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp20 = 0.0
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp21 = tl.where(tmp10, tmp20, tmp19)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp22 = tl.broadcast_to(tmp21, [XBLOCK, R0_BLOCK])
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp24 = _tmp23 + tmp22
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         _tmp23 = tl.where(r0_mask & xmask, tmp24, _tmp23)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp25 = tmp21 * tmp2
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp26 = tl.broadcast_to(tmp25, [XBLOCK, R0_BLOCK])
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp28 = _tmp27 + tmp26
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         _tmp27 = tl.where(r0_mask & xmask, tmp28, _tmp27)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), tmp8, r0_mask & xmask)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp23 = tl.sum(_tmp23, 1)[:, None]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp27 = tl.sum(_tmp27, 1)[:, None]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp23, xmask)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     _tmp57 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         roffset = r0_offset
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         rindex = r0_index
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         r0_1 = r0_index
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp29 = tl.load(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp34 = tl.load(in_ptr5 + (x0 + 10*r0_1), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp43 = tl.load(in_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp30 = -3.0
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp31 = tmp29 < tmp30
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp32 = 3.0
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp33 = tmp29 <= tmp32
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp35 = 0.3333333333333333
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp36 = tmp29 * tmp35
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp37 = 0.5
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp38 = tmp36 + tmp37
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp39 = tmp34 * tmp38
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp40 = tl.where(tmp33, tmp39, tmp34)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp41 = 0.0
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp42 = tl.where(tmp31, tmp41, tmp40)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp44 = tmp43 - tmp1
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp45 = (tl.full([], 1.00000000000000, tl.float64) / (((-40) + 10*ks0) / 10))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp46 = tmp45.to(tl.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp47 = tmp27 * tmp46
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp48 = tmp3 * tmp3
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp49 = tmp47 * tmp48
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp50 = tmp44 * tmp49
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp51 = tmp42 - tmp50
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp52 = tmp23 * tmp46
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp53 = tmp51 - tmp52
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp54 = tmp3 * tmp5
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp55 = tmp53 * tmp54
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp56 = tl.broadcast_to(tmp55, [XBLOCK, R0_BLOCK])
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tmp58 = _tmp57 + tmp56
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         _tmp57 = tl.where(r0_mask & xmask, tmp58, _tmp57)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), tmp55, r0_mask & xmask)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp57 = tl.sum(_tmp57, 1)[:, None]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp57, xmask)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tmp59 = tmp27 * tmp3
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp59, xmask)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] async_compile.wait(globals())
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] del async_compile
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] def call(args):
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_3, primals_1, primals_4, primals_8, primals_9, convolution, getitem_1, rsqrt, tangents_1 = args
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     args.clear()
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     s0 = primals_3
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_1, (10, 1, 5), (5, 5, 1))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_8, (10, ), (1, ))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(primals_9, (10, ), (1, ))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(convolution, (1, 10, (-4) + s0), ((-40) + 10*s0, (-4) + s0, 1))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(getitem_1, (1, 10, 1), (10, 1, 1))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(rsqrt, (1, 10, 1), (10, 1, 1))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     assert_size_stride(tangents_1, (1, (-4) + s0, 10), ((-40) + 10*s0, 10, 1))
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 10, (-4) + s0), ((-40) + 10*s0, (-4) + s0, 1), torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf1 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf3 = buf0; del buf0  # reuse
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf5 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf4 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.hardswish_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardswish_backward_native_batch_norm_backward_0_r0_numel = (-4) + s0
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardswish_backward_native_batch_norm_backward_0.run(buf3, convolution, getitem_1, rsqrt, primals_8, primals_9, tangents_1, buf1, buf5, buf4, s0, 10, triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardswish_backward_native_batch_norm_backward_0_r0_numel, grid=grid(10), stream=stream0)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del convolution
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del getitem_1
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_8
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_9
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del rsqrt
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del tangents_1
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf6 = torch.ops.aten.convolution_backward.default(buf3, primals_4, primals_1, [10], [1], [0], [1], False, [0], 1, [False, True, False])
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del buf3
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_1
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del primals_4
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         buf7 = buf6[1]
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]         del buf6
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     return (buf7, buf5, None, None, None, None, None, buf4, buf1, )
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_3 = 100
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_1 = rand_strided((10, 1, 5), (5, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 100), (100, 100, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_8 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     primals_9 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     convolution = rand_strided((1, 10, 96), (960, 96, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     getitem_1 = rand_strided((1, 10, 1), (10, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     rsqrt = rand_strided((1, 10, 1), (10, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     tangents_1 = rand_strided((1, 96, 10), (960, 10, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     fn = lambda: call([primals_3, primals_1, primals_4, primals_8, primals_9, convolution, getitem_1, rsqrt, tangents_1])
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] if __name__ == "__main__":
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:40:53.200000 2062045 site-packages/torch/_inductor/graph.py:2014] [48/0_1] [__output_code] 
V0205 10:40:53.205000 2062045 site-packages/torch/_inductor/graph.py:2022] [48/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/a4/ca4tup3po4hgnn5hyxmnqqluerc5r3xgdew7foncsklog5xiyc63.py
I0205 10:40:54.466000 2062045 site-packages/torch/_inductor/graph.py:2056] [48/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/a4/ca4tup3po4hgnn5hyxmnqqluerc5r3xgdew7foncsklog5xiyc63.py

W0127 11:39:06.340000 703210 site-packages/torch/_inductor/utils.py:1611] [633/0] DeviceCopy in input program
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] Output code: 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # AOT ID: ['160_inference']
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import torch
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import math
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import random
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import os
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import tempfile
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from math import inf, nan
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from cmath import nanj
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch import device, empty_strided
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import triton
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import triton.language as tl
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     grid,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     split_scan_grid,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     grid_combo_kernels,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     start_graph,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     end_graph,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     cooperative_reduction_grid,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] )
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] aten = torch.ops.aten
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] async_compile = AsyncCompile()
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2a/c2ahxeitjzj4jtkhiq7envho5dkgsvlopenuby2apnn5ig55l4mh.py
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.replication_pad2d]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # Source node to ATen node mapping:
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   x => _unsafe_index, _unsafe_index_1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # Graph fragment:
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %clamp_max, None]), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1]), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] triton_poi_fused_replication_pad2d_0 = async_compile.triton('triton_poi_fused_replication_pad2d_0', '''
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import triton
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import triton.language as tl
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     size_hints={'x': 16384}, 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     filename=__file__,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_replication_pad2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     min_elem_per_thread=0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] )
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] @triton.jit
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] def triton_poi_fused_replication_pad2d_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     xmask = xindex < xnumel
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     x0 = (xindex % 68)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     x1 = ((xindex // 68) % 68)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     x2 = xindex // 4624
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     x3 = xindex
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (64*((63) * ((63) <= (((0) * ((0) >= ((-2) + x1)) + ((-2) + x1) * (((-2) + x1) > (0))))) + (((0) * ((0) >= ((-2) + x1)) + ((-2) + x1) * (((-2) + x1) > (0)))) * ((((0) * ((0) >= ((-2) + x1)) + ((-2) + x1) * (((-2) + x1) > (0)))) < (63))) + 4096*x2 + ((63) * ((63) <= (((0) * ((0) >= ((-2) + x0)) + ((-2) + x0) * (((-2) + x0) > (0))))) + (((0) * ((0) >= ((-2) + x0)) + ((-2) + x0) * (((-2) + x0) > (0)))) * ((((0) * ((0) >= ((-2) + x0)) + ((-2) + x0) * (((-2) + x0) > (0)))) < (63)))), xmask, eviction_policy='evict_last')
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] ''', device_str='cuda')
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] cpp_fused_randint_1 = async_compile.cpp_pybinding(['const int64_t*', 'float*', 'const int64_t'], '''
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                        float* out_ptr0,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                        const int64_t ks0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] {
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     {
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         #pragma GCC ivdep
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(25L*ks0); x0+=static_cast<int64_t>(1L))
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         {
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]             {
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                 {
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     auto tmp1 = x0;
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     auto tmp3 = static_cast<int64_t>(0);
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     auto tmp4 = static_cast<int64_t>(2);
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     auto tmp6 = c10::convert<float>(tmp5);
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp6;
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]                 }
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]             }
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         }
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     }
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] }
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] ''')
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ph/cphqlofxwd6fpx4zljz6javk6ezz4ippq7vglyms7gqxk7wpxmbq.py
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, target_smooth_l1, loss_smooth_l1, loss_bce], Original ATen: [aten.bernoulli, aten.randn_like, aten.smooth_l1_loss, aten.binary_cross_entropy_with_logits]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # Source node to ATen node mapping:
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   loss_bce => abs_2, exp, full_default, log1p, mean_1, minimum, mul_67, neg, sub_30, sub_31, sub_32
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   loss_smooth_l1 => abs_1, div, lt_5, mean, mul_66, pow_1, sub_28, sub_29, where
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   target_smooth_l1 => inductor_lookup_seed_default_1, inductor_random_default
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   x_2 => inductor_lookup_seed_default, inductor_random_default_1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] # Graph fragment:
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, 5, 5], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %sym_size_int_4], %inductor_lookup_seed_default_1, randn), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %sub_28 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %inductor_random_default), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub_28,), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %lt_5 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_1, 2), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %mul_66 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 0.5), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_66, 1.0), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %sub_29 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt_5, %div, %sub_29), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %sub_30 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %device_put), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %mul_67 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_30, %view_1), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default, %view_1), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%view_1,), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_2,), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg,), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %sub_31 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %sub_32 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_67, %sub_31), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_32,), kwargs = {})
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] triton_red_fused_bernoulli_binary_cross_entropy_with_logits_randn_like_smooth_l1_loss_2 = async_compile.triton('triton_red_fused_bernoulli_binary_cross_entropy_with_logits_randn_like_smooth_l1_loss_2', '''
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import triton
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] import triton.language as tl
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] @triton_heuristics.reduction(
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     size_hints={'x': 1, 'r0_': 128},
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     filename=__file__,
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'load_seed_offset': 'i32', 'load_seed_offset1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset1': 1, 'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': (6, 8)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_bernoulli_binary_cross_entropy_with_logits_randn_like_smooth_l1_loss_2', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] )
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] @triton.jit
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] def triton_red_fused_bernoulli_binary_cross_entropy_with_logits_randn_like_smooth_l1_loss_2(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, load_seed_offset, load_seed_offset1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     xnumel = 1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     rnumel = r0_numel
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     rbase = r0_base
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     _tmp29 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     _tmp43 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         roffset = r0_offset
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         rindex = r0_index
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         r0_0 = r0_index
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp5 = tl.load(in_ptr1 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp31 = tl.load(in_ptr2 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp1 = r0_0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp3 = tl.load(in_ptr0 + load_seed_offset1)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp4 = tl.randn(tmp3, (tmp1).to(tl.uint32))
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp6 = 0.5
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp7 = tmp2 < tmp6
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp8 = tmp7.to(tl.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp9 = 0.8864048946659319
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp10 = tmp8 * tmp9
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp11 = tmp5 * tmp10
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp12 = -1.0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp13 = tmp8 + tmp12
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp14 = 1.558387861036063
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp15 = tmp13 * tmp14
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp16 = 0.7791939305180315
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp17 = tmp15 + tmp16
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp18 = tmp11 + tmp17
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp19 = tmp18 - tmp4
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp20 = tl_math.abs(tmp19)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp21 = 1.0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp22 = tmp20 < tmp21
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp23 = tmp20 * tmp20
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp24 = tmp23 * tmp6
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp25 = tmp24 * tmp21
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp26 = tmp20 - tmp6
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp27 = tl.where(tmp22, tmp25, tmp26)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp28 = tl.broadcast_to(tmp27, [XBLOCK, R0_BLOCK])
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp30 = _tmp29 + tmp28
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         _tmp29 = tl.where(r0_mask, tmp30, _tmp29)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp32 = tmp21 - tmp31
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp33 = tmp32 * tmp18
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp34 = 0.0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp35 = triton_helpers.minimum(tmp34, tmp18)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp36 = tl_math.abs(tmp18)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp37 = -tmp36
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp38 = tl_math.exp(tmp37)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp39 = libdevice.log1p(tmp38)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp40 = tmp35 - tmp39
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp41 = tmp33 - tmp40
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp42 = tl.broadcast_to(tmp41, [XBLOCK, R0_BLOCK])
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         tmp44 = _tmp43 + tmp42
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         _tmp43 = tl.where(r0_mask, tmp44, _tmp43)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tmp29 = tl.sum(_tmp29, 1)[:, None]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tmp43 = tl.sum(_tmp43, 1)[:, None]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tmp45 = 25*ks2
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tmp46 = tmp45.to(tl.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tmp47 = tmp43 / tmp46
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tmp48 = tmp29 / tmp46
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tl.debug_barrier()
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp47, None)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tl.debug_barrier()
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp48, None)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] ''', device_str='cuda')
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] async_compile.wait(globals())
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] del async_compile
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] def call(args):
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     args.clear()
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     s0 = arg0_1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     s1 = arg1_1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     s2 = arg2_1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, 64, 64), (4096*s0, 4096, 64, 1))
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf0 = empty_strided_cuda((1, s0, 68, 68), (4624*s0, 4624, 68, 1), torch.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.replication_pad2d]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         triton_poi_fused_replication_pad2d_0_xnumel = 4624*s0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         triton_poi_fused_replication_pad2d_0.run(arg3_1, buf0, triton_poi_fused_replication_pad2d_0_xnumel, grid=grid(triton_poi_fused_replication_pad2d_0_xnumel), stream=stream0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         del arg3_1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.replication_pad2d, aten._adaptive_avg_pool2d]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf1 = torch.ops.aten._adaptive_avg_pool2d.default(buf0, [5, 5])
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         del buf0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf2 = buf1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         del buf1
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf3 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf3)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     buf7 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf7)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     buf8 = empty_strided_cpu((1, 25*s0), (25*s0, 1), torch.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     cpp_fused_randint_1(buf7, buf8, s0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     del buf7
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf9 = empty_strided_cuda((1, 25*s0), (25*s0, 1), torch.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf9.copy_(buf8, False)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         del buf8
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf6 = empty_strided_cuda((), (), torch.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf10 = empty_strided_cuda((), (), torch.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf12 = buf10; del buf10  # reuse
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         buf11 = buf6; del buf6  # reuse
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, target_smooth_l1, loss_smooth_l1, loss_bce], Original ATen: [aten.bernoulli, aten.randn_like, aten.smooth_l1_loss, aten.binary_cross_entropy_with_logits]
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         triton_red_fused_bernoulli_binary_cross_entropy_with_logits_randn_like_smooth_l1_loss_2_r0_numel = 25*s0
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         triton_red_fused_bernoulli_binary_cross_entropy_with_logits_randn_like_smooth_l1_loss_2.run(buf12, buf11, buf3, buf2, buf9, 0, 1, s0, 1, triton_red_fused_bernoulli_binary_cross_entropy_with_logits_randn_like_smooth_l1_loss_2_r0_numel, grid=grid(1), stream=stream0)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         del buf2
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         del buf3
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]         del buf9
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     return (buf11, buf12, )
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     arg0_1 = 3
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     arg1_1 = 64
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     arg2_1 = 64
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] if __name__ == "__main__":
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:39:06.702000 703210 site-packages/torch/_inductor/graph.py:2014] [633/0] [__output_code] 
V0127 11:39:06.707000 703210 site-packages/torch/_inductor/graph.py:2022] [633/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jv/cjvy7okadytypsewhkovscdbj6nlzb7z3sv4raxjcxsrcsq24ycy.py
I0127 11:39:07.886000 703210 site-packages/torch/_inductor/graph.py:2056] [633/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jv/cjvy7okadytypsewhkovscdbj6nlzb7z3sv4raxjcxsrcsq24ycy.py

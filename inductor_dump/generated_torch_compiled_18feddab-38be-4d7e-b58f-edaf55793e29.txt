V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] Output code: 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] # AOT ID: ['76_inference']
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import torch
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import math
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import random
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import os
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import tempfile
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from math import inf, nan
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from cmath import nanj
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch import device, empty_strided
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import triton
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import triton.language as tl
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     grid,
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     split_scan_grid,
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     grid_combo_kernels,
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     start_graph,
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     end_graph,
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     cooperative_reduction_grid,
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] )
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] aten = torch.ops.aten
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] _quantized = torch.ops._quantized
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] async_compile = AsyncCompile()
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sn/csnjckxcdd3ui2b5ceyrtaogupvad3f3g5cl3wd7lyfm5vs6ryp5.py
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] # Topologically Sorted Source Nodes: [result], Original ATen: [aten.threshold]
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] # Source node to ATen node mapping:
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] #   result => full_default, where
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] # Graph fragment:
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] #   %le_tensor : [num_users=1] = call_function[target=torch.ops.aten.le.Tensor](args = (%view, %arg4_1), kwargs = {})
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le_tensor, %full_default, %view), kwargs = {})
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] triton_poi_fused_threshold_0 = async_compile.triton('triton_poi_fused_threshold_0', '''
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import triton
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] import triton.language as tl
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] @triton_heuristics.pointwise(
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     size_hints={'x': 16384}, 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     filename=__file__,
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': 'fp64', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_threshold_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     min_elem_per_thread=0
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] )
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] @triton.jit
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] def triton_poi_fused_threshold_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     xmask = xindex < xnumel
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     x0 = xindex
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp13 = in_ptr1
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp1 = 3.0
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp2 = tmp0 + tmp1
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp3 = 0.0
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp5 = 6.0
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp6 = triton_helpers.minimum(tmp4, tmp5)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp7 = 0.16666666666666666
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp8 = tmp6 * tmp7
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp9 = -1.0
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp11 = 1.0
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp12 = triton_helpers.minimum(tmp10, tmp11)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp15 = tmp12 <= tmp14
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tmp16 = tl.where(tmp15, tmp3, tmp12)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     tl.store(out_ptr0 + (x0), tmp16, xmask)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] ''', device_str='cuda')
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] async_compile.wait(globals())
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] del async_compile
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] def call(args):
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     args.clear()
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     s0 = arg0_1
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     s1 = arg1_1
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     s2 = arg2_1
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     assert_size_stride(arg4_1, (), ())
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         torch.cuda.set_device(0)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         buf0 = empty_strided_cuda((1, s0*s1*s2), (s0*s1*s2, 1), torch.float32)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         # Topologically Sorted Source Nodes: [result], Original ATen: [aten.threshold]
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         triton_poi_fused_threshold_0_xnumel = s0*s1*s2
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         triton_poi_fused_threshold_0.run(arg3_1, arg4_1.item(), buf0, triton_poi_fused_threshold_0_xnumel, grid=grid(triton_poi_fused_threshold_0_xnumel), stream=stream0)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         del arg3_1
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]         del arg4_1
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     return (reinterpret_tensor(buf0, (1, (s0*s1*s2) // 128, 128), (s0*s1*s2, 128, 1), 0), )
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     arg0_1 = 3
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     arg1_1 = 64
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     arg2_1 = 64
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     arg4_1 = rand_strided((), (), device='cpu', dtype=torch.float64)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] if __name__ == "__main__":
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:40:57.191000 1685906 site-packages/torch/_inductor/graph.py:2014] [313/0_2] [__output_code] 
V0124 17:40:57.192000 1685906 site-packages/torch/_inductor/graph.py:2022] [313/0_2] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tl/ctljkli2td73ijo7zpkdpoq3635cruqkns4eghp5hfl6ajrzml4r.py
I0124 17:40:57.431000 1685906 site-packages/torch/_inductor/graph.py:2056] [313/0_2] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tl/ctljkli2td73ijo7zpkdpoq3635cruqkns4eghp5hfl6ajrzml4r.py

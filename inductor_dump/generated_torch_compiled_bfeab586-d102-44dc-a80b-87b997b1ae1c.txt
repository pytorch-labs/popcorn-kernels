W0205 11:33:02.667000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [349/0] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:33:02.915000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [349/0] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] Output code: 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # AOT ID: ['97_forward']
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import torch
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import math
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import random
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import os
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import tempfile
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from math import inf, nan
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from cmath import nanj
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch import device, empty_strided
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     grid,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     split_scan_grid,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     grid_combo_kernels,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     start_graph,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     end_graph,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     cooperative_reduction_grid,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] aten = torch.ops.aten
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] async_compile = AsyncCompile()
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/66/c66d6qjnegt7ep7mtr5uuzju3xugawtas7wc5sg5xjytued4poia.py
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.elu]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   x => convolution
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   x_1 => expm1, gt, mul_4, mul_6, where
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_5, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%convolution, 0), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_4 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 1.0), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %expm1 : [num_users=1] = call_function[target=torch.ops.aten.expm1.default](args = (%mul_4,), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%expm1, 1.0), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%gt, %mul_4, %mul_6), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_poi_fused_convolution_elu_0 = async_compile.triton('triton_poi_fused_convolution_elu_0', '''
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 16384}, 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_elu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     min_elem_per_thread=0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_poi_fused_convolution_elu_0(in_out_ptr0, in_ptr0, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x2 = xindex
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x1 = xindex // ks0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp3 = 0.0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp5 = 1.0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp6 = tmp2 * tmp5
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp7 = libdevice.expm1(tmp6)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp8 = tmp7 * tmp5
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp9 = tl.where(tmp4, tmp6, tmp8)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ak/cakgprb4etghndhnaunnecsf4mqv3yt2ghfrdodqnap32x2x7yfw.py
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.replication_pad2d]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   x_2 => _unsafe_index, _unsafe_index_1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%where, [None, None, %clamp_max, None]), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %_unsafe_index_1 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1]), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_poi_fused_replication_pad2d_1 = async_compile.triton('triton_poi_fused_replication_pad2d_1', '''
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 32768}, 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_replication_pad2d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     min_elem_per_thread=0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_poi_fused_replication_pad2d_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x0 = (xindex % ks0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x2 = xindex // ks2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x3 = xindex
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (ks4*(((-1) + ks3) * (((-1) + ks3) <= (((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0))))) + (((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))) * ((((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))) < ((-1) + ks3))) + ks3*ks4*x2 + (((-1) + ks4) * (((-1) + ks4) <= (((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0))))) + (((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))) * ((((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))) < ((-1) + ks4)))), xmask, eviction_policy='evict_last')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pg/cpgegrvx4z2k3w322cd7n4t6spljbz4x347qj42pr6w6okl6meph.py
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   x_3 => convolution_1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %convolution_1 : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%_unsafe_index_1, %primals_6, %primals_7, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_poi_fused_convolution_2 = async_compile.triton('triton_poi_fused_convolution_2', '''
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 65536}, 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     min_elem_per_thread=0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_poi_fused_convolution_2(in_out_ptr0, in_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x2 = xindex
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x1 = xindex // ks0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zr/czrwarfpnkdygwmmz55iw6zbiy6qhbqiqjcbahh2j247nrjeausy.py
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.constant_pad_nd]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   x_6 => constant_pad_nd
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%unsqueeze, [1, 1, 1, 1, 1, 1], 0.5), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_poi_fused_constant_pad_nd_3 = async_compile.triton('triton_poi_fused_constant_pad_nd_3', '''
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 65536}, 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'ks7': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     min_elem_per_thread=0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_poi_fused_constant_pad_nd_3(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, ks7, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x5 = xindex // ks0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x1 = ((xindex // ks1) % ks2)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x0 = (xindex % ks1)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x2 = xindex // ks5
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x6 = xindex
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp0 = (-1) + x5
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp3 = tl.full([1], 32, tl.int64)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp5 = (-1) + x1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp7 = ks3
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp8 = tmp5 < tmp7
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp9 = (-1) + x0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp10 = tmp9 >= tmp1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp11 = ks4
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp12 = tmp9 < tmp11
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp13 = tmp2 & tmp4
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp14 = tmp13 & tmp6
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp15 = tmp14 & tmp8
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp16 = tmp15 & tmp10
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp17 = tmp16 & tmp12
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp18 = tl.load(in_ptr0 + ((-7) + x0 + ((-3)*ks7) + ((-2)*ks6) + 2*x1 + 4*x2 + ks7*x1 + ((-1)*ks6*ks7) + 2*ks6*x2 + 2*ks7*x2 + ks6*ks7*x2), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp19 = 0.0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp20 = tmp18 > tmp19
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp21 = 1.0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp22 = tmp18 * tmp21
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp23 = libdevice.expm1(tmp22)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp24 = tmp23 * tmp21
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp25 = tl.where(tmp20, tmp22, tmp24)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.5, tmp25.dtype)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp27 = tl.where(tmp17, tmp25, tmp26)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp27, xmask)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xk/cxksdwkded4tr44l5x254z7iiyaw7mmfgo3p6cb6wsoi4zynsbou.py
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.elu]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   x_8 => expm1_2, gt_4, mul_41, mul_43, where_2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%squeeze, 0), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_41 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 1.0), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %expm1_2 : [num_users=1] = call_function[target=torch.ops.aten.expm1.default](args = (%mul_41,), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_43 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%expm1_2, 1.0), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %mul_41, %mul_43), kwargs = {})
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_poi_fused_elu_4 = async_compile.triton('triton_poi_fused_elu_4', '''
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 65536}, 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_elu_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     min_elem_per_thread=0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_poi_fused_elu_4(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x0 = xindex
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp1 = 0.0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp3 = 1.0
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp4 = tmp0 * tmp3
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp5 = libdevice.expm1(tmp4)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp6 = tmp5 * tmp3
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp7 = tl.where(tmp2, tmp4, tmp6)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp7, xmask)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] async_compile.wait(globals())
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] del async_compile
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def call(args):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     args.clear()
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     s1 = primals_3
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     s2 = primals_4
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_6, (32, 16, 3, 3), (144, 9, 3, 1))
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf0 = extern_kernels.convolution(primals_5, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         assert_size_stride(buf0, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps0 = s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf2 = empty_strided_cuda((1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten.elu]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_convolution_elu_0_xnumel = 16*s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_convolution_elu_0.run(buf1, primals_2, buf2, ps0, triton_poi_fused_convolution_elu_0_xnumel, grid=grid(triton_poi_fused_convolution_elu_0_xnumel), stream=stream0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del primals_2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps1 = 2 + s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps2 = 2 + s1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps3 = 4 + 2*s1 + 2*s2 + s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf3 = empty_strided_cuda((1, 16, 2 + s1, 2 + s2), (64 + 32*s1 + 32*s2 + 16*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1), torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.replication_pad2d]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_replication_pad2d_1_xnumel = 64 + 32*s1 + 32*s2 + 16*s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_replication_pad2d_1.run(buf2, buf3, ps1, ps2, ps3, s1, s2, triton_poi_fused_replication_pad2d_1_xnumel, grid=grid(triton_poi_fused_replication_pad2d_1_xnumel), stream=stream0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         assert_size_stride(buf4, (1, 32, 2 + s1, 2 + s2), (128 + 64*s1 + 64*s2 + 32*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1))
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.convolution]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_convolution_2_xnumel = 128 + 64*s1 + 64*s2 + 32*s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_convolution_2.run(buf5, primals_7, ps3, triton_poi_fused_convolution_2_xnumel, grid=grid(triton_poi_fused_convolution_2_xnumel), stream=stream0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del primals_7
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps4 = 16 + 4*s1 + 4*s2 + s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps5 = 4 + s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps6 = 4 + s1
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps7 = 16 + 4*s1 + 4*s2 + s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf6 = empty_strided_cuda((1, 1, 34, 4 + s1, 4 + s2), (544 + 136*s1 + 136*s2 + 34*s1*s2, 544 + 136*s1 + 136*s2 + 34*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.constant_pad_nd]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_constant_pad_nd_3_xnumel = 544 + 136*s1 + 136*s2 + 34*s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_constant_pad_nd_3.run(buf5, buf6, ps4, ps5, ps6, ps2, ps1, ps7, s1, s2, triton_poi_fused_constant_pad_nd_3_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_3_xnumel), stream=stream0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf7 = empty_strided_cuda((1, 34, 4 + s1, 4 + s2), (544 + 136*s1 + 136*s2 + 34*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.elu]
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_elu_4_xnumel = 544 + 136*s1 + 136*s2 + 34*s1*s2
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_elu_4.run(buf6, buf7, triton_poi_fused_elu_4_xnumel, grid=grid(triton_poi_fused_elu_4_xnumel), stream=stream0)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     return (buf7, primals_1, primals_5, primals_6, buf1, buf2, buf3, buf5, buf6, s1, s2, )
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_3 = 32
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_4 = 32
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_5 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_6 = rand_strided((32, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] if __name__ == "__main__":
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:33:03.101000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.109000 3201829 site-packages/torch/_inductor/graph.py:2022] [349/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zk/czkaric73pnqoti4rd4gwvrgig6cyj27vy7v6su2orm7hvpysaso.py
I0205 11:33:03.306000 3201829 site-packages/torch/_inductor/graph.py:2056] [349/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zk/czkaric73pnqoti4rd4gwvrgig6cyj27vy7v6su2orm7hvpysaso.py
W0205 11:33:03.547000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [349/0] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] Output code: 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # AOT ID: ['97_backward']
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import torch
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import math
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import random
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import os
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import tempfile
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from math import inf, nan
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from cmath import nanj
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch import device, empty_strided
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     grid,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     split_scan_grid,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     grid_combo_kernels,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     start_graph,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     end_graph,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     cooperative_reduction_grid,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] aten = torch.ops.aten
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] async_compile = AsyncCompile()
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/di/cdiiwhfp7476cfvxhmjxv4edbwmfumoslouflf6it7qsvh5r7n3r.py
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.constant_pad_nd]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %constant_pad_nd_1 : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%unsqueeze_1, [-1, -1, -1, -1, -1, -1]), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 65536}, 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     min_elem_per_thread=0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x5 = xindex // ks0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x1 = ((xindex // ks1) % ks2)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x0 = (xindex % ks1)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x2 = xindex // ks5
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x6 = xindex
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp0 = 1 + x5
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp3 = tl.full([1], 34, tl.int64)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp5 = 1 + x1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp7 = 4 + ks3
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp8 = tmp5 < tmp7
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp9 = 1 + x0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp10 = tmp9 >= tmp1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp11 = 4 + ks4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp12 = tmp9 < tmp11
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp13 = tmp2 & tmp4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp14 = tmp13 & tmp6
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp15 = tmp14 & tmp8
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp16 = tmp15 & tmp10
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp17 = tmp16 & tmp12
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (21 + x0 + 4*ks3 + 4*x1 + 5*ks4 + 16*x2 + ks3*ks4 + ks4*x1 + 4*ks3*x2 + 4*ks4*x2 + ks3*ks4*x2), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp19 = 0.0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp20 = tmp18 <= tmp19
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (21 + x0 + 4*ks3 + 4*x1 + 5*ks4 + 16*x2 + ks3*ks4 + ks4*x1 + 4*ks3*x2 + 4*ks4*x2 + ks3*ks4*x2), tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp22 = 1.0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp24 = tmp23 * tmp22
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp25 = tmp18 * tmp22
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp26 = tl_math.exp(tmp25)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp27 = tmp24 * tmp26
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp28 = tl.where(tmp20, tmp27, tmp23)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp30 = tl.where(tmp17, tmp28, tmp29)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(out_ptr0 + (x6), tmp30, xmask)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5s/c5sgx7pdzs4umgggbmanutxahzh2xdtm647azdrb2clxhypcl77a.py
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.elu_backward, aten.convolution_backward]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%convolution_1, 0), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_53 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_1, 1), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_54 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_53, 1.0), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution_1, 1), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_55,), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_54, %exp_1), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %where_4 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%le_1, %mul_56, %mul_53), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_4, [0, 2, 3]), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_red_fused_convolution_backward_elu_backward_1 = async_compile.triton('triton_red_fused_convolution_backward_elu_backward_1', '''
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.reduction(
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 32, 'r0_': 2048},
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_elu_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_red_fused_convolution_backward_elu_backward_1(in_out_ptr0, in_ptr0, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xnumel = 32
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     rnumel = r0_numel
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     rbase = r0_base
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x0 = xindex
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     _tmp12 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         roffset = r0_offset
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         rindex = r0_index
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         r0_1 = r0_index
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp1 = 0.0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp2 = tmp0 <= tmp1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp4 = 1.0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp5 = tmp3 * tmp4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp6 = tmp5 * tmp4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp7 = tmp0 * tmp4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp8 = tl_math.exp(tmp7)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp9 = tmp6 * tmp8
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp10 = tl.where(tmp2, tmp9, tmp5)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp11 = tl.broadcast_to(tmp10, [XBLOCK, R0_BLOCK])
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp13 = _tmp12 + tmp11
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         _tmp12 = tl.where(r0_mask & xmask, tmp13, _tmp12)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + 2*ks0*x0 + 2*ks1*x0 + ks0*ks1*x0), tmp10, r0_mask & xmask)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp12 = tl.sum(_tmp12, 1)[:, None]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3p/c3pmr2bkg2n2v3jlj3idml3ew4me6eexxea52vohhdownk2h2kev.py
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.elu_backward, aten.convolution_backward]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Source node to ATen node mapping:
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] # Graph fragment:
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%convolution, 0), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_58 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%replication_pad2d_backward, 1), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_58, 1.0), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_60 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convolution, 1), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %exp_2 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_60,), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %mul_61 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_59, %exp_2), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %where_5 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%le_2, %mul_61, %mul_58), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_5, [0, 2, 3]), kwargs = {})
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_red_fused_convolution_backward_elu_backward_2 = async_compile.triton('triton_red_fused_convolution_backward_elu_backward_2', '''
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] import triton.language as tl
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton_heuristics.reduction(
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     size_hints={'x': 16, 'r0_': 1024},
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     filename=__file__,
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_elu_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] )
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] @triton.jit
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def triton_red_fused_convolution_backward_elu_backward_2(in_out_ptr0, in_ptr0, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xnumel = 16
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     rnumel = r0_numel
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     xmask = xindex < xnumel
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     rbase = r0_base
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     x0 = xindex
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     _tmp12 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         roffset = r0_offset
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         rindex = r0_index
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         r0_1 = r0_index
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp1 = 0.0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp2 = tmp0 <= tmp1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp4 = 1.0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp5 = tmp3 * tmp4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp6 = tmp5 * tmp4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp7 = tmp0 * tmp4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp8 = tl_math.exp(tmp7)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp9 = tmp6 * tmp8
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp10 = tl.where(tmp2, tmp9, tmp5)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp11 = tl.broadcast_to(tmp10, [XBLOCK, R0_BLOCK])
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tmp13 = _tmp12 + tmp11
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         _tmp12 = tl.where(r0_mask & xmask, tmp13, _tmp12)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp10, r0_mask & xmask)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tmp12 = tl.sum(_tmp12, 1)[:, None]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] ''', device_str='cuda')
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] async_compile.wait(globals())
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] del async_compile
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def call(args):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_3, primals_4, primals_1, primals_5, primals_6, convolution, where, _unsafe_index_1, convolution_1, constant_pad_nd, tangents_1 = args
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     args.clear()
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     s1 = primals_3
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     s2 = primals_4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(primals_6, (32, 16, 3, 3), (144, 9, 3, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(convolution, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(where, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(_unsafe_index_1, (1, 16, 2 + s1, 2 + s2), (64 + 32*s1 + 32*s2 + 16*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(convolution_1, (1, 32, 2 + s1, 2 + s2), (128 + 64*s1 + 64*s2 + 32*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(constant_pad_nd, (1, 1, 34, 4 + s1, 4 + s2), (544 + 136*s1 + 136*s2 + 34*s1*s2, 544 + 136*s1 + 136*s2 + 34*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     assert_size_stride(tangents_1, (1, 34, 4 + s1, 4 + s2), (544 + 136*s1 + 136*s2 + 34*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1))
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps0 = 4 + 2*s1 + 2*s2 + s1*s2
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps1 = 2 + s2
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps2 = 2 + s1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         ps3 = 4 + 2*s1 + 2*s2 + s1*s2
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf0 = empty_strided_cuda((1, 1, 32, 2 + s1, 2 + s2), (128 + 64*s1 + 64*s2 + 32*s1*s2, 128 + 64*s1 + 64*s2 + 32*s1*s2, 4 + 2*s1 + 2*s2 + s1*s2, 2 + s2, 1), torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.constant_pad_nd]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 128 + 64*s1 + 64*s2 + 32*s1*s2
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(constant_pad_nd, tangents_1, buf0, ps0, ps1, ps2, s1, s2, ps3, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del constant_pad_nd
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del tangents_1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf1 = convolution_1; del convolution_1  # reuse
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf2 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.elu_backward, aten.convolution_backward]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_red_fused_convolution_backward_elu_backward_1_r0_numel = 4 + 2*s1 + 2*s2 + s1*s2
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_red_fused_convolution_backward_elu_backward_1.run(buf1, buf0, buf2, s1, s2, 32, triton_red_fused_convolution_backward_elu_backward_1_r0_numel, grid=grid(32), stream=stream0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf0
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf3 = torch.ops.aten.convolution_backward.default(buf1, _unsafe_index_1, primals_6, [32], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del _unsafe_index_1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del primals_6
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf4 = buf3[0]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf5 = buf3[1]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf3
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.replication_pad2d_backward]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf6 = torch.ops.aten.replication_pad2d_backward.default(buf4, where, [1, 1, 1, 1])
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf4
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del where
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf7 = buf6
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf6
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf8 = convolution; del convolution  # reuse
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf9 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.elu_backward, aten.convolution_backward]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_red_fused_convolution_backward_elu_backward_2_r0_numel = s1*s2
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         triton_red_fused_convolution_backward_elu_backward_2.run(buf8, buf7, buf9, s1, s2, 16, triton_red_fused_convolution_backward_elu_backward_2_r0_numel, grid=grid(16), stream=stream0)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf7
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf10 = torch.ops.aten.convolution_backward.default(buf8, primals_5, primals_1, [16], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False])
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf8
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del primals_1
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del primals_5
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         buf11 = buf10[1]
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]         del buf10
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     return (buf11, buf9, None, None, None, buf5, buf2, )
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_3 = 32
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_4 = 32
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_5 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     primals_6 = rand_strided((32, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     convolution = rand_strided((1, 16, 32, 32), (16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     where = rand_strided((1, 16, 32, 32), (16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     _unsafe_index_1 = rand_strided((1, 16, 34, 34), (18496, 1156, 34, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     convolution_1 = rand_strided((1, 32, 34, 34), (36992, 1156, 34, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     constant_pad_nd = rand_strided((1, 1, 34, 36, 36), (44064, 44064, 1296, 36, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     tangents_1 = rand_strided((1, 34, 36, 36), (44064, 1296, 36, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     fn = lambda: call([primals_3, primals_4, primals_1, primals_5, primals_6, convolution, where, _unsafe_index_1, convolution_1, constant_pad_nd, tangents_1])
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] if __name__ == "__main__":
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:33:03.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [349/0] [__output_code] 
V0205 11:33:03.744000 3201829 site-packages/torch/_inductor/graph.py:2022] [349/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yk/cykqfhvy2cdtdszyj6nbjjhaf62naarschb4t6veck4ltoefnmnx.py
I0205 11:33:03.931000 3201829 site-packages/torch/_inductor/graph.py:2056] [349/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yk/cykqfhvy2cdtdszyj6nbjjhaf62naarschb4t6veck4ltoefnmnx.py

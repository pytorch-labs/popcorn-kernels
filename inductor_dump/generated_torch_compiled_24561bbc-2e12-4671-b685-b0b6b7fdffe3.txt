V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] Output code: 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # AOT ID: ['107_inference']
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import torch
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import math
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import random
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import os
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import tempfile
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from math import inf, nan
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from cmath import nanj
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch import device, empty_strided
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton.language as tl
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     grid,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     split_scan_grid,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     grid_combo_kernels,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     start_graph,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     end_graph,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     cooperative_reduction_grid,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] )
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] aten = torch.ops.aten
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] async_compile = AsyncCompile()
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mt/cmtesul7zxjctlk2ins3k3hnbrviwqyocfte45aykgcotseebibd.py
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit, aten.view, aten.hardtanh]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   x => add_3, mul_6, rsqrt, sub_1, var_mean, view_1
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   x_1 => clamp_max, clamp_min
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Graph fragment:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %view_1 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_6, [1, 64, %arg0_1]), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%view_1, -1.0), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1.0), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_hardtanh_view_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_hardtanh_view_0', '''
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton.language as tl
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton_heuristics.reduction(
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 128},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     filename=__file__,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_hardtanh_view_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] )
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton.jit
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_hardtanh_view_0(in_ptr0, out_ptr2, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xnumel = 64
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     rnumel = r0_numel
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     rbase = r0_base
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     x0 = xindex
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         roffset = r0_offset
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         rindex = r0_index
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         r0_1 = r0_index
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         )
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         roffset = r0_offset
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         rindex = r0_index
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         r0_1 = r0_index
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp10 = ks0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp11 = tmp10.to(tl.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp12 = tmp3 / tmp11
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp13 = 1e-05
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp14 = tmp12 + tmp13
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp15 = libdevice.rsqrt(tmp14)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp16 = tmp9 * tmp15
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp17 = -1.0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp18 = triton_helpers.maximum(tmp16, tmp17)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp19 = 1.0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tmp20 = triton_helpers.minimum(tmp18, tmp19)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*x0), tmp20, r0_mask & xmask)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] ''', device_str='cuda')
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zf/czfj3xkj4w2dztifzdsf5admvlyn3pwx4gen63koxdozi5hddped.py
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_unpool2d]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   x_2 => full
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Graph fragment:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 64, %sub_11, 1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_poi_fused_max_unpool2d_1 = async_compile.triton('triton_poi_fused_max_unpool2d_1', '''
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton.language as tl
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     size_hints={'x': 8192}, 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     filename=__file__,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] )
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton.jit
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] def triton_poi_fused_max_unpool2d_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     x0 = xindex
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp0 = 0.0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] ''', device_str='cuda')
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6f/c6fphfhooidfyoammjbjcnapeyt3keamjeekd5267jz4pk2bgckj.py
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_unpool2d]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   x_2 => index_put
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Graph fragment:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%view_4, [%view_3], %view_5), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_poi_fused_max_unpool2d_2 = async_compile.triton('triton_poi_fused_max_unpool2d_2', '''
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton.language as tl
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     size_hints={'x': 4096}, 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     filename=__file__,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool2d_2', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] )
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton.jit
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] def triton_poi_fused_max_unpool2d_2(in_ptr0, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     x0 = xindex
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*((x0 % (ks0 // 2))) + ks0*(triton_helpers.div_floor_integer(x0,  ks0 // 2))), xmask, eviction_policy='evict_last')
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*((x0 % (ks0 // 2))) + ks0*(triton_helpers.div_floor_integer(x0,  ks0 // 2))), xmask, eviction_policy='evict_last')
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp2 = tmp1 > tmp0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int8)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int8)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp6 = triton_helpers.maximum(tmp1, tmp0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp7 = tl.full([1], 2, tl.int32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp8 = tl.where((tmp5 < 0) != (tmp7 < 0), tl.where(tmp5 % tmp7 != 0, tmp5 // tmp7 - 1, tmp5 // tmp7), tmp5 // tmp7)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp9 = tmp8 * tmp7
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp10 = tmp5 - tmp9
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp11 = tl.full([1], 0, tl.int64)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp12 = tmp11 + tmp8
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp13 = 2*((x0 % (ks0 // 2)))
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp14 = tmp13 + tmp10
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp15 = ks0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp16 = tmp12 * tmp15
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp17 = tmp16 + tmp14
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp18 = 2*(ks0 // 2)*(triton_helpers.div_floor_integer(x0,  ks0 // 2))
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp19 = tmp17 + tmp18
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp20 = 128*(ks0 // 2)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp21 = tmp19 + tmp20
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp22 = tmp19 < 0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp23 = tl.where(tmp22, tmp21, tmp19)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tl.device_assert(((0 <= tmp23) & (tmp23 < 128*(ks0 // 2))) | ~(xmask), "index out of bounds: 0 <= tmp23 < 128*(ks0 // 2)")
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to((tmp23 % (128*(ks0 // 2))), [XBLOCK])), tmp6, xmask)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] ''', device_str='cuda')
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l6/cl65auwh6nuh7pkd2mbjyazmt4mwalb7rpryh6ocnzzkwfkzqu57.py
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.squeeze]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Source node to ATen node mapping:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   x_2 => squeeze_4
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] # Graph fragment:
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] #   %squeeze_4 : [num_users=1] = call_function[target=torch.ops.aten.squeeze.dim](args = (%view_6, -1), kwargs = {})
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_poi_fused_squeeze_3 = async_compile.triton('triton_poi_fused_squeeze_3', '''
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] import triton.language as tl
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     size_hints={'x': 8192}, 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     filename=__file__,
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_squeeze_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     min_elem_per_thread=0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] )
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] @triton.jit
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] def triton_poi_fused_squeeze_3(in_ptr0, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     xmask = xindex < xnumel
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     x0 = (xindex % ks0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     x1 = xindex // ks0
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     x2 = xindex
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 2*(ks1 // 2)*((((x0 + 2*x1*(ks1 // 2)) // (2*(ks1 // 2))) % 64))), xmask, eviction_policy='evict_last')
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] ''', device_str='cuda')
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] async_compile.wait(globals())
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] del async_compile
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] def call(args):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     args.clear()
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     s1 = arg0_1
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     assert_size_stride(arg1_1, (1, 64, s1), (64*s1, s1, 1))
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 64, s1), (64*s1, s1, 1), torch.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit, aten.view, aten.hardtanh]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_hardtanh_view_0.run(arg1_1, buf3, s1, 64, s1, grid=grid(64), stream=stream0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         del arg1_1
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 64, 2*(s1 // 2), 1), (128*(s1 // 2), 2*(s1 // 2), 1, 1), torch.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_unpool2d]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         triton_poi_fused_max_unpool2d_1_xnumel = 128*(s1 // 2)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         triton_poi_fused_max_unpool2d_1.run(buf4, triton_poi_fused_max_unpool2d_1_xnumel, grid=grid(triton_poi_fused_max_unpool2d_1_xnumel), stream=stream0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_unpool2d]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         triton_poi_fused_max_unpool2d_2_xnumel = 64*(s1 // 2)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         triton_poi_fused_max_unpool2d_2.run(buf3, buf4, s1, triton_poi_fused_max_unpool2d_2_xnumel, grid=grid(triton_poi_fused_max_unpool2d_2_xnumel), stream=stream0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         del buf3
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         ps0 = 2*(s1 // 2)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 64, 2*(s1 // 2)), (128*(s1 // 2), 2*(s1 // 2), 1), torch.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.squeeze]
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         triton_poi_fused_squeeze_3_xnumel = 128*(s1 // 2)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         triton_poi_fused_squeeze_3.run(buf4, buf6, ps0, s1, triton_poi_fused_squeeze_3_xnumel, grid=grid(triton_poi_fused_squeeze_3_xnumel), stream=stream0)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]         del buf4
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     return (buf6, )
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     arg0_1 = 128
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     arg1_1 = rand_strided((1, 64, 128), (8192, 128, 1), device='cuda:0', dtype=torch.float32)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] if __name__ == "__main__":
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:25:16.108000 2827036 site-packages/torch/_inductor/graph.py:2014] [439/0_1] [__output_code] 
V0204 16:25:16.113000 2827036 site-packages/torch/_inductor/graph.py:2022] [439/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/7t/c7tdiiyvl6q6yk4zrjf63sdnxyjufcygj6osyyzsq5su5xii2n7m.py
I0204 16:25:16.292000 2827036 site-packages/torch/_inductor/graph.py:2056] [439/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/7t/c7tdiiyvl6q6yk4zrjf63sdnxyjufcygj6osyyzsq5su5xii2n7m.py
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] Output code: 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] # AOT ID: ['108_inference']
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import torch
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import math
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import random
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import os
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import tempfile
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from math import inf, nan
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from cmath import nanj
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch import device, empty_strided
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import triton
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import triton.language as tl
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     grid,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     split_scan_grid,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     grid_combo_kernels,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     start_graph,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     end_graph,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     cooperative_reduction_grid,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] )
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] aten = torch.ops.aten
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] async_compile = AsyncCompile()
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4l/c4lfwcdvacgufzxpwl3lyao2l7tpliauwdn47fyl5b7yo33p7bzj.py
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] # Topologically Sorted Source Nodes: [x, loss], Original ATen: [aten.hardtanh, aten.smooth_l1_loss]
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] # Source node to ATen node mapping:
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   loss => abs_1, clamp_max, div, lt_2, mean, mul_6, pow_1, sub_5, where
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   x => clamp_min
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] # Graph fragment:
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%arg2_1, -1.0), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1.0), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%clamp_max,), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %lt_2 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_1, 2), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 0.5), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_6, 1.0), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt_2, %div, %sub_5), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] triton_red_fused_hardtanh_smooth_l1_loss_0 = async_compile.triton('triton_red_fused_hardtanh_smooth_l1_loss_0', '''
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import triton
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] import triton.language as tl
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] @triton_heuristics.reduction(
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     size_hints={'x': 1, 'r0_': 8192},
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     filename=__file__,
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_hardtanh_smooth_l1_loss_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] )
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] @triton.jit
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] def triton_red_fused_hardtanh_smooth_l1_loss_0(in_out_ptr0, in_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     xnumel = 1
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     rnumel = r0_numel
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     rbase = r0_base
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     _tmp14 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         r0_index = r0_offset + r0_base
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         r0_mask = r0_index < r0_numel
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         roffset = r0_offset
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         rindex = r0_index
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         r0_0 = r0_index
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp1 = -1.0
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp2 = triton_helpers.maximum(tmp0, tmp1)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp3 = 1.0
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp4 = triton_helpers.minimum(tmp2, tmp3)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp5 = tl_math.abs(tmp4)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp6 = tmp5 < tmp3
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp7 = tmp5 * tmp5
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp8 = 0.5
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp9 = tmp7 * tmp8
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp10 = tmp9 * tmp3
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp11 = tmp5 - tmp8
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp12 = tl.where(tmp6, tmp10, tmp11)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         tmp15 = _tmp14 + tmp13
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         _tmp14 = tl.where(r0_mask, tmp15, _tmp14)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     tmp14 = tl.sum(_tmp14, 1)[:, None]
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     tmp16 = ks0*ks1
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     tmp18 = tmp14 / tmp17
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     tl.debug_barrier()
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp18, None)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] ''', device_str='cuda')
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] async_compile.wait(globals())
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] del async_compile
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] def call(args):
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     args.clear()
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     s2 = arg0_1
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     s3 = arg1_1
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     assert_size_stride(arg2_1, (1, s2, s3), (s2*s3, s3, 1))
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         # Topologically Sorted Source Nodes: [x, loss], Original ATen: [aten.hardtanh, aten.smooth_l1_loss]
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         triton_red_fused_hardtanh_smooth_l1_loss_0_r0_numel = s2*s3
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         triton_red_fused_hardtanh_smooth_l1_loss_0.run(buf1, arg2_1, s2, s3, 1, triton_red_fused_hardtanh_smooth_l1_loss_0_r0_numel, grid=grid(1), stream=stream0)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]         del arg2_1
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     return (buf1, )
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     arg0_1 = 64
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     arg1_1 = 128
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     arg2_1 = rand_strided((1, 64, 128), (8192, 128, 1), device='cuda:0', dtype=torch.float32)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] if __name__ == "__main__":
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:25:16.559000 2827036 site-packages/torch/_inductor/graph.py:2014] [440/0] [__output_code] 
V0204 16:25:16.561000 2827036 site-packages/torch/_inductor/graph.py:2022] [440/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fn/cfnj4mx5d2xxamokirybdqs2odhhmgse5day2verizhkt3ifsmqv.py
I0204 16:25:16.648000 2827036 site-packages/torch/_inductor/graph.py:2056] [440/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fn/cfnj4mx5d2xxamokirybdqs2odhhmgse5day2verizhkt3ifsmqv.py

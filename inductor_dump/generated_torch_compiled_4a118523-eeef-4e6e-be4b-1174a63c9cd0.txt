V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] Output code: 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # AOT ID: ['80_forward']
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import torch
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import random
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import os
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import tempfile
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from math import inf, nan
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from cmath import nanj
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     grid,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     split_scan_grid,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     grid_combo_kernels,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     start_graph,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     end_graph,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fk/cfkqdz7wfpl643poompd5sgmztlr7ycox3wdl33kaxr5e7i6dxco.py
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   add_ => add_4
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_6, 1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_4), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_add_0 = async_compile.triton('triton_poi_fused_add_0', '''
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_0', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_add_0(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xnumel = 1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7a/c7aehrknl3gdnm4t23ju7i5b25u5lyi5h2md74irdrqxqz64gjwh.py
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.arange, aten.add, aten._to_copy]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_4 => add_63, add_66, convert_element_type, convert_element_type_1, iota, mul_79
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %scalar_tensor_default_1 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_3,), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_79 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota, 1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_63 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_79, 0), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_63, torch.float32), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_66 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type, 0.0), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %div_tensor_mode : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor_mode](args = (%scalar_tensor_default_1, %full_default), kwargs = {rounding_mode: floor})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %convert_element_type_default : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%div_tensor_mode, torch.float64), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %full_default_1 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 2.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_1, %convert_element_type_default), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %true_divide_tensor : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%convert_element_type_default, %mul_tensor_2), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %convert_element_type_default_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor, torch.float32), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_66, %convert_element_type_default_1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_3, torch.int64), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused__to_copy_add_arange_1 = async_compile.triton('triton_poi_fused__to_copy_add_arange_1', '''
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 64}, 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused__to_copy_add_arange_1(out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = xindex
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = ks0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = 2.0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tmp1 / tmp2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = libdevice.floor(tmp3)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tmp4.to(tl.float64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = tl.full([1], 2.0, tl.float64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = tmp6 * tmp5
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tmp5 / tmp7
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = x0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp12 = tmp11 * tmp9
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp13 = tmp12.to(tl.int64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ix/cixqd5bf4l2ozwy3k7zc67jy2j2qpftlvgpyjxkg5dm3m3dad76d.py
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x => convolution
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_1 => add_5, add_6, add_7, add_8, mul_10, mul_11, mul_12, mul_13, mul_14, mul_15, mul_16, rsqrt, sub_2, var_mean
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %convolution : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_5, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, 0.9), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_11, %mul_12), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, 0.1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_8, 0.9), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %mul_15), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_10, %unsqueeze_1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_8 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_16, %unsqueeze_3), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_6), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_8, %add_7), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_2 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_2', '''
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4096},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_2', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xnumel = 16
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     rnumel = r0_numel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     rbase = r0_base
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = xindex
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         rindex = r0_index
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_1 = r0_index
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp2, r0_mask & xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp21 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         rindex = r0_index
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_1 = r0_index
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp10 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp11 = tmp10 - tmp4
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp12 = ks0*ks1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp13 = tmp12.to(tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp14 = tmp5 / tmp13
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp15 = 1e-05
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp16 = tmp14 + tmp15
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp18 = tmp11 * tmp17
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp20 = tmp18 * tmp19
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp22 = tmp20 + tmp21
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*ks1*x0), tmp22, r0_mask & xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp34 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp39 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp23 = ks0*ks1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp24 = tmp23.to(tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp25 = tmp5 / tmp24
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp26 = 1e-05
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp27 = tmp25 + tmp26
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp28 = libdevice.rsqrt(tmp27)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp29 = (((16*ks0*ks1) / 16) / ((tl.full([], -1.00000000000000, tl.float64)) + ((16*ks0*ks1) / 16)))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp30 = tmp29.to(tl.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp31 = tmp25 * tmp30
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp32 = 0.1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp33 = tmp31 * tmp32
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp35 = 0.9
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp36 = tmp34 * tmp35
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp37 = tmp33 + tmp36
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp38 = tmp4 * tmp32
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp40 = tmp39 * tmp35
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp41 = tmp38 + tmp40
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp28, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp37, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp41, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/76/c76mnixg3itshqcpadtewef77jqk2lv6z6fokje66gvdu6xnamvg.py
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_2 => getitem_2, getitem_3
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %getitem_2 : [num_users=5] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_max_pool2d_with_indices_3 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_3', '''
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_max_pool2d_with_indices_3(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x2 = xindex // ks2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x3 = xindex
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (1 + ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = tmp1 > tmp0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tl.full([1], 1, tl.int8)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = tl.full([1], 0, tl.int8)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp11 = tmp3 > tmp2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp12 = tl.full([1], 2, tl.int8)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp13 = tl.where(tmp11, tmp12, tmp10)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp14 = tmp5 > tmp4
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp15 = tl.full([1], 3, tl.int8)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp16 = tl.where(tmp14, tmp15, tmp13)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp6, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp16, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nx/cnxh5ewuaioegqct4xhgmmewjudwdqgoc6xod5lhgnzv3muk36iz.py
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.constant_pad_nd]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_3 => constant_pad_nd
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%view, [0, 0, 0, 0, 2, 2], 0.0), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_constant_pad_nd_4 = async_compile.triton('triton_poi_fused_constant_pad_nd_4', '''
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 32768}, 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_4(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x1 = xindex // ks0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x2 = xindex
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = (-2) + x1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tl.full([1], 16, tl.int64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tmp2 & tmp4
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (x2 + ((-2)*ks1*ks2)), tmp5 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = tmp6 * tmp6
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tl.full(tmp7.shape, 0.0, tmp7.dtype)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = tl.where(tmp5, tmp7, tmp8)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/v3/cv3r2cosfs5ytegzduuqnnrjwssy3frqgrc3kfy5kkcv55nbfniw.py
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.avg_pool3d, aten.mul, aten.add, aten.pow, aten.div]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_3 => add_49, avg_pool3d, div, mul_59, pow_1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %avg_pool3d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool3d.default](args = (%constant_pad_nd, [5, 1, 1], [1, 1, 1]), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 0.0001), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_49 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_59, 1.0), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_49, 0.75), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%getitem_2, %pow_1), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_add_avg_pool3d_div_mul_pow_5 = async_compile.triton('triton_poi_fused_add_avg_pool3d_div_mul_pow_5', '''
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_avg_pool3d_div_mul_pow_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_add_avg_pool3d_div_mul_pow_5(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = xindex
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (ks0 + x0), xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (x0 + 2*ks1*ks2), xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 3*ks1*ks2), xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (x0 + 4*ks1*ks2), xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp11 = tl.load(in_ptr1 + (x0), xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = tmp1 + tmp0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = tmp3 + tmp2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = tmp5 + tmp4
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tmp7 + tmp6
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = 0.2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = tmp8 * tmp9
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp12 = 0.0001
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp13 = tmp10 * tmp12
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp14 = 1.0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp15 = tmp13 + tmp14
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp16 = 0.75
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp17 = libdevice.pow(tmp15, tmp16)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp18 = tmp11 / tmp17
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp18, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m4/cm45uyk5tbsz3gxd3vaazger6otff3lr5ougthqqmilbmawrmb2k.py
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._unsafe_index]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_4 => _unsafe_index
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%div, [None, None, %unsqueeze_4, %convert_element_type_3]), kwargs = {})
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused__unsafe_index_6 = async_compile.triton('triton_poi_fused__unsafe_index_6', '''
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 65536}, 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused__unsafe_index_6(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x2 = xindex // ks4
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x3 = xindex
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = ks2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tmp0 < 0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = ks3
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tmp5 < 0
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = tl.where(tmp8, tmp7, tmp5)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = tl.load(in_ptr2 + (tmp9 + ks3*tmp4 + ks2*ks3*x2), xmask, eviction_policy='evict_last')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp10, xmask)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] del async_compile
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def call(args):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     args.clear()
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     s1 = primals_3
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     s2 = primals_4
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_6, (), ())
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_8, (16, ), (1, ))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_10, (16, ), (1, ))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_add_0.run(primals_6, primals_6, 1, grid=grid(1), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_6
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf12 = empty_strided_cuda((2*(s1 // 2), ), (1, ), torch.int64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.arange, aten.add, aten._to_copy]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_1_xnumel = 2*(s1 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_1.run(buf12, s1, triton_poi_fused__to_copy_add_arange_1_xnumel, grid=grid(triton_poi_fused__to_copy_add_arange_1_xnumel), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf13 = empty_strided_cuda((2*(s2 // 2), ), (1, ), torch.int64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.arange, aten.add, aten._to_copy]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_1_xnumel = 2*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_1.run(buf13, s2, triton_poi_fused__to_copy_add_arange_1_xnumel, grid=grid(triton_poi_fused__to_copy_add_arange_1_xnumel), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_5, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         assert_size_stride(buf0, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 16, 1, 1), (16, 1, 16, 16), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 16, 1, 1), (16, 1, 16, 16), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_2_r0_numel = s1*s2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_2.run(buf1, primals_2, primals_9, primals_10, primals_8, primals_7, buf2, buf6, buf5, primals_8, primals_7, s1, s2, 16, triton_red_fused__native_batch_norm_legit_functional_convolution_2_r0_numel, grid=grid(16), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_10
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_7
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_8
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps0 = s2 // 2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps1 = s1 // 2
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps2 = (s1 // 2)*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.int8)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.max_pool2d_with_indices]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_max_pool2d_with_indices_3_xnumel = 16*(s1 // 2)*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_max_pool2d_with_indices_3.run(buf6, buf7, buf8, ps0, ps1, ps2, s1, s2, triton_poi_fused_max_pool2d_with_indices_3_xnumel, grid=grid(triton_poi_fused_max_pool2d_with_indices_3_xnumel), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf9 = empty_strided_cuda((1, 1, 20, s1 // 2, s2 // 2), (20*(s1 // 2)*(s2 // 2), 20*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.constant_pad_nd]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_4_xnumel = 20*(s1 // 2)*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_4.run(buf7, buf9, ps2, ps0, ps1, triton_poi_fused_constant_pad_nd_4_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_4_xnumel), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf10 = empty_strided_cuda((1, 1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), 16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf11 = empty_strided_cuda((1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.avg_pool3d, aten.mul, aten.add, aten.pow, aten.div]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_add_avg_pool3d_div_mul_pow_5_xnumel = 16*(s1 // 2)*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_add_avg_pool3d_div_mul_pow_5.run(buf9, buf7, buf10, buf11, ps2, ps0, ps1, triton_poi_fused_add_avg_pool3d_div_mul_pow_5_xnumel, grid=grid(triton_poi_fused_add_avg_pool3d_div_mul_pow_5_xnumel), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps3 = 2*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps4 = 2*(s1 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps5 = 4*(s1 // 2)*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf14 = empty_strided_cuda((1, 16, 2*(s1 // 2), 2*(s2 // 2)), (64*(s1 // 2)*(s2 // 2), 4*(s1 // 2)*(s2 // 2), 2*(s2 // 2), 1), torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten._unsafe_index]
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__unsafe_index_6_xnumel = 64*(s1 // 2)*(s2 // 2)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__unsafe_index_6.run(buf12, buf13, buf11, buf14, ps3, ps4, ps1, ps0, ps5, triton_poi_fused__unsafe_index_6_xnumel, grid=grid(triton_poi_fused__unsafe_index_6_xnumel), stream=stream0)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     return (reinterpret_tensor(buf14, (1, 4*(s1 // 2)*(s2 // 2), 16), (64*(s1 // 2)*(s2 // 2), 1, 4*(s1 // 2)*(s2 // 2)), 0), 2*(s1 // 2), 2*(s2 // 2), primals_1, primals_5, primals_9, buf1, reinterpret_tensor(buf5, (16, ), (1, ), 0), buf6, buf7, buf8, buf9, buf10, buf11, reinterpret_tensor(buf12, (2*(s1 // 2), 1), (1, 1), 0), buf13, reinterpret_tensor(buf2, (1, 16, 1, 1), (16, 1, 1, 1), 0), s2, s1, s1 // 2, s2 // 2, 2*(s1 // 2), 2*(s2 // 2), 16*s1*s2, )
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_3 = 64
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_4 = 64
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_5 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_6 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_8 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_10 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:11.814000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:11.827000 703210 site-packages/torch/_inductor/graph.py:2022] [346/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ie/cie5rabgwwpzoj5xm3dnmulayfgilzggphndrpdunigm22kn4vov.py
I0127 11:35:12.026000 703210 site-packages/torch/_inductor/graph.py:2056] [346/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ie/cie5rabgwwpzoj5xm3dnmulayfgilzggphndrpdunigm22kn4vov.py
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] Output code: 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # AOT ID: ['80_backward']
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import torch
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import math
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import random
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import os
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import tempfile
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from math import inf, nan
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from cmath import nanj
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     grid,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     split_scan_grid,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     grid_combo_kernels,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     start_graph,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     end_graph,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pj/cpjgxufjaubxpycgwqc4e766ffuflt5n3aqezmd4jefexd6fqqrx.py
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %full_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 16, %sym_size_int_2, %sym_size_int_3], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_new_zeros_0 = async_compile.triton('triton_poi_fused_new_zeros_0', '''
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_new_zeros_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_new_zeros_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = xindex
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = 0.0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ll/clltwc6wq76esvmzwzmcnvgyztktwos4i77fz772hm3rdshwivoc.py
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros, aten._unsafe_index_put]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %full_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 16, %sym_size_int_2, %sym_size_int_3], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %index_put : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%full_1, [None, None, %unsqueeze_4, %convert_element_type_3], %view_3, True), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused__unsafe_index_put_new_zeros_1 = async_compile.triton('triton_poi_fused__unsafe_index_put_new_zeros_1', '''
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 65536}, 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_put_new_zeros_1', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused__unsafe_index_put_new_zeros_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x2 = xindex // ks0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x1 = ((xindex // 16) % ks2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x3 = xindex
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = (xindex % 16)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp12 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = ks1 // 2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tmp0 < 0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < ks1 // 2)) | ~(xmask), "index out of bounds: 0 <= tmp4 < ks1 // 2")
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = ks3 // 2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = tmp6 < 0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = tl.where(tmp9, tmp8, tmp6)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.device_assert(((0 <= tmp10) & (tmp10 < ks3 // 2)) | ~(xmask), "index out of bounds: 0 <= tmp10 < ks3 // 2")
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.atomic_add(out_ptr0 + (tmp10 + tmp4*(ks3 // 2) + x0*(ks1 // 2)*(ks3 // 2)), tmp12, xmask, sem='relaxed')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dm/cdmq374lvom2qc2qpclpkn6gqmybnru7pn4wyzzrzmthhfdpmkdj.py
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.mul, aten.add, aten.pow, aten.div, aten.neg]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_3 => add_49, mul_59, pow_1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 0.0001), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_49 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_59, 1.0), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %pow_1 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_49, 0.75), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%div, %pow_1), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%index_put,), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_110 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, %div_2), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_49, -0.25), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_111 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%pow_2, 0.75), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_112 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_110, %mul_111), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_113 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_112, 0.0001), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_add_div_mul_neg_pow_2 = async_compile.triton('triton_poi_fused_add_div_mul_neg_pow_2', '''
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_neg_pow_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_add_div_mul_neg_pow_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = xindex
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x0), xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = -tmp0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = 0.0001
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tmp3 * tmp4
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = 1.0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = 0.75
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = libdevice.pow(tmp7, tmp8)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = tmp2 / tmp9
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp11 = tmp1 * tmp10
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp12 = -0.25
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp13 = libdevice.pow(tmp7, tmp12)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp14 = tmp13 * tmp8
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp15 = tmp11 * tmp14
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp16 = tmp15 * tmp4
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp16, xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3p/c3pyqh6nbajyi7s6skgjya744khjsstbch3fwl5sqmzqead7hw7v.py
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.avg_pool3d_backward]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %avg_pool3d_backward : [num_users=1] = call_function[target=torch.ops.aten.avg_pool3d_backward.default](args = (%unsqueeze_5, %constant_pad_nd, [5, 1, 1], [1, 1, 1], [0, 0, 0], False, True, None), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_avg_pool3d_backward_3 = async_compile.triton('triton_poi_fused_avg_pool3d_backward_3', '''
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 32768}, 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool3d_backward_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_avg_pool3d_backward_3(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x2 = xindex // ks2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x5 = xindex
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + ((ks4 // 2)*((x1) * ((x1) <= ((-1) + ((1 + x1) * ((1 + x1) <= (ks3 // 2)) + (ks3 // 2) * ((ks3 // 2) < (1 + x1))))) + ((-1) + ((1 + x1) * ((1 + x1) <= (ks3 // 2)) + (ks3 // 2) * ((ks3 // 2) < (1 + x1)))) * (((-1) + ((1 + x1) * ((1 + x1) <= (ks3 // 2)) + (ks3 // 2) * ((ks3 // 2) < (1 + x1)))) < (x1))) + (ks3 // 2)*(ks4 // 2)*((((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) * ((((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) <= ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16))))) + ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) * (((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) < (((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))))) + ((x0) * ((x0) <= ((-1) + ((1 + x0) * ((1 + x0) <= (ks4 // 2)) + (ks4 // 2) * ((ks4 // 2) < (1 + x0))))) + ((-1) + ((1 + x0) * ((1 + x0) <= (ks4 // 2)) + (ks4 // 2) * ((ks4 // 2) < (1 + x0)))) * (((-1) + ((1 + x0) * ((1 + x0) <= (ks4 // 2)) + (ks4 // 2) * ((ks4 // 2) < (1 + x0)))) < (x0)))), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (ks0*((x1) * ((x1) <= ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1))))) + ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) * (((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) < (x1))) + ks0*ks1*((1 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) * ((1 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) <= ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16))))) + ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) * (((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) < (1 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))))) + ((x0) * ((x0) <= ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0))))) + ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) * (((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) < (x0)))), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp23 = tl.load(in_ptr0 + (ks0*((x1) * ((x1) <= ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1))))) + ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) * (((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) < (x1))) + ks0*ks1*((2 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) * ((2 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) <= ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16))))) + ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) * (((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) < (2 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))))) + ((x0) * ((x0) <= ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0))))) + ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) * (((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) < (x0)))), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp31 = tl.load(in_ptr0 + (ks0*((x1) * ((x1) <= ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1))))) + ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) * (((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) < (x1))) + ks0*ks1*((3 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) * ((3 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) <= ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16))))) + ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) * (((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) < (3 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))))) + ((x0) * ((x0) <= ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0))))) + ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) * (((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) < (x0)))), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp39 = tl.load(in_ptr0 + (ks0*((x1) * ((x1) <= ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1))))) + ((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) * (((-1) + ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))) < (x1))) + ks0*ks1*((4 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) * ((4 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))) <= ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16))))) + ((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) * (((-1) + ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))) < (4 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))))) + ((x0) * ((x0) <= ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0))))) + ((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) * (((-1) + ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))) < (x0)))), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tmp0 / 5
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = ((16) * ((16) <= (1 + x2)) + (1 + x2) * ((1 + x2) < (16)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = tmp2 < tmp3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = x1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = ((ks1) * ((ks1) <= (1 + x1)) + (1 + x1) * ((1 + x1) < (ks1)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = tmp5 < tmp6
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tmp4 & tmp7
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = x0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = ((ks0) * ((ks0) <= (1 + x0)) + (1 + x0) * ((1 + x0) < (ks0)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp11 = tmp9 < tmp10
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp12 = tmp8 & tmp11
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp13 = 0.0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp14 = tl.where(tmp12, tmp1, tmp13)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp16 = tmp15 / 5
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp17 = 1 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp18 = tmp17 < tmp3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp19 = tmp18 & tmp7
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp20 = tmp19 & tmp11
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp21 = tmp14 + tmp16
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp22 = tl.where(tmp20, tmp21, tmp14)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp24 = tmp23 / 5
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp25 = 2 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp26 = tmp25 < tmp3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp27 = tmp26 & tmp7
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp28 = tmp27 & tmp11
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp29 = tmp22 + tmp24
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp30 = tl.where(tmp28, tmp29, tmp22)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp32 = tmp31 / 5
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp33 = 3 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp34 = tmp33 < tmp3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp35 = tmp34 & tmp7
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp36 = tmp35 & tmp11
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp37 = tmp30 + tmp32
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp38 = tl.where(tmp36, tmp37, tmp30)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp40 = tmp39 / 5
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp41 = 4 + ((0) * ((0) >= ((-4) + x2)) + ((-4) + x2) * (((-4) + x2) > (0)))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp42 = tmp41 < tmp3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp43 = tmp42 & tmp7
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp44 = tmp43 & tmp11
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp45 = tmp38 + tmp40
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp46 = tl.where(tmp44, tmp45, tmp38)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x5), tmp46, xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/li/clirxtdvroh274hbjddip5a2xbxry7lcsu25lciqu4i473kfwei6.py
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.mul, aten.add, aten.pow, aten.div]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_3 => add_49, mul_59, pow_1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 0.0001), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_49 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_59, 1.0), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %pow_1 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_49, 0.75), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%index_put, %pow_1), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_114 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_5, %getitem_2), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_97 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_3, %mul_114), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_98 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_97, %mul_114), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_poi_fused_add_div_mul_pow_4 = async_compile.triton('triton_poi_fused_add_div_mul_pow_4', '''
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_pow_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_poi_fused_add_div_mul_pow_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x2 = xindex
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x1 = xindex // ks0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp16 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp2 = 0.0001
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp4 = 1.0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp5 = tmp3 + tmp4
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp6 = 0.75
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp7 = libdevice.pow(tmp5, tmp6)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp8 = tmp0 / tmp7
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp9 = 2 + x1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp11 = tmp9 >= tmp10
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp12 = tl.full([1], 20, tl.int64)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp13 = tmp9 < tmp12
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp14 = tmp11 & tmp13
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp15 = tl.load(in_ptr1 + (x2 + 2*ks1*ks2), tmp14 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp17 = tmp15 * tmp16
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp18 = tmp8 + tmp17
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp19 = tmp18 + tmp17
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp19, xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ec/cec2cmqy5hftzlggzgbmvnvtux63am6jv7dqp52iwnjtaol6s7mu.py
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_2], Original ATen: [aten.mul, aten.add, aten.pow, aten.div, aten.max_pool2d_with_indices, aten.max_pool2d_with_indices_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_2 => _low_memory_max_pool2d_offsets_to_indices
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   x_3 => add_49, mul_59, pow_1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] # Graph fragment:
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_1, 0.0001), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_49 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_59, 1.0), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %pow_1 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_49, 0.75), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%index_put, %pow_1), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_114 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_5, %getitem_2), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_97 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_3, %mul_114), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %add_98 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_97, %mul_114), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %_low_memory_max_pool2d_offsets_to_indices : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_offsets_to_indices.default](args = (%getitem_3, 2, %primals_4, [2, 2], [0, 0]), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %max_pool2d_with_indices_backward : [num_users=3] = call_function[target=torch.ops.aten.max_pool2d_with_indices_backward.default](args = (%add_98, %add_8, [2, 2], [2, 2], [0, 0], [1, 1], False, %_low_memory_max_pool2d_offsets_to_indices), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%max_pool2d_with_indices_backward, [0, 2, 3]), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %sub_47 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_8), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_116 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%max_pool2d_with_indices_backward, %sub_47), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_116, [0, 2, 3]), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_124 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_47, %unsqueeze_14), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %sub_49 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%max_pool2d_with_indices_backward, %mul_124), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %sub_50 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_49, %unsqueeze_11), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_125 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_50, %unsqueeze_17), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %mul_126 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_125, [0, 2, 3]), kwargs = {})
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_red_fused_add_convolution_backward_div_max_pool2d_with_indices_max_pool2d_with_indices_backward_mul_native_batch_norm_backward_pow_5 = async_compile.triton('triton_red_fused_add_convolution_backward_div_max_pool2d_with_indices_max_pool2d_with_indices_backward_mul_native_batch_norm_backward_pow_5', '''
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] import triton.language as tl
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4096},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     filename=__file__,
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i8', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_convolution_backward_div_max_pool2d_with_indices_max_pool2d_with_indices_backward_mul_native_batch_norm_backward_pow_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] @triton.jit
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def triton_red_fused_add_convolution_backward_div_max_pool2d_with_indices_max_pool2d_with_indices_backward_mul_native_batch_norm_backward_pow_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, out_ptr3, ks0, ks1, ks2, ks3, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xnumel = 16
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     rnumel = r0_numel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     rbase = r0_base
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     x0 = xindex
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     _tmp18 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp21 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     _tmp25 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         rindex = r0_index
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_1 = (r0_index % ks0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_2 = r0_index // ks0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_3 = r0_index
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (ks1*((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) * ((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) <= ((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2))))) + ((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2)))) * (((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2)))) < (((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))))) + ks1*ks2*x0 + ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) * ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) <= ((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1))))) + ((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1)))) * (((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1)))) < (((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0))))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp12 = tl.load(in_ptr1 + (ks1*((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) * ((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) <= ((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2))))) + ((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2)))) * (((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2)))) < (((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))))) + ks1*ks2*x0 + ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) * ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) <= ((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1))))) + ((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1)))) * (((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1)))) < (((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0))))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp20 = tl.load(in_ptr2 + (r0_3 + ks0*ks3*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp1 = tl.full([1, 1], 2, tl.int32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp2 = tl.where((tmp0 < 0) != (tmp1 < 0), tl.where(tmp0 % tmp1 != 0, tmp0 // tmp1 - 1, tmp0 // tmp1), tmp0 // tmp1)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp3 = tmp2 * tmp1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp4 = tmp0 - tmp3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp5 = 2*((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) * ((((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0)))) <= ((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2))))) + ((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2)))) * (((-1) + ((ks2) * ((ks2) <= (1 + (r0_2 // 2))) + (1 + (r0_2 // 2)) * ((1 + (r0_2 // 2)) < (ks2)))) < (((0) * ((0) >= (r0_2 // 2)) + (r0_2 // 2) * ((r0_2 // 2) > (0))))))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp6 = tmp5 + tmp2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp7 = 2*((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) * ((((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0)))) <= ((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1))))) + ((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1)))) * (((-1) + ((ks1) * ((ks1) <= (1 + (r0_1 // 2))) + (1 + (r0_1 // 2)) * ((1 + (r0_1 // 2)) < (ks1)))) < (((0) * ((0) >= (r0_1 // 2)) + (r0_1 // 2) * ((r0_1 // 2) > (0))))))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp8 = tmp7 + tmp4
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp9 = ks0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp10 = tmp6 * tmp9
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp11 = tmp10 + tmp8
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp13 = r0_3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp14 = tmp11 == tmp13
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp15 = 0.0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp16 = tl.where(tmp14, tmp12, tmp15)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp17 = tl.broadcast_to(tmp16, [XBLOCK, R0_BLOCK])
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp19 = _tmp18 + tmp17
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         _tmp18 = tl.where(r0_mask & xmask, tmp19, _tmp18)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp22 = tmp20 - tmp21
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp23 = tmp16 * tmp22
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp24 = tl.broadcast_to(tmp23, [XBLOCK, R0_BLOCK])
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp26 = _tmp25 + tmp24
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         _tmp25 = tl.where(r0_mask & xmask, tmp26, _tmp25)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_3 + ks0*ks3*x0), tmp16, r0_mask & xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp18 = tl.sum(_tmp18, 1)[:, None]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp25 = tl.sum(_tmp25, 1)[:, None]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp18, xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp33 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp40 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     _tmp44 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         roffset = r0_offset
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         rindex = r0_index
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         r0_3 = r0_index
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp27 = tl.load(in_out_ptr0 + (r0_3 + ks0*ks3*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp28 = tl.load(in_ptr2 + (r0_3 + ks0*ks3*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp29 = tmp28 - tmp21
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp30 = (tl.full([], 1.00000000000000, tl.float64) / ((16*ks0*ks3) / 16))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp31 = tmp30.to(tl.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp32 = tmp25 * tmp31
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp34 = tmp33 * tmp33
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp35 = tmp32 * tmp34
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp36 = tmp29 * tmp35
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp37 = tmp27 - tmp36
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp38 = tmp18 * tmp31
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp39 = tmp37 - tmp38
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp41 = tmp33 * tmp40
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp42 = tmp39 * tmp41
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp43 = tl.broadcast_to(tmp42, [XBLOCK, R0_BLOCK])
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tmp45 = _tmp44 + tmp43
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         _tmp44 = tl.where(r0_mask & xmask, tmp45, _tmp44)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_3 + ks0*ks3*x0), tmp42, r0_mask & xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp44 = tl.sum(_tmp44, 1)[:, None]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp44, xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tmp46 = tmp25 * tmp33
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp46, xmask)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] del async_compile
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def call(args):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_4, primals_3, sym_size_int_2, sym_size_int_3, floordiv, floordiv_1, mul_118, primals_1, primals_5, primals_9, convolution, squeeze_1, add_8, getitem_2, getitem_3, constant_pad_nd, avg_pool3d, div, unsqueeze_4, convert_element_type_3, unsqueeze_8, tangents_1 = args
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     args.clear()
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     s2 = primals_4
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     s1 = primals_3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(convolution, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(squeeze_1, (16, ), (1, ))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(add_8, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(getitem_2, (1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(getitem_3, (1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(constant_pad_nd, (1, 1, 20, s1 // 2, s2 // 2), (20*(s1 // 2)*(s2 // 2), 20*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(avg_pool3d, (1, 1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), 16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(div, (1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(unsqueeze_4, (2*(s1 // 2), 1), (1, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(convert_element_type_3, (2*(s2 // 2), ), (1, ))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(unsqueeze_8, (1, 16, 1, 1), (16, 1, 1, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 4*(s1 // 2)*(s2 // 2), 16), (64*(s1 // 2)*(s2 // 2), 16, 1))
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_new_zeros_0_xnumel = 16*(s1 // 2)*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_new_zeros_0.run(buf0, triton_poi_fused_new_zeros_0_xnumel, grid=grid(triton_poi_fused_new_zeros_0_xnumel), stream=stream0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps0 = 32*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps1 = 2*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros, aten._unsafe_index_put]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_new_zeros_1_xnumel = 64*(s1 // 2)*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_new_zeros_1.run(unsqueeze_4, convert_element_type_3, tangents_1, buf0, ps0, s1, ps1, s2, triton_poi_fused__unsafe_index_put_new_zeros_1_xnumel, grid=grid(triton_poi_fused__unsafe_index_put_new_zeros_1_xnumel), stream=stream0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del convert_element_type_3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del tangents_1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del unsqueeze_4
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf2 = div; del div  # reuse
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.mul, aten.add, aten.pow, aten.div, aten.neg]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_add_div_mul_neg_pow_2_xnumel = 16*(s1 // 2)*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_add_div_mul_neg_pow_2.run(buf2, buf0, avg_pool3d, triton_poi_fused_add_div_mul_neg_pow_2_xnumel, grid=grid(triton_poi_fused_add_div_mul_neg_pow_2_xnumel), stream=stream0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps2 = s2 // 2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps3 = s1 // 2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         ps4 = (s1 // 2)*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 1, 20, s1 // 2, s2 // 2), (20*(s1 // 2)*(s2 // 2), 20*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.avg_pool3d_backward]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_avg_pool3d_backward_3_xnumel = 20*(s1 // 2)*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_avg_pool3d_backward_3.run(buf2, buf3, ps2, ps3, ps4, s1, s2, triton_poi_fused_avg_pool3d_backward_3_xnumel, grid=grid(triton_poi_fused_avg_pool3d_backward_3_xnumel), stream=stream0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del buf2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf4 = reinterpret_tensor(avg_pool3d, (1, 16, s1 // 2, s2 // 2), (16*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), 0); del avg_pool3d  # reuse
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.mul, aten.add, aten.pow, aten.div]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_add_div_mul_pow_4_xnumel = 16*(s1 // 2)*(s2 // 2)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_poi_fused_add_div_mul_pow_4.run(buf4, buf0, buf3, getitem_2, ps4, ps2, ps3, triton_poi_fused_add_div_mul_pow_4_xnumel, grid=grid(triton_poi_fused_add_div_mul_pow_4_xnumel), stream=stream0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del buf0
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del buf3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del getitem_2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1), torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf6 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf8 = buf5; del buf5  # reuse
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf10 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf9 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_2], Original ATen: [aten.mul, aten.add, aten.pow, aten.div, aten.max_pool2d_with_indices, aten.max_pool2d_with_indices_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_red_fused_add_convolution_backward_div_max_pool2d_with_indices_max_pool2d_with_indices_backward_mul_native_batch_norm_backward_pow_5_r0_numel = s1*s2
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         triton_red_fused_add_convolution_backward_div_max_pool2d_with_indices_max_pool2d_with_indices_backward_mul_native_batch_norm_backward_pow_5.run(buf8, getitem_3, buf4, convolution, unsqueeze_8, squeeze_1, primals_9, buf6, buf10, buf9, s2, ps2, ps3, s1, 16, triton_red_fused_add_convolution_backward_div_max_pool2d_with_indices_max_pool2d_with_indices_backward_mul_native_batch_norm_backward_pow_5_r0_numel, grid=grid(16), stream=stream0)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del buf4
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del convolution
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del getitem_3
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_9
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del squeeze_1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del unsqueeze_8
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf11 = torch.ops.aten.convolution_backward.default(buf8, primals_5, primals_1, [16], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False])
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del buf8
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_1
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del primals_5
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         buf12 = buf11[1]
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]         del buf11
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     return (buf12, buf10, None, None, None, None, None, None, buf9, buf6, )
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_4 = 64
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_3 = 64
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     sym_size_int_2 = 32
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     sym_size_int_3 = 32
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     floordiv = 64
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     floordiv_1 = 64
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     mul_118 = 65536
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_5 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     convolution = rand_strided((1, 16, 64, 64), (65536, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     squeeze_1 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     add_8 = rand_strided((1, 16, 64, 64), (65536, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     getitem_2 = rand_strided((1, 16, 32, 32), (16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     getitem_3 = rand_strided((1, 16, 32, 32), (16384, 1024, 32, 1), device='cuda:0', dtype=torch.int8)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     constant_pad_nd = rand_strided((1, 1, 20, 32, 32), (20480, 20480, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     avg_pool3d = rand_strided((1, 1, 16, 32, 32), (16384, 16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     div = rand_strided((1, 16, 32, 32), (16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     unsqueeze_4 = rand_strided((64, 1), (1, 1), device='cuda:0', dtype=torch.int64)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     convert_element_type_3 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.int64)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     unsqueeze_8 = rand_strided((1, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     tangents_1 = rand_strided((1, 4096, 16), (65536, 16, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     fn = lambda: call([primals_4, primals_3, sym_size_int_2, sym_size_int_3, floordiv, floordiv_1, mul_118, primals_1, primals_5, primals_9, convolution, squeeze_1, add_8, getitem_2, getitem_3, constant_pad_nd, avg_pool3d, div, unsqueeze_4, convert_element_type_3, unsqueeze_8, tangents_1])
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:14.331000 703210 site-packages/torch/_inductor/graph.py:2014] [346/0_1] [__output_code] 
V0127 11:35:14.345000 703210 site-packages/torch/_inductor/graph.py:2022] [346/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/23/c237ypqahmc2i7x5i6cw2l57sswu5zo3k3fjicvrux7sjakv775b.py
I0127 11:35:14.661000 703210 site-packages/torch/_inductor/graph.py:2056] [346/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/23/c237ypqahmc2i7x5i6cw2l57sswu5zo3k3fjicvrux7sjakv775b.py

V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] Output code: 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # AOT ID: ['20_forward']
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import torch
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import math
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import random
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import os
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import tempfile
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from math import inf, nan
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from cmath import nanj
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch import device, empty_strided
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     grid,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     split_scan_grid,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     grid_combo_kernels,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     start_graph,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     end_graph,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     cooperative_reduction_grid,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] aten = torch.ops.aten
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] _quantized = torch.ops._quantized
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] async_compile = AsyncCompile()
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ig/cignobc4fxkbobbocmqcigfay2jcufwyessh272saun2clkf2y53.py
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2, x_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_1 => convolution
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_2 => add_6, add_7, add_8, add_9, mul_10, mul_11, mul_12, mul_13, mul_14, mul_8, mul_9, rsqrt, sub_2, var_mean
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_3 => relu
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Graph fragment:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %convolution : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_3, %primals_4, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_9, %mul_10), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, 0.1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, 0.9), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %mul_13), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_8, %unsqueeze_1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_2), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_7), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_8), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0', '''
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton_heuristics.reduction(
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     size_hints={'x': 32, 'r0_': 128},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     filename=__file__,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton.jit
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xnumel = 32
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rnumel = r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xmask = xindex < xnumel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rbase = r0_base
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     x0 = xindex
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), tmp2, r0_mask & xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp5 = tmp8[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp6 = tmp9[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp10 = tl.load(in_out_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp11 = tmp10 - tmp4
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp12 = ((tl.full([], 0.0, tl.float64)) * ((tl.full([], 0.0, tl.float64)) >= ((-2) + ks0)) + ((-2) + ks0) * (((-2) + ks0) > (tl.full([], 0.0, tl.float64))))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp13 = tmp12.to(tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp14 = tmp5 / tmp13
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp15 = 1e-05
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp16 = tmp14 + tmp15
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp18 = tmp11 * tmp17
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp20 = tmp18 * tmp19
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp22 = tmp20 + tmp21
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp23 = tl.full([1, 1], 0, tl.int32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tl.store(out_ptr2 + (r0_1 + ((-2)*x0) + ks0*x0), tmp24, r0_mask & xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp36 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp41 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp25 = ((tl.full([], 0.0, tl.float64)) * ((tl.full([], 0.0, tl.float64)) >= ((-2) + ks0)) + ((-2) + ks0) * (((-2) + ks0) > (tl.full([], 0.0, tl.float64))))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp26 = tmp25.to(tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp27 = tmp5 / tmp26
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp28 = 1e-05
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp30 = libdevice.rsqrt(tmp29)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp31 = ((((-64) + 32*ks0) / 32) / ((tl.full([], -1.00000000000000, tl.float64)) + (((-64) + 32*ks0) / 32)))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp33 = tmp27 * tmp32
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp34 = 0.1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp35 = tmp33 * tmp34
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp37 = 0.9
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp38 = tmp36 * tmp37
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp39 = tmp35 + tmp38
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp40 = tmp4 * tmp34
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp42 = tmp41 * tmp37
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp43 = tmp40 + tmp42
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp30, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr5 + (x0), tmp39, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr7 + (x0), tmp43, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] ''', device_str='cuda')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uj/cuj2c2x4k5ic7myuavq5uhfu6x6lzffkh2ddczhqfqrz47ujfjub.py
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5, x_6, x_7], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu, aten.mean]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_4 => convolution_1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_5 => add_23, add_24, add_25, add_26, mul_29, mul_30, mul_31, mul_32, mul_33, mul_34, mul_35, rsqrt_1, sub_8, var_mean_1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_6 => relu_1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_7 => mean
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Graph fragment:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %convolution_1 : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%relu, %primals_10, %primals_11, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution_1, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_23 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_23,), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %getitem_3), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %rsqrt_1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_3, 0.1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_13, 0.9), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_24 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_30, %mul_31), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_5, %truediv_3), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_33 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_32, 0.1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_14, 0.9), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_33, %mul_34), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_29, %unsqueeze_3), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_35, %unsqueeze_4), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_26,), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_1, [2]), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %copy__4 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_13, %add_24), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %copy__5 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_14, %add_25), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_mean_relu_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_mean_relu_1', '''
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton_heuristics.reduction(
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     size_hints={'x': 64, 'r0_': 128},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     filename=__file__,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr1': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_mean_relu_1', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_ptr1', 'in_ptr4', 'out_ptr3', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton.jit
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_mean_relu_1(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr1, out_ptr3, out_ptr4, out_ptr6, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xnumel = 64
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rnumel = r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xmask = xindex < xnumel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rbase = r0_base
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     x0 = xindex
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), tmp2, r0_mask & xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp5 = tmp8[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp6 = tmp9[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp21 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp10 = ((tl.full([], 0.0, tl.float64)) * ((tl.full([], 0.0, tl.float64)) >= ((-4) + ks0)) + ((-4) + ks0) * (((-4) + ks0) > (tl.full([], 0.0, tl.float64))))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp12 = tmp5 / tmp11
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp13 = 1e-05
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp15 = libdevice.rsqrt(tmp14)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp16 = ((((-256) + 64*ks0) / 64) / ((tl.full([], -1.00000000000000, tl.float64)) + (((-256) + 64*ks0) / 64)))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp18 = tmp12 * tmp17
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp19 = 0.1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp20 = tmp18 * tmp19
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp22 = 0.9
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp24 = tmp20 + tmp23
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp15, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp24, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp27_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp27_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp27_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp25 = tl.load(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp26 = tl.broadcast_to(tmp25, [XBLOCK, R0_BLOCK])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp27_mean_next, tmp27_m2_next, tmp27_weight_next = triton_helpers.welford_reduce(
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]             tmp26, tmp27_mean, tmp27_m2, tmp27_weight, roffset == 0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp27_mean = tl.where(r0_mask & xmask, tmp27_mean_next, tmp27_mean)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp27_m2 = tl.where(r0_mask & xmask, tmp27_m2_next, tmp27_m2)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp27_weight = tl.where(r0_mask & xmask, tmp27_weight_next, tmp27_weight)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp30, tmp31, tmp32 = triton_helpers.welford(tmp27_mean, tmp27_m2, tmp27_weight, 1)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp27 = tmp30[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp28 = tmp31[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp29 = tmp32[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr4 + (x0), tmp27, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp36 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp38 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     _tmp43 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp33 = tl.load(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp34 = tmp33 - tmp27
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp35 = tmp34 * tmp15
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp37 = tmp35 * tmp36
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp39 = tmp37 + tmp38
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp40 = tl.full([1, 1], 0, tl.int32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp41 = triton_helpers.maximum(tmp40, tmp39)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp42 = tl.broadcast_to(tmp41, [XBLOCK, R0_BLOCK])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp44 = _tmp43 + tmp42
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         _tmp43 = tl.where(r0_mask & xmask, tmp44, _tmp43)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp43 = tl.sum(_tmp43, 1)[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp50 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp45 = (-4) + ks0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp46 = tmp45.to(tl.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp47 = tmp43 / tmp46
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp48 = 0.1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp49 = tmp27 * tmp48
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp51 = 0.9
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp52 = tmp50 * tmp51
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp53 = tmp49 + tmp52
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.debug_barrier()
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(in_out_ptr1 + (x0), tmp47, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr6 + (x0), tmp53, xmask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] ''', device_str='cuda')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fh/cfhnruihgy46qp52yv3gz7zxb55uebizsrlavsbvpguwtm6q36dl.py
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   log_softmax => amax, exp, log, sub_13, sub_14, sum_1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Graph fragment:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%addmm, [1], True), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_13 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%addmm, %amax), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_13,), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_13, %log), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_per_fused__log_softmax_2 = async_compile.triton('triton_per_fused__log_softmax_2', '''
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     size_hints={'x': 1, 'r0_': 16},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     filename=__file__,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton.jit
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def triton_per_fused__log_softmax_2(in_out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xnumel = 1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_numel = 10
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rnumel = r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_offset = 0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     roffset = r0_offset
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rindex = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_0 = r0_index
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r0_0), r0_mask, other=0.0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp3 = tl.where(r0_mask, tmp1, float("-inf"))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp5 = tmp0 - tmp4
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp9 = tl.where(r0_mask, tmp7, 0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp11 = tl_math.log(tmp10)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp12 = tmp5 - tmp11
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(in_out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp12, r0_mask)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] ''', device_str='cuda')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/36/c36fsokdqemetuxowygjraqhmkvfqomdt7tvtednpyk77ioklyqe.py
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   add_ => add_5
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Graph fragment:
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_5, 1), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_5), kwargs = {})
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_poi_fused_add_3 = async_compile.triton('triton_poi_fused_add_3', '''
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton_heuristics.pointwise(
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     size_hints={'x': 1}, 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     filename=__file__,
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_3', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     min_elem_per_thread=0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton.jit
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def triton_poi_fused_add_3(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xnumel = 1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] ''', device_str='cuda')
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] async_compile.wait(globals())
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] del async_compile
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def call(args):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18 = args
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     args.clear()
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     s0 = primals_1
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_2, (1, s0), (s0, 1))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_3, (32, 1, 3), (3, 3, 1))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_4, (32, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_5, (), ())
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_6, (32, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_8, (32, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_9, (32, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_10, (64, 32, 3), (96, 3, 1))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_12, (), ())
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_13, (64, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_14, (64, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_15, (64, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_16, (64, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_17, (10, 64), (64, 1))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_18, (10, ), (1, ))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         torch.cuda.set_device(0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(primals_2, (1, 1, s0), (s0, s0, 1), 0), primals_3, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         assert_size_stride(buf0, (1, 32, (-2) + s0), ((-64) + 32*s0, (-2) + s0, 1))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf2 = empty_strided_cuda((1, 32, 1), (32, 1, 32), torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf6 = empty_strided_cuda((1, 32, (-2) + s0), ((-64) + 32*s0, (-2) + s0, 1), torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf5 = empty_strided_cuda((1, 32, 1), (32, 1, 1), torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2, x_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0_r0_numel = (-2) + s0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0.run(buf1, primals_4, primals_8, primals_9, primals_7, primals_6, buf2, buf6, buf5, primals_7, primals_6, s0, 32, triton_red_fused__native_batch_norm_legit_functional_convolution_relu_0_r0_numel, grid=grid(32), stream=stream0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_4
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_6
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_7
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_9
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.convolution]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf7 = extern_kernels.convolution(buf6, primals_10, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         assert_size_stride(buf7, (1, 64, (-4) + s0), ((-256) + 64*s0, (-4) + s0, 1))
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf8 = buf7; del buf7  # reuse
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf12 = empty_strided_cuda((1, 64, 1), (64, 1, 1), torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf9 = empty_strided_cuda((1, 64, 1), (64, 1, 1), torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf13 = empty_strided_cuda((1, 64), (64, 1), torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf14 = buf13; del buf13  # reuse
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5, x_6, x_7], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.relu, aten.mean]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_mean_relu_1_r0_numel = (-4) + s0
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_mean_relu_1.run(buf8, buf14, primals_11, primals_14, primals_15, primals_16, primals_13, buf12, primals_14, buf9, primals_13, s0, 64, triton_red_fused__native_batch_norm_legit_functional_convolution_mean_relu_1_r0_numel, grid=grid(64), stream=stream0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_11
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_13
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_14
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf15 = empty_strided_cuda((1, 10), (10, 1), torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.addmm]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         extern_kernels.addmm(primals_18, buf14, reinterpret_tensor(primals_17, (64, 10), (1, 64), 0), alpha=1, beta=1, out=buf15)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_18
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf18 = buf15; del buf15  # reuse
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_per_fused__log_softmax_2.run(buf18, 1, 10, grid=grid(1), stream=stream0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_poi_fused_add_3.run(primals_5, primals_5, 1, grid=grid(1), stream=stream0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_5
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [add__1], Original ATen: [aten.add]
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_poi_fused_add_3.run(primals_12, primals_12, 1, grid=grid(1), stream=stream0)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_12
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     return (buf18, primals_3, primals_8, primals_10, primals_15, primals_16, reinterpret_tensor(primals_2, (1, 1, s0), (s0, s0, 1), 0), buf1, reinterpret_tensor(buf5, (32, ), (1, ), 0), buf6, buf8, buf9, buf12, buf14, buf18, primals_17, reinterpret_tensor(buf2, (1, 32, 1), (32, 1, 1), 0), s0, )
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_1 = 128
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_2 = rand_strided((1, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_3 = rand_strided((32, 1, 3), (3, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_4 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_5 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_6 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_8 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_9 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_10 = rand_strided((64, 32, 3), (96, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_12 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_14 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_15 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_16 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_17 = rand_strided((10, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_18 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18])
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] if __name__ == "__main__":
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:28:46.983000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:46.995000 1612526 site-packages/torch/_inductor/graph.py:2022] [98/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/k4/ck4v3epcp2dhac52ngxgdxxwwvbwlgqoqnwdpnmpsojehmgdwif5.py
I0205 14:28:47.210000 1612526 site-packages/torch/_inductor/graph.py:2056] [98/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/k4/ck4v3epcp2dhac52ngxgdxxwwvbwlgqoqnwdpnmpsojehmgdwif5.py
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] Output code: 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # AOT ID: ['20_backward']
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import torch
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import math
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import random
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import os
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import tempfile
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from math import inf, nan
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from cmath import nanj
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch import device, empty_strided
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     grid,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     split_scan_grid,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     grid_combo_kernels,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     start_graph,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     end_graph,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     cooperative_reduction_grid,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] aten = torch.ops.aten
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] _quantized = torch.ops._quantized
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] async_compile = AsyncCompile()
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vh/cvhqhcdtve32s53ejreppyr2kvkukfhhitlxwt6mdsd3b3543h5z.py
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten._log_softmax_backward_data, aten.sum]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Graph fragment:
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%tangents_1, [1], True), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_14,), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%exp_1, %sum_2), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_15 : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%tangents_1, %mul_46), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sub_15, [0], True), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_per_fused__log_softmax_backward_data_sum_0 = async_compile.triton('triton_per_fused__log_softmax_backward_data_sum_0', '''
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     size_hints={'x': 1, 'r0_': 16},
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     filename=__file__,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_backward_data_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton.jit
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def triton_per_fused__log_softmax_backward_data_sum_0(in_ptr0, in_ptr1, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xnumel = 1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_numel = 10
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rnumel = r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_offset = 0
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     roffset = r0_offset
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rindex = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_0 = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (r0_0), r0_mask, other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp3 = tl.where(r0_mask, tmp1, 0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp7 = tmp6 * tmp4
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp8, r0_mask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr2 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp8, r0_mask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] ''', device_str='cuda')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hh/chhgeddwrl6evi25fwh77nvefl5hjc7yy4atp2vacwqv7nm6iaku.py
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten.div, aten._native_batch_norm_legit_functional, aten.relu, aten.threshold_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_5 => add_26, mul_29, mul_35, sub_8
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   x_6 => relu_1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Graph fragment:
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Scalar](args = (%expand, %sym_size_int_2), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %getitem_3), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %rsqrt_1), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_29, %unsqueeze_3), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_35, %unsqueeze_4), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%add_26,), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %where : [num_users=3] = call_function[target=torch.ops.aten.where.self](args = (%le, %full_default, %div), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where, [0, 2]), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_16 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_7), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_47 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %sub_16), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_5 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_47, [0, 2]), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_54 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_16, %unsqueeze_11), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%where, %mul_54), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_18, %unsqueeze_9), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_55 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %unsqueeze_13), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_5, %squeeze_4), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_55, [0, 2]), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_backward_div_native_batch_norm_backward_relu_threshold_backward_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_backward_div_native_batch_norm_backward_relu_threshold_backward_1', '''
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton_heuristics.reduction(
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     size_hints={'x': 64, 'r0_': 128},
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     filename=__file__,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_backward_div_native_batch_norm_backward_relu_threshold_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton.jit
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_backward_div_native_batch_norm_backward_relu_threshold_backward_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, out_ptr3, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xnumel = 64
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rnumel = r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xmask = xindex < xnumel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rbase = r0_base
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     x0 = xindex
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp13 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     _tmp19 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     _tmp23 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4 = tmp2 * tmp3
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp6 = tmp4 * tmp5
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp8 = tmp6 + tmp7
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp9 = tl.full([1, 1], 0, tl.int32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp11 = 0.0
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp12 = tmp10 <= tmp11
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp14 = (-4) + ks0
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp15 = tmp14.to(tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp16 = tmp13 / tmp15
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp17 = tl.where(tmp12, tmp11, tmp16)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp18 = tl.broadcast_to(tmp17, [XBLOCK, R0_BLOCK])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp20 = _tmp19 + tmp18
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         _tmp19 = tl.where(r0_mask & xmask, tmp20, _tmp19)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp21 = tmp17 * tmp2
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp22 = tl.broadcast_to(tmp21, [XBLOCK, R0_BLOCK])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp24 = _tmp23 + tmp22
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         _tmp23 = tl.where(r0_mask & xmask, tmp24, _tmp23)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), tmp17, r0_mask & xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp19 = tl.sum(_tmp19, 1)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp23 = tl.sum(_tmp23, 1)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp19, xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     _tmp40 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp25 = tl.load(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp26 = tl.load(in_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp27 = tmp26 - tmp1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp28 = (tl.full([], 1.00000000000000, tl.float64) / (((-256) + 64*ks0) / 64))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp29 = tmp28.to(tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp30 = tmp23 * tmp29
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp31 = tmp3 * tmp3
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp32 = tmp30 * tmp31
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp33 = tmp27 * tmp32
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp34 = tmp25 - tmp33
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp35 = tmp19 * tmp29
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp36 = tmp34 - tmp35
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp37 = tmp3 * tmp5
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp38 = tmp36 * tmp37
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp39 = tl.broadcast_to(tmp38, [XBLOCK, R0_BLOCK])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp41 = _tmp40 + tmp39
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         _tmp40 = tl.where(r0_mask & xmask, tmp41, _tmp40)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), tmp38, r0_mask & xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp40 = tl.sum(_tmp40, 1)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp40, xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp42 = tmp23 * tmp3
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp42, xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] ''', device_str='cuda')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/p2/cp2qtufqojvifda4iieljrhzp3dhpcy2lulnbvslqb4cy6hjyuc6.py
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.threshold_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] # Graph fragment:
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %where_1 : [num_users=3] = call_function[target=torch.ops.aten.where.self](args = (%le_1, %full_default, %getitem_4), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_7 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_1, [0, 2]), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_20 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_15), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_57 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_1, %sub_20), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_8 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_57, [0, 2]), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_64 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_20, %unsqueeze_19), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_22 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%where_1, %mul_64), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sub_23 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_22, %unsqueeze_17), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_65 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_23, %unsqueeze_21), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %mul_66 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_8, %squeeze_1), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] #   %sum_9 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_65, [0, 2]), kwargs = {})
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_red_fused_convolution_backward_native_batch_norm_backward_threshold_backward_2 = async_compile.triton('triton_red_fused_convolution_backward_native_batch_norm_backward_threshold_backward_2', '''
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] import triton.language as tl
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton_heuristics.reduction(
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     size_hints={'x': 32, 'r0_': 128},
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     filename=__file__,
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_native_batch_norm_backward_threshold_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] )
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] @triton.jit
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def triton_red_fused_convolution_backward_native_batch_norm_backward_threshold_backward_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xnumel = 32
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rnumel = r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     xmask = xindex < xnumel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rbase = r0_base
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     x0 = xindex
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     _tmp6 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     _tmp13 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp8 = tl.load(in_ptr1 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp1 = 0.0
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp2 = tmp0 <= tmp1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp4 = tl.where(tmp2, tmp1, tmp3)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp7 = _tmp6 + tmp5
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         _tmp6 = tl.where(r0_mask & xmask, tmp7, _tmp6)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp10 = tmp8 - tmp9
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp11 = tmp4 * tmp10
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp14 = _tmp13 + tmp12
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         _tmp13 = tl.where(r0_mask & xmask, tmp14, _tmp13)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp6 = tl.sum(_tmp6, 1)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp25 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp32 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     _tmp36 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         roffset = r0_offset
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         rindex = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         r0_1 = r0_index
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp15 = tl.load(in_out_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp18 = tl.load(in_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp20 = tl.load(in_ptr1 + (r0_1 + ((-2)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp16 = 0.0
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp17 = tmp15 <= tmp16
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp19 = tl.where(tmp17, tmp16, tmp18)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp21 = tmp20 - tmp9
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp22 = (tl.full([], 1.00000000000000, tl.float64) / (((-64) + 32*ks0) / 32))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp23 = tmp22.to(tl.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp24 = tmp13 * tmp23
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp26 = tmp25 * tmp25
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp27 = tmp24 * tmp26
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp28 = tmp21 * tmp27
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp29 = tmp19 - tmp28
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp30 = tmp6 * tmp23
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp31 = tmp29 - tmp30
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp33 = tmp25 * tmp32
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp34 = tmp31 * tmp33
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp35 = tl.broadcast_to(tmp34, [XBLOCK, R0_BLOCK])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tmp37 = _tmp36 + tmp35
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         _tmp36 = tl.where(r0_mask & xmask, tmp37, _tmp36)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ((-2)*x0) + ks0*x0), tmp34, r0_mask & xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp36 = tl.sum(_tmp36, 1)[:, None]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp36, xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tmp38 = tmp13 * tmp25
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp38, xmask)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] ''', device_str='cuda')
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] async_compile.wait(globals())
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] del async_compile
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def call(args):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_1, primals_3, primals_8, primals_10, primals_15, primals_16, unsqueeze, convolution, squeeze_1, relu, convolution_1, getitem_3, rsqrt_1, mean, sub_14, permute_1, unsqueeze_15, tangents_1 = args
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     args.clear()
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     s0 = primals_1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_3, (32, 1, 3), (3, 3, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_8, (32, ), (1, ))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_10, (64, 32, 3), (96, 3, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_15, (64, ), (1, ))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(primals_16, (64, ), (1, ))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(unsqueeze, (1, 1, s0), (s0, s0, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(convolution, (1, 32, (-2) + s0), ((-64) + 32*s0, (-2) + s0, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(squeeze_1, (32, ), (1, ))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(relu, (1, 32, (-2) + s0), ((-64) + 32*s0, (-2) + s0, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(convolution_1, (1, 64, (-4) + s0), ((-256) + 64*s0, (-4) + s0, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(getitem_3, (1, 64, 1), (64, 1, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(rsqrt_1, (1, 64, 1), (64, 1, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(mean, (1, 64), (64, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(sub_14, (1, 10), (10, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(permute_1, (10, 64), (64, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(unsqueeze_15, (1, 32, 1), (32, 1, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     assert_size_stride(tangents_1, (1, 10), (10, 1))
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         torch.cuda.set_device(0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf1 = empty_strided_cuda((1, 10), (10, 1), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf4 = empty_strided_cuda((1, 10), (10, 1), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten._log_softmax_backward_data, aten.sum]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_per_fused__log_softmax_backward_data_sum_0.run(tangents_1, sub_14, buf1, buf4, 1, 10, grid=grid(1), stream=stream0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del sub_14
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del tangents_1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf2 = empty_strided_cuda((1, 64), (64, 1), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mm]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         extern_kernels.mm(buf1, permute_1, out=buf2)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del permute_1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf5 = empty_strided_cuda((1, 64, (-4) + s0), ((-256) + 64*s0, (-4) + s0, 1), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf6 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf8 = buf5; del buf5  # reuse
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf10 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf9 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten.div, aten._native_batch_norm_legit_functional, aten.relu, aten.threshold_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_div_native_batch_norm_backward_relu_threshold_backward_1_r0_numel = (-4) + s0
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_div_native_batch_norm_backward_relu_threshold_backward_1.run(buf8, convolution_1, getitem_3, rsqrt_1, primals_15, primals_16, buf2, buf6, buf10, buf9, s0, 64, triton_red_fused__native_batch_norm_legit_functional_convolution_backward_div_native_batch_norm_backward_relu_threshold_backward_1_r0_numel, grid=grid(64), stream=stream0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del buf2
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del convolution_1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del getitem_3
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_15
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_16
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del rsqrt_1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf11 = torch.ops.aten.convolution_backward.default(buf8, relu, primals_10, [64], [1], [0], [1], False, [0], 1, [True, True, False])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del buf8
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_10
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf12 = buf11[0]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf13 = buf11[1]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del buf11
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf14 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf16 = relu; del relu  # reuse
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf18 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf17 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.threshold_backward, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_threshold_backward_2_r0_numel = (-2) + s0
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_threshold_backward_2.run(buf16, buf12, convolution, unsqueeze_15, squeeze_1, primals_8, buf14, buf18, buf17, s0, 32, triton_red_fused_convolution_backward_native_batch_norm_backward_threshold_backward_2_r0_numel, grid=grid(32), stream=stream0)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del buf12
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del convolution
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_8
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del squeeze_1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del unsqueeze_15
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf19 = torch.ops.aten.convolution_backward.default(buf16, unsqueeze, primals_3, [32], [1], [0], [1], False, [0], 1, [False, True, False])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del buf16
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del primals_3
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del unsqueeze
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf20 = buf19[1]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del buf19
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         buf3 = empty_strided_cuda((10, 64), (64, 1), torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mm]
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf1, (10, 1), (1, 10), 0), mean, out=buf3)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del buf1
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]         del mean
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     return (None, None, buf20, buf18, None, None, None, buf17, buf14, buf13, buf10, None, None, None, buf9, buf6, buf3, reinterpret_tensor(buf4, (10, ), (1, ), 0), )
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_1 = 128
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_3 = rand_strided((32, 1, 3), (3, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_8 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_10 = rand_strided((64, 32, 3), (96, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_15 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     primals_16 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     unsqueeze = rand_strided((1, 1, 128), (128, 128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     convolution = rand_strided((1, 32, 126), (4032, 126, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     squeeze_1 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     relu = rand_strided((1, 32, 126), (4032, 126, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     convolution_1 = rand_strided((1, 64, 124), (7936, 124, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     getitem_3 = rand_strided((1, 64, 1), (64, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     rsqrt_1 = rand_strided((1, 64, 1), (64, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     mean = rand_strided((1, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     sub_14 = rand_strided((1, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     permute_1 = rand_strided((10, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     unsqueeze_15 = rand_strided((1, 32, 1), (32, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     tangents_1 = rand_strided((1, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     fn = lambda: call([primals_1, primals_3, primals_8, primals_10, primals_15, primals_16, unsqueeze, convolution, squeeze_1, relu, convolution_1, getitem_3, rsqrt_1, mean, sub_14, permute_1, unsqueeze_15, tangents_1])
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] if __name__ == "__main__":
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:28:47.500000 1612526 site-packages/torch/_inductor/graph.py:2014] [98/0] [__output_code] 
V0205 14:28:47.510000 1612526 site-packages/torch/_inductor/graph.py:2022] [98/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/oc/cocerdaeidmzi5lxjl53tojuznh3vh5mohquwhu6pjegw2xaufli.py
I0205 14:28:47.662000 1612526 site-packages/torch/_inductor/graph.py:2056] [98/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/oc/cocerdaeidmzi5lxjl53tojuznh3vh5mohquwhu6pjegw2xaufli.py

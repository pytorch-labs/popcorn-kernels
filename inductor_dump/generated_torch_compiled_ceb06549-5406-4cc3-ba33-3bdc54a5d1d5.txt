W0205 11:53:24.226000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [500/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] Output code: 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # AOT ID: ['143_forward']
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import torch
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import math
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import random
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import os
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import tempfile
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from math import inf, nan
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from cmath import nanj
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch import device, empty_strided
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton.language as tl
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     grid,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     split_scan_grid,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     grid_combo_kernels,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     start_graph,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     end_graph,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] )
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] aten = torch.ops.aten
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kp/ckpqzi4z6rqileyippcx7xey3dgqvhtfdaklqzgnulg2jy3db4oc.py
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   x => constant_pad_nd
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Graph fragment:
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%primals_4, [2, 2], 0.0), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton.language as tl
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     filename=__file__,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] )
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton.jit
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x1 = xindex // ks0
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x2 = xindex
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp0 = (-2) + x0
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp3 = ks1
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp5 = tmp2 & tmp4
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + ((-2) + x0 + ks1*x1), tmp5 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] ''', device_str='cuda')
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x4/cx4dea4y4b36pfijznlqfqcmfmeg5nnt7tlaygqan74djfatdhmw.py
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   x_2 => convolution
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   x_3 => add_18, mul_30, rsqrt, sub_12, var_mean
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Graph fragment:
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %convolution : [num_users=5] = call_function[target=torch.ops.aten.convolution.default](args = (%view, %primals_5, %primals_6, [1, 1, 1], [0, 0, 0], [1, 1, 1], False, [0, 0, 0], 1), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %add_18 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_18,), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %rsqrt), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_convolution_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_convolution_1', '''
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton.language as tl
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     filename=__file__,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] )
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton.jit
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_convolution_1(in_out_ptr0, in_ptr0, out_ptr0, out_ptr2, out_ptr3, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xnumel = 10
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     rnumel = r0_numel
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     rbase = r0_base
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x0 = xindex
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         roffset = r0_offset
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         rindex = r0_index
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_1 = r0_index
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         )
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), tmp2, r0_mask & xmask)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         roffset = r0_offset
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         rindex = r0_index
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_1 = r0_index
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp10 = tl.load(in_out_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp11 = tmp10 - tmp4
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp12 = ((tl.full([], 0.0, tl.float64)) * ((tl.full([], 0.0, tl.float64)) >= (8 + ((-4)*ks0) + ((-4)*ks1) + 4*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + 2*ks0*ks1 + ks0*ks1*ks2)) + (8 + ((-4)*ks0) + ((-4)*ks1) + 4*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + 2*ks0*ks1 + ks0*ks1*ks2) * ((8 + ((-4)*ks0) + ((-4)*ks1) + 4*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + 2*ks0*ks1 + ks0*ks1*ks2) > (tl.full([], 0.0, tl.float64))))
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp13 = tmp12.to(tl.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp14 = tmp5 / tmp13
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp15 = 1e-05
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp16 = tmp14 + tmp15
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp18 = tmp11 * tmp17
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), tmp18, r0_mask & xmask)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp19 = ((tl.full([], 0.0, tl.float64)) * ((tl.full([], 0.0, tl.float64)) >= (8 + ((-4)*ks0) + ((-4)*ks1) + 4*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + 2*ks0*ks1 + ks0*ks1*ks2)) + (8 + ((-4)*ks0) + ((-4)*ks1) + 4*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + 2*ks0*ks1 + ks0*ks1*ks2) * ((8 + ((-4)*ks0) + ((-4)*ks1) + 4*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + 2*ks0*ks1 + ks0*ks1*ks2) > (tl.full([], 0.0, tl.float64))))
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp20 = tmp19.to(tl.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp21 = tmp5 / tmp20
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp22 = 1e-05
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp23 = tmp21 + tmp22
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp24 = libdevice.rsqrt(tmp23)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp24, xmask)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] ''', device_str='cuda')
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7h/c7hoz76yd3xak5r57rr5c5au3m257tl6glse4u2rjqrrsiv3gqka.py
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten._native_batch_norm_legit, aten.view]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   x_3 => add_18, mul_30, rsqrt, sub_12, var_mean, view_2
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   x_4 => view_3
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Graph fragment:
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %add_18 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_18,), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %rsqrt), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %view_2 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_30, [1, 10, %sym_size_int_4, %sym_size_int_5, %sym_size_int_6]), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %view_3 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%view_2, [-1, 10, %sym_sum_1, %sym_sum_2]), kwargs = {})
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_poi_fused__native_batch_norm_legit_view_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_view_2', '''
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton.language as tl
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     size_hints={'x': 131072}, 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     filename=__file__,
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_view_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] )
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton.jit
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def triton_poi_fused__native_batch_norm_legit_view_2(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x2 = ((xindex // ks2) % 10)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x3 = xindex // ks3
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x4 = xindex
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (((-4)*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // ((-4) + ((-2)*ks6) + 2*ks5 + ks5*ks6)) % ((-2) + ks4)))) + 2*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (2 + ks6)) % ((-2) + ks5))) + 8*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10)) + ks6*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (2 + ks6)) % ((-2) + ks5))) + ((-4)*ks4*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10))) + ((-4)*ks5*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10))) + ((-2)*ks6*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // ((-4) + ((-2)*ks6) + 2*ks5 + ks5*ks6)) % ((-2) + ks4)))) + 2*ks5*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // ((-4) + ((-2)*ks6) + 2*ks5 + ks5*ks6)) % ((-2) + ks4))) + 4*ks6*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10)) + ks5*ks6*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // ((-4) + ((-2)*ks6) + 2*ks5 + ks5*ks6)) % ((-2) + ks4))) + ((-2)*ks4*ks6*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10))) + ((-2)*ks5*ks6*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10))) + 2*ks4*ks5*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10)) + ks4*ks5*ks6*((((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) // (8 + ((-4)*ks4) + ((-4)*ks5) + 4*ks6 + ((-2)*ks4*ks6) + ((-2)*ks5*ks6) + 2*ks4*ks5 + ks4*ks5*ks6)) % 10)) + (((x0 + ((-2)*x1) + 4*x2 + 40*x3 + ks5*x1 + ((-20)*ks4*x3) + ((-20)*ks5*x3) + ((-2)*ks4*x2) + ((-2)*ks5*x2) + ks4*ks5*x2 + 10*ks4*ks5*x3) % (2 + ks6)))), xmask, eviction_policy='evict_last')
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp0, xmask)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] ''', device_str='cuda')
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] async_compile.wait(globals())
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] del async_compile
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def call(args):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6 = args
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     args.clear()
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     s0 = primals_1
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     s1 = primals_2
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     s2 = primals_3
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(primals_4, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(primals_5, (10, 1, 3, 3, 3), (27, 27, 9, 3, 1))
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(primals_6, (10, ), (1, ))
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         ps0 = 4 + s2
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, s1, 4 + s2), (4*s0*s1 + s0*s1*s2, 4*s1 + s1*s2, 4 + s2, 1), torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 4*s0*s1 + s0*s1*s2
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_4, buf0, ps0, s2, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del primals_4
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf1 = extern_kernels.convolution(reinterpret_tensor(buf0, (1, 1, s0, s1, 4 + s2), (0, 0, 4*s1 + s1*s2, 4 + s2, 1), 0), primals_5, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         assert_size_stride(buf1, (1, 10, (-2) + s0, (-2) + s1, 2 + s2), (80 + ((-40)*s0) + ((-40)*s1) + 40*s2 + ((-20)*s0*s2) + ((-20)*s1*s2) + 20*s0*s1 + 10*s0*s1*s2, 8 + ((-4)*s0) + ((-4)*s1) + 4*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + 2*s0*s1 + s0*s1*s2, (-4) + ((-2)*s2) + 2*s1 + s1*s2, 2 + s2, 1))
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 10, (-2) + s0, (-2) + s1, 2 + s2), (80 + ((-40)*s0) + ((-40)*s1) + 40*s2 + ((-20)*s0*s2) + ((-20)*s1*s2) + 20*s0*s1 + 10*s0*s1*s2, 8 + ((-4)*s0) + ((-4)*s1) + 4*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + 2*s0*s1 + s0*s1*s2, (-4) + ((-2)*s2) + 2*s1 + s1*s2, 2 + s2, 1), torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.convolution, aten._native_batch_norm_legit]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_convolution_1_r0_numel = 8 + ((-4)*s0) + ((-4)*s1) + 4*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + 2*s0*s1 + s0*s1*s2
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_convolution_1.run(buf2, primals_6, buf3, buf7, buf6, s0, s1, s2, 10, triton_red_fused__native_batch_norm_legit_convolution_1_r0_numel, grid=grid(10), stream=stream0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del primals_6
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         ps1 = (-2) + s1
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         ps2 = (-2) + s0
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         ps3 = 4 + ((-2)*s0) + ((-2)*s1) + s0*s1
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         ps4 = 40 + ((-20)*s0) + ((-20)*s1) + 10*s0*s1
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf8 = empty_strided_cuda((2 + s2, 10, (-2) + s0, (-2) + s1), (40 + ((-20)*s0) + ((-20)*s1) + 10*s0*s1, 4 + ((-2)*s0) + ((-2)*s1) + s0*s1, (-2) + s1, 1), torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten._native_batch_norm_legit, aten.view]
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_view_2_xnumel = 80 + ((-40)*s0) + ((-40)*s1) + 40*s2 + ((-20)*s0*s2) + ((-20)*s1*s2) + 20*s0*s1 + 10*s0*s1*s2
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_view_2.run(buf7, buf8, ps1, ps2, ps3, ps4, s0, s1, s2, triton_poi_fused__native_batch_norm_legit_view_2_xnumel, grid=grid(triton_poi_fused__native_batch_norm_legit_view_2_xnumel), stream=stream0)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del buf7
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     return (buf8, primals_5, reinterpret_tensor(buf0, (1, 1, s0, s1, 4 + s2), (4*s0*s1 + s0*s1*s2, 4*s0*s1 + s0*s1*s2, 4*s1 + s1*s2, 4 + s2, 1), 0), buf2, reinterpret_tensor(buf6, (10, ), (1, ), 0), reinterpret_tensor(buf3, (1, 10, 1, 1, 1), (10, 1, 1, 1, 1), 0), s0, s1, s2, (-2) + s0, (-2) + s1, 2 + s2, )
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_1 = 10
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_2 = 32
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_3 = 32
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_4 = rand_strided((1, 10, 32, 32), (10240, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_5 = rand_strided((10, 1, 3, 3, 3), (27, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_6 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6])
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] if __name__ == "__main__":
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:53:25.529000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:25.536000 3201829 site-packages/torch/_inductor/graph.py:2022] [500/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3y/c3ygnyhn4j5nk3i2fx4q5sr3p3x26itjmt6zskiiwkbujf45x3jy.py
I0205 11:53:25.869000 3201829 site-packages/torch/_inductor/graph.py:2056] [500/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3y/c3ygnyhn4j5nk3i2fx4q5sr3p3x26itjmt6zskiiwkbujf45x3jy.py
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] Output code: 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # AOT ID: ['143_backward']
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import torch
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import math
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import random
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import os
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import tempfile
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from math import inf, nan
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from cmath import nanj
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch import device, empty_strided
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton.language as tl
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     grid,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     split_scan_grid,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     grid_combo_kernels,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     start_graph,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     end_graph,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] )
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] aten = torch.ops.aten
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/no/cnowxdhnmuli7dfxz7qwrb2667wvsc3m3hdie7pgsr44wa6d4mqw.py
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] # Graph fragment:
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_5, [0, 2, 3, 4]), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sub_22 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %unsqueeze_3), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %mul_45 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_5, %sub_22), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_45, [0, 2, 3, 4]), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %mul_53 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_15, 1.0), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %mul_54 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_22, %unsqueeze_11), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sub_24 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %mul_54), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_24, %unsqueeze_7), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_25, %mul_53), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_6, [0, 2, 3, 4]), kwargs = {})
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_red_fused_convolution_backward_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused_convolution_backward_native_batch_norm_backward_0', '''
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] import triton.language as tl
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     filename=__file__,
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_native_batch_norm_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] )
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] @triton.jit
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def triton_red_fused_convolution_backward_native_batch_norm_backward_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xnumel = 10
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     rnumel = r0_numel
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     rbase = r0_base
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     x0 = xindex
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     _tmp9 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         roffset = r0_offset
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         rindex = r0_index
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_1 = r0_index
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp4 = tl.load(in_out_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp6 = tmp4 - tmp5
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp7 = tmp0 * tmp6
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, R0_BLOCK])
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp10 = _tmp9 + tmp8
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         _tmp9 = tl.where(r0_mask & xmask, tmp10, _tmp9)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp9 = tl.sum(_tmp9, 1)[:, None]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp17 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     _tmp28 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         roffset = r0_offset
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         rindex = r0_index
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         r0_1 = r0_index
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp11 = tl.load(in_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp12 = tl.load(in_out_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp13 = tmp12 - tmp5
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp14 = (tl.full([], 1.00000000000000, tl.float64) / ((80 + ((-40)*ks0) + ((-40)*ks1) + 40*ks2 + ((-20)*ks0*ks2) + ((-20)*ks1*ks2) + 20*ks0*ks1 + 10*ks0*ks1*ks2) / 10))
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp15 = tmp14.to(tl.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp16 = tmp9 * tmp15
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp18 = tmp17 * tmp17
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp19 = tmp16 * tmp18
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp20 = tmp13 * tmp19
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp21 = tmp11 - tmp20
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp22 = tmp2 * tmp15
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp23 = tmp21 - tmp22
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp24 = 1.0
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp25 = tmp17 * tmp24
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp26 = tmp23 * tmp25
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp27 = tl.broadcast_to(tmp26, [XBLOCK, R0_BLOCK])
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tmp29 = _tmp28 + tmp27
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         _tmp28 = tl.where(r0_mask & xmask, tmp29, _tmp28)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 8*x0 + ((-4)*ks0*x0) + ((-4)*ks1*x0) + 4*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + 2*ks0*ks1*x0 + ks0*ks1*ks2*x0), tmp26, r0_mask & xmask)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tmp28 = tl.sum(_tmp28, 1)[:, None]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp28, xmask)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] ''', device_str='cuda')
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] async_compile.wait(globals())
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] del async_compile
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def call(args):
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_1, primals_2, primals_3, sym_size_int_4, sym_size_int_5, sym_size_int_6, primals_5, view, convolution, squeeze_1, unsqueeze_3, tangents_1 = args
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     args.clear()
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     s0 = primals_1
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     s1 = primals_2
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     s2 = primals_3
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(primals_5, (10, 1, 3, 3, 3), (27, 27, 9, 3, 1))
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(view, (1, 1, s0, s1, 4 + s2), (4*s0*s1 + s0*s1*s2, 4*s0*s1 + s0*s1*s2, 4*s1 + s1*s2, 4 + s2, 1))
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(convolution, (1, 10, (-2) + s0, (-2) + s1, 2 + s2), (80 + ((-40)*s0) + ((-40)*s1) + 40*s2 + ((-20)*s0*s2) + ((-20)*s1*s2) + 20*s0*s1 + 10*s0*s1*s2, 8 + ((-4)*s0) + ((-4)*s1) + 4*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + 2*s0*s1 + s0*s1*s2, (-4) + ((-2)*s2) + 2*s1 + s1*s2, 2 + s2, 1))
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(squeeze_1, (10, ), (1, ))
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(unsqueeze_3, (1, 10, 1, 1, 1), (10, 1, 1, 1, 1))
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     assert_size_stride(tangents_1, (2 + s2, 10, (-2) + s0, (-2) + s1), (40 + ((-20)*s0) + ((-20)*s1) + 10*s0*s1, 4 + ((-2)*s0) + ((-2)*s1) + s0*s1, (-2) + s1, 1))
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf2 = convolution; del convolution  # reuse
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf3 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward, aten.convolution_backward]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_0_r0_numel = 8 + ((-4)*s0) + ((-4)*s1) + 4*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + 2*s0*s1 + s0*s1*s2
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         triton_red_fused_convolution_backward_native_batch_norm_backward_0.run(buf2, tangents_1, unsqueeze_3, squeeze_1, buf3, s0, s1, s2, 10, triton_red_fused_convolution_backward_native_batch_norm_backward_0_r0_numel, grid=grid(10), stream=stream0)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del squeeze_1
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del tangents_1
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del unsqueeze_3
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf4 = torch.ops.aten.convolution_backward.default(buf2, view, primals_5, [10], [1, 1, 1], [0, 0, 0], [1, 1, 1], False, [0, 0, 0], 1, [False, True, False])
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del buf2
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del primals_5
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del view
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         buf5 = buf4[1]
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]         del buf4
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     return (None, None, None, None, buf5, buf3, )
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_1 = 10
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_2 = 32
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_3 = 32
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     sym_size_int_4 = 8
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     sym_size_int_5 = 30
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     sym_size_int_6 = 34
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     primals_5 = rand_strided((10, 1, 3, 3, 3), (27, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     view = rand_strided((1, 1, 10, 32, 36), (11520, 11520, 1152, 36, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     convolution = rand_strided((1, 10, 8, 30, 34), (81600, 8160, 1020, 34, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     squeeze_1 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     unsqueeze_3 = rand_strided((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     tangents_1 = rand_strided((34, 10, 8, 30), (2400, 240, 30, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, sym_size_int_4, sym_size_int_5, sym_size_int_6, primals_5, view, convolution, squeeze_1, unsqueeze_3, tangents_1])
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] if __name__ == "__main__":
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:53:26.241000 3201829 site-packages/torch/_inductor/graph.py:2014] [500/0_1] [__output_code] 
V0205 11:53:26.244000 3201829 site-packages/torch/_inductor/graph.py:2022] [500/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5t/c5t7xw36fc4m7g4eqxbipbg2ey2oh5zzmkmnwx5ao6rq6v7gh372.py
I0205 11:53:26.419000 3201829 site-packages/torch/_inductor/graph.py:2056] [500/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5t/c5t7xw36fc4m7g4eqxbipbg2ey2oh5zzmkmnwx5ao6rq6v7gh372.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] Output code: 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # AOT ID: ['144_forward']
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import torch
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import random
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import os
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import tempfile
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from math import inf, nan
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from cmath import nanj
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch import device, empty_strided
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     grid,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     split_scan_grid,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     grid_combo_kernels,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     start_graph,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     end_graph,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     cooperative_reduction_grid,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] aten = torch.ops.aten
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] async_compile = AsyncCompile()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j6/cj63vd7zgberzkwa7joiflh7azus5lr6ukcc4m55wimqyf222h4j.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.bernoulli]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   x_5 => inductor_lookup_seed_default, inductor_random_default_1, lt
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([34, 10, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %lt : [num_users=2] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default_1, 0.5), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_bernoulli_0 = async_compile.triton('triton_poi_fused_bernoulli_0', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 512}, 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i1', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_bernoulli_0(in_ptr0, out_ptr1, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 340
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x0 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp1 = x0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp3 = 0.5
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp4 = tmp2 < tmp3
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hy/chy4wjsquflcvytt65rc3cuv7wvnurvzltsyjklnvrzoy3oxk6xb.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.native_group_norm]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   x => add, rsqrt, var_mean
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_red_fused_native_group_norm_1 = async_compile.triton('triton_red_fused_native_group_norm_1', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.reduction(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 128, 'r0_': 2048},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_group_norm_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_red_fused_native_group_norm_1(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 68
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     r0_numel = 1200
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     rnumel = r0_numel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     rbase = r0_base
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x0 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         roffset = r0_offset
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         rindex = r0_index
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         r0_1 = r0_index
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 1200*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp8 = 1200.0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp9 = tmp3 / tmp8
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp10 = 1e-05
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp12 = libdevice.rsqrt(tmp11)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp12, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pg/cpgba2je436hbod77jr4efhifw7xnzw6zt53mxgkogoqukynfw7v.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.native_dropout]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   x_6 => gt_1, inductor_lookup_seed_default_1, inductor_random_default
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([34, 10, 240], %inductor_lookup_seed_default_1, rand), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %gt_1 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_native_dropout_2 = async_compile.triton('triton_poi_fused_native_dropout_2', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 131072}, 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i1', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_dropout_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_native_dropout_2(in_ptr0, out_ptr1, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 81600
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x0 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x1 = (xindex % 2400)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x2 = xindex // 2400
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp1 = x0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp3 = 0.5
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr1 + (x1 + 2432*x2), tmp4, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6v/c6v5r3guqd7zqhvnsvhbv3xyoms76e543ad4adyqdkazvei6lxjj.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   multi_head_attention_forward => clone
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_clone_3 = async_compile.triton('triton_poi_fused_clone_3', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'y': 256, 'x': 512}, tile_hint=TileHint.DEFAULT,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_clone_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     ynumel = 240
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 340
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     ymask = yindex < ynumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x3 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     y0 = yindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x1 = (xindex % 10)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 240*x3), xmask & ymask, eviction_policy='evict_last')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3 // 5), xmask, eviction_policy='evict_last')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x3 // 5), xmask, eviction_policy='evict_last')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp12 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp4 = 1200.0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp6 = 1e-05
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (x3 + 340*y0), tmp13, xmask & ymask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dg/cdg3u42wg24f5dhk7schu57s2bbwxsyghwlgyigdcw5qxhnw4s3e.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   multi_head_attention_forward => clone_1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %clone_1 : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%squeeze_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 262144}, 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 244800
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x0 = (xindex % 10)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x1 = ((xindex // 10) % 8160)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x2 = xindex // 81600
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x3 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 10*x2 + 30*x1), xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 10*x2), xmask, eviction_policy='evict_last')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp2, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fz/cfzo5iy6jkjg4xg3magmpq7ahcotoalfcz2w2dc2evt2lnd4jfw2.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   multi_head_attention_forward => mul_2
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_3, 0.4472135954999579), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_mul_5 = async_compile.triton('triton_poi_fused_mul_5', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 131072}, 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_mul_5(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 81600
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x2 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp1 = 0.4472135954999579
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp2, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3y/c3yqm44e7ndckr4ligzo4b3scmubhn2jqc4nvpyn4wf2msjxx24p.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.bmm, aten.transpose]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   multi_head_attention_forward => bmm, mul_2
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_3, 0.4472135954999579), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %bmm : [num_users=2] = call_function[target=torch.ops.aten.bmm.default](args = (%mul_2, %permute_6), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %permute_19 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%permute_6, [0, 2, 1]), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_bmm_mul_transpose_6 = async_compile.triton('triton_poi_fused_bmm_mul_transpose_6', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 131072}, 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_mul_transpose_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_bmm_mul_transpose_6(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 81600
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x2 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (81600 + x2), xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp0, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5e/c5eywvvjjksjsqrefe5hcln66fiqswlzdk6azkczjivlmejoe63n.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm, aten.transpose]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   multi_head_attention_forward => bmm_1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %bmm_1 : [num_users=1] = call_function[target=torch.ops.aten.bmm.default](args = (%div, %permute_5), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %permute_17 : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%permute_5, [0, 2, 1]), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_bmm_transpose_7 = async_compile.triton('triton_poi_fused_bmm_transpose_7', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 131072}, 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_transpose_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_bmm_transpose_7(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 81600
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x2 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (163200 + x2), xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp0, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zu/czuyu4swvlmrlkqld5if3peyi5zgjwp3d3aj2w4vpcu3frgijqvm.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._softmax]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   multi_head_attention_forward => amax, div, exp, sub_1, sum_1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%bmm, [-1], True), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%bmm, %amax), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_per_fused__softmax_8 = async_compile.triton('triton_per_fused__softmax_8', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 16384, 'r0_': 256},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_per_fused__softmax_8(in_out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 16320
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     r0_numel = 240
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     R0_BLOCK: tl.constexpr = 256
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     rnumel = r0_numel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     r0_offset = 0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     roffset = r0_offset
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     rindex = r0_index
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     r0_1 = r0_index
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x0 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r0_1 + 240*x0), r0_mask & xmask, other=0.0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp3 = tl.where(r0_mask & xmask, tmp1, float("-inf"))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp5 = tmp0 - tmp4
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp9 = tl.where(r0_mask & xmask, tmp7, 0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp10 = tl.sum(tmp9, 1)[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp11 = tmp6 / tmp10
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(in_out_ptr0 + (r0_1 + 240*x0), tmp11, r0_mask & xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/im/cimftluchwjpsv34r5mqzqvz2kzzwol3pijwiui2edlpwnjfaplv.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   multi_head_attention_forward => clone_2
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %clone_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_7,), kwargs = {memory_format: torch.contiguous_format})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused_clone_9 = async_compile.triton('triton_poi_fused_clone_9', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'x': 131072}, 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused_clone_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 81600
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x0 = (xindex % 5)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x1 = ((xindex // 5) % 68)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x2 = xindex // 340
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x3 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 5*x2 + 1200*x1), xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qi/cqivxxgyvnwwzbnfnhfulyh63f5goanvyxwmzhdinxzhmnscwvom.py
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4, x_5, x_6], Original ATen: [aten.abs, aten.add, aten.div, aten.gt, aten.sign, aten.mul, aten.sub, aten.where, aten._to_copy, aten.native_dropout]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Source node to ATen node mapping:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   x_3 => abs_1, add_3, div_1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   x_4 => abs_2, gt, mul_3, mul_4, sign, sub_2, where
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   x_5 => add_4, add_5, add_6, convert_element_type, mul_5, mul_6, mul_7
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   x_6 => mul_8, mul_9
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] # Graph fragment:
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%permute_9,), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_1, 1), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %div_1 : [num_users=4] = call_function[target=torch.ops.aten.div.Tensor](args = (%permute_9, %add_3), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%div_1,), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%abs_2, 0.5), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%div_1,), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, 0.5), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_1, %mul_3), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_1, 0), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %sub_2, %mul_4), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt, torch.float32), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%convert_element_type, -1), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%add_4, 1.558387861036063), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_5, 0.7791939305180315), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type, 0.8864048946659319), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %mul_6), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %add_5), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%gt_1, %add_6), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_8, 2.0), kwargs = {})
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_poi_fused__to_copy_abs_add_div_gt_mul_native_dropout_sign_sub_where_10 = async_compile.triton('triton_poi_fused__to_copy_abs_add_div_gt_mul_native_dropout_sign_sub_where_10', '''
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] import triton.language as tl
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     size_hints={'y': 256, 'x': 512}, tile_hint=TileHint.DEFAULT,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     filename=__file__,
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*fp32', 'in_ptr2': '*i1', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_abs_add_div_gt_mul_native_dropout_sign_sub_where_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     min_elem_per_thread=0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] @triton.jit
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def triton_poi_fused__to_copy_abs_add_div_gt_mul_native_dropout_sign_sub_where_10(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     ynumel = 240
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xnumel = 340
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     ymask = yindex < ynumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     xmask = xindex < xnumel
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x1 = (xindex % 10)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x2 = xindex // 10
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     y0 = yindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     x3 = xindex
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 240*x1 + 2432*x2), xmask & ymask, eviction_policy='evict_last').to(tl.int1)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x3 + 340*y0), xmask & ymask, eviction_policy='evict_last')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last').to(tl.int1)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp3 = tl_math.abs(tmp2)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp4 = 1.0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp6 = tmp2 / tmp5
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp7 = tl_math.abs(tmp6)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp8 = 0.5
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp9 = tmp7 > tmp8
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp10 = tl.full([1, 1], 0, tl.int32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp11 = tmp10 < tmp6
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp12 = tmp11.to(tl.int8)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp13 = tmp6 < tmp10
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp14 = tmp13.to(tl.int8)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp15 = tmp12 - tmp14
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp16 = tmp15.to(tmp6.dtype)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp17 = tmp16 * tmp8
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp18 = tmp6 - tmp17
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp19 = 0.0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp20 = tmp6 * tmp19
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp21 = tl.where(tmp9, tmp18, tmp20)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp24 = 0.8864048946659319
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp26 = tmp21 * tmp25
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp27 = -1.0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp28 = tmp23 + tmp27
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp29 = 1.558387861036063
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp30 = tmp28 * tmp29
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp31 = 0.7791939305180315
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp33 = tmp26 + tmp32
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp34 = tmp1 * tmp33
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp35 = 2.0
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tmp36 = tmp34 * tmp35
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     tl.store(out_ptr0 + (y0 + 240*x3), tmp36, xmask & ymask)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] ''', device_str='cuda')
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] async_compile.wait(globals())
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] del async_compile
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def call(args):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7 = args
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     args.clear()
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     assert_size_stride(primals_1, (34, 10, 8, 30), (2400, 240, 30, 1))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     assert_size_stride(primals_2, (10, ), (1, ))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     assert_size_stride(primals_3, (10, ), (1, ))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     assert_size_stride(primals_4, (30, ), (1, ))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     assert_size_stride(primals_5, (30, 10), (10, 1))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     assert_size_stride(primals_6, (10, 10), (10, 1))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     assert_size_stride(primals_7, (10, ), (1, ))
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf17 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf17)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf19 = empty_strided_cuda((34, 10, 1), (10, 1, 1), torch.bool)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.bernoulli]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_bernoulli_0.run(buf17, buf19, 0, 340, grid=grid(340), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf0 = empty_strided_cuda((34, 2, 1, 1), (2, 1, 68, 68), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf1 = empty_strided_cuda((34, 2, 1, 1), (2, 1, 68, 68), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf3 = empty_strided_cuda((34, 2, 1, 1), (2, 1, 68, 68), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.native_group_norm]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_red_fused_native_group_norm_1.run(primals_1, buf0, buf1, buf3, 68, 1200, grid=grid(68), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf21 = empty_strided_cuda((34, 10, 240), (2432, 240, 1), torch.bool)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.native_dropout]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_native_dropout_2.run(buf17, buf21, 1, 81600, grid=grid(81600), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         del buf17
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf4 = empty_strided_cuda((240, 34, 10), (340, 10, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_clone_3.run(primals_1, buf0, buf1, primals_2, primals_3, buf4, 240, 340, grid=grid(240, 340), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         del buf1
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         del primals_3
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf5 = empty_strided_cuda((8160, 30), (30, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mm]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (8160, 10), (10, 1), 0), reinterpret_tensor(primals_5, (10, 30), (1, 10), 0), out=buf5)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf6 = empty_strided_cuda((3, 240, 34, 10), (81600, 340, 10, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_clone_4.run(buf5, primals_4, buf6, 244800, grid=grid(244800), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         del buf5
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         del primals_4
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf7 = empty_strided_cuda((68, 240, 5), (5, 340, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_mul_5.run(buf6, buf7, 81600, grid=grid(81600), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf8 = empty_strided_cuda((68, 5, 240), (5, 1, 340), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf24 = empty_strided_cuda((68, 240, 5), (5, 340, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.bmm, aten.transpose]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_bmm_mul_transpose_6.run(buf6, buf8, buf24, 81600, grid=grid(81600), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf13 = empty_strided_cuda((68, 240, 5), (5, 340, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf23 = empty_strided_cuda((68, 5, 240), (5, 1, 340), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm, aten.transpose]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_bmm_transpose_7.run(buf6, buf13, buf23, 81600, grid=grid(81600), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         del buf6
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf9 = empty_strided_cuda((68, 240, 240), (57600, 240, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.mul, aten.bmm]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         extern_kernels.bmm(buf7, buf8, out=buf9)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf12 = buf9; del buf9  # reuse
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten._softmax]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_per_fused__softmax_8.run(buf12, 16320, 240, grid=grid(16320), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf14 = reinterpret_tensor(buf8, (68, 240, 5), (1200, 5, 1), 0); del buf8  # reuse
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.bmm]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         extern_kernels.bmm(buf12, buf13, out=buf14)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf15 = reinterpret_tensor(buf13, (240, 68, 5), (340, 5, 1), 0); del buf13  # reuse
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.clone]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused_clone_9.run(buf14, buf15, 81600, grid=grid(81600), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf16 = reinterpret_tensor(buf14, (8160, 10), (10, 1), 0); del buf14  # reuse
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [multi_head_attention_forward], Original ATen: [aten.addmm]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         extern_kernels.addmm(primals_7, reinterpret_tensor(buf15, (8160, 10), (10, 1), 0), reinterpret_tensor(primals_6, (10, 10), (1, 10), 0), alpha=1, beta=1, out=buf16)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         del primals_7
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         buf22 = empty_strided_cuda((34, 10, 240), (2400, 240, 1), torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4, x_5, x_6], Original ATen: [aten.abs, aten.add, aten.div, aten.gt, aten.sign, aten.mul, aten.sub, aten.where, aten._to_copy, aten.native_dropout]
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]         triton_poi_fused__to_copy_abs_add_div_gt_mul_native_dropout_sign_sub_where_10.run(buf21, buf16, buf19, buf22, 240, 340, grid=grid(240, 340), stream=stream0)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     return (buf22, primals_1, primals_2, reinterpret_tensor(buf0, (34, 2), (2, 1), 0), reinterpret_tensor(buf3, (34, 2), (2, 1), 0), reinterpret_tensor(buf4, (8160, 10), (10, 1), 0), buf12, reinterpret_tensor(buf15, (8160, 10), (10, 1), 0), buf16, buf19, buf21, primals_6, buf23, reinterpret_tensor(buf7, (68, 5, 240), (5, 1, 340), 0), buf24, primals_5, )
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_1 = rand_strided((34, 10, 8, 30), (2400, 240, 30, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_2 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_3 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_4 = rand_strided((30, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_5 = rand_strided((30, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_6 = rand_strided((10, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     primals_7 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7])
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] if __name__ == "__main__":
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:53:27.737000 3201829 site-packages/torch/_inductor/graph.py:2014] [501/0] [__output_code] 
V0205 11:53:27.756000 3201829 site-packages/torch/_inductor/graph.py:2022] [501/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zh/czhwcg7vkvlqf2s2vzcmz2ofsbwdtf2hd4h5d3osgy4chysiplbu.py
I0205 11:53:28.738000 3201829 site-packages/torch/_inductor/graph.py:2056] [501/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zh/czhwcg7vkvlqf2s2vzcmz2ofsbwdtf2hd4h5d3osgy4chysiplbu.py

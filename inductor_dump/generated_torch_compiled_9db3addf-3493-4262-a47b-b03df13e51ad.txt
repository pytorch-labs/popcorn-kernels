V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] Output code: 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # AOT ID: ['7_forward']
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import torch
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import math
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import random
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import os
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import tempfile
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from math import inf, nan
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from cmath import nanj
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch import device, empty_strided
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     grid,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     split_scan_grid,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     grid_combo_kernels,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     start_graph,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     end_graph,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     cooperative_reduction_grid,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] aten = torch.ops.aten
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] async_compile = AsyncCompile()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tk/ctkjasgjzhn4ce6epmv3kqzutwctkkwe5lrgaedjw5w7dmvq7lqa.py
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   input_1 => add_tensor_2
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   input_2 => relu
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Graph fragment:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_2, %primals_3), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_2,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_poi_fused_addmm_relu_0 = async_compile.triton('triton_poi_fused_addmm_relu_0', '''
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     size_hints={'x': 64}, 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     filename=__file__,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton.jit
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def triton_poi_fused_addmm_relu_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xnumel = 64
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     x0 = xindex
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp4, xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] ''', device_str='cuda')
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/di/cdiod5smsewawwoctekkofo54mu54ejetsd2tpkssie5hxvrhlti.py
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Topologically Sorted Source Nodes: [input_3, x_1], Original ATen: [aten.addmm, aten.relu]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   input_3 => add_tensor_1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   x_1 => relu_1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Graph fragment:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_5), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor_1,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_poi_fused_addmm_relu_1 = async_compile.triton('triton_poi_fused_addmm_relu_1', '''
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     size_hints={'x': 32}, 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     filename=__file__,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton.jit
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def triton_poi_fused_addmm_relu_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xnumel = 32
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     x0 = xindex
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp4, xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] ''', device_str='cuda')
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wj/cwjbwhghz2asee2pkao56ovzbq2pmuk5iyeuxq5u677equpduhur.py
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Topologically Sorted Source Nodes: [input_4, input_5], Original ATen: [aten.addmm, aten.relu]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   input_4 => add_tensor
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   input_5 => relu_2
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Graph fragment:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_7), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_tensor,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_poi_fused_addmm_relu_2 = async_compile.triton('triton_poi_fused_addmm_relu_2', '''
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     size_hints={'x': 16}, 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     filename=__file__,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     min_elem_per_thread=0
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton.jit
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def triton_poi_fused_addmm_relu_2(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xnumel = 16
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xmask = xindex < xnumel
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     x0 = xindex
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp4, xmask)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] ''', device_str='cuda')
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sr/csrmf7tq6frvta4je7rlqis3oirb7zzcnqkotdvwqfaav5xic23s.py
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, randn_like, target, log_softmax, loss], Original ATen: [aten.relu, aten.randn_like, aten._softmax, aten._log_softmax, aten.mul, aten.xlogy, aten.sub, aten.sum, aten.div]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Source node to ATen node mapping:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   log_softmax => amax_1, exp_1, log, sub_1, sub_2, sum_2
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   loss => div_1, eq, full_default, full_default_1, isnan, log_1, mul, mul_1, sub_3, sum_3, where, where_1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   randn_like => inductor_lookup_seed_default, inductor_random_default
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   target => amax, div, exp, sub, sum_1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   x_2 => relu_3
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Graph fragment:
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%addmm_3,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %inductor_random_default : [num_users=3] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 8], %inductor_lookup_seed_default, randn), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %amax : [num_users=2] = call_function[target=torch.ops.aten.amax.default](args = (%inductor_random_default, [1], True), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%inductor_random_default, %amax), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %div : [num_users=5] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %amax_1 : [num_users=2] = call_function[target=torch.ops.aten.amax.default](args = (%relu_3, [1], True), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sub_1 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%relu_3, %amax_1), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %log : [num_users=2] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %log), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %sub_2), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%div, 0), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%div,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %log_1), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default, %mul_1), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %isnan : [num_users=1] = call_function[target=torch.ops.aten.isnan.default](args = (%div,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], nan), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%isnan, %full_default_1, %where), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%where_1, %mul), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%sub_3,), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_3, 1), kwargs = {})
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_per_fused__log_softmax__softmax_div_mul_randn_like_relu_sub_sum_xlogy_3 = async_compile.triton('triton_per_fused__log_softmax__softmax_div_mul_randn_like_relu_sub_sum_xlogy_3', '''
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     size_hints={'x': 1, 'r0_': 8},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     filename=__file__,
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': (9,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax__softmax_div_mul_randn_like_relu_sub_sum_xlogy_3', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 5, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton.jit
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def triton_per_fused__log_softmax__softmax_div_mul_randn_like_relu_sub_sum_xlogy_3(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, out_ptr3, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xnumel = 1
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_numel = 8
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     R0_BLOCK: tl.constexpr = 8
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     rnumel = r0_numel
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_offset = 0
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     roffset = r0_offset
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     rindex = r0_index
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_0 = r0_index
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp5 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp6 = tmp2 - tmp5
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp7 = tl_math.exp(tmp6)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK, R0_BLOCK])
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp10 = tl.sum(tmp8, 1)[:, None]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp11 = tl_math.log(tmp10)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp12 = tl.load(in_ptr1 + load_seed_offset)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp13 = r0_0
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp14 = tl.randn(tmp12, (tmp13).to(tl.uint32))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK, R0_BLOCK])
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp17 = triton_helpers.max2(tmp15, 1)[:, None]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp18 = tmp14 - tmp17
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK, R0_BLOCK])
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp22 = tl.sum(tmp20, 1)[:, None]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp23 = tmp19 / tmp22
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp24 = libdevice.isnan(tmp23).to(tl.int1)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp25 = 0.0
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp26 = tmp23 == tmp25
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp27 = tl_math.log(tmp23)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp28 = tmp23 * tmp27
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp29 = tl.where(tmp26, tmp25, tmp28)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp30 = float("nan")
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp31 = tl.where(tmp24, tmp30, tmp29)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp32 = tmp6 - tmp11
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp33 = tmp23 * tmp32
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp34 = tmp31 - tmp33
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp35 = tl.broadcast_to(tmp34, [XBLOCK, R0_BLOCK])
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp37 = tl.sum(tmp35, 1)[:, None]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp38 = 1.0
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp39 = tmp37 * tmp38
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.debug_barrier()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp11, None)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp14, None)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.debug_barrier()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp39, None)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(out_ptr2 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp17, None)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(out_ptr3 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp22, None)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] ''', device_str='cuda')
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] async_compile.wait(globals())
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] del async_compile
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def call(args):
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9 = args
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     args.clear()
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_1, (1, 128), (128, 1))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_2, (64, 128), (128, 1))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_3, (64, ), (1, ))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_4, (32, 64), (64, 1))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_6, (16, 32), (32, 1))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_7, (16, ), (1, ))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_8, (8, 16), (16, 1))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(primals_9, (8, ), (1, ))
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf0 = empty_strided_cuda((1, 64), (64, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         extern_kernels.mm(primals_1, reinterpret_tensor(primals_2, (128, 64), (1, 128), 0), out=buf0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del primals_2
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.relu]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         triton_poi_fused_addmm_relu_0.run(buf1, primals_3, 64, grid=grid(64), stream=stream0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del primals_3
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf2 = empty_strided_cuda((1, 32), (32, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(primals_4, (64, 32), (1, 64), 0), out=buf2)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3, x_1], Original ATen: [aten.addmm, aten.relu]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         triton_poi_fused_addmm_relu_1.run(buf3, primals_5, 32, grid=grid(32), stream=stream0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del primals_5
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf4 = empty_strided_cuda((1, 16), (16, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.addmm]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         extern_kernels.mm(buf3, reinterpret_tensor(primals_6, (32, 16), (1, 32), 0), out=buf4)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4, input_5], Original ATen: [aten.addmm, aten.relu]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         triton_poi_fused_addmm_relu_2.run(buf5, primals_7, 16, grid=grid(16), stream=stream0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del primals_7
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf6 = empty_strided_cuda((1, 8), (8, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.addmm]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         extern_kernels.addmm(primals_9, buf5, reinterpret_tensor(primals_8, (16, 8), (1, 16), 0), alpha=1, beta=1, out=buf6)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del primals_9
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf7 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf7)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf11 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf12 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf13 = buf12; del buf12  # reuse
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf8 = empty_strided_cuda((1, 8), (8, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf9 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf10 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf14 = empty_strided_cuda((), (), torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf15 = buf14; del buf14  # reuse
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, randn_like, target, log_softmax, loss], Original ATen: [aten.relu, aten.randn_like, aten._softmax, aten._log_softmax, aten.mul, aten.xlogy, aten.sub, aten.sum, aten.div]
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         triton_per_fused__log_softmax__softmax_div_mul_randn_like_relu_sub_sum_xlogy_3.run(buf13, buf15, buf6, buf7, buf11, buf8, buf9, buf10, 0, 1, 8, grid=grid(1), stream=stream0)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del buf7
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     return (buf15, primals_1, buf1, buf3, buf5, buf6, buf8, buf9, buf10, buf11, buf13, primals_8, primals_6, primals_4, )
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_1 = rand_strided((1, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_2 = rand_strided((64, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_3 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_4 = rand_strided((32, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_6 = rand_strided((16, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_7 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_8 = rand_strided((8, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     primals_9 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9])
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] if __name__ == "__main__":
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:27:38.957000 3201829 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 11:27:38.965000 3201829 site-packages/torch/_inductor/graph.py:2022] [19/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ft/cftuvohn6rqugajyhbzyxhyifbvrzwslei5dhoabvqve3z4comve.py
I0205 11:27:39.192000 3201829 site-packages/torch/_inductor/graph.py:2056] [19/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ft/cftuvohn6rqugajyhbzyxhyifbvrzwslei5dhoabvqve3z4comve.py

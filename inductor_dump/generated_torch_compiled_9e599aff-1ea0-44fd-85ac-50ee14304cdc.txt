V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] Output code: 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # AOT ID: ['12_inference']
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import torch
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import math
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import random
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import os
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import tempfile
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from math import inf, nan
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from cmath import nanj
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch import device, empty_strided
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton.language as tl
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     grid,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     split_scan_grid,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     grid_combo_kernels,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     start_graph,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     end_graph,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] )
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] aten = torch.ops.aten
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/aj/cajgq75regztxxkjkmstev6ecfscb4jacugltalggkdmxwicerpq.py
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._softmax]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   x_2 => amax, exp, sub_12, sum_1
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Graph fragment:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%unsqueeze_1, [-3], True), kwargs = {})
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_1, %amax), kwargs = {})
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_12,), kwargs = {})
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-3], True), kwargs = {})
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_red_fused__softmax_0 = async_compile.triton('triton_red_fused__softmax_0', '''
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton.language as tl
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 16},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     filename=__file__,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] )
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton.jit
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] def triton_red_fused__softmax_0(in_ptr0, out_ptr0, out_ptr1, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     rnumel = r0_numel
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     rbase = r0_base
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     x0 = xindex
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     _tmp4 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         roffset = r0_offset
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         rindex = r0_index
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         r0_1 = r0_index
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (2*x0 + ks0*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + ks0*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp5 = triton_helpers.maximum(_tmp4, tmp3)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         _tmp4 = tl.where(r0_mask & xmask, tmp5, _tmp4)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp4 = triton_helpers.max2(_tmp4, 1)[:, None]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     _tmp12 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         roffset = r0_offset
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         rindex = r0_index
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         r0_1 = r0_index
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp6 = tl.load(in_ptr0 + (2*x0 + ks0*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp7 = tl.load(in_ptr0 + (1 + 2*x0 + ks0*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp9 = tmp8 - tmp4
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp10 = tl_math.exp(tmp9)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp11 = tl.broadcast_to(tmp10, [XBLOCK, R0_BLOCK])
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         tmp13 = _tmp12 + tmp11
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         _tmp12 = tl.where(r0_mask & xmask, tmp13, _tmp12)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp12 = tl.sum(_tmp12, 1)[:, None]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp12, xmask)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3l/c3l6bi2n73cyux534bdingb5wfashjf5k5bqtsq4dohn5rj7xifd.py
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.max_unpool2d]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   x_4 => full
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Graph fragment:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %arg0_1, %sub_18, 1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_poi_fused_max_unpool2d_1 = async_compile.triton('triton_poi_fused_max_unpool2d_1', '''
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton.language as tl
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     size_hints={'x': 1024}, 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     filename=__file__,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] )
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton.jit
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] def triton_poi_fused_max_unpool2d_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     x0 = xindex
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp0 = 0.0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3s/c3s7gzywvua4nm7jrtc7mgrrn42foh7vka3youehlvo4u3x3bwz3.py
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.max_unpool2d]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   x_4 => index_put
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Graph fragment:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%view_2, [%view_1], %view_3), kwargs = {})
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_poi_fused_max_unpool2d_2 = async_compile.triton('triton_poi_fused_max_unpool2d_2', '''
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton.language as tl
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     size_hints={'x': 512}, 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     filename=__file__,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool2d_2', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] )
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton.jit
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] def triton_poi_fused_max_unpool2d_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     x0 = xindex
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*((x0 % (ks0 // 2))) + ks0*(triton_helpers.div_floor_integer(x0,  ks0 // 2))), xmask, eviction_policy='evict_last')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*((x0 % (ks0 // 2))) + ks0*(triton_helpers.div_floor_integer(x0,  ks0 // 2))), xmask, eviction_policy='evict_last')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp25 = tl.load(in_ptr1 + ((x0 % (ks0 // 2))), xmask, eviction_policy='evict_last')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp28 = tl.load(in_ptr2 + ((x0 % (ks0 // 2))), xmask, eviction_policy='evict_last')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp2 = tmp1 > tmp0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int8)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int8)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp6 = triton_helpers.maximum(tmp1, tmp0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp7 = tl.full([1], 2, tl.int32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp8 = tl.where((tmp5 < 0) != (tmp7 < 0), tl.where(tmp5 % tmp7 != 0, tmp5 // tmp7 - 1, tmp5 // tmp7), tmp5 // tmp7)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp9 = tmp8 * tmp7
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp10 = tmp5 - tmp9
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp11 = tl.full([1], 0, tl.int64)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp12 = tmp11 + tmp8
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp13 = 2*((x0 % (ks0 // 2)))
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp14 = tmp13 + tmp10
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp15 = ks0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp16 = tmp12 * tmp15
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp17 = tmp16 + tmp14
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp18 = 2*(ks0 // 2)*(triton_helpers.div_floor_integer(x0,  ks0 // 2))
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp19 = tmp17 + tmp18
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp20 = 2*ks1*(ks0 // 2)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp21 = tmp19 + tmp20
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp22 = tmp19 < 0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp23 = tl.where(tmp22, tmp21, tmp19)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tl.device_assert(((0 <= tmp23) & (tmp23 < 2*ks1*(ks0 // 2))) | ~(xmask), "index out of bounds: 0 <= tmp23 < 2*ks1*(ks0 // 2)")
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp26 = tmp6 - tmp25
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp27 = tl_math.exp(tmp26)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp29 = tmp27 / tmp28
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to((tmp23 % (2*ks1*(ks0 // 2))), [XBLOCK])), tmp29, xmask)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lq/clqm2b5hiuvmj2ndc3ekxpkuunkdvke2zuwkccikrn4snmq6rqxh.py
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.permute]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   x_5 => permute
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] # Graph fragment:
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #   %permute : [num_users=1] = call_function[target=torch.ops.aten.permute.default](args = (%squeeze_3, [2, 0, 1]), kwargs = {})
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_poi_fused_permute_3 = async_compile.triton('triton_poi_fused_permute_3', '''
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] import triton.language as tl
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     size_hints={'x': 1024}, 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     filename=__file__,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_permute_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] )
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] @triton.jit
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] def triton_poi_fused_permute_3(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     x1 = xindex // ks0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     x2 = xindex
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 2*(ks2 // 2)*((((x0 + 2*x1*(ks2 // 2)) // (2*(ks2 // 2))) % ks1))), xmask, eviction_policy='evict_last')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] ''', device_str='cuda')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] cpp_fused_full_randint_4 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'int64_t*', 'int64_t*', 'const int64_t', 'const int64_t'], '''
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                        int64_t* out_ptr0,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                        int64_t* out_ptr1,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                        int64_t* out_ptr2,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                        const int64_t ks0,
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                        const int64_t ks1)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         #pragma GCC ivdep
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(ks0); x0+=static_cast<int64_t>(1L))
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]             {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     auto tmp1 = x0;
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     auto tmp3 = static_cast<int64_t>(1);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     auto tmp4 = ks1;
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     auto tmp5 = c10::convert<int64_t>(tmp4);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     auto tmp6 = randint64_cpu(tmp0, tmp2, tmp3, tmp5);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp6;
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]             }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]             {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp0 = ks0;
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp1;
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]             }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]             {
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(1L)];
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp2 = static_cast<int64_t>(1);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp3 = ks0;
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp4 = c10::convert<int64_t>(tmp3);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 auto tmp5 = randint64_cpu(tmp0, tmp1, tmp2, tmp4);
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]                 out_ptr2[static_cast<int64_t>(0L)] = tmp5;
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]             }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] }
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] ''')
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] async_compile.wait(globals())
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] del async_compile
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] def call(args):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     args.clear()
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     s0 = arg0_1
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     s1 = arg1_1
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     assert_size_stride(arg2_1, (1, s0, s1), (s0*s1, s1, 1))
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 1, 1, s1 // 2), (s1 // 2, s1 // 2, s1 // 2, 1), torch.float32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 1, 1, s1 // 2), (s1 // 2, s1 // 2, s1 // 2, 1), torch.float32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._softmax]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_red_fused__softmax_0_xnumel = s1 // 2
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_red_fused__softmax_0.run(arg2_1, buf0, buf1, s1, triton_red_fused__softmax_0_xnumel, s0, grid=grid(triton_red_fused__softmax_0_xnumel), stream=stream0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, 2*(s1 // 2), 1), (2*s0*(s1 // 2), 2*(s1 // 2), 1, 1), torch.float32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.max_unpool2d]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_poi_fused_max_unpool2d_1_xnumel = 2*s0*(s1 // 2)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_poi_fused_max_unpool2d_1.run(buf2, triton_poi_fused_max_unpool2d_1_xnumel, grid=grid(triton_poi_fused_max_unpool2d_1_xnumel), stream=stream0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.max_unpool2d]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_poi_fused_max_unpool2d_2_xnumel = s0*(s1 // 2)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_poi_fused_max_unpool2d_2.run(arg2_1, buf0, buf1, buf2, s1, s0, triton_poi_fused_max_unpool2d_2_xnumel, grid=grid(triton_poi_fused_max_unpool2d_2_xnumel), stream=stream0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         del arg2_1
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         del buf0
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         del buf1
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         ps0 = 2*(s1 // 2)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         buf4 = empty_strided_cuda((2*(s1 // 2), 1, s0), (1, 2*s0*(s1 // 2), 2*(s1 // 2)), torch.float32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.permute]
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_poi_fused_permute_3_xnumel = 2*s0*(s1 // 2)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         triton_poi_fused_permute_3.run(buf2, buf4, ps0, s0, s1, triton_poi_fused_permute_3_xnumel, grid=grid(triton_poi_fused_permute_3_xnumel), stream=stream0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]         del buf2
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     buf5 = empty_strided_cpu((2, ), (1, ), torch.int64)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf5)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     buf6 = empty_strided_cpu((1, s1), (s1, 1), torch.int64)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     buf7 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     buf8 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     cpp_fused_full_randint_4(buf5, buf6, buf7, buf8, s1, s0)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     return (buf4, buf6, buf7, buf8, )
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     arg0_1 = 10
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     arg1_1 = 64
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     arg2_1 = rand_strided((1, 10, 64), (640, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] if __name__ == "__main__":
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:28:06.463000 3201829 site-packages/torch/_inductor/graph.py:2014] [29/0_1] [__output_code] 
V0205 11:28:06.471000 3201829 site-packages/torch/_inductor/graph.py:2022] [29/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zt/czt3f3ik2zwlfekcn4hbwxygey33teomtuythkyilxtzim4pvykd.py
I0205 11:28:07.422000 3201829 site-packages/torch/_inductor/graph.py:2056] [29/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zt/czt3f3ik2zwlfekcn4hbwxygey33teomtuythkyilxtzim4pvykd.py

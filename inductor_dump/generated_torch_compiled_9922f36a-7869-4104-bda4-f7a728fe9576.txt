V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] Output code: 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # AOT ID: ['87_forward']
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import torch
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import math
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import random
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import os
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import tempfile
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from math import inf, nan
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from cmath import nanj
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch import device, empty_strided
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton.language as tl
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     grid,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     split_scan_grid,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     grid_combo_kernels,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     start_graph,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     end_graph,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] )
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] aten = torch.ops.aten
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/35/c35ehyvrionlj3kqax7v7h7tbxwdpojowfnm6sgiw5h3q5pivoub.py
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._adaptive_avg_pool2d, aten.native_layer_norm]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   x => _adaptive_avg_pool2d
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   x_1 => add_11, rsqrt, var_mean
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Graph fragment:
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %_adaptive_avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%unsqueeze, [1, 10]), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%squeeze, [2]), kwargs = {correction: 0, keepdim: True})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_11,), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] triton_per_fused__adaptive_avg_pool2d_native_layer_norm_0 = async_compile.triton('triton_per_fused__adaptive_avg_pool2d_native_layer_norm_0', '''
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton.language as tl
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 16},
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     filename=__file__,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__adaptive_avg_pool2d_native_layer_norm_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 4, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] )
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] @triton.jit
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] def triton_per_fused__adaptive_avg_pool2d_native_layer_norm_0(in_out_ptr0, in_ptr0, out_ptr0, out_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     r0_numel = 10
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     rnumel = r0_numel
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     r0_offset = 0
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     r0_mask = r0_index < r0_numel
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     roffset = r0_offset
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     rindex = r0_index
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     r0_1 = r0_index
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     x0 = xindex
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (4 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (5 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (6 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp13 = tl.load(in_ptr0 + (7 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (8 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + (9 + 10*r0_1 + 100*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp2 = tmp1 + tmp0
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp4 = tmp3 + tmp2
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp6 = tmp5 + tmp4
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp8 = tmp7 + tmp6
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp10 = tmp9 + tmp8
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp12 = tmp11 + tmp10
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp14 = tmp13 + tmp12
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp16 = tmp15 + tmp14
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp18 = tmp17 + tmp16
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp19 = 0.1
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp20 = tmp18 * tmp19
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK, R0_BLOCK])
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp23 = tl.where(r0_mask & xmask, tmp21, 0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp24 = tl.broadcast_to(tmp21, [XBLOCK, R0_BLOCK])
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp26 = tl.where(r0_mask & xmask, tmp24, 0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp27 = tl.sum(tmp26, 1)[:, None]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp28 = tl.full([XBLOCK, 1], 10, tl.int32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp29 = tmp28.to(tl.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp30 = tmp27 / tmp29
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp31 = tmp21 - tmp30
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp32 = tmp31 * tmp31
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK, R0_BLOCK])
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp35 = tl.where(r0_mask & xmask, tmp33, 0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp36 = tl.sum(tmp35, 1)[:, None]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp37 = 10.0
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp38 = tmp36 / tmp37
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp39 = 1e-05
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp40 = tmp38 + tmp39
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp41 = libdevice.rsqrt(tmp40)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tl.store(out_ptr0 + (r0_1 + 10*x0), tmp20, r0_mask & xmask)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tl.debug_barrier()
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp41, xmask)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp30, xmask)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] ''', device_str='cuda')
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5f/c5fcj55zoz7o6lfr72i42tq7j6jsszgwd3rbfx4qf43qvfc5v2w5.py
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten.native_layer_norm, aten.reflection_pad1d]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   x_1 => add_12, mul_11, mul_12, sub_4
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   x_2 => _unsafe_index
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Graph fragment:
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze, %getitem_1), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %rsqrt), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, %primals_4), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %primals_5), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_12, [None, None, %sub_9]), kwargs = {})
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] triton_poi_fused_native_layer_norm_reflection_pad1d_1 = async_compile.triton('triton_poi_fused_native_layer_norm_reflection_pad1d_1', '''
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton.language as tl
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     size_hints={'x': 64}, 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     filename=__file__,
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_layer_norm_reflection_pad1d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] )
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] @triton.jit
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] def triton_poi_fused_native_layer_norm_reflection_pad1d_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     x0 = (xindex % 14)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     x1 = xindex // 14
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     x2 = xindex
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (9 + ((-1)*tl_math.abs((-9) + tl_math.abs((-2) + x0))) + 10*x1), xmask, eviction_policy='evict_last')
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp5 = tl.load(in_ptr3 + (9 + ((-1)*tl_math.abs((-9) + tl_math.abs((-2) + x0)))), xmask, eviction_policy='evict_last')
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp7 = tl.load(in_ptr4 + (9 + ((-1)*tl_math.abs((-9) + tl_math.abs((-2) + x0)))), xmask, eviction_policy='evict_last')
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp4 = tmp2 * tmp3
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp6 = tmp4 * tmp5
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp8, xmask)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] ''', device_str='cuda')
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] async_compile.wait(globals())
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] del async_compile
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] def call(args):
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     args.clear()
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     s0 = primals_1
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     s1 = primals_2
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     assert_size_stride(primals_3, (1, s0, 100), (100*s0, 100, 1))
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     assert_size_stride(primals_4, (10, ), (1, ))
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     assert_size_stride(primals_5, (10, ), (1, ))
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 1, 10), (10*s0, 10, 10, 1), torch.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf1 = empty_strided_cuda((1, s0, 1), (s0, 1, 1), torch.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, 1), (s0, 1, s0), torch.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf4 = reinterpret_tensor(buf2, (1, s0, 1), (s0, 1, 1), 0); del buf2  # reuse
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._adaptive_avg_pool2d, aten.native_layer_norm]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         triton_per_fused__adaptive_avg_pool2d_native_layer_norm_0.run(buf4, primals_3, buf0, buf1, s0, 10, grid=grid(s0), stream=stream0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         del primals_3
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf5 = empty_strided_cuda((1, s0, 14), (14*s0, 14, 1), torch.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten.native_layer_norm, aten.reflection_pad1d]
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         triton_poi_fused_native_layer_norm_reflection_pad1d_1_xnumel = 14*s0
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         triton_poi_fused_native_layer_norm_reflection_pad1d_1.run(buf0, buf1, buf4, primals_4, primals_5, buf5, triton_poi_fused_native_layer_norm_reflection_pad1d_1_xnumel, grid=grid(triton_poi_fused_native_layer_norm_reflection_pad1d_1_xnumel), stream=stream0)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         del primals_4
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         del primals_5
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     return (reinterpret_tensor(buf5, (1, 14, s0), (14*s0, 1, 14), 0), buf0, buf1, buf4, s0, )
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_1 = 3
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_2 = 100
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 100), (300, 100, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_4 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_5 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] if __name__ == "__main__":
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:44:29.095000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.100000 2062045 site-packages/torch/_inductor/graph.py:2022] [267/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jx/cjxbjxw5povncgi6l27t4nfqxcna2lxi5g46q2uj4q7m74mm6222.py
I0205 10:44:29.315000 2062045 site-packages/torch/_inductor/graph.py:2056] [267/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jx/cjxbjxw5povncgi6l27t4nfqxcna2lxi5g46q2uj4q7m74mm6222.py
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] Output code: 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # AOT ID: ['87_backward']
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import torch
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import math
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import random
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import os
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import tempfile
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from math import inf, nan
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from cmath import nanj
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch import device, empty_strided
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton.language as tl
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     grid,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     split_scan_grid,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     grid_combo_kernels,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     start_graph,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     end_graph,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] )
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] aten = torch.ops.aten
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wd/cwdtd3ypieemyvv4t4a3v4owuw6cqowhato2mss6iwqx3vgtwt25.py
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.reflection_pad1d_backward, aten.native_layer_norm, aten.native_layer_norm_backward]
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   x_1 => mul_11, sub_4
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] # Graph fragment:
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %add_28 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_2, 2), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_28, 0), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%add_28, 13), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %le), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %_unsafe_masked_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_masked_index.default](args = (%permute_1, %logical_and, [%view, %view_1, %add_28], 0.0), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%view_2, 1), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%view_2, 2), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_1, %le_1), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %_unsafe_masked_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_masked_index.default](args = (%permute_1, %logical_and_1, [%view, %view_1, %sub_14], 0.0), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %add_29 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_masked_index, %_unsafe_masked_index_1), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%view_2, 7), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%view_2, 8), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %logical_and_2 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %le_2), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %_unsafe_masked_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_masked_index.default](args = (%permute_1, %logical_and_2, [%view, %view_1, %sub_15], 0.0), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %add_30 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_29, %_unsafe_masked_index_2), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze, %getitem_1), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %rsqrt), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_30, %mul_11), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_31, [0, 1]), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%add_30, [0, 1]), kwargs = {})
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] triton_red_fused_native_layer_norm_native_layer_norm_backward_reflection_pad1d_backward_0 = async_compile.triton('triton_red_fused_native_layer_norm_native_layer_norm_backward_reflection_pad1d_backward_0', '''
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] import triton.language as tl
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4},
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     filename=__file__,
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_layer_norm_native_layer_norm_backward_reflection_pad1d_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] )
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] @triton.jit
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] def triton_red_fused_native_layer_norm_native_layer_norm_backward_reflection_pad1d_backward_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xnumel = 10
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     rnumel = r0_numel
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     rbase = r0_base
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     x0 = xindex
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     _tmp29 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     _tmp32 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         roffset = r0_offset
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         rindex = r0_index
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         r0_1 = r0_index
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp22 = tl.load(in_out_ptr0 + (x0 + 10*r0_1), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp23 = tl.load(in_ptr1 + (r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp25 = tl.load(in_ptr2 + (r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp0 = 2 + x0
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp1 = tl.full([1, 1], 0, tl.int64)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp2 = tmp0 >= tmp1
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp3 = tl.full([1, 1], 13, tl.int64)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp4 = tmp0 <= tmp3
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp5 = tmp2 & tmp4
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp6 = tl.load(in_ptr0 + (r0_1 + 2*ks0 + ks0*x0), r0_mask & tmp5 & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp7 = x0
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp8 = tl.full([1, 1], 1, tl.int64)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp9 = tmp7 >= tmp8
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp10 = tl.full([1, 1], 2, tl.int64)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp11 = tmp7 <= tmp10
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp12 = tmp9 & tmp11
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp13 = tl.load(in_ptr0 + (r0_1 + 2*ks0 + ((-1)*ks0*x0)), r0_mask & tmp12 & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp14 = tmp6 + tmp13
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp15 = tl.full([1, 1], 7, tl.int64)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp16 = tmp7 >= tmp15
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp17 = tl.full([1, 1], 8, tl.int64)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp18 = tmp7 <= tmp17
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp19 = tmp16 & tmp18
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp20 = tl.load(in_ptr0 + (r0_1 + 20*ks0 + ((-1)*ks0*x0)), r0_mask & tmp19 & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp21 = tmp14 + tmp20
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp24 = tmp22 - tmp23
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp26 = tmp24 * tmp25
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp27 = tmp21 * tmp26
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp28 = tl.broadcast_to(tmp21, [XBLOCK, R0_BLOCK])
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp30 = _tmp29 + tmp28
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         _tmp29 = tl.where(r0_mask & xmask, tmp30, _tmp29)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp31 = tl.broadcast_to(tmp27, [XBLOCK, R0_BLOCK])
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         tmp33 = _tmp32 + tmp31
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         _tmp32 = tl.where(r0_mask & xmask, tmp33, _tmp32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp29 = tl.sum(_tmp29, 1)[:, None]
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tmp32 = tl.sum(_tmp32, 1)[:, None]
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp29, xmask)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp32, xmask)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] ''', device_str='cuda')
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] async_compile.wait(globals())
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] del async_compile
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] def call(args):
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_1, _adaptive_avg_pool2d, getitem_1, rsqrt, tangents_1 = args
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     args.clear()
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     s0 = primals_1
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     assert_size_stride(_adaptive_avg_pool2d, (1, s0, 1, 10), (10*s0, 10, 10, 1))
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     assert_size_stride(getitem_1, (1, s0, 1), (s0, 1, 1))
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     assert_size_stride(rsqrt, (1, s0, 1), (s0, 1, 1))
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 14, s0), (14*s0, s0, 1))
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf0 = reinterpret_tensor(_adaptive_avg_pool2d, (1, s0, 10), (10*s0, 10, 1), 0); del _adaptive_avg_pool2d  # reuse
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf2 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         buf1 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.reflection_pad1d_backward, aten.native_layer_norm, aten.native_layer_norm_backward]
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         triton_red_fused_native_layer_norm_native_layer_norm_backward_reflection_pad1d_backward_0.run(buf0, tangents_1, getitem_1, rsqrt, buf2, buf1, s0, 10, s0, grid=grid(10), stream=stream0)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         del buf0
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         del getitem_1
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         del rsqrt
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]         del tangents_1
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     return (None, None, None, buf1, buf2, )
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     primals_1 = 3
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     _adaptive_avg_pool2d = rand_strided((1, 3, 1, 10), (30, 10, 10, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     getitem_1 = rand_strided((1, 3, 1), (3, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     rsqrt = rand_strided((1, 3, 1), (3, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     tangents_1 = rand_strided((1, 14, 3), (42, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     fn = lambda: call([primals_1, _adaptive_avg_pool2d, getitem_1, rsqrt, tangents_1])
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] if __name__ == "__main__":
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:44:29.508000 2062045 site-packages/torch/_inductor/graph.py:2014] [267/0_1] [__output_code] 
V0205 10:44:29.512000 2062045 site-packages/torch/_inductor/graph.py:2022] [267/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/77/c776ftv6qalprjfzfpnqyenl64k76gzx5gjfff4tvvto6w4nzsh4.py
I0205 10:44:29.906000 2062045 site-packages/torch/_inductor/graph.py:2056] [267/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/77/c776ftv6qalprjfzfpnqyenl64k76gzx5gjfff4tvvto6w4nzsh4.py

V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] Output code: 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # AOT ID: ['44_inference']
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import torch
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import math
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import random
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import os
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import tempfile
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from math import inf, nan
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from cmath import nanj
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch import device, empty_strided
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import triton
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import triton.language as tl
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     grid,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     split_scan_grid,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     grid_combo_kernels,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     start_graph,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     end_graph,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     cooperative_reduction_grid,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] )
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] aten = torch.ops.aten
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] async_compile = AsyncCompile()
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cq/ccq5fmow33su7nrhxpxl7ogdpyvypfcm5stbt4ej5fombpnroji5.py
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.bernoulli]
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   x_3 => inductor_lookup_seed_default, inductor_random_default
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # Graph fragment:
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, %sym_size_int_4], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] triton_poi_fused_bernoulli_0 = async_compile.triton('triton_poi_fused_bernoulli_0', '''
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import triton
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import triton.language as tl
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     size_hints={'x': 8192}, 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     filename=__file__,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] )
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] @triton.jit
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] def triton_poi_fused_bernoulli_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     x0 = xindex
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp1 = x0
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nl/cnli4zb45r6xjlgjbhnrftkwkdc2ld7oei3xxsfdshshb5yzr7cf.py
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.avg_pool2d, aten.sign, aten.abs, aten.relu, aten.mul, aten.pow, aten.bernoulli, aten._to_copy, aten.add]
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   x_2 => abs_1, avg_pool2d, mul_31, mul_35, pow_2, relu, sign
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   x_3 => add_48, add_61, add_80, convert_element_type, lt, mul_58, mul_71, mul_75
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] # Graph fragment:
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%unsqueeze, [1, 3], [1, 2]), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%squeeze,), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%squeeze,), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%abs_1,), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, %relu), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_31, 3), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mul_35, 0.5), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt, torch.float32), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %mul_71 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type, 0.8864048946659319), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %mul_75 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_2, %mul_71), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %add_48 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%convert_element_type, -1), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %mul_58 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%add_48, 1.558387861036063), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %add_61 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_58, 0.7791939305180315), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] #   %add_80 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_75, %add_61), kwargs = {})
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1 = async_compile.triton('triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1', '''
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import triton
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] import triton.language as tl
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     size_hints={'x': 8192}, 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     filename=__file__,
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] )
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] @triton.jit
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] def triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     x1 = xindex // ks0
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     x2 = xindex
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp53 = tl.load(in_ptr1 + (x0 + x1 + ks1*x1 + ks2*x1 + x1*((1 + ks1*ks2) // 2)), xmask, eviction_policy='evict_last')
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp0 = (-1) + ((((2*x0) // (2 + ks2)) % (2 + ks1)))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp3 = ks1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp5 = (-1) + (((2*x0) % (2 + ks2)))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp7 = ks2
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp9 = tmp2 & tmp4
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp11 = tmp10 & tmp8
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-1) + ((-1)*ks2) + ks2*((((2*x0) // (2 + ks2)) % (2 + ks1))) + ks1*ks2*x1 + (((2*x0) % (2 + ks2)))), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp13 = tmp12 * tmp12
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp14 = (-1) + ((((1 + 2*x0) // (2 + ks2)) % (2 + ks1)))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp15 = tmp14 >= tmp1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp16 = tmp14 < tmp3
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp17 = (-1) + (((1 + 2*x0) % (2 + ks2)))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp18 = tmp17 >= tmp1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp19 = tmp17 < tmp7
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp20 = tmp15 & tmp16
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp21 = tmp20 & tmp18
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp22 = tmp21 & tmp19
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp23 = tl.load(in_ptr0 + ((-1) + ((-1)*ks2) + ks2*((((1 + 2*x0) // (2 + ks2)) % (2 + ks1))) + ks1*ks2*x1 + (((1 + 2*x0) % (2 + ks2)))), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp24 = tmp23 * tmp23
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp25 = tmp24 + tmp13
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp26 = (-1) + ((((2 + 2*x0) // (2 + ks2)) % (2 + ks1)))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp27 = tmp26 >= tmp1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp28 = tmp26 < tmp3
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp29 = (-1) + (((2 + 2*x0) % (2 + ks2)))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp30 = tmp29 >= tmp1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp31 = tmp29 < tmp7
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp32 = tmp27 & tmp28
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp33 = tmp32 & tmp30
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp34 = tmp33 & tmp31
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp35 = tl.load(in_ptr0 + ((-1) + ((-1)*ks2) + ks2*((((2 + 2*x0) // (2 + ks2)) % (2 + ks1))) + ks1*ks2*x1 + (((2 + 2*x0) % (2 + ks2)))), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp36 = tmp35 * tmp35
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp37 = tmp36 + tmp25
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp38 = 0.3333333333333333
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp39 = tmp37 * tmp38
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp40 = tl.full([1], 0, tl.int32)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp41 = tmp40 < tmp39
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp42 = tmp41.to(tl.int8)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp43 = tmp39 < tmp40
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp44 = tmp43.to(tl.int8)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp45 = tmp42 - tmp44
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp46 = tmp45.to(tmp39.dtype)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp47 = tl_math.abs(tmp39)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp48 = triton_helpers.maximum(tmp40, tmp47)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp49 = tmp46 * tmp48
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp50 = 3.0
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp51 = tmp49 * tmp50
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp52 = libdevice.sqrt(tmp51)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp54 = 0.5
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp55 = tmp53 < tmp54
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp56 = tmp55.to(tl.float32)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp57 = 0.8864048946659319
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp58 = tmp56 * tmp57
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp59 = tmp52 * tmp58
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp60 = -1.0
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp61 = tmp56 + tmp60
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp62 = 1.558387861036063
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp63 = tmp61 * tmp62
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp64 = 0.7791939305180315
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp65 = tmp63 + tmp64
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tmp66 = tmp59 + tmp65
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp66, xmask)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] async_compile.wait(globals())
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] del async_compile
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] def call(args):
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     args.clear()
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     s0 = arg0_1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     s1 = arg1_1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     s2 = arg2_1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         buf1 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf1)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, 1 + s1 + s2 + ((1 + s1*s2) // 2)), (s0 + s0*s1 + s0*s2 + s0*((1 + s1*s2) // 2), 1 + s1 + s2 + ((1 + s1*s2) // 2), 1), torch.float32)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.bernoulli]
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         triton_poi_fused_bernoulli_0_xnumel = s0 + s0*s1 + s0*s2 + s0*((1 + s1*s2) // 2)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         triton_poi_fused_bernoulli_0.run(buf1, buf2, 0, triton_poi_fused_bernoulli_0_xnumel, grid=grid(triton_poi_fused_bernoulli_0_xnumel), stream=stream0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         del buf1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         ps0 = s1 + s2 + ((3 + s1*s2) // 2)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 1, s1 + s2 + ((3 + s1*s2) // 2)), (s0*s1 + s0*s2 + s0*((3 + s1*s2) // 2), s1 + s2 + ((3 + s1*s2) // 2), s1 + s2 + ((3 + s1*s2) // 2), 1), torch.float32)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         buf3 = reinterpret_tensor(buf0, (1, s0, s1 + s2 + ((3 + s1*s2) // 2)), (s0*s1 + s0*s2 + s0*((3 + s1*s2) // 2), s1 + s2 + ((3 + s1*s2) // 2), 1), 0); del buf0  # reuse
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3], Original ATen: [aten.avg_pool2d, aten.sign, aten.abs, aten.relu, aten.mul, aten.pow, aten.bernoulli, aten._to_copy, aten.add]
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1_xnumel = s0*s1 + s0*s2 + s0*((3 + s1*s2) // 2)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1.run(buf3, arg3_1, buf2, ps0, s1, s2, triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1_xnumel, grid=grid(triton_poi_fused__to_copy_abs_add_avg_pool2d_bernoulli_mul_pow_relu_sign_1_xnumel), stream=stream0)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         del arg3_1
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]         del buf2
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     return (reinterpret_tensor(buf3, (1, s1 + s2 + ((3 + s1*s2) // 2), s0), (s0 + s0*s1 + s0*s2 + s0*((1 + s1*s2) // 2), 1, s1 + s2 + ((3 + s1*s2) // 2)), 0), )
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     arg0_1 = 3
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     arg1_1 = 64
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     arg2_1 = 64
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] if __name__ == "__main__":
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:30:27.074000 1612526 site-packages/torch/_inductor/graph.py:2014] [185/0_1] [__output_code] 
V0205 14:30:27.078000 1612526 site-packages/torch/_inductor/graph.py:2022] [185/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zu/czutkzyzk5f7ejig6ssyouo3tdrb26tvzfpokj43jh3nvqlrxedw.py
I0205 14:30:27.304000 1612526 site-packages/torch/_inductor/graph.py:2056] [185/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zu/czutkzyzk5f7ejig6ssyouo3tdrb26tvzfpokj43jh3nvqlrxedw.py

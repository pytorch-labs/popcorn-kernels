V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] Output code: 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # AOT ID: ['172_inference']
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import torch
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import random
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import os
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import tempfile
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from math import inf, nan
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from cmath import nanj
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch import device, empty_strided
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     grid,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     split_scan_grid,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     grid_combo_kernels,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     start_graph,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     end_graph,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     cooperative_reduction_grid,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] aten = torch.ops.aten
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] async_compile = AsyncCompile()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sp/csp4ooz44ozbwg5ivbpninkybzfhffrzwvtvlhpdk65koskikvg7.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   x => var_mean
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%arg0_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr0, out_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 3
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 4096
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rbase = r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     x0 = xindex
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_1 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4096*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ei/ceitc7m35nof5zwhonsxslmjbebd5lyupu5wokh4afsilu6zoiii.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [randn_like, target], Original ATen: [aten.randn_like, aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   randn_like => inductor_lookup_seed_default, inductor_random_default
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   target => amax
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %inductor_random_default : [num_users=2] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 12288], %inductor_lookup_seed_default, randn), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%inductor_random_default, [1], True), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_red_fused__softmax_randn_like_1 = async_compile.triton('triton_red_fused__softmax_randn_like_1', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_randn_like_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_red_fused__softmax_randn_like_1(in_ptr0, out_ptr0, out_ptr1, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 6144
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rbase = r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     x0 = xindex
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     _tmp4 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_1 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp1 = r0_1 + 6144*x0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp2 = tl.randn(tmp0, (tmp1).to(tl.uint32))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp5 = triton_helpers.maximum(_tmp4, tmp3)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         _tmp4 = tl.where(r0_mask & xmask, tmp5, _tmp4)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tl.store(out_ptr0 + (r0_1 + 6144*x0), tmp2, r0_mask & xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp4 = triton_helpers.max2(_tmp4, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qg/cqgz55yxe5nimyn6wj5goyafmctv5v2wytoci43qtylp3sz75adj.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [target], Original ATen: [aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   target => amax
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%inductor_random_default, [1], True), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_per_fused__softmax_2 = async_compile.triton('triton_per_fused__softmax_2', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 1, 'r0_': 2},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_per_fused__softmax_2(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_offset = 0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_0 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp3 = triton_helpers.max2(tmp1, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp3, None)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bf/cbfm42ntxghe4yyzyvjigjcu343qixosiqg2azvc4mivtikmbvdf.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [target], Original ATen: [aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   target => exp, sub_1, sum_1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%inductor_random_default, %amax), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_red_fused__softmax_3 = async_compile.triton('triton_red_fused__softmax_3', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_red_fused__softmax_3(in_ptr0, in_ptr1, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 6144
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rbase = r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     x0 = xindex
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     _tmp6 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_1 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 6144*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp3 = tmp0 - tmp2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp4 = tl_math.exp(tmp3)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp7 = _tmp6 + tmp5
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         _tmp6 = tl.where(r0_mask & xmask, tmp7, _tmp6)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp6 = tl.sum(_tmp6, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fl/cfld6meghqpsiqwxeecapmtywsr2joejckn2hykwt3uk7dgf3cso.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [target], Original ATen: [aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   target => exp, sub_1, sum_1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%inductor_random_default, %amax), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_per_fused__softmax_4 = async_compile.triton('triton_per_fused__softmax_4', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 1, 'r0_': 2},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_per_fused__softmax_4(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_offset = 0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_0 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp3, None)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z6/cz6vke3ojkwuqcbav6xpv5mpnz643amzwr3qppehynyvhasc22qc.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   log_softmax => amax_1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_2, [1], True), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_red_fused__log_softmax_5 = async_compile.triton('triton_red_fused__log_softmax_5', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_red_fused__log_softmax_5(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 6144
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rbase = r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     x0 = xindex
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     _tmp11 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_1 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 6144*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp1 = tl.load(in_ptr1 + ((r0_1 + 6144*x0) // 4096), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp3 = tl.load(in_ptr2 + ((r0_1 + 6144*x0) // 4096), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp4 = 4096.0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp5 = tmp3 / tmp4
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp6 = 1e-05
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp7 = tmp5 + tmp6
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp8 = libdevice.rsqrt(tmp7)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp9 = tmp2 * tmp8
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp10 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp12 = triton_helpers.maximum(_tmp11, tmp10)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         _tmp11 = tl.where(r0_mask & xmask, tmp12, _tmp11)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp11 = triton_helpers.max2(_tmp11, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zy/czyeigr7hvnp7vbazqqx3eaawnkntkoncnkflwtuei4vzt3k3w5r.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   log_softmax => exp_1, sub_2, sum_2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %amax_1), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_red_fused__log_softmax_6 = async_compile.triton('triton_red_fused__log_softmax_6', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_red_fused__log_softmax_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 6144
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rbase = r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     x0 = xindex
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (0))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp11 = tl.broadcast_to(tmp10, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     _tmp15 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_1 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 6144*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp1 = tl.load(in_ptr1 + ((r0_1 + 6144*x0) // 4096), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp3 = tl.load(in_ptr2 + ((r0_1 + 6144*x0) // 4096), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp4 = 4096.0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp5 = tmp3 / tmp4
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp6 = 1e-05
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp7 = tmp5 + tmp6
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp8 = libdevice.rsqrt(tmp7)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp9 = tmp2 * tmp8
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp12 = tmp9 - tmp11
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp13 = tl_math.exp(tmp12)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp14 = tl.broadcast_to(tmp13, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp16 = _tmp15 + tmp14
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         _tmp15 = tl.where(r0_mask & xmask, tmp16, _tmp15)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp15 = tl.sum(_tmp15, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp15, xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l7/cl7ls2oftzlmub2riiydsgbczresbvv4tlcx6dr5s62iqyyozt44.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [target, loss, log_softmax], Original ATen: [aten._softmax, aten.xlogy, aten._log_softmax, aten.mul, aten.sub, aten.sum]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   log_softmax => log, sub_2, sub_3
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   loss => eq, full_default, full_default_1, isnan, log_1, mul_1, mul_2, sub_4, sum_3, where, where_1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   target => div, exp, sub_1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%inductor_random_default, %amax), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %div : [num_users=5] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %isnan : [num_users=1] = call_function[target=torch.ops.aten.isnan.default](args = (%div,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], nan), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%div, 0), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%div,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %log_1), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default, %mul_2), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%isnan, %full_default_1, %where), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %amax_1), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %sub_3), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%where_1, %mul_1), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%sub_4,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_red_fused__log_softmax__softmax_mul_sub_sum_xlogy_7 = async_compile.triton('triton_red_fused__log_softmax__softmax_mul_sub_sum_xlogy_7', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax__softmax_mul_sub_sum_xlogy_7', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_red_fused__log_softmax__softmax_mul_sub_sum_xlogy_7(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 6144
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = xindex < xnumel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rbase = r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     x0 = xindex
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (0))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp26 = tl.load(in_ptr5 + (0))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp29 = tl.load(in_ptr6 + (0))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp30 = tl.broadcast_to(tmp29, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     _tmp36 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         r0_1 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 6144*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp16 = tl.load(in_ptr2 + (r0_1 + 6144*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp17 = tl.load(in_ptr3 + ((r0_1 + 6144*x0) // 4096), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp19 = tl.load(in_ptr4 + ((r0_1 + 6144*x0) // 4096), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp3 = tmp0 - tmp2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp4 = tl_math.exp(tmp3)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp7 = tmp4 / tmp6
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp8 = libdevice.isnan(tmp7).to(tl.int1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp9 = 0.0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp10 = tmp7 == tmp9
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp11 = tl_math.log(tmp7)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp12 = tmp7 * tmp11
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp13 = tl.where(tmp10, tmp9, tmp12)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp14 = float("nan")
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp15 = tl.where(tmp8, tmp14, tmp13)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp18 = tmp16 - tmp17
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp20 = 4096.0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp21 = tmp19 / tmp20
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp22 = 1e-05
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp23 = tmp21 + tmp22
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp24 = libdevice.rsqrt(tmp23)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp25 = tmp18 * tmp24
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp28 = tmp25 - tmp27
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp31 = tl_math.log(tmp30)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp32 = tmp28 - tmp31
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp33 = tmp7 * tmp32
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp34 = tmp15 - tmp33
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp35 = tl.broadcast_to(tmp34, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         tmp37 = _tmp36 + tmp35
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         _tmp36 = tl.where(r0_mask & xmask, tmp37, _tmp36)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp36 = tl.sum(_tmp36, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp36, xmask)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xj/cxj2p6xbnzyplsnq2nmf7ivug37jebskiqa7kif5anqxktzqh3km.py
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.sum, aten.div]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Source node to ATen node mapping:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   loss => div_1, sum_3
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] # Graph fragment:
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%sub_4,), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_3, 1), kwargs = {})
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_per_fused_div_sum_8 = async_compile.triton('triton_per_fused_div_sum_8', '''
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] import triton.language as tl
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     size_hints={'x': 1, 'r0_': 2},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     filename=__file__,
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_div_sum_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] @triton.jit
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def triton_per_fused_div_sum_8(in_out_ptr0, in_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xnumel = 1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_numel = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rnumel = r0_numel
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_offset = 0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     roffset = r0_offset
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     rindex = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     r0_0 = r0_index
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp4 = 1.0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.debug_barrier()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp5, None)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] ''', device_str='cuda')
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] async_compile.wait(globals())
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] del async_compile
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def call(args):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     arg0_1, = args
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     args.clear()
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     assert_size_stride(arg0_1, (1, 3, 64, 64), (12288, 4096, 64, 1))
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf1 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg0_1, buf0, buf1, 3, 4096, grid=grid(3), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf3 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf3)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf4 = empty_strided_cuda((1, 12288), (12288, 1), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf5 = empty_strided_cuda((1, 1, 2), (2, 2, 1), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [randn_like, target], Original ATen: [aten.randn_like, aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_red_fused__softmax_randn_like_1.run(buf3, buf4, buf5, 0, 2, 6144, grid=grid(2), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf3
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf6 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [target], Original ATen: [aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_per_fused__softmax_2.run(buf5, buf6, 1, 2, grid=grid(1), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf7 = buf5; del buf5  # reuse
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [target], Original ATen: [aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_red_fused__softmax_3.run(buf4, buf6, buf7, 2, 6144, grid=grid(2), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf8 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [target], Original ATen: [aten._softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_per_fused__softmax_4.run(buf7, buf8, 1, 2, grid=grid(1), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf9 = buf7; del buf7  # reuse
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_red_fused__log_softmax_5.run(arg0_1, buf0, buf1, buf9, 2, 6144, grid=grid(2), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf10 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_per_fused__softmax_2.run(buf9, buf10, 1, 2, grid=grid(1), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf11 = buf9; del buf9  # reuse
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_red_fused__log_softmax_6.run(arg0_1, buf0, buf1, buf10, buf11, 2, 6144, grid=grid(2), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf12 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [log_softmax], Original ATen: [aten._log_softmax]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_per_fused__softmax_4.run(buf11, buf12, 1, 2, grid=grid(1), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf13 = buf4; del buf4  # reuse
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf14 = reinterpret_tensor(buf11, (2, ), (1, ), 0); del buf11  # reuse
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [target, loss, log_softmax], Original ATen: [aten._softmax, aten.xlogy, aten._log_softmax, aten.mul, aten.sub, aten.sum]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_red_fused__log_softmax__softmax_mul_sub_sum_xlogy_7.run(buf13, buf6, buf8, arg0_1, buf0, buf1, buf10, buf12, buf14, 2, 6144, grid=grid(2), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del arg0_1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf0
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf1
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf10
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf12
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf13
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf6
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf15 = reinterpret_tensor(buf8, (), (), 0); del buf8  # reuse
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.sum, aten.div]
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         triton_per_fused_div_sum_8.run(buf16, buf14, 1, 2, grid=grid(1), stream=stream0)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]         del buf14
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     return (buf16, )
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     arg0_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] if __name__ == "__main__":
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:54:45.970000 3201829 site-packages/torch/_inductor/graph.py:2014] [644/0] [__output_code] 
V0205 11:54:45.986000 3201829 site-packages/torch/_inductor/graph.py:2022] [644/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/nt/cntqik57i4ikhzfv67sy5fodxdxgxewohz25ss5etz67bh5vrkrz.py
I0205 11:54:46.342000 3201829 site-packages/torch/_inductor/graph.py:2056] [644/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/nt/cntqik57i4ikhzfv67sy5fodxdxgxewohz25ss5etz67bh5vrkrz.py

V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] Output code: 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # AOT ID: ['74_inference']
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import torch
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import math
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import random
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import os
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import tempfile
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from math import inf, nan
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from cmath import nanj
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch import device, empty_strided
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton.language as tl
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     grid,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     split_scan_grid,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     grid_combo_kernels,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     start_graph,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     end_graph,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     cooperative_reduction_grid,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] )
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] aten = torch.ops.aten
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] async_compile = AsyncCompile()
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gr/cgr7tc3kfrsa35ibgd3b2im4faxlfiw56kjwls5obseornvizsz2.py
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Topologically Sorted Source Nodes: [triplet_loss, mean_1], Original ATen: [aten.sub, aten.mean]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   mean_1 => mean_2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   triplet_loss => sub_63, sub_72
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Graph fragment:
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %sub_63 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_4, %slice_8), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %sub_72 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_4, %slice_12), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %mean_2 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_4, [1, 2, 3]), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] triton_red_fused_mean_sub_0 = async_compile.triton('triton_red_fused_mean_sub_0', '''
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton.language as tl
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] @triton_heuristics.reduction(
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     filename=__file__,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (7,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mean_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] )
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] @triton.jit
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] def triton_red_fused_mean_sub_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xnumel = 1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     rnumel = r0_numel
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     rbase = r0_base
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     _tmp90 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         roffset = r0_offset
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         rindex = r0_index
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_0 = (r0_index % ks0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_1 = r0_index // ks0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_2 = r0_index
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (2*(((r0_0 // 2) % (ks2 // 2))) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp2 = tl.load(in_ptr0 + (1 + 2*(((r0_0 // 2) % ks0)) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp5 = tl.load(in_ptr0 + (ks2 + 2*(((r0_0 // 2) % ks0)) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp8 = tl.load(in_ptr0 + (1 + ks2 + 2*(((r0_0 // 2) % ks0)) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp20 = tl.load(in_ptr0 + (2*(((r0_0 // 2) % ks0)) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp32 = tl.load(in_ptr0 + (2*((ks0 + r0_0) // 2) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*(((ks0 + r0_0) % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp34 = tl.load(in_ptr0 + (1 + 2*((ks0 + r0_0) // 2) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*(((ks0 + r0_0) % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp37 = tl.load(in_ptr0 + (ks2 + 2*((ks0 + r0_0) // 2) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*(((ks0 + r0_0) % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp40 = tl.load(in_ptr0 + (1 + ks2 + 2*((ks0 + r0_0) // 2) + 2*ks2*(((r0_1 // 2) % (ks1 // 2))) + ks1*ks2*(((ks0 + r0_0) % 2)) + 2*ks1*ks2*((r0_1 % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp65 = tl.load(in_ptr0 + (2*(((r0_0 // 2) % ks0)) + 2*ks2*(triton_helpers.div_floor_integer(r0_1 + (ks1 // 2),  2)) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*(((r0_1 + (ks1 // 2)) % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp67 = tl.load(in_ptr0 + (1 + 2*(((r0_0 // 2) % ks0)) + 2*ks2*(triton_helpers.div_floor_integer(r0_1 + (ks1 // 2),  2)) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*(((r0_1 + (ks1 // 2)) % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp70 = tl.load(in_ptr0 + (ks2 + 2*(((r0_0 // 2) % ks0)) + 2*ks2*(triton_helpers.div_floor_integer(r0_1 + (ks1 // 2),  2)) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*(((r0_1 + (ks1 // 2)) % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp73 = tl.load(in_ptr0 + (1 + ks2 + 2*(((r0_0 // 2) % ks0)) + 2*ks2*(triton_helpers.div_floor_integer(r0_1 + (ks1 // 2),  2)) + ks1*ks2*((r0_0 % 2)) + 2*ks1*ks2*(((r0_1 + (ks1 // 2)) % 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp1 = tmp0 * tmp0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp3 = tmp2 * tmp2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp4 = tmp3 + tmp1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp6 = tmp5 * tmp5
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp7 = tmp6 + tmp4
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp9 = tmp8 * tmp8
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp10 = tmp9 + tmp7
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp11 = 0.25
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp12 = tmp10 * tmp11
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp13 = tl.full([1, 1], 0, tl.int32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp14 = tmp13 < tmp12
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp15 = tmp14.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp16 = tmp12 < tmp13
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp17 = tmp16.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp18 = tmp15 - tmp17
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp19 = tmp18.to(tmp12.dtype)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp21 = tmp20 * tmp20
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp22 = tmp3 + tmp21
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp23 = tmp6 + tmp22
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp24 = tmp9 + tmp23
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp25 = tmp24 * tmp11
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp26 = tl_math.abs(tmp25)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp27 = triton_helpers.maximum(tmp13, tmp26)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp28 = tmp19 * tmp27
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp29 = 4.0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp30 = tmp28 * tmp29
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp31 = libdevice.sqrt(tmp30)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp33 = tmp32 * tmp32
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp35 = tmp34 * tmp34
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp36 = tmp35 + tmp33
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp38 = tmp37 * tmp37
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp39 = tmp38 + tmp36
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp41 = tmp40 * tmp40
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp42 = tmp41 + tmp39
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp43 = tmp42 * tmp11
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp44 = tmp13 < tmp43
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp45 = tmp44.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp46 = tmp43 < tmp13
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp47 = tmp46.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp48 = tmp45 - tmp47
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp49 = tmp48.to(tmp43.dtype)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp50 = tl_math.abs(tmp43)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp51 = triton_helpers.maximum(tmp13, tmp50)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp52 = tmp49 * tmp51
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp53 = tmp52 * tmp29
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp54 = libdevice.sqrt(tmp53)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp55 = tmp31 - tmp54
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp56 = tmp13 < tmp25
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp57 = tmp56.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp58 = tmp25 < tmp13
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp59 = tmp58.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp60 = tmp57 - tmp59
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp61 = tmp60.to(tmp25.dtype)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp62 = tmp61 * tmp27
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp63 = tmp62 * tmp29
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp64 = libdevice.sqrt(tmp63)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp66 = tmp65 * tmp65
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp68 = tmp67 * tmp67
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp69 = tmp68 + tmp66
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp71 = tmp70 * tmp70
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp72 = tmp71 + tmp69
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp74 = tmp73 * tmp73
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp75 = tmp74 + tmp72
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp76 = tmp75 * tmp11
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp77 = tmp13 < tmp76
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp78 = tmp77.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp79 = tmp76 < tmp13
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp80 = tmp79.to(tl.int8)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp81 = tmp78 - tmp80
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp82 = tmp81.to(tmp76.dtype)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp83 = tl_math.abs(tmp76)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp84 = triton_helpers.maximum(tmp13, tmp83)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp85 = tmp82 * tmp84
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp86 = tmp85 * tmp29
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp87 = libdevice.sqrt(tmp86)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp88 = tmp64 - tmp87
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp89 = tl.broadcast_to(tmp64, [XBLOCK, R0_BLOCK])
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp91 = _tmp90 + tmp89
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         _tmp90 = tl.where(r0_mask, tmp91, _tmp90)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tl.store(out_ptr0 + (tl.broadcast_to(r0_2, [XBLOCK, R0_BLOCK])), tmp55, r0_mask)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tl.store(out_ptr1 + (tl.broadcast_to(r0_2, [XBLOCK, R0_BLOCK])), tmp88, r0_mask)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp90 = tl.sum(_tmp90, 1)[:, None]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tl.store(out_ptr2 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp90, None)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] ''', device_str='cuda')
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7x/c7xvv4qylix3dwsqar3td2hsqyzdfdtyshfdvcxff5abd3rcqgun.py
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Topologically Sorted Source Nodes: [triplet_loss], Original ATen: [aten.add, aten.norm]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   triplet_loss => add_88, pow_3, sum_1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Graph fragment:
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %add_88 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_63, 1e-06), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_88, 2.0), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [3]), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] triton_red_fused_add_norm_1 = async_compile.triton('triton_red_fused_add_norm_1', '''
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton.language as tl
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] @triton_heuristics.reduction(
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     size_hints={'x': 32, 'r0_': 32},
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     filename=__file__,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_norm_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] )
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] @triton.jit
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] def triton_red_fused_add_norm_1(in_ptr0, out_ptr0, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     rnumel = r0_numel
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xmask = xindex < xnumel
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     rbase = r0_base
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     x0 = xindex
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     _tmp5 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         roffset = r0_offset
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         rindex = r0_index
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_1 = r0_index
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp1 = 1e-06
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp2 = tmp0 + tmp1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp3 = tmp2 * tmp2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp6 = _tmp5 + tmp4
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         _tmp5 = tl.where(r0_mask & xmask, tmp6, _tmp5)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] ''', device_str='cuda')
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jz/cjzev7aryn32dheqm53g5pvtoqqnuu5olivwv5jsvlrcrnqrkxks.py
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Topologically Sorted Source Nodes: [triplet_loss, hinge_loss, mean_1, add], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.ne, aten.fill, aten.zeros_like, aten.where]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Source node to ATen node mapping:
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   add => add_119
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   hinge_loss => add_118, clamp_min_1, full_default, full_default_1, full_default_2, full_default_3, mean_3, sub_88, where, where_1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   mean_1 => mean_2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   triplet_loss => add_108, clamp_min, mean, pow_4, pow_6, sub_83
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] # Graph fragment:
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %add_108 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%pow_4, 1.0), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %sub_83 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_108, %pow_6), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_83, 0), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min,), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %mean_2 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_4, [1, 2, 3]), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %sub_88 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default_1, %mean_2), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_88, 0), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_2, %clamp_min_1, %full_default), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_3, %mean_2, %full_default), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %add_118 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %where_1), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%add_118,), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] #   %add_119 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_3), kwargs = {})
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] triton_red_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2 = async_compile.triton('triton_red_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2', '''
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] import triton.language as tl
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] @triton_heuristics.reduction(
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     size_hints={'x': 1, 'r0_': 32},
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     filename=__file__,
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] )
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] @triton.jit
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] def triton_red_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xnumel = 1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     rnumel = r0_numel
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     rbase = r0_base
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     _tmp10 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         roffset = r0_offset
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         rindex = r0_index
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         r0_0 = r0_index
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp1 = libdevice.sqrt(tmp0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp2 = 1.0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp3 = tmp1 + tmp2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp5 = libdevice.sqrt(tmp4)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp6 = tmp3 - tmp5
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp7 = 0.0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         tmp11 = _tmp10 + tmp9
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         _tmp10 = tl.where(r0_mask, tmp11, _tmp10)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp10 = tl.sum(_tmp10, 1)[:, None]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (0))
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK, 1])
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp12 = ks0 // 2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp14 = tmp10 / tmp13
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp17 = ks1*(ks0 // 2)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp18 = tmp17.to(tl.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp19 = tmp16 / tmp18
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp20 = 1.0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp21 = tmp20 - tmp19
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp22 = 0.0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp21, tmp22)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp24 = tl.full([1, 1], False, tl.int1)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp25 = tl.where(tmp24, tmp23, tmp22)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp26 = tl.full([1, 1], True, tl.int1)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp27 = tl.where(tmp26, tmp19, tmp22)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp28 = tmp25 + tmp27
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp29 = tmp28 / tmp20
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tmp30 = tmp14 + tmp29
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tl.debug_barrier()
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp30, None)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] ''', device_str='cuda')
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] async_compile.wait(globals())
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] del async_compile
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] def call(args):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     args.clear()
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     s0 = arg0_1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     s1 = arg1_1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     s2 = arg2_1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     assert_size_stride(arg3_1, (1, 4, s1, s2), (4*s1*s2, s1*s2, s2, 1))
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         ps0 = s2 // 2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         buf0 = empty_strided_cuda((1, 1, s1 // 2, s2 // 2), ((s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         buf2 = empty_strided_cuda((1, 1, s1 // 2, s2 // 2), ((s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         buf5 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss, mean_1], Original ATen: [aten.sub, aten.mean]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_mean_sub_0_r0_numel = (s1 // 2)*(s2 // 2)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_mean_sub_0.run(arg3_1, buf0, buf2, buf5, ps0, s1, s2, 1, triton_red_fused_mean_sub_0_r0_numel, grid=grid(1), stream=stream0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         del arg3_1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         buf1 = empty_strided_cuda((1, 1, s1 // 2), (s1 // 2, s1 // 2, 1), torch.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss], Original ATen: [aten.add, aten.norm]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_norm_1_xnumel = s1 // 2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_norm_1_r0_numel = s2 // 2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_norm_1.run(buf0, buf1, ps0, triton_red_fused_add_norm_1_xnumel, triton_red_fused_add_norm_1_r0_numel, grid=grid(triton_red_fused_add_norm_1_xnumel), stream=stream0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         del buf0
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         buf3 = empty_strided_cuda((1, 1, s1 // 2), (s1 // 2, s1 // 2, 1), torch.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss], Original ATen: [aten.add, aten.norm]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_norm_1_xnumel = s1 // 2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_norm_1_r0_numel = s2 // 2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_norm_1.run(buf2, buf3, ps0, triton_red_fused_add_norm_1_xnumel, triton_red_fused_add_norm_1_r0_numel, grid=grid(triton_red_fused_add_norm_1_xnumel), stream=stream0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         del buf2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss, hinge_loss, mean_1, add], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.ne, aten.fill, aten.zeros_like, aten.where]
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2_r0_numel = s1 // 2
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         triton_red_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2.run(buf6, buf1, buf3, buf5, s1, ps0, 1, triton_red_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2_r0_numel, grid=grid(1), stream=stream0)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         del buf1
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         del buf3
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]         del buf5
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     return (buf6, )
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     arg0_1 = 4
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     arg1_1 = 64
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     arg2_1 = 64
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     arg3_1 = rand_strided((1, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] if __name__ == "__main__":
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:31:54.005000 3201829 site-packages/torch/_inductor/graph.py:2014] [259/0] [__output_code] 
V0205 11:31:54.014000 3201829 site-packages/torch/_inductor/graph.py:2022] [259/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/77/c773hm3ko67g6jxmgtmeijqhung4prbuj2puzrb42jc3lof6mti5.py
I0205 11:31:54.317000 3201829 site-packages/torch/_inductor/graph.py:2056] [259/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/77/c773hm3ko67g6jxmgtmeijqhung4prbuj2puzrb42jc3lof6mti5.py

V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] Output code: 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # AOT ID: ['0_inference']
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import torch
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import math
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import random
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import os
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import tempfile
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from math import inf, nan
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from cmath import nanj
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch import device, empty_strided
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton.language as tl
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     grid,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     split_scan_grid,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     grid_combo_kernels,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     start_graph,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     end_graph,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     cooperative_reduction_grid,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] )
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] aten = torch.ops.aten
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] _quantized = torch.ops._quantized
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] async_compile = AsyncCompile()
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m6/cm6kjd5tpnyn4mm5vmskmxc4odcgbnlhbr7erfaocfdnukkiysp3.py
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Topologically Sorted Source Nodes: [triplet_loss, mean_1], Original ATen: [aten.sub, aten.mean]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Source node to ATen node mapping:
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   mean_1 => mean_2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   triplet_loss => sub, sub_1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Graph fragment:
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_4, %slice_8), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%slice_4, %slice_12), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %mean_2 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_4, [1, 2, 3]), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] triton_per_fused_mean_sub_0 = async_compile.triton('triton_per_fused_mean_sub_0', '''
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton.language as tl
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     filename=__file__,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 12, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] )
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] @triton.jit
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] def triton_per_fused_mean_sub_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel):
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xnumel = 1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_numel = 1024
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     R0_BLOCK: tl.constexpr = 1024
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     rnumel = r0_numel
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xmask = tl.full([R0_BLOCK], True, tl.int1)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[:]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_offset = 0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_mask = tl.full([R0_BLOCK], True, tl.int1)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     roffset = r0_offset
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     rindex = r0_index
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_0 = (r0_index % 32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_1 = r0_index // 32
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_2 = r0_index
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (64 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (65 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp26 = tl.load(in_ptr0 + (32 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (33 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (96 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (97 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (2048 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp52 = tl.load(in_ptr0 + (2049 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp55 = tl.load(in_ptr0 + (2112 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp58 = tl.load(in_ptr0 + (2113 + 2*(r0_0 // 2) + 128*(r0_1 // 2) + 4096*((r0_0 % 2)) + 8192*((r0_1 % 2))), None, eviction_policy='evict_last')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp1 = tmp0 * tmp0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp3 = tmp2 * tmp2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp4 = tmp3 + tmp1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp6 = tmp5 * tmp5
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp7 = tmp6 + tmp4
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp9 = tmp8 * tmp8
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp10 = tmp9 + tmp7
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp11 = 0.25
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp12 = tmp10 * tmp11
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp13 = tl.full([1], 0, tl.int32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp14 = tmp13 < tmp12
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp15 = tmp14.to(tl.int8)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp16 = tmp12 < tmp13
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp17 = tmp16.to(tl.int8)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp18 = tmp15 - tmp17
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp19 = tmp18.to(tmp12.dtype)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp20 = tl_math.abs(tmp12)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp13, tmp20)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp22 = tmp19 * tmp21
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp23 = 4.0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp24 = tmp22 * tmp23
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp25 = libdevice.sqrt(tmp24)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp27 = tmp26 * tmp26
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp29 = tmp28 * tmp28
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp30 = tmp29 + tmp27
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp32 = tmp31 * tmp31
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp33 = tmp32 + tmp30
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp35 = tmp34 * tmp34
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp36 = tmp35 + tmp33
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp37 = tmp36 * tmp11
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp38 = tmp13 < tmp37
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp39 = tmp38.to(tl.int8)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp40 = tmp37 < tmp13
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp41 = tmp40.to(tl.int8)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp42 = tmp39 - tmp41
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp43 = tmp42.to(tmp37.dtype)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp44 = tl_math.abs(tmp37)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp13, tmp44)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp46 = tmp43 * tmp45
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp47 = tmp46 * tmp23
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp48 = libdevice.sqrt(tmp47)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp49 = tmp25 - tmp48
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp51 = tmp50 * tmp50
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp53 = tmp52 * tmp52
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp54 = tmp53 + tmp51
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp56 = tmp55 * tmp55
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp57 = tmp56 + tmp54
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp59 = tmp58 * tmp58
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp60 = tmp59 + tmp57
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp61 = tmp60 * tmp11
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp62 = tmp13 < tmp61
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp63 = tmp62.to(tl.int8)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp64 = tmp61 < tmp13
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp65 = tmp64.to(tl.int8)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp66 = tmp63 - tmp65
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp67 = tmp66.to(tmp61.dtype)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp68 = tl_math.abs(tmp61)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp69 = triton_helpers.maximum(tmp13, tmp68)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp70 = tmp67 * tmp69
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp71 = tmp70 * tmp23
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp72 = libdevice.sqrt(tmp71)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp73 = tmp25 - tmp72
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp74 = tl.broadcast_to(tmp25, [R0_BLOCK])
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp76 = triton_helpers.promote_to_tensor(tl.sum(tmp74, 0))
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(r0_2, [R0_BLOCK])), tmp49, None)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0_2, [R0_BLOCK])), tmp73, None)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tl.store(out_ptr2 + (tl.full([1], 0, tl.int32)), tmp76, None)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] ''', device_str='cuda')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wc/cwcyw5al22y55cujlcjfzbtao7cdxkd27pouedw77pxbwinfkbqw.py
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Topologically Sorted Source Nodes: [triplet_loss], Original ATen: [aten.add, aten.norm]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Source node to ATen node mapping:
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   triplet_loss => add, pow_3, sum_1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Graph fragment:
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub, 1e-06), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add, 2.0), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [3]), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] triton_per_fused_add_norm_1 = async_compile.triton('triton_per_fused_add_norm_1', '''
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton.language as tl
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     size_hints={'x': 32, 'r0_': 32},
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     filename=__file__,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_norm_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] )
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] @triton.jit
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] def triton_per_fused_add_norm_1(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xnumel = 32
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_numel = 32
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     R0_BLOCK: tl.constexpr = 32
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     rnumel = r0_numel
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xmask = xindex < xnumel
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_offset = 0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     roffset = r0_offset
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     rindex = r0_index
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_1 = r0_index
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     x0 = xindex
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 32*x0), xmask, other=0.0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp1 = 1e-06
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp3 = tmp2 * tmp2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp6 = tl.where(xmask, tmp4, 0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp7 = tl.sum(tmp6, 1)[:, None]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp7, xmask)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] ''', device_str='cuda')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/s4/cs4vszyttu43x2m4ajvg6dqzf53k3b723yg4lxk3k6uwn2vdpz7f.py
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Topologically Sorted Source Nodes: [triplet_loss, hinge_loss, mean_1, add], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.ne, aten.fill, aten.zeros_like, aten.where]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Source node to ATen node mapping:
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   add => add_4
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   hinge_loss => add_3, clamp_min_1, full_default, full_default_1, full_default_2, full_default_3, mean_3, sub_3, where, where_1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   mean_1 => mean_2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   triplet_loss => add_2, clamp_min, mean, pow_4, pow_6, sub_2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] # Graph fragment:
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%pow_4, 1.0), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %pow_6 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %pow_6), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min,), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %mean_2 : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%slice_4, [1, 2, 3]), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default_1, %mean_2), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_2, %clamp_min_1, %full_default), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_3, %mean_2, %full_default), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %where_1), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %mean_3 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%add_3,), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_3), kwargs = {})
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2 = async_compile.triton('triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2', '''
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] import triton.language as tl
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     size_hints={'x': 1, 'r0_': 32},
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     filename=__file__,
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] )
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] @triton.jit
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] def triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xnumel = 1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_numel = 32
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     R0_BLOCK: tl.constexpr = 32
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     rnumel = r0_numel
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_offset = 0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     roffset = r0_offset
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     rindex = r0_index
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     r0_0 = r0_index
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0_0), None)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (0))
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp15 = tl.broadcast_to(tmp14, [XBLOCK, 1])
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp1 = libdevice.sqrt(tmp0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp2 = 1.0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp3 = tmp1 + tmp2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp6 = tmp3 - tmp5
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp7 = 0.0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp11 = tl.sum(tmp9, 1)[:, None]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp12 = 32.0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp13 = tmp11 / tmp12
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp16 = 1024.0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp17 = tmp15 / tmp16
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp18 = tmp2 - tmp17
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp7)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp20 = tl.full([1, 1], False, tl.int1)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp21 = tl.where(tmp20, tmp19, tmp7)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp22 = tl.full([1, 1], True, tl.int1)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp23 = tl.where(tmp22, tmp17, tmp7)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp24 = tmp21 + tmp23
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp25 = tmp24 / tmp2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tmp26 = tmp13 + tmp25
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tl.debug_barrier()
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp26, None)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] ''', device_str='cuda')
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] async_compile.wait(globals())
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] del async_compile
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] def call(args):
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     arg0_1, = args
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     args.clear()
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     assert_size_stride(arg0_1, (1, 4, 64, 64), (16384, 4096, 64, 1))
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         torch.cuda.set_device(0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         buf0 = empty_strided_cuda((1, 1, 32, 32), (1024, 1024, 32, 1), torch.float32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         buf2 = empty_strided_cuda((1, 1, 32, 32), (1024, 1024, 32, 1), torch.float32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         buf5 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss, mean_1], Original ATen: [aten.sub, aten.mean]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         triton_per_fused_mean_sub_0.run(arg0_1, buf0, buf2, buf5, 1, 1024, grid=grid(1), stream=stream0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         del arg0_1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         buf1 = empty_strided_cuda((1, 1, 32), (32, 32, 1), torch.float32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss], Original ATen: [aten.add, aten.norm]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         triton_per_fused_add_norm_1.run(buf0, buf1, 32, 32, grid=grid(32), stream=stream0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         del buf0
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         buf3 = empty_strided_cuda((1, 1, 32), (32, 32, 1), torch.float32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss], Original ATen: [aten.add, aten.norm]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         triton_per_fused_add_norm_1.run(buf2, buf3, 32, 32, grid=grid(32), stream=stream0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         del buf2
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         buf6 = buf4; del buf4  # reuse
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss, hinge_loss, mean_1, add], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.ne, aten.fill, aten.zeros_like, aten.where]
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2.run(buf6, buf1, buf3, buf5, 1, 32, grid=grid(1), stream=stream0)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         del buf1
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         del buf3
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]         del buf5
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     return (buf6, )
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     arg0_1 = rand_strided((1, 4, 64, 64), (16384, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     fn = lambda: call([arg0_1])
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] if __name__ == "__main__":
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:29:13.571000 2031468 site-packages/torch/_inductor/graph.py:2014] [5/0] [__output_code] 
V0127 12:29:13.577000 2031468 site-packages/torch/_inductor/graph.py:2022] [5/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2x/c2x4uhactpypllmt6ggloc4igfmcq5jtkxzyvcpvesrgu73uylw2.py
I0127 12:29:13.801000 2031468 site-packages/torch/_inductor/graph.py:2056] [5/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/2x/c2x4uhactpypllmt6ggloc4igfmcq5jtkxzyvcpvesrgu73uylw2.py

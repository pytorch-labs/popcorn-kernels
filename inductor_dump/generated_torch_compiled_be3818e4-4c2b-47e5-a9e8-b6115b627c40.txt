V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] Output code: 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # AOT ID: ['93_inference']
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import torch
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import math
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import random
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import os
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import tempfile
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from math import inf, nan
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from cmath import nanj
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch import device, empty_strided
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton.language as tl
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     grid,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     split_scan_grid,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     grid_combo_kernels,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     start_graph,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     end_graph,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] )
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] aten = torch.ops.aten
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/t4/ct4qmoklqezwtstulmlxzatsvx34ttpveuwu2yjngfzijgatqpxq.py
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.copy]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   x => copy
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Graph fragment:
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_1, %slice_2), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %slice_scatter_default : [num_users=3] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%empty, %copy, 2, 2, %add), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %slice_scatter_default_1 : [num_users=3] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %slice_7, 2, 0, 2), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %slice_scatter_default_2 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_1, %slice_12, 2, %add, %add_1), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] triton_poi_fused_copy_0 = async_compile.triton('triton_poi_fused_copy_0', '''
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton.language as tl
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     filename=__file__,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] )
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] @triton.jit
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] def triton_poi_fused_copy_0(in_ptr0, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     x1 = xindex // ks0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     x2 = xindex
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp0 = x0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp1 = 2 + ks1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp3 = x0 + ((-1)*ks1)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp4 = tl.full([1], 2, tl.int64)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp6 = tmp5 & tmp2
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp7 = x0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp8 = tl.full([1], 2, tl.int64)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp9 = tmp7 >= tmp8
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp10 = tl.broadcast_to(2 + ks1, [XBLOCK])
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp11 = tmp7 < tmp10
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp12 = tmp9 & tmp11
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp13 = tmp12 & tmp6
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + ((-2) + x0 + ks1*x1), tmp13 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp15 = float("nan")
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp16 = tl.where(tmp12, tmp14, tmp15)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp18 = tl.where(tmp6, tmp16, tmp17)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp19 = tmp3 >= tmp4
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp20 = tl.broadcast_to(2 + ks1, [XBLOCK])
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp21 = tmp3 < tmp20
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp22 = tmp19 & tmp21
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp23 = tmp22 & tmp2
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-2) + x0 + ((-1)*ks1) + ks1*x1), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp25 = float("nan")
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp26 = tl.where(tmp22, tmp24, tmp25)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp27 = tl.where(tmp5, tmp18, tmp26)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp29 = tl.where(tmp2, tmp27, tmp28)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp30 = tl.full([1], 2, tl.int64)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp31 = tmp0 < tmp30
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp32 = ks1 + x0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp33 = tl.full([1], 2, tl.int64)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp34 = tmp32 >= tmp33
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp35 = tl.broadcast_to(2 + ks1, [XBLOCK])
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp36 = tmp32 < tmp35
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp37 = tmp34 & tmp36
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp38 = tmp37 & tmp31
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp39 = tl.load(in_ptr0 + ((-2) + ks1 + x0 + ks1*x1), tmp38 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp40 = float("nan")
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp41 = tl.where(tmp37, tmp39, tmp40)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp42 = tl.full(tmp41.shape, 0.0, tmp41.dtype)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp43 = tl.where(tmp31, tmp41, tmp42)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp44 = tmp0 >= tmp30
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp45 = tmp0 < tmp1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp46 = tmp44 & tmp45
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp47 = tl.load(in_ptr0 + ((-2) + x0 + ks1*x1), tmp46 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp48 = float("nan")
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp49 = tl.where(tmp46, tmp47, tmp48)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp50 = tl.where(tmp31, tmp43, tmp49)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp51 = tl.where(tmp2, tmp29, tmp50)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp51, xmask)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] ''', device_str='cuda')
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4y/c4y37h5fw63mks3cqfuepgd47why5c3spefanbtoc6b4inbvzkif.py
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.softplus]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   x_1 => div, exp, gt_4, log1p, mul_51, where
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Graph fragment:
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %mul_51 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_scatter_default_2, 1.0), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%mul_51, 20.0), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_51,), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%log1p, 1.0), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %slice_scatter_default_2, %div), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] triton_poi_fused_softplus_1 = async_compile.triton('triton_poi_fused_softplus_1', '''
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton.language as tl
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     filename=__file__,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_softplus_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] )
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] @triton.jit
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] def triton_poi_fused_softplus_1(in_out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     x0 = xindex
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp1 = 1.0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp2 = tmp0 * tmp1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp3 = 20.0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp4 = tmp2 > tmp3
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp5 = tl_math.exp(tmp2)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp6 = libdevice.log1p(tmp5)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp7 = tmp6 * tmp1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp8 = tl.where(tmp4, tmp0, tmp7)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp8, xmask)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] ''', device_str='cuda')
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/d7/cd7lf7v5ztnlsuy2eezvliclmftn7m37mqk6v2vqw72uuk6asm7r.py
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten.softplus, aten.view]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   x_1 => div, exp, gt_4, log1p, mul_51, where
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   x_2 => view
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] # Graph fragment:
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %mul_51 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_scatter_default_2, 1.0), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %gt_4 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%mul_51, 20.0), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_51,), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%log1p, 1.0), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_4, %slice_scatter_default_2, %div), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] #   %view : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%where, [1, -1, 10]), kwargs = {})
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] triton_poi_fused_softplus_view_2 = async_compile.triton('triton_poi_fused_softplus_view_2', '''
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] import triton.language as tl
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     filename=__file__,
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_softplus_view_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] )
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] @triton.jit
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] def triton_poi_fused_softplus_view_2(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     x0 = (xindex % 10)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     x1 = xindex // 10
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     x2 = xindex
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*((((x0 + 10*x1) // ks0) % ks1)) + ks2*((((x0 + 10*x1) // ks0) % ks1)) + (((x0 + 10*x1) % ks0))), xmask, eviction_policy='evict_last')
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] ''', device_str='cuda')
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] async_compile.wait(globals())
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] del async_compile
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] def call(args):
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     args.clear()
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     s0 = arg0_1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     s1 = arg1_1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     assert_size_stride(arg2_1, (1, s0, s1), (s0*s1, s1, 1))
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         ps0 = 4 + s1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         buf1 = empty_strided_cuda((1, s0, 4 + s1), (4*s0 + s0*s1, 4 + s1, 1), torch.float32)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.copy]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         triton_poi_fused_copy_0_xnumel = 4*s0 + s0*s1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         triton_poi_fused_copy_0.run(arg2_1, buf1, ps0, s1, triton_poi_fused_copy_0_xnumel, grid=grid(triton_poi_fused_copy_0_xnumel), stream=stream0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         del arg2_1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.softplus]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         triton_poi_fused_softplus_1_xnumel = 4*s0 + s0*s1
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         triton_poi_fused_softplus_1.run(buf2, triton_poi_fused_softplus_1_xnumel, grid=grid(triton_poi_fused_softplus_1_xnumel), stream=stream0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         buf3 = empty_strided_cuda((1, (4*s0 + s0*s1) // 10, 10), (10*((4*s0 + s0*s1) // 10), 10, 1), torch.float32)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten.softplus, aten.view]
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         triton_poi_fused_softplus_view_2_xnumel = 10*((4*s0 + s0*s1) // 10)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         triton_poi_fused_softplus_view_2.run(buf2, buf3, ps0, s0, s1, triton_poi_fused_softplus_view_2_xnumel, grid=grid(triton_poi_fused_softplus_view_2_xnumel), stream=stream0)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]         del buf2
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     return (buf3, )
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     arg0_1 = 10
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     arg1_1 = 16
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     arg2_1 = rand_strided((1, 10, 16), (160, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] if __name__ == "__main__":
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:32:58.190000 3201829 site-packages/torch/_inductor/graph.py:2014] [334/0_1] [__output_code] 
V0205 11:32:58.195000 3201829 site-packages/torch/_inductor/graph.py:2022] [334/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3j/c3jtn7dqjvucpihfls444bftyxnefacscyqjgy2xlulvxroxjnxq.py
I0205 11:32:58.364000 3201829 site-packages/torch/_inductor/graph.py:2056] [334/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3j/c3jtn7dqjvucpihfls444bftyxnefacscyqjgy2xlulvxroxjnxq.py

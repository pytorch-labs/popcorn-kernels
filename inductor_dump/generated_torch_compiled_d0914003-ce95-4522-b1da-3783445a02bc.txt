V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] Output code: 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # AOT ID: ['77_forward']
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import torch
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import math
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import random
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import os
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import tempfile
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from math import inf, nan
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from cmath import nanj
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch import device, empty_strided
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton.language as tl
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     grid,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     split_scan_grid,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     grid_combo_kernels,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     start_graph,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     end_graph,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] )
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] aten = torch.ops.aten
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3q/c3qj6hgyouqrkyxllmbfr3jxpgsp2kdycl4u4ph3k4xegfo2xr3v.py
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_3, x_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten._native_batch_norm_legit]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   x_1 => convolution
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   x_3 => add_11, add_12, add_13, add_14, mul_14, mul_15, mul_16, mul_17, mul_18, mul_19, mul_20, rsqrt, sub_3, var_mean
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   x_4 => add_25, mul_34, rsqrt_1, sub_7, var_mean_1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Graph fragment:
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%view, %primals_4, %primals_5, [1], [0], [1], True, [0], 1), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_11,), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %rsqrt), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, 0.9), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_15, %mul_16), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, 0.1), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_8, 0.9), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %mul_19), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_14, %unsqueeze_2), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_5), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_2, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_25,), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %getitem_3), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %rsqrt_1), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_12), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_8, %add_13), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_0', '''
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton.language as tl
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     filename=__file__,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'out_ptr7': '*fp32', 'out_ptr9': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_0', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 4, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] )
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] @triton.jit
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_0(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr4, out_ptr6, out_ptr7, out_ptr9, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xnumel = 10
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     rnumel = r0_numel
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     rbase = r0_base
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     x0 = xindex
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         roffset = r0_offset
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         rindex = r0_index
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_1 = r0_index
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         )
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), tmp2, r0_mask & xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp21 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp26 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp10 = 4 + ks0*ks1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp12 = tmp5 / tmp11
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp13 = 1e-05
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp15 = libdevice.rsqrt(tmp14)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp16 = (((40 + 10*ks0*ks1) / 10) / ((tl.full([], -1.00000000000000, tl.float64)) + ((40 + 10*ks0*ks1) / 10)))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp18 = tmp12 * tmp17
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp19 = 0.1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp20 = tmp18 * tmp19
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp22 = 0.9
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp23 = tmp21 * tmp22
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp24 = tmp20 + tmp23
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp25 = tmp4 * tmp19
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp27 = tmp26 * tmp22
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp28 = tmp25 + tmp27
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp15, xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp24, xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp28, xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp32 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp34 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp37_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp37_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp37_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         roffset = r0_offset
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         rindex = r0_index
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_1 = r0_index
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp29 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp30 = tmp29 - tmp4
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp31 = tmp30 * tmp15
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp33 = tmp31 * tmp32
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp35 = tmp33 + tmp34
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp36 = tl.broadcast_to(tmp35, [XBLOCK, R0_BLOCK])
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp37_mean_next, tmp37_m2_next, tmp37_weight_next = triton_helpers.welford_reduce(
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]             tmp36, tmp37_mean, tmp37_m2, tmp37_weight, roffset == 0
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         )
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp37_mean = tl.where(r0_mask & xmask, tmp37_mean_next, tmp37_mean)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp37_m2 = tl.where(r0_mask & xmask, tmp37_m2_next, tmp37_m2)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp37_weight = tl.where(r0_mask & xmask, tmp37_weight_next, tmp37_weight)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tl.store(in_out_ptr1 + (r0_1 + 4*x0 + ks0*ks1*x0), tmp35, r0_mask & xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp40, tmp41, tmp42 = triton_helpers.welford(tmp37_mean, tmp37_m2, tmp37_weight, 1)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp37 = tmp40[:, None]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp38 = tmp41[:, None]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp39 = tmp42[:, None]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp37, xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         roffset = r0_offset
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         rindex = r0_index
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_1 = r0_index
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp43 = tl.load(in_out_ptr1 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp44 = tmp43 - tmp37
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp45 = 4 + ks0*ks1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp46 = tmp45.to(tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp47 = tmp38 / tmp46
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp48 = 1e-05
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp49 = tmp47 + tmp48
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp50 = libdevice.rsqrt(tmp49)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp51 = tmp44 * tmp50
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tl.store(in_out_ptr1 + (r0_1 + 4*x0 + ks0*ks1*x0), tmp51, r0_mask & xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp52 = 4 + ks0*ks1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp53 = tmp52.to(tl.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp54 = tmp38 / tmp53
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp55 = 1e-05
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp56 = tmp54 + tmp55
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp57 = libdevice.rsqrt(tmp56)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr9 + (x0), tmp57, xmask)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] ''', device_str='cuda')
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zt/czti5ww3hkbfoh6kbq2q5vcy46pdzd2je37jucl26n23wpmvdlrl.py
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   add_ => add_10
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Graph fragment:
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_6, 1), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_10), kwargs = {})
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] triton_poi_fused_add_1 = async_compile.triton('triton_poi_fused_add_1', '''
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton.language as tl
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     filename=__file__,
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_1', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] )
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] @triton.jit
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] def triton_poi_fused_add_1(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xnumel = 1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] ''', device_str='cuda')
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] async_compile.wait(globals())
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] del async_compile
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] def call(args):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     args.clear()
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     s0 = primals_1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     s1 = primals_2
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_3, (1, 1, s0, s1), (s0*s1, s0*s1, s1, 1))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_4, (1, 10, 5), (50, 5, 1))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_5, (10, ), (1, ))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_6, (), ())
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_7, (10, ), (1, ))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_8, (10, ), (1, ))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_9, (10, ), (1, ))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_10, (10, ), (1, ))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf0 = extern_kernels.convolution(reinterpret_tensor(primals_3, (1, 1, s0*s1), (s0*s1, s0*s1, 1), 0), primals_4, stride=(1,), padding=(0,), dilation=(1,), transposed=True, output_padding=(0,), groups=1, bias=None)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 1))
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, 1, 1, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 40 + 10*s0*s1, 40 + 10*s0*s1, 1), torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf11 = reinterpret_tensor(buf6, (1, 10, 1, 1, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 4 + s0*s1, 4 + s0*s1, 1), 0); del buf6  # reuse
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf10 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_3, x_4], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten._native_batch_norm_legit]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_0_r0_numel = 4 + s0*s1
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_0.run(buf1, buf11, primals_5, primals_8, primals_7, primals_9, primals_10, buf2, buf5, primals_8, primals_7, buf7, buf10, s0, s1, 10, triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_0_r0_numel, grid=grid(10), stream=stream0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del primals_5
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del primals_7
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del primals_8
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         triton_poi_fused_add_1.run(primals_6, primals_6, 1, grid=grid(1), stream=stream0)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del primals_6
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     return (reinterpret_tensor(buf11, (1, 10, 1, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 4 + s0*s1, 1), 0), primals_4, primals_9, primals_10, reinterpret_tensor(primals_3, (1, 1, s0*s1), (s0*s1, s0*s1, 1), 0), buf1, buf2, buf5, reinterpret_tensor(buf10, (10, ), (1, ), 0), reinterpret_tensor(buf7, (1, 10, 1, 1, 1), (10, 1, 1, 1, 1), 0), s0, s1, 4 + s0*s1, )
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_1 = 64
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_2 = 64
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_3 = rand_strided((1, 1, 64, 64), (4096, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_4 = rand_strided((1, 10, 5), (50, 5, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_5 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_6 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_7 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_8 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_9 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_10 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] if __name__ == "__main__":
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:53:43.647000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:43.653000 2031468 site-packages/torch/_inductor/graph.py:2022] [274/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/br/cbrmb4o6khbhj35xby3dvgpvk2nvmgpsdg5zn5oiek6ygqd5idyt.py
I0127 12:53:43.891000 2031468 site-packages/torch/_inductor/graph.py:2056] [274/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/br/cbrmb4o6khbhj35xby3dvgpvk2nvmgpsdg5zn5oiek6ygqd5idyt.py
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] Output code: 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # AOT ID: ['77_backward']
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import torch
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import math
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import random
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import os
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import tempfile
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from math import inf, nan
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from cmath import nanj
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch import device, empty_strided
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton.language as tl
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     grid,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     split_scan_grid,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     grid_combo_kernels,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     start_graph,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     end_graph,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] )
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] aten = torch.ops.aten
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uw/cuwbwotwew4lkyfmtreprriw6k2xntglbpuguchhtoave7okmvy6.py
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.native_batch_norm_backward, aten._native_batch_norm_legit_functional, aten.view, aten.convolution_backward]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   x_3 => add_14, mul_14, mul_20, sub_3
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   x_4 => view_2
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] # Graph fragment:
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_6, [0, 2, 3, 4]), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %rsqrt), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_14, %unsqueeze_2), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_5), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %view_2 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%add_14, [1, 10, 1, 1, %sym_size_int_2]), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_11 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %unsqueeze_9), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_49 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %sub_11), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_49, [0, 2, 3, 4]), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_21, 1.0), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_17), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_6, %mul_56), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_13, %unsqueeze_13), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_57 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_14, %mul_55), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sum_3 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_7, [0, 2, 3, 4]), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_15 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %unsqueeze_25), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_58 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, %sub_15), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sum_4 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_58, [0, 2, 3, 4]), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_65 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_33), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_7, %mul_65), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_17, %unsqueeze_29), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_66 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_18, %unsqueeze_37), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %mul_67 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_4, %squeeze_1), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_8, [0, 2]), kwargs = {})
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_backward_native_batch_norm_backward_view_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_backward_native_batch_norm_backward_view_0', '''
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] import triton.language as tl
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     filename=__file__,
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_backward_native_batch_norm_backward_view_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 5, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] )
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] @triton.jit
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_backward_native_batch_norm_backward_view_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr2, out_ptr4, out_ptr5, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xnumel = 10
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     rnumel = r0_numel
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     rbase = r0_base
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     x0 = xindex
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     _tmp13 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     _tmp17 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         roffset = r0_offset
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         rindex = r0_index
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_1 = r0_index
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp11 = tl.load(in_ptr6 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp2 = tmp0 - tmp1
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp4 = tmp2 * tmp3
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp6 = tmp4 * tmp5
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp8 = tmp6 + tmp7
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp10 = tmp8 - tmp9
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp14 = _tmp13 + tmp12
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         _tmp13 = tl.where(r0_mask & xmask, tmp14, _tmp13)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp15 = tmp11 * tmp10
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp16 = tl.broadcast_to(tmp15, [XBLOCK, R0_BLOCK])
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp18 = _tmp17 + tmp16
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         _tmp17 = tl.where(r0_mask & xmask, tmp18, _tmp17)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), tmp10, r0_mask & xmask)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp17 = tl.sum(_tmp17, 1)[:, None]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp24 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     _tmp35 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     _tmp41 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         roffset = r0_offset
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         rindex = r0_index
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_1 = r0_index
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp19 = tl.load(in_ptr6 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp20 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp37 = tl.load(in_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp21 = (tl.full([], 1.00000000000000, tl.float64) / ((40 + 10*ks0*ks1) / 10))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp22 = tmp21.to(tl.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp23 = tmp17 * tmp22
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp25 = tmp24 * tmp24
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp26 = tmp23 * tmp25
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp27 = tmp20 * tmp26
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp28 = tmp19 - tmp27
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp29 = tmp13 * tmp22
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp30 = tmp28 - tmp29
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp31 = 1.0
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp32 = tmp24 * tmp31
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp33 = tmp30 * tmp32
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp34 = tl.broadcast_to(tmp33, [XBLOCK, R0_BLOCK])
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp36 = _tmp35 + tmp34
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         _tmp35 = tl.where(r0_mask & xmask, tmp36, _tmp35)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp38 = tmp37 - tmp1
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp39 = tmp33 * tmp38
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp40 = tl.broadcast_to(tmp39, [XBLOCK, R0_BLOCK])
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp42 = _tmp41 + tmp40
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         _tmp41 = tl.where(r0_mask & xmask, tmp42, _tmp41)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), tmp33, r0_mask & xmask)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp35 = tl.sum(_tmp35, 1)[:, None]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp41 = tl.sum(_tmp41, 1)[:, None]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp35, xmask)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     _tmp58 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         roffset = r0_offset
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         rindex = r0_index
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         r0_1 = r0_index
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp43 = tl.load(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp44 = tl.load(in_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp45 = tmp44 - tmp1
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp46 = (tl.full([], 1.00000000000000, tl.float64) / ((40 + 10*ks0*ks1) / 10))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp47 = tmp46.to(tl.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp48 = tmp41 * tmp47
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp49 = tmp3 * tmp3
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp50 = tmp48 * tmp49
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp51 = tmp45 * tmp50
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp52 = tmp43 - tmp51
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp53 = tmp35 * tmp47
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp54 = tmp52 - tmp53
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp55 = tmp3 * tmp5
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp56 = tmp54 * tmp55
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp57 = tl.broadcast_to(tmp56, [XBLOCK, R0_BLOCK])
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tmp59 = _tmp58 + tmp57
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         _tmp58 = tl.where(r0_mask & xmask, tmp59, _tmp58)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4*x0 + ks0*ks1*x0), tmp56, r0_mask & xmask)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp58 = tl.sum(_tmp58, 1)[:, None]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp58, xmask)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tmp60 = tmp41 * tmp3
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp60, xmask)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] ''', device_str='cuda')
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] async_compile.wait(globals())
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] del async_compile
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] def call(args):
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_1, primals_2, sym_size_int_2, primals_4, primals_9, primals_10, view, convolution, getitem_1, rsqrt, squeeze_4, unsqueeze_9, tangents_1 = args
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     args.clear()
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     s0 = primals_1
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     s1 = primals_2
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_4, (1, 10, 5), (50, 5, 1))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_9, (10, ), (1, ))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(primals_10, (10, ), (1, ))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(view, (1, 1, s0*s1), (s0*s1, s0*s1, 1))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(convolution, (1, 10, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 1))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(getitem_1, (1, 10, 1, 1, 1), (10, 1, 1, 1, 1))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(rsqrt, (1, 10, 1, 1, 1), (10, 1, 1, 1, 1))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(squeeze_4, (10, ), (1, ))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(unsqueeze_9, (1, 10, 1, 1, 1), (10, 1, 1, 1, 1))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 10, 1, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 4 + s0*s1, 1))
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 10, 1, 1, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 40 + 10*s0*s1, 40 + 10*s0*s1, 1), torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf3 = buf1; del buf1  # reuse
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf4 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf7 = reinterpret_tensor(buf3, (1, 10, 1, 1, 4 + s0*s1), (40 + 10*s0*s1, 4 + s0*s1, 4 + s0*s1, 4 + s0*s1, 1), 0); del buf3  # reuse
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf8 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf6 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3, x_4], Original ATen: [aten.native_batch_norm_backward, aten._native_batch_norm_legit_functional, aten.view, aten.convolution_backward]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_native_batch_norm_backward_view_0_r0_numel = 4 + s0*s1
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_native_batch_norm_backward_view_0.run(buf7, convolution, getitem_1, rsqrt, primals_9, primals_10, unsqueeze_9, tangents_1, squeeze_4, buf4, buf8, buf6, s0, s1, 10, triton_red_fused__native_batch_norm_legit_functional_convolution_backward_native_batch_norm_backward_view_0_r0_numel, grid=grid(10), stream=stream0)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del convolution
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del getitem_1
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del primals_10
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del primals_9
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del rsqrt
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del squeeze_4
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del tangents_1
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del unsqueeze_9
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf9 = torch.ops.aten.convolution_backward.default(reinterpret_tensor(buf7, (1, 10, 4 + s0*s1), (0, 4 + s0*s1, 1), 0), view, primals_4, [10], [1], [0], [1], True, [0], 1, [False, True, False])
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del buf7
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del primals_4
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del view
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         buf10 = buf9[1]
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]         del buf9
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     return (None, None, None, buf10, buf8, None, None, None, buf6, buf4, )
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_1 = 64
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_2 = 64
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     sym_size_int_2 = 4100
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_4 = rand_strided((1, 10, 5), (50, 5, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_9 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     primals_10 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     view = rand_strided((1, 1, 4096), (4096, 4096, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     convolution = rand_strided((1, 10, 4100), (41000, 4100, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     getitem_1 = rand_strided((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     rsqrt = rand_strided((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     squeeze_4 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     unsqueeze_9 = rand_strided((1, 10, 1, 1, 1), (10, 1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     tangents_1 = rand_strided((1, 10, 1, 4100), (41000, 4100, 4100, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, sym_size_int_2, primals_4, primals_9, primals_10, view, convolution, getitem_1, rsqrt, squeeze_4, unsqueeze_9, tangents_1])
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] if __name__ == "__main__":
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:53:44.138000 2031468 site-packages/torch/_inductor/graph.py:2014] [274/0_1] [__output_code] 
V0127 12:53:44.143000 2031468 site-packages/torch/_inductor/graph.py:2022] [274/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pq/cpqdptzty2etiuw4w3k7dzjyu4o7ns55zasiehomzowhzdz4x6rz.py
I0127 12:53:44.338000 2031468 site-packages/torch/_inductor/graph.py:2056] [274/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pq/cpqdptzty2etiuw4w3k7dzjyu4o7ns55zasiehomzowhzdz4x6rz.py
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] Output code: 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # AOT ID: ['78_forward']
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import torch
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import math
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import random
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import os
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import tempfile
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from math import inf, nan
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from cmath import nanj
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch import device, empty_strided
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton.language as tl
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     grid,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     split_scan_grid,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     grid_combo_kernels,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     start_graph,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     end_graph,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     cooperative_reduction_grid,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] aten = torch.ops.aten
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] _quantized = torch.ops._quantized
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] async_compile = AsyncCompile()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b7/cb7wkhlxnk3vryg4t33febvysves63wx7kz563a7j3y4f3dapi6z.py
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rrelu_with_noise_functional]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Source node to ATen node mapping:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   x => le, mul, where
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Graph fragment:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %le : [num_users=2] = call_function[target=torch.ops.aten.le.Scalar](args = (%primals_1, 0), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_1, %uniform), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %mul, %primals_1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_poi_fused_rrelu_with_noise_functional_0 = async_compile.triton('triton_poi_fused_rrelu_with_noise_functional_0', '''
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton.language as tl
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton_heuristics.pointwise(
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     size_hints={'x': 65536}, 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     filename=__file__,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rrelu_with_noise_functional_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     min_elem_per_thread=0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton.jit
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] def triton_poi_fused_rrelu_with_noise_functional_0(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xnumel = 41000
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xmask = xindex < xnumel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     x0 = xindex
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp1 = 0.0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp2 = tmp0 <= tmp1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp4 = tmp0 * tmp3
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp5 = tl.where(tmp2, tmp4, tmp0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp5, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] ''', device_str='cuda')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uk/cuktwjqfub7vnet42g4ptdqx4fc3sc4gl2fy6ndofseiuvcbb3e7.py
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_3, x_4, target_smooth_l1, randn_like_1, target_soft_margin, smooth_l1_loss, soft_margin_loss], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten._native_batch_norm_legit, aten.randn_like, aten.sign, aten.smooth_l1_loss, aten.soft_margin_loss]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Source node to ATen node mapping:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   randn_like_1 => inductor_lookup_seed_default_1, inductor_random_default
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   smooth_l1_loss => abs_1, div, lt, mean, mul_9, pow_1, sub_2, sub_3, where_2
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   soft_margin_loss => exp, log1p, mean_1, mul_10, neg
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   target_smooth_l1 => inductor_lookup_seed_default, inductor_random_default_1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   target_soft_margin => sign
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   x_1 => convolution
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   x_3 => add_1, add_2, add_3, add_4, mul_1, mul_2, mul_3, mul_4, mul_5, mul_6, mul_7, rsqrt, sub, var_mean
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   x_4 => add_5, rsqrt_1, var_mean_1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Graph fragment:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%view, %primals_2, %primals_3, [1], [0], [1], True, [0], 1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.9), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, 1.0002437241043138), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, 0.1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %mul_6), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_2), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %unsqueeze_5), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%add_4, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %inductor_random_default_1 : [num_users=2] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 82080], %inductor_lookup_seed_default, randn), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %inductor_random_default : [num_users=2] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 82080], %inductor_lookup_seed_default_1, randn), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%inductor_random_default,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %inductor_random_default_1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub_2,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_1, 2), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 0.5), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_9, 1.0), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %div, %sub_3), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where_2,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%view_4,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, %sign), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_10,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%log1p,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_2), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_3), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_randn_like_sign_smooth_l1_loss_soft_margin_loss_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_randn_like_sign_smooth_l1_loss_soft_margin_loss_1', '''
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton.language as tl
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton_heuristics.reduction(
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     size_hints={'x': 32, 'r0_': 8192},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     filename=__file__,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'out_ptr7': '*fp32', 'out_ptr8': '*fp32', 'out_ptr9': '*fp32', 'out_ptr10': '*fp32', 'out_ptr11': '*fp32', 'out_ptr12': '*fp32', 'load_seed_offset': 'i32', 'load_seed_offset1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 'tt.equal_to': (18,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_randn_like_sign_smooth_l1_loss_soft_margin_loss_1', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1', 'in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 6, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton.jit
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] def triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_randn_like_sign_smooth_l1_loss_soft_margin_loss_1(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr2, out_ptr4, out_ptr6, out_ptr7, out_ptr8, out_ptr9, out_ptr10, out_ptr11, out_ptr12, load_seed_offset, load_seed_offset1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xnumel = 20
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     r0_numel = 4104
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     rnumel = r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xmask = xindex < xnumel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     rbase = r0_base
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     x0 = xindex
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         roffset = r0_offset
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         rindex = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_1 = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 4104*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp2 = tmp0 + tmp1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4104*x0), tmp2, r0_mask & xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp4 = tmp7[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp5 = tmp8[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp6 = tmp9[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp24 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp10 = 4104.0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp11 = tmp5 / tmp10
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp12 = 1e-05
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp13 = tmp11 + tmp12
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp14 = libdevice.rsqrt(tmp13)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp15 = 1.0002437241043138
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp16 = tmp11 * tmp15
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp17 = 0.1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp18 = tmp16 * tmp17
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp20 = 0.9
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp21 = tmp19 * tmp20
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp22 = tmp18 + tmp21
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp23 = tmp4 * tmp17
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp25 = tmp24 * tmp20
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp26 = tmp23 + tmp25
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp14, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr4 + (x0), tmp22, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr6 + (x0), tmp26, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp30 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp32 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp35_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp35_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp35_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         roffset = r0_offset
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         rindex = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_1 = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp27 = tl.load(in_out_ptr0 + (r0_1 + 4104*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp28 = tmp27 - tmp4
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp29 = tmp28 * tmp14
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp31 = tmp29 * tmp30
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp33 = tmp31 + tmp32
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp34 = tl.broadcast_to(tmp33, [XBLOCK, R0_BLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp35_mean_next, tmp35_m2_next, tmp35_weight_next = triton_helpers.welford_reduce(
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]             tmp34, tmp35_mean, tmp35_m2, tmp35_weight, roffset == 0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp35_mean = tl.where(r0_mask & xmask, tmp35_mean_next, tmp35_mean)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp35_m2 = tl.where(r0_mask & xmask, tmp35_m2_next, tmp35_m2)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp35_weight = tl.where(r0_mask & xmask, tmp35_weight_next, tmp35_weight)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tl.store(out_ptr7 + (r0_1 + 4128*x0), tmp33, r0_mask & xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp38, tmp39, tmp40 = triton_helpers.welford(tmp35_mean, tmp35_m2, tmp35_weight, 1)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp35 = tmp38[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp36 = tmp39[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp37 = tmp40[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp41 = 4104.0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp42 = tmp36 / tmp41
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp43 = 1e-05
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp44 = tmp42 + tmp43
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp45 = libdevice.rsqrt(tmp44)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.debug_barrier()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(in_out_ptr1 + (x0), tmp45, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         roffset = r0_offset
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         rindex = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_1 = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp46 = tl.load(in_ptr5 + load_seed_offset)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp47 = r0_1 + 4104*x0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp48 = tl.randn(tmp46, (tmp47).to(tl.uint32))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp49 = tl.load(in_ptr5 + load_seed_offset1)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp50 = tl.randn(tmp49, (tmp47).to(tl.uint32))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tl.store(out_ptr8 + (r0_1 + 4104*x0), tmp48, r0_mask & xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tl.store(out_ptr9 + (r0_1 + 4104*x0), tmp50, r0_mask & xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp53_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp53_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp53_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         roffset = r0_offset
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         rindex = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_1 = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp51 = tl.load(out_ptr7 + (r0_1 + 4128*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp52 = tl.broadcast_to(tmp51, [XBLOCK, R0_BLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp53_mean_next, tmp53_m2_next, tmp53_weight_next = triton_helpers.welford_reduce(
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]             tmp52, tmp53_mean, tmp53_m2, tmp53_weight, roffset == 0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp53_mean = tl.where(r0_mask & xmask, tmp53_mean_next, tmp53_mean)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp53_m2 = tl.where(r0_mask & xmask, tmp53_m2_next, tmp53_m2)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp53_weight = tl.where(r0_mask & xmask, tmp53_weight_next, tmp53_weight)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp56, tmp57, tmp58 = triton_helpers.welford(tmp53_mean, tmp53_m2, tmp53_weight, 1)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp53 = tmp56[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp54 = tmp57[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp55 = tmp58[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr10 + (x0), tmp53, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     _tmp74 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     _tmp89 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         roffset = r0_offset
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         rindex = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         r0_1 = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp59 = tl.load(out_ptr7 + (r0_1 + 4128*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp62 = tl.load(out_ptr9 + (r0_1 + 4104*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp77 = tl.load(out_ptr8 + (r0_1 + 4104*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp60 = tmp59 - tmp53
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp61 = tmp60 * tmp45
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp63 = tmp61 - tmp62
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp64 = tl_math.abs(tmp63)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp65 = 1.0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp66 = tmp64 < tmp65
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp67 = tmp64 * tmp64
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp68 = 0.5
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp69 = tmp67 * tmp68
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp70 = tmp69 * tmp65
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp71 = tmp64 - tmp68
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp72 = tl.where(tmp66, tmp70, tmp71)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp73 = tl.broadcast_to(tmp72, [XBLOCK, R0_BLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp75 = _tmp74 + tmp73
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         _tmp74 = tl.where(r0_mask & xmask, tmp75, _tmp74)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp76 = -tmp61
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp78 = tl.full([1, 1], 0, tl.int32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp79 = tmp78 < tmp77
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp80 = tmp79.to(tl.int8)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp81 = tmp77 < tmp78
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp82 = tmp81.to(tl.int8)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp83 = tmp80 - tmp82
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp84 = tmp83.to(tmp77.dtype)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp85 = tmp76 * tmp84
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp86 = tl_math.exp(tmp85)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp87 = libdevice.log1p(tmp86)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp88 = tl.broadcast_to(tmp87, [XBLOCK, R0_BLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         tmp90 = _tmp89 + tmp88
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         _tmp89 = tl.where(r0_mask & xmask, tmp90, _tmp89)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp74 = tl.sum(_tmp74, 1)[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp89 = tl.sum(_tmp89, 1)[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr11 + (x0), tmp74, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr12 + (x0), tmp89, xmask)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] ''', device_str='cuda')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fq/cfqpa2pb5smxjk47lstxzun3bcdwu4enzf5oj6w2oohfnskfzqgv.py
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Topologically Sorted Source Nodes: [target_soft_margin, smooth_l1_loss, soft_margin_loss, add], Original ATen: [aten.sign, aten.smooth_l1_loss, aten.soft_margin_loss, aten.add]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Source node to ATen node mapping:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   add => add_6
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   smooth_l1_loss => abs_1, div, lt, mean, mul_9, pow_1, sub_2, sub_3, where_2
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   soft_margin_loss => exp, log1p, mean_1, mul_10, neg
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   target_soft_margin => sign
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Graph fragment:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%inductor_random_default,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_4, %inductor_random_default_1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub_2,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_1, 2), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 0.5), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_9, 1.0), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %div, %sub_3), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where_2,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%view_4,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, %sign), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul_10,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%log1p,), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_per_fused_add_sign_smooth_l1_loss_soft_margin_loss_2 = async_compile.triton('triton_per_fused_add_sign_smooth_l1_loss_soft_margin_loss_2', '''
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton.language as tl
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     size_hints={'x': 1, 'r0_': 32},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     filename=__file__,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_sign_smooth_l1_loss_soft_margin_loss_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton.jit
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] def triton_per_fused_add_sign_smooth_l1_loss_soft_margin_loss_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xnumel = 1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     r0_numel = 20
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     R0_BLOCK: tl.constexpr = 32
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     rnumel = r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     r0_offset = 0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     r0_mask = r0_index < r0_numel
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     roffset = r0_offset
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     rindex = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     r0_0 = r0_index
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (r0_0), r0_mask, other=0.0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp3 = tl.where(r0_mask, tmp1, 0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp8 = tl.where(r0_mask, tmp6, 0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp9 = tl.sum(tmp8, 1)[:, None]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp10 = 82080.0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp11 = tmp4 / tmp10
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp12 = tmp9 / tmp10
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp13 = tmp11 + tmp12
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.debug_barrier()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp13, None)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] ''', device_str='cuda')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/36/c36fsokdqemetuxowygjraqhmkvfqomdt7tvtednpyk77ioklyqe.py
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Source node to ATen node mapping:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   add_ => add
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] # Graph fragment:
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, 1), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add), kwargs = {})
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_poi_fused_add_3 = async_compile.triton('triton_poi_fused_add_3', '''
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] import triton.language as tl
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton_heuristics.pointwise(
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     size_hints={'x': 1}, 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     filename=__file__,
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_3', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     min_elem_per_thread=0
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] @triton.jit
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] def triton_poi_fused_add_3(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xnumel = 1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tmp3 = tmp1 + tmp2
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] ''', device_str='cuda')
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] async_compile.wait(globals())
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] del async_compile
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] def call(args):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     args.clear()
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_1, (1, 10, 1, 4100), (41000, 4100, 4100, 1))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_2, (10, 20, 5), (100, 5, 1))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_3, (20, ), (1, ))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_4, (), ())
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_5, (20, ), (1, ))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_6, (20, ), (1, ))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_7, (20, ), (1, ))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     assert_size_stride(primals_8, (20, ), (1, ))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         torch.cuda.set_device(0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rrelu_with_noise_functional]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf1 = torch.ops.aten.uniform.default(primals_1, 0.125, 0.3333333333333333)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf2 = buf1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del buf1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf0 = empty_strided_cuda((1, 10, 1, 4100), (41000, 4100, 4100, 1), torch.bool)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf3 = empty_strided_cuda((1, 10, 1, 4100), (41000, 4100, 4100, 1), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rrelu_with_noise_functional]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         triton_poi_fused_rrelu_with_noise_functional_0.run(primals_1, buf2, buf0, buf3, 41000, grid=grid(41000), stream=stream0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del primals_1
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf4 = extern_kernels.convolution(reinterpret_tensor(buf3, (1, 10, 4100), (0, 4100, 1), 0), primals_2, stride=(1,), padding=(0,), dilation=(1,), transposed=True, output_padding=(0,), groups=1, bias=None)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         assert_size_stride(buf4, (1, 20, 4104), (82080, 4104, 1))
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf15 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf15)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf6 = empty_strided_cuda((1, 20, 1, 1, 1), (20, 1, 1, 1, 1), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf9 = empty_strided_cuda((1, 20, 1, 1, 1), (20, 1, 1, 1, 1), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf10 = empty_strided_cuda((1, 20, 1, 1, 4104), (82560, 4128, 82560, 82560, 1), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf12 = empty_strided_cuda((1, 20, 1, 1, 1), (20, 1, 20, 20, 20), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf14 = reinterpret_tensor(buf12, (1, 20, 1, 1, 1), (20, 1, 1, 1, 1), 0); del buf12  # reuse
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf17 = empty_strided_cuda((1, 82080), (82080, 1), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf16 = empty_strided_cuda((1, 82080), (82080, 1), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf11 = empty_strided_cuda((1, 20, 1, 1, 1), (20, 1, 1, 1, 1), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf18 = empty_strided_cuda((1, 20, 1, 1, 1), (20, 1, 20, 20, 20), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf20 = empty_strided_cuda((1, 20, 1, 1, 1), (20, 1, 20, 20, 20), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_3, x_4, target_smooth_l1, randn_like_1, target_soft_margin, smooth_l1_loss, soft_margin_loss], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten._native_batch_norm_legit, aten.randn_like, aten.sign, aten.smooth_l1_loss, aten.soft_margin_loss]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         triton_red_fused__native_batch_norm_legit__native_batch_norm_legit_functional_convolution_randn_like_sign_smooth_l1_loss_soft_margin_loss_1.run(buf5, buf14, primals_3, primals_6, primals_5, primals_7, primals_8, buf15, buf6, buf9, primals_6, primals_5, buf10, buf17, buf16, buf11, buf18, buf20, 1, 0, 20, 4104, grid=grid(20), stream=stream0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del buf10
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del buf15
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del primals_3
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del primals_5
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del primals_6
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf19 = empty_strided_cuda((), (), torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         buf30 = buf19; del buf19  # reuse
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         # Topologically Sorted Source Nodes: [target_soft_margin, smooth_l1_loss, soft_margin_loss, add], Original ATen: [aten.sign, aten.smooth_l1_loss, aten.soft_margin_loss, aten.add]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         triton_per_fused_add_sign_smooth_l1_loss_soft_margin_loss_2.run(buf30, buf18, buf20, 1, 20, grid=grid(1), stream=stream0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del buf18
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del buf20
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         triton_poi_fused_add_3.run(primals_4, primals_4, 1, grid=grid(1), stream=stream0)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]         del primals_4
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     return (buf30, primals_2, primals_7, primals_8, buf0, buf2, reinterpret_tensor(buf3, (1, 10, 4100), (41000, 4100, 1), 0), buf5, buf6, buf9, buf11, buf14, buf16, buf17, )
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_1 = rand_strided((1, 10, 1, 4100), (41000, 4100, 4100, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_2 = rand_strided((10, 20, 5), (100, 5, 1), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_3 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_4 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_5 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_6 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_7 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     primals_8 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] if __name__ == "__main__":
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:53:44.865000 2031468 site-packages/torch/_inductor/graph.py:2014] [275/0] [__output_code] 
V0127 12:53:44.875000 2031468 site-packages/torch/_inductor/graph.py:2022] [275/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/54/c54dlf5wjr73ejh7xdfbtfbrefhjuffmrpwmnytwlnrun43ztwcc.py
I0127 12:53:45.703000 2031468 site-packages/torch/_inductor/graph.py:2056] [275/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/54/c54dlf5wjr73ejh7xdfbtfbrefhjuffmrpwmnytwlnrun43ztwcc.py

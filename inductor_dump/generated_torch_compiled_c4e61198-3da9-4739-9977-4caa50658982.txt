V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] Output code: 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # AOT ID: ['110_forward']
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import torch
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import math
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import random
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import os
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import tempfile
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from math import inf, nan
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from cmath import nanj
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch import device, empty_strided
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     grid,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     split_scan_grid,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     grid_combo_kernels,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     start_graph,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     end_graph,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] aten = torch.ops.aten
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rj/crjh3lgkgscbrbebyktzs2kx7mfhbs4nuhvdfg32i2ecarbre4k4.py
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.embedding]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   x => embedding
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %embedding : [num_users=1] = call_function[target=torch.ops.aten.embedding.default](args = (%primals_1, %primals_4), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused_embedding_0 = async_compile.triton('triton_poi_fused_embedding_0', '''
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 32768}, 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused_embedding_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x1 = xindex // 128
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = (xindex % 128)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x2 = xindex
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 1000, tl.int32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tmp0 < 0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 1000)) | ~(xmask), "index out of bounds: 0 <= tmp4 < 1000")
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 128*tmp4), xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/t5/ct5tf2utiisvttgae6ud23jq4psyb3gne2wgssrr6ozfejxn5voh.py
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   x_2 => convolution
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %convolution : [num_users=5] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_5, %primals_6, [2], [0], [1], True, [0], 1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'y': 2048, 'x': 32}, tile_hint=TileHint.DEFAULT,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused_convolution_1(in_ptr0, out_ptr0, ks0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     ymask = yindex < ynumel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x2 = xindex
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     y0 = (yindex % 128)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     y1 = yindex // 128
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     y3 = yindex
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 128*x2 + 128*ks0*y1), xmask & ymask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x2 + ks0*y3), tmp0, xmask & ymask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sb/csbovpwge7tz3pqvmcfciazqmcfg7avakk4qke4reovlb2rcw7l7.py
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   x_2 => convolution
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %convolution : [num_users=5] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_5, %primals_6, [2], [0], [1], True, [0], 1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused_convolution_2 = async_compile.triton('triton_poi_fused_convolution_2', '''
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 32768}, 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused_convolution_2(in_out_ptr0, in_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x3 = xindex
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x1 = ((xindex // ks0) % 64)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/to/ctostczxgp4wxjfqd3npmpuvcbfb54kjttsxgsol7b5gixh7zlqt.py
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   x_3 => add_13, add_14, add_15, mul_15, mul_16, mul_17, mul_18, mul_19, rsqrt, var_mean
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_13,), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_8, 0.9), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_15, %mul_16), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_18 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_17, 0.1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_9, 0.9), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %add_15 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_18, %mul_19), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_8, %add_14), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_9, %add_15), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_3 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_3', '''
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 512},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_3', 'mutated_arg_names': ['in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_3(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, out_ptr4, out_ptr6, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 64
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rbase = r0_base
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = xindex
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         rindex = r0_index
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_1 = (r0_index % ks0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_2 = r0_index // ks0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + x0 + 64*r0_2 + 2*ks1*x0 + 128*ks1*r0_2), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp24 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp8 = ks2 + 2*ks1*ks2
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp10 = tmp3 / tmp9
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp11 = 1e-05
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp12 = tmp10 + tmp11
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp13 = libdevice.rsqrt(tmp12)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp14 = (((64*ks2 + 128*ks1*ks2) / 64) / ((tl.full([], -1.00000000000000, tl.float64)) + ((64*ks2 + 128*ks1*ks2) / 64)))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp16 = tmp10 * tmp15
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp17 = 0.1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp18 = tmp16 * tmp17
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp20 = 0.9
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp21 = tmp19 * tmp20
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp22 = tmp18 + tmp21
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp23 = tmp2 * tmp17
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp25 = tmp24 * tmp20
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp26 = tmp23 + tmp25
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp13, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp22, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp26, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/26/c265dd27gvaayfzxv2oi5i6dyw5osh5wsglw3l6kxpq4sqvacvtl.py
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   x_3 => add_13, add_16, mul_14, mul_20, rsqrt, sub_6, var_mean
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convolution, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %add_13 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_13,), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %getitem_1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %rsqrt), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_14, %unsqueeze), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused__native_batch_norm_legit_functional_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_functional_4', '''
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 32768}, 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_functional_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused__native_batch_norm_legit_functional_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x3 = xindex
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x1 = ((xindex // ks0) % 64)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp11 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp13 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp4 = ks1 + 2*ks1*ks2
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp6 = tmp3 / tmp5
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp7 = 1e-05
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp9 = libdevice.rsqrt(tmp8)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp10 = tmp2 * tmp9
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp12 = tmp10 * tmp11
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp14, xmask)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xi/cxinzgk5c64upvq3p6fz5yujyvaywtyib3vryytapotw3v6z6tr7.py
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   add_ => add_12
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_7, 1), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_7, %add_12), kwargs = {})
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused_add_5 = async_compile.triton('triton_poi_fused_add_5', '''
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_5', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused_add_5(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] async_compile.wait(globals())
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] del async_compile
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def call(args):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     args.clear()
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     s0 = primals_2
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     s1 = primals_3
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_1, (1000, 128), (128, 1))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_4, (s0, s1), (s1, 1))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_5, (128, 64, 3), (192, 3, 1))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_6, (64, ), (1, ))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_7, (), ())
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf0 = empty_strided_cuda((s0, s1, 128), (128*s1, 128, 1), torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.embedding]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_embedding_0_xnumel = 128*s0*s1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_embedding_0.run(primals_4, primals_1, buf0, triton_poi_fused_embedding_0_xnumel, grid=grid(triton_poi_fused_embedding_0_xnumel), stream=stream0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf1 = empty_strided_cuda((s0, 128, s1), (128*s1, s1, 1), torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_convolution_1_ynumel = 128*s0
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_convolution_1.run(buf0, buf1, s1, triton_poi_fused_convolution_1_ynumel, s1, grid=grid(triton_poi_fused_convolution_1_ynumel, s1), stream=stream0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_5, stride=(2,), padding=(0,), dilation=(1,), transposed=True, output_padding=(0,), groups=1, bias=None)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         assert_size_stride(buf2, (s0, 64, 1 + 2*s1), (64 + 128*s1, 1 + 2*s1, 1))
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del buf1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         ps0 = 1 + 2*s1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_convolution_2_xnumel = 64*s0 + 128*s0*s1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_convolution_2.run(buf3, primals_6, ps0, triton_poi_fused_convolution_2_xnumel, grid=grid(triton_poi_fused_convolution_2_xnumel), stream=stream0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_6
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 64, 1), (64, 1, 64), torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 64, 1), (64, 1, 64), torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 64, 1), (64, 1, 1), torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_3_r0_numel = s0 + 2*s0*s1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_3.run(buf3, primals_9, primals_8, buf4, buf5, buf7, primals_9, primals_8, ps0, s1, s0, 64, triton_red_fused__native_batch_norm_legit_functional_3_r0_numel, grid=grid(64), stream=stream0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_8
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_9
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf8 = empty_strided_cuda((s0, 64, 1 + 2*s1), (64 + 128*s1, 1 + 2*s1, 1), torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit_functional]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_functional_4_xnumel = 64*s0 + 128*s0*s1
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_functional_4.run(buf3, buf4, buf5, primals_10, primals_11, buf8, ps0, s0, s1, triton_poi_fused__native_batch_norm_legit_functional_4_xnumel, grid=grid(triton_poi_fused__native_batch_norm_legit_functional_4_xnumel), stream=stream0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del buf5
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_11
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_add_5.run(primals_7, primals_7, 1, grid=grid(1), stream=stream0)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_7
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     return (reinterpret_tensor(buf8, (s0, 1 + 2*s1, 64), (64 + 128*s1, 1, 1 + 2*s1), 0), primals_4, primals_5, primals_10, reinterpret_tensor(buf0, (s0, 128, s1), (128*s1, 1, 128), 0), buf3, reinterpret_tensor(buf7, (64, ), (1, ), 0), reinterpret_tensor(buf4, (1, 64, 1), (64, 1, 1), 0), s0, s1, 64*s0 + 128*s0*s1, )
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_1 = rand_strided((1000, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_2 = 10
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_3 = 20
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_4 = rand_strided((10, 20), (20, 1), device='cuda:0', dtype=torch.int64)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_5 = rand_strided((128, 64, 3), (192, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_6 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_7 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] if __name__ == "__main__":
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:34:56.437000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:56.447000 3201829 site-packages/torch/_inductor/graph.py:2022] [396/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hm/chmona6kfpocb6qpw4xvg2vhwhgz7hr5acvgjw5nbshulviquqng.py
I0205 11:34:56.705000 3201829 site-packages/torch/_inductor/graph.py:2056] [396/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hm/chmona6kfpocb6qpw4xvg2vhwhgz7hr5acvgjw5nbshulviquqng.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] Output code: 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # AOT ID: ['110_backward']
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import torch
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import random
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import os
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import tempfile
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from math import inf, nan
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from cmath import nanj
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch import device, empty_strided
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     grid,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     split_scan_grid,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     grid_combo_kernels,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     start_graph,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     end_graph,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] aten = torch.ops.aten
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/h5/ch5nq5l23v6ywaejbrgpfn6vteo3q52ivwcvbcx7o5umriti3q53.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%permute_2, [0, 2]), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sub_12 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_3), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %sub_12), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_27, [0, 2]), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_red_fused_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused_native_batch_norm_backward_0', '''
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 256, 'r0_': 128},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_batch_norm_backward_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_red_fused_native_batch_norm_backward_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 256
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rbase = r0_base
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x1 = xindex // 64
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = (xindex % 64)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     _tmp5 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x3 = xindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     _tmp14 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         rindex = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_2 = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp0 = r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp1 = ks0 + 2*ks0*ks1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (x0 + 64*(((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) % (1 + 2*ks1))) + 64*((((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) // (1 + 2*ks1)) % ks0)) + 128*ks1*((((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) // (1 + 2*ks1)) % ks0))), r0_mask & tmp2 & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp6 = _tmp5 + tmp4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         _tmp5 = tl.where(r0_mask & xmask, tmp6, _tmp5)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp7 = tl.load(in_ptr1 + (x0 + 64*((((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) // (1 + 2*ks1)) % ks0)) + 2*ks1*x0 + 128*ks1*((((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) // (1 + 2*ks1)) % ks0)) + (((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) % (1 + 2*ks1)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp8 = tl.load(in_ptr2 + (tl.broadcast_to(x0, [XBLOCK, R0_BLOCK])), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp9 = tmp7 - tmp8
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp10 = tmp3 * tmp9
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp11 = tl.full(tmp10.shape, 0, tmp10.dtype)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp12 = tl.where(tmp2, tmp10, tmp11)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp15 = _tmp14 + tmp13
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         _tmp14 = tl.where(r0_mask & xmask, tmp15, _tmp14)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp14 = tl.sum(_tmp14, 1)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp5, xmask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp14, xmask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vs/cvsmjnfmlpi7kbbcgc5f65nzfgv3vmifemfsb5orzcqkcxrag3wt.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%permute_2, [0, 2]), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_per_fused_native_batch_norm_backward_1 = async_compile.triton('triton_per_fused_native_batch_norm_backward_1', '''
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 4},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     reduction_hint=ReductionHint.OUTER_TINY,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_batch_norm_backward_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_per_fused_native_batch_norm_backward_1(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 64
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_numel = 4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_offset = 0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     roffset = r0_offset
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rindex = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_1 = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = xindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*r0_1), xmask, other=0.0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qg/cqgqhzc5ax5nyezb4aqqs7gaby3zrjmncyjensysfppjvfx7p4y6.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sub_12 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_3), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%permute_2, %sub_12), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_27, [0, 2]), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_per_fused_native_batch_norm_backward_2 = async_compile.triton('triton_per_fused_native_batch_norm_backward_2', '''
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 4},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     reduction_hint=ReductionHint.OUTER_TINY,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_native_batch_norm_backward_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_per_fused_native_batch_norm_backward_2(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 64
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_numel = 4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_offset = 0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     roffset = r0_offset
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rindex = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_1 = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = xindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*r0_1), xmask, other=0.0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp6 = tmp4 * tmp5
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp6, xmask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yx/cyx2w7wfuuyl3ztdba2am3lk5fejfzw5io5dy3bojzcnb226bdlk.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sub_12 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_3), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %unsqueeze_7), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sub_14 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%permute_2, %mul_35), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_14, %unsqueeze_5), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %mul_36 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_9), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused_native_batch_norm_backward_3 = async_compile.triton('triton_poi_fused_native_batch_norm_backward_3', '''
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'y': 512, 'x': 64}, tile_hint=TileHint.DEFAULT,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 12), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_batch_norm_backward_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused_native_batch_norm_backward_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, ks0, ks1, ks2, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 64
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     ymask = yindex < ynumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x2 = xindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     y3 = yindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     y0 = (yindex % ks0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     y1 = yindex // ks0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 64*y3), xmask & ymask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2 + y0 + 64*y1 + 2*ks1*x2 + 128*ks1*y1), xmask & ymask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp4 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp8 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp13 = tl.load(in_ptr5 + (x2), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp16 = tl.load(in_ptr6 + (x2), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tmp1 - tmp2
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp5 = (tl.full([], 1.00000000000000, tl.float64) / ((64*ks2 + 128*ks1*ks2) / 64))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp7 = tmp4 * tmp6
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp9 = tmp8 * tmp8
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp10 = tmp7 * tmp9
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp11 = tmp3 * tmp10
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp12 = tmp0 - tmp11
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp14 = tmp13 * tmp6
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp15 = tmp12 - tmp14
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp17 = tmp8 * tmp16
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp18 = tmp15 * tmp17
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x2 + 64*y3), tmp18, xmask & ymask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lv/clvic652qp3asoy4kkicf4fuxti5vtgo4futftegkd3biiwqnrkj.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_36, [0, 2]), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_red_fused_convolution_backward_4 = async_compile.triton('triton_red_fused_convolution_backward_4', '''
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 256, 'r0_': 128},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_red_fused_convolution_backward_4(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 256
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rnumel = r0_numel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     rbase = r0_base
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x1 = xindex // 64
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = (xindex % 64)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     _tmp5 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x3 = xindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         roffset = r0_offset
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         rindex = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         r0_2 = r0_index
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp0 = r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp1 = ks0 + 2*ks0*ks1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (x0 + 64*(((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) % ks2)) + 64*((((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) // ks2) % ks0)) + 128*ks1*((((r0_2 + x1*((3 + ks0 + 2*ks0*ks1) // 4)) // ks2) % ks0))), r0_mask & tmp2 & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         tmp6 = _tmp5 + tmp4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         _tmp5 = tl.where(r0_mask & xmask, tmp6, _tmp5)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp5, xmask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ai/caiytkv5uaganqoo2sakl3nrvl67hcnfzzd4gkmwgmxzqcslfgg3.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1000, 128], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused_embedding_dense_backward_5 = async_compile.triton('triton_poi_fused_embedding_dense_backward_5', '''
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 131072}, 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_dense_backward_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused_embedding_dense_backward_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xnumel = 128000
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = xindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = 0.0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/os/cosrok25estys4llfxmsoyoc6ccd2whjy5uup74qiff2tif7lx5r.py
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] # Graph fragment:
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%unsqueeze_10, %full_default, %permute_3), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%where,), kwargs = {memory_format: torch.contiguous_format})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1000, 128], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%full_default_1, [%primals_4], %clone, True), kwargs = {})
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_poi_fused_embedding_dense_backward_6 = async_compile.triton('triton_poi_fused_embedding_dense_backward_6', '''
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] import triton.language as tl
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     size_hints={'x': 32768}, 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     filename=__file__,
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_embedding_dense_backward_6', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] @triton.jit
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def triton_poi_fused_embedding_dense_backward_6(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x2 = xindex // ks1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x3 = xindex
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     x1 = ((xindex // ks0) % 128)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + ks0*x2), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp8 = tl.load(in_ptr1 + (x3), xmask, eviction_policy='evict_last')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 1000, tl.int32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp3 = tmp0 < 0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 1000)) | ~(xmask), "index out of bounds: 0 <= tmp4 < 1000")
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp6 = tl.full([1], -1, tl.int64)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp7 = tmp0 == tmp6
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp9 = 0.0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tmp10 = tl.where(tmp7, tmp9, tmp8)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tl.atomic_add(out_ptr0 + (x1 + 128*tmp4), tmp10, xmask, sem='relaxed')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] ''', device_str='cuda')
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] async_compile.wait(globals())
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] del async_compile
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def call(args):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_2, primals_3, mul_29, primals_4, primals_5, primals_10, permute, convolution, squeeze_1, unsqueeze_3, tangents_1 = args
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     args.clear()
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     s0 = primals_2
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     s1 = primals_3
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_4, (s0, s1), (s1, 1))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_5, (128, 64, 3), (192, 3, 1))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(permute, (s0, 128, s1), (128*s1, 1, 128))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(convolution, (s0, 64, 1 + 2*s1), (64 + 128*s1, 1 + 2*s1, 1))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(squeeze_1, (64, ), (1, ))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(unsqueeze_3, (1, 64, 1), (64, 1, 1))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     assert_size_stride(tangents_1, (s0, 1 + 2*s1, 64), (64 + 128*s1, 64, 1))
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf0 = empty_strided_cuda((64, 4), (1, 64), torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf2 = empty_strided_cuda((64, 4), (1, 64), torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0_r0_numel = (3 + s0 + 2*s0*s1) // 4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0.run(tangents_1, convolution, unsqueeze_3, buf0, buf2, s0, s1, 256, triton_red_fused_native_batch_norm_backward_0_r0_numel, grid=grid(256), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf1 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_per_fused_native_batch_norm_backward_1.run(buf0, buf1, 64, 4, grid=grid(64), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del buf0
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf3 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf5 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_per_fused_native_batch_norm_backward_2.run(buf2, squeeze_1, buf3, buf5, 64, 4, grid=grid(64), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         ps0 = 1 + 2*s1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf4 = empty_strided_cuda((s0, 64, 1 + 2*s1), (64 + 128*s1, 1, 64), torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_native_batch_norm_backward_3_ynumel = s0 + 2*s0*s1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_native_batch_norm_backward_3.run(tangents_1, convolution, unsqueeze_3, buf3, squeeze_1, buf1, primals_10, buf4, ps0, s1, s0, triton_poi_fused_native_batch_norm_backward_3_ynumel, 64, grid=grid(triton_poi_fused_native_batch_norm_backward_3_ynumel, 64), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del convolution
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_10
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del squeeze_1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del tangents_1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del unsqueeze_3
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf6 = buf2; del buf2  # reuse
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_red_fused_convolution_backward_4_r0_numel = (3 + s0 + 2*s0*s1) // 4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_red_fused_convolution_backward_4.run(buf4, buf6, s0, s1, ps0, 256, triton_red_fused_convolution_backward_4_r0_numel, grid=grid(256), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf7 = buf3; del buf3  # reuse
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_per_fused_native_batch_norm_backward_1.run(buf6, buf7, 64, 4, grid=grid(64), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del buf6
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf8 = torch.ops.aten.convolution_backward.default(buf4, permute, primals_5, [64], [2], [0], [1], True, [0], 1, [True, True, False])
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del buf4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del permute
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_5
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf9 = buf8[0]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf10 = buf8[1]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del buf8
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         buf11 = empty_strided_cuda((1000, 128), (128, 1), torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_embedding_dense_backward_5.run(buf11, 128000, grid=grid(128000), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         ps1 = 128*s1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.embedding_dense_backward]
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_embedding_dense_backward_6_xnumel = 128*s0*s1
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         triton_poi_fused_embedding_dense_backward_6.run(primals_4, buf9, buf11, s1, ps1, triton_poi_fused_embedding_dense_backward_6_xnumel, grid=grid(triton_poi_fused_embedding_dense_backward_6_xnumel), stream=stream0)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del buf9
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]         del primals_4
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     return (buf11, None, None, None, buf10, buf7, None, None, None, buf5, buf1, )
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_2 = 10
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_3 = 20
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     mul_29 = 26240
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_4 = rand_strided((10, 20), (20, 1), device='cuda:0', dtype=torch.int64)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_5 = rand_strided((128, 64, 3), (192, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     permute = rand_strided((10, 128, 20), (2560, 1, 128), device='cuda:0', dtype=torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     convolution = rand_strided((10, 64, 41), (2624, 41, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     squeeze_1 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     unsqueeze_3 = rand_strided((1, 64, 1), (64, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     tangents_1 = rand_strided((10, 41, 64), (2624, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     fn = lambda: call([primals_2, primals_3, mul_29, primals_4, primals_5, primals_10, permute, convolution, squeeze_1, unsqueeze_3, tangents_1])
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] if __name__ == "__main__":
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:34:57.411000 3201829 site-packages/torch/_inductor/graph.py:2014] [396/0_1] [__output_code] 
V0205 11:34:57.422000 3201829 site-packages/torch/_inductor/graph.py:2022] [396/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gd/cgdck63s72ewasfcrrc7jnltuikrrr6od63tplecrphadukxxxwa.py
I0205 11:34:57.939000 3201829 site-packages/torch/_inductor/graph.py:2056] [396/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gd/cgdck63s72ewasfcrrc7jnltuikrrr6od63tplecrphadukxxxwa.py

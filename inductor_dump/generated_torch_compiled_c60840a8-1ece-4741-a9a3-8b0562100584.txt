W0205 11:35:01.115000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.119000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.121000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.122000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.126000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.127000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.129000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.133000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.134000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.136000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.137000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.139000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.140000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.142000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.143000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.145000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.147000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.148000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.152000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.154000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.156000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.158000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.159000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.161000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.163000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.165000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.166000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.491000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.856000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0205 11:35:01.937000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [406/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] Output code: 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # AOT ID: ['112_inference']
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import torch
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import random
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import os
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import tempfile
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from math import inf, nan
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from cmath import nanj
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch import device, empty_strided
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     grid,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     split_scan_grid,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     grid_combo_kernels,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     start_graph,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     end_graph,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] aten = torch.ops.aten
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ka/ckamaim7h3tt6o2pt3vumd42fcizka6autx7ntlpgjwstmhqra3p.py
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.constant_pad_nd, aten.mean]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x => constant_pad_nd
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x_1 => mean
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Graph fragment:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %constant_pad_nd : [num_users=3] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg4_1, [1, 1, 1, 1, 1, 1], 0.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mean : [num_users=4] = call_function[target=torch.ops.aten.mean.dim](args = (%constant_pad_nd, [2]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_red_fused_constant_pad_nd_mean_0 = async_compile.triton('triton_red_fused_constant_pad_nd_mean_0', '''
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     size_hints={'x': 4096, 'r0_': 32},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     filename=__file__,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_constant_pad_nd_mean_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton.jit
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def triton_red_fused_constant_pad_nd_mean_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     rnumel = r0_numel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     rbase = r0_base
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x1 = ((xindex // ks1) % ks2)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x0 = (xindex % ks1)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x2 = xindex // ks5
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     _tmp20 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x4 = xindex
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         roffset = r0_offset
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         rindex = r0_index
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         r0_3 = r0_index
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp0 = (-1) + r0_3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp1 = tl.full([1, 1], 0, tl.int64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp2 = tmp0 >= tmp1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp3 = ks0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp4 = tmp0 < tmp3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp5 = (-1) + x1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp6 = tmp5 >= tmp1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp7 = ks3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp8 = tmp5 < tmp7
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp9 = (-1) + x0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp10 = tmp9 >= tmp1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp11 = ks4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp12 = tmp9 < tmp11
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp13 = tmp2 & tmp4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp14 = tmp13 & tmp6
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp15 = tmp14 & tmp8
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp16 = tmp15 & tmp10
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp17 = tmp16 & tmp12
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp18 = tl.load(in_ptr0 + ((-1) + x0 + ((-1)*ks4) + ks4*x1 + ((-1)*ks3*ks4) + ks3*ks4*r0_3 + ks0*ks3*ks4*x2), r0_mask & tmp17 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp19 = tl.broadcast_to(tmp18, [XBLOCK, R0_BLOCK])
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         tmp21 = _tmp20 + tmp19
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         _tmp20 = tl.where(r0_mask & xmask, tmp21, _tmp20)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp20 = tl.sum(_tmp20, 1)[:, None]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp20, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] ''', device_str='cuda')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bc/cbc5kdcj4me3teeq6uhsvqfs7ptau73k5unngqrlbp7spovuxypj.py
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.constant_pad_nd, aten.mean, aten._unsafe_index, aten.sub]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x => constant_pad_nd
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x_1 => mean
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x_2 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, sub_48, sub_58
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Graph fragment:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %constant_pad_nd : [num_users=3] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg4_1, [1, 1, 1, 1, 1, 1], 0.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mean : [num_users=4] = call_function[target=torch.ops.aten.mean.dim](args = (%constant_pad_nd, [2]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %sub_58 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mean, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %sub_48 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1 = async_compile.triton('triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1', '''
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     filename=__file__,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton.jit
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, XBLOCK : tl.constexpr):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x1 = ((xindex // ks1) % ks2)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x0 = (xindex % ks1)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x6 = xindex // ks4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x3 = xindex
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp0 = 2.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp1 = ks0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp2 = tmp1.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp3 = tmp0 + tmp2
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp4 = tmp3.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp5 = tl.full([1], -1.0, tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp6 = tmp5 + tmp4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp7 = tmp0 * tmp2
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp8 = 4.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp9 = tmp8 + tmp7
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp10 = tmp9.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp11 = tmp5 + tmp10
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp12 = tmp6 / tmp11
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp14 = x1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp16 = tmp15 * tmp13
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp17 = 0.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp18 = triton_helpers.maximum(tmp16, tmp17)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp19 = tmp18.to(tl.int64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp20 = tl.full([1], 1, tl.int64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp21 = tmp19 + tmp20
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp22 = 1 + ks0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp23 = triton_helpers.minimum(tmp21, tmp22)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp24 = ks3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp26 = tmp0 + tmp25
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp27 = tmp26.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp28 = tmp5 + tmp27
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp29 = tmp0 * tmp25
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp30 = tmp8 + tmp29
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp31 = tmp30.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp32 = tmp5 + tmp31
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp33 = tmp28 / tmp32
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp34 = tmp33.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp35 = x0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp36 = tmp35.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp37 = tmp36 * tmp34
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp38 = triton_helpers.maximum(tmp37, tmp17)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp39 = tmp38.to(tl.int64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp40 = tl.load(in_ptr0 + (tmp39 + 2*tmp23 + 4*x6 + ks3*tmp23 + 2*ks0*x6 + 2*ks3*x6 + ks0*ks3*x6), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp41 = 2 + ks5
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp42 = tmp41.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp43 = tmp40 / tmp42
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp44 = tmp39 + tmp20
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp45 = 1 + ks3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp46 = triton_helpers.minimum(tmp44, tmp45)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp47 = tl.load(in_ptr0 + (tmp46 + 2*tmp23 + 4*x6 + ks3*tmp23 + 2*ks0*x6 + 2*ks3*x6 + ks0*ks3*x6), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp48 = tmp47 / tmp42
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp49 = tmp48 - tmp43
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp50 = tl.load(in_ptr0 + (tmp39 + 2*tmp19 + 4*x6 + ks3*tmp19 + 2*ks0*x6 + 2*ks3*x6 + ks0*ks3*x6), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp51 = tmp50 / tmp42
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp52 = tl.load(in_ptr0 + (tmp46 + 2*tmp19 + 4*x6 + ks3*tmp19 + 2*ks0*x6 + 2*ks3*x6 + ks0*ks3*x6), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp53 = tmp52 / tmp42
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp54 = tmp53 - tmp51
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp43, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp49, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(out_ptr2 + (x3), tmp51, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(out_ptr3 + (x3), tmp54, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] ''', device_str='cuda')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wu/cwuboegqtf425tjyxaymu2h36ggxzjk5tkgwyui6d7klac3glae4.py
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.sub, aten.mul, aten.add]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x_2 => add_77, add_90, clamp_max_2, clamp_min_1, clamp_min_2, convert_element_type_2, convert_element_type_3, iota_1, mul_51, mul_64, sub_45, sub_71, view_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Graph fragment:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv_1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_6 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %scalar_tensor_default_8 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg3_1,), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_6, %scalar_tensor_default_8), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_default_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_4, torch.float64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_5, %convert_element_type_default_3), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_7 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 4), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_9 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_9, %scalar_tensor_default_8), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_8, %mul_tensor_2), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_default_4 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_6, torch.float64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_7, %convert_element_type_default_4), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %true_divide_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor_5, %add_tensor_7), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_default_5 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor_1, torch.float32), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_5), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_3, 0.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %view_1 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%floordiv_1]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_1, torch.int64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %sub_45 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %convert_element_type_3), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_45, 0.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_64 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_58, %clamp_max_2), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_90 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_51 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_48, %clamp_max_2), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_77 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_51), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %sub_71 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_90, %add_77), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2', '''
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     filename=__file__,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton.jit
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x2 = xindex
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x0 = (xindex % ks1)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp29 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp30 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp2 = 2.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp3 = ks0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp4 = tmp3.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp6 = tmp5.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp7 = tl.full([1], -1.0, tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp8 = tmp7 + tmp6
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp9 = tmp2 * tmp4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp10 = 4.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp11 = tmp10 + tmp9
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp12 = tmp11.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp13 = tmp7 + tmp12
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp14 = tmp8 / tmp13
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp16 = x0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp18 = tmp17 * tmp15
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp19 = 0.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp20 = triton_helpers.maximum(tmp18, tmp19)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp23 = tmp20 - tmp22
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp19)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp25 = 1.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp26 = triton_helpers.minimum(tmp24, tmp25)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp27 = tmp1 * tmp26
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp28 = tmp0 + tmp27
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp31 = tmp30 * tmp26
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp32 = tmp29 + tmp31
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp33 = tmp28 - tmp32
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp33, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] ''', device_str='cuda')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kj/ckjfl4gfj3yshxag5eq56prqhr6n6qgut3inr6vvm2hrza3fjwcs.py
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._to_copy, aten.arange, aten.clamp, aten.view, aten.sub, aten.mul, aten.add]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x_2 => add_109, add_77, clamp_max_2, clamp_max_3, clamp_min_1, clamp_min_2, clamp_min_3, convert_element_type_1, convert_element_type_2, convert_element_type_3, iota_1, mul_51, mul_79, sub_45, sub_68, view_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Graph fragment:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv_1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_6 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %scalar_tensor_default_8 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg3_1,), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_6, %scalar_tensor_default_8), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_default_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_4, torch.float64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_5, %convert_element_type_default_3), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_7 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_8 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 4), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_default_9 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_9, %scalar_tensor_default_8), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_8, %mul_tensor_2), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_default_4 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_6, torch.float64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_tensor_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_7, %convert_element_type_default_4), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %true_divide_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor_5, %add_tensor_7), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_default_5 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor_1, torch.float32), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_5), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_3, 0.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %view_1 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%floordiv_1]), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_1, torch.int64), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %sub_45 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %convert_element_type_3), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_45, 0.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_51 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_48, %clamp_max_2), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_77 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_51), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %sub_68 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_68, 0.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %mul_79 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_71, %clamp_max_3), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %add_109 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_77, %mul_79), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3', '''
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     filename=__file__,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton.jit
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x3 = xindex
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x0 = (xindex % ks1)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x1 = ((xindex // ks1) % ks3)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp29 = tl.load(in_ptr1 + (x3), xmask, eviction_policy='evict_last')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp2 = 2.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp3 = ks0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp4 = tmp3.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp5 = tmp2 + tmp4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp6 = tmp5.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp7 = tl.full([1], -1.0, tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp8 = tmp7 + tmp6
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp9 = tmp2 * tmp4
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp10 = 4.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp11 = tmp10 + tmp9
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp12 = tmp11.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp13 = tmp7 + tmp12
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp14 = tmp8 / tmp13
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp16 = x0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp18 = tmp17 * tmp15
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp19 = 0.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp20 = triton_helpers.maximum(tmp18, tmp19)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp23 = tmp20 - tmp22
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp19)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp25 = 1.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp26 = triton_helpers.minimum(tmp24, tmp25)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp27 = tmp1 * tmp26
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp28 = tmp0 + tmp27
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp30 = ks2
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp31 = tmp30.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp32 = tmp2 + tmp31
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp33 = tmp32.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp34 = tmp7 + tmp33
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp35 = tmp2 * tmp31
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp36 = tmp10 + tmp35
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp37 = tmp36.to(tl.float64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp38 = tmp7 + tmp37
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp39 = tmp34 / tmp38
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp40 = tmp39.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp41 = x1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp42 = tmp41.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp43 = tmp42 * tmp40
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp44 = triton_helpers.maximum(tmp43, tmp19)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp45 = tmp44.to(tl.int64)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp46 = tmp45.to(tl.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp47 = tmp44 - tmp46
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp48 = triton_helpers.maximum(tmp47, tmp19)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp49 = triton_helpers.minimum(tmp48, tmp25)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp50 = tmp29 * tmp49
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp51 = tmp28 + tmp50
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp51, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] ''', device_str='cuda')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6p/c6px4sykqyng2d4bxsmywik5h4yeexwtltnxtan45ok3jdlaezwv.py
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.tanh, aten.sub]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   x_3 => sub_84, tanh
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Graph fragment:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add_109,), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %sub_84 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_109, %tanh), kwargs = {})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_poi_fused_sub_tanh_4 = async_compile.triton('triton_poi_fused_sub_tanh_4', '''
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     filename=__file__,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sub_tanh_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton.jit
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def triton_poi_fused_sub_tanh_4(in_out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x0 = xindex
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] ''', device_str='cuda')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/26/c26d4usulb7squgchu7iurxoqvheqis4nhd7nqad6zdyji6jrids.py
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Topologically Sorted Source Nodes: [target], Original ATen: [aten.zeros_like]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   target => full
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Graph fragment:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %arg0_1, %floordiv, %floordiv_1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_poi_fused_zeros_like_5 = async_compile.triton('triton_poi_fused_zeros_like_5', '''
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     filename=__file__,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_zeros_like_5', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton.jit
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def triton_poi_fused_zeros_like_5(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x0 = xindex
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp0 = 0.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] ''', device_str='cuda')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jj/cjjwwiyfpall65d55l2a5veukyka7wt2dhwei2uitt4cpkq2me4h.py
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Topologically Sorted Source Nodes: [ones_like], Original ATen: [aten.ones_like]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   ones_like => full_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] # Graph fragment:
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] #   %full_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %arg0_1, %floordiv, %floordiv_1], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_poi_fused_ones_like_6 = async_compile.triton('triton_poi_fused_ones_like_6', '''
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] import triton.language as tl
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     filename=__file__,
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_ones_like_6', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] @triton.jit
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def triton_poi_fused_ones_like_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     x0 = xindex
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tmp0 = 1.0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] ''', device_str='cuda')
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] async_compile.wait(globals())
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] del async_compile
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def call(args):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     args.clear()
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     s0 = arg0_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     s1 = arg1_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     s2 = arg2_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     s3 = arg3_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     assert_size_stride(arg4_1, (1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         ps0 = 2 + s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         ps1 = 2 + s2
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         ps2 = 4 + 2*s2 + 2*s3 + s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 2 + s2, 2 + s3), (4*s0 + 2*s0*s2 + 2*s0*s3 + s0*s2*s3, 4 + 2*s2 + 2*s3 + s2*s3, 2 + s3, 1), torch.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.constant_pad_nd, aten.mean]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_red_fused_constant_pad_nd_mean_0_xnumel = 4*s0 + 2*s0*s2 + 2*s0*s3 + s0*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_red_fused_constant_pad_nd_mean_0_r0_numel = 2 + s1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_red_fused_constant_pad_nd_mean_0.run(arg4_1, buf0, s1, ps0, ps1, s2, s3, ps2, triton_red_fused_constant_pad_nd_mean_0_xnumel, triton_red_fused_constant_pad_nd_mean_0_r0_numel, grid=grid(triton_red_fused_constant_pad_nd_mean_0_xnumel), stream=stream0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         del arg4_1
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         ps3 = 4 + 2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         ps4 = 4 + 2*s2
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         ps5 = 16 + 8*s2 + 8*s3 + 4*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf1 = empty_strided_cuda((1, s0, 4 + 2*s2, 4 + 2*s3), (16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3, 16 + 8*s2 + 8*s3 + 4*s2*s3, 4 + 2*s3, 1), torch.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, 4 + 2*s2, 4 + 2*s3), (16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3, 16 + 8*s2 + 8*s3 + 4*s2*s3, 4 + 2*s3, 1), torch.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf3 = empty_strided_cuda((1, s0, 4 + 2*s2, 4 + 2*s3), (16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3, 16 + 8*s2 + 8*s3 + 4*s2*s3, 4 + 2*s3, 1), torch.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf4 = empty_strided_cuda((1, s0, 4 + 2*s2, 4 + 2*s3), (16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3, 16 + 8*s2 + 8*s3 + 4*s2*s3, 4 + 2*s3, 1), torch.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.constant_pad_nd, aten.mean, aten._unsafe_index, aten.sub]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1_xnumel = 16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1.run(buf0, buf1, buf2, buf3, buf4, s2, ps3, ps4, s3, ps5, s1, triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1_xnumel, grid=grid(triton_poi_fused__unsafe_index_constant_pad_nd_mean_sub_1_xnumel), stream=stream0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         del buf0
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf5 = buf1; del buf1  # reuse
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.sub, aten.mul, aten.add]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2_xnumel = 16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2.run(buf5, buf2, buf3, buf4, s3, ps3, triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2_xnumel, grid=grid(triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_2_xnumel), stream=stream0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         del buf2
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf6 = buf3; del buf3  # reuse
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._to_copy, aten.arange, aten.clamp, aten.view, aten.sub, aten.mul, aten.add]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3_xnumel = 16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3.run(buf6, buf4, buf5, s3, ps3, s2, ps4, triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3_xnumel, grid=grid(triton_poi_fused__to_copy_add_arange_clamp_mul_sub_view_3_xnumel), stream=stream0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf7 = buf6; del buf6  # reuse
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.tanh, aten.sub]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused_sub_tanh_4_xnumel = 16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused_sub_tanh_4.run(buf7, triton_poi_fused_sub_tanh_4_xnumel, grid=grid(triton_poi_fused_sub_tanh_4_xnumel), stream=stream0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf8 = buf5; del buf5  # reuse
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         # Topologically Sorted Source Nodes: [target], Original ATen: [aten.zeros_like]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused_zeros_like_5_xnumel = 16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused_zeros_like_5.run(buf8, triton_poi_fused_zeros_like_5_xnumel, grid=grid(triton_poi_fused_zeros_like_5_xnumel), stream=stream0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         buf9 = buf4; del buf4  # reuse
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         # Topologically Sorted Source Nodes: [ones_like], Original ATen: [aten.ones_like]
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused_ones_like_6_xnumel = 16*s0 + 8*s0*s2 + 8*s0*s3 + 4*s0*s2*s3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]         triton_poi_fused_ones_like_6.run(buf9, triton_poi_fused_ones_like_6_xnumel, grid=grid(triton_poi_fused_ones_like_6_xnumel), stream=stream0)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     return (buf7, buf8, buf9, )
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     arg0_1 = 3
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     arg1_1 = 16
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     arg2_1 = 32
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     arg3_1 = 32
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     arg4_1 = rand_strided((1, 3, 16, 32, 32), (49152, 16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] if __name__ == "__main__":
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:35:02.015000 3201829 site-packages/torch/_inductor/graph.py:2014] [406/0_1] [__output_code] 
V0205 11:35:02.030000 3201829 site-packages/torch/_inductor/graph.py:2022] [406/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jv/cjvv2fbt55dldvwdvjc44ii6jh6vwkt4gqebwmtuvqhg44hqdfbm.py
I0205 11:35:02.595000 3201829 site-packages/torch/_inductor/graph.py:2056] [406/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jv/cjvv2fbt55dldvwdvjc44ii6jh6vwkt4gqebwmtuvqhg44hqdfbm.py

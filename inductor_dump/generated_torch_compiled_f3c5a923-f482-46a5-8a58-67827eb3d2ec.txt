W0205 14:30:01.629000 1612526 site-packages/torch/_inductor/utils.py:1611] [150/0_1] DeviceCopy in input program
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] Output code: 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # AOT ID: ['36_forward']
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import torch
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import random
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import os
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import tempfile
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from math import inf, nan
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from cmath import nanj
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch import device, empty_strided
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     grid,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     split_scan_grid,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     grid_combo_kernels,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     start_graph,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     end_graph,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     cooperative_reduction_grid,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] aten = torch.ops.aten
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] async_compile = AsyncCompile()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/34/c3437nbwal5nqq7hcbhbdxg6hdti5mojn44zsynx6hg2e7oj64eh.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   x => convolution
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_5, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x2 = xindex
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x1 = xindex // ks0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zr/czrmzicnaapgaejaumfgvekxe6lxeo4mz36fhfieg2q2wikjyzd2.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   x_1 => convolution_1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%convolution, %primals_6, %primals_7, [2, 2], [0, 0], [1, 1], True, [0, 0], 1), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 131072}, 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x2 = xindex
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x1 = xindex // ks0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2w/c2wxsgk733trxdnzykbwv3m6jp27urwqrb3viwcvl3zca4h5vypi.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.adaptive_max_pool2d]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   x_2 => getitem, getitem_1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %getitem : [num_users=2] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused_adaptive_max_pool2d_2 = async_compile.triton('triton_poi_fused_adaptive_max_pool2d_2', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 8192}, 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_adaptive_max_pool2d_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused_adaptive_max_pool2d_2(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x2 = xindex // ks2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x3 = xindex
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (2*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (1 + 2*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (2 + 2*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp13 = tl.load(in_ptr0 + (3 + 2*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp15 = tl.load(in_ptr0 + (4*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + (1 + 4*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp19 = tl.load(in_ptr0 + (2 + 4*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp21 = tl.load(in_ptr0 + (3 + 4*ks4 + 4*x0 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp23 = tl.load(in_ptr0 + (4*x0 + 6*ks4 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp25 = tl.load(in_ptr0 + (1 + 4*x0 + 6*ks4 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp27 = tl.load(in_ptr0 + (2 + 4*x0 + 6*ks4 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp29 = tl.load(in_ptr0 + (3 + 4*x0 + 6*ks4 + 8*ks4*x1 + 4*ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp8 = triton_helpers.maximum(tmp7, tmp6)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp10 = triton_helpers.maximum(tmp9, tmp8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp10)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp12)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp16 = triton_helpers.maximum(tmp15, tmp14)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp18 = triton_helpers.maximum(tmp17, tmp16)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp20 = triton_helpers.maximum(tmp19, tmp18)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp20)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp22)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp24)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp28 = triton_helpers.maximum(tmp27, tmp26)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp30 = triton_helpers.maximum(tmp29, tmp28)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp31 = tmp1 > tmp0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp32 = tl.full([1], 1, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp33 = tl.full([1], 0, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp34 = tl.where(tmp31, tmp32, tmp33)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp35 = tmp3 > tmp2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp36 = tl.full([1], 2, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp37 = tl.where(tmp35, tmp36, tmp34)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp38 = tmp5 > tmp4
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp39 = tl.full([1], 3, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp40 = tl.where(tmp38, tmp39, tmp37)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp41 = tmp7 > tmp6
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp42 = tl.full([1], 4, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp43 = tl.where(tmp41, tmp42, tmp40)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp44 = tmp9 > tmp8
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp45 = tl.full([1], 5, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp46 = tl.where(tmp44, tmp45, tmp43)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp47 = tmp11 > tmp10
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp48 = tl.full([1], 6, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp49 = tl.where(tmp47, tmp48, tmp46)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp50 = tmp13 > tmp12
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp51 = tl.full([1], 7, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp52 = tl.where(tmp50, tmp51, tmp49)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp53 = tmp15 > tmp14
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp54 = tl.full([1], 8, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp55 = tl.where(tmp53, tmp54, tmp52)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp56 = tmp17 > tmp16
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp57 = tl.full([1], 9, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp58 = tl.where(tmp56, tmp57, tmp55)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp59 = tmp19 > tmp18
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp60 = tl.full([1], 10, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp61 = tl.where(tmp59, tmp60, tmp58)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp62 = tmp21 > tmp20
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp63 = tl.full([1], 11, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp64 = tl.where(tmp62, tmp63, tmp61)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp65 = tmp23 > tmp22
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp66 = tl.full([1], 12, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp67 = tl.where(tmp65, tmp66, tmp64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp68 = tmp25 > tmp24
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp69 = tl.full([1], 13, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp70 = tl.where(tmp68, tmp69, tmp67)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp71 = tmp27 > tmp26
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp72 = tl.full([1], 14, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp73 = tl.where(tmp71, tmp72, tmp70)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp74 = tmp29 > tmp28
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp75 = tl.full([1], 15, tl.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp76 = tl.where(tmp74, tmp75, tmp73)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp30, xmask)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp76, xmask)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rz/crzcz5vwq6fospdsvl3goi4vlm6pszyge44jjeo5zznrm5eeay2g.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [hx], Original ATen: [aten._to_copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   hx => full_default
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %full_default : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([1, 128], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused__to_copy_3 = async_compile.triton('triton_poi_fused__to_copy_3', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 128}, 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused__to_copy_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 128
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = xindex
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = 0.0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/na/cnasrwm6dxnvzp4tsqjrrxcvzvdobfta7zgtwjvfv5iw3i5ve5aq.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.sub, aten.add, aten.norm, aten.div, aten.eq, aten.masked_fill]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   x_4 => add_18, pow_1, sub_9, sum_1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_2, %getitem_3), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %add_18 : [num_users=2] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_9, 1e-06), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_18, 2.0), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1]), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_18, %unsqueeze), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %eq_12 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%unsqueeze, 0), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %full_default_9 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq_12, %full_default_9, %div), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_per_fused_add_div_eq_masked_fill_norm_sub_4 = async_compile.triton('triton_per_fused_add_div_eq_masked_fill_norm_sub_4', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 1, 'r0_': 128},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_eq_masked_fill_norm_sub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_per_fused_add_div_eq_masked_fill_norm_sub_4(in_out_ptr0, in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     r0_numel = 128
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 128
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     rnumel = r0_numel
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     r0_offset = 0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     roffset = r0_offset
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     rindex = r0_index
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     r0_0 = r0_index
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r0_0), None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (r0_0), None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp3 = 1e-06
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp4 = tmp2 + tmp3
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp5 = tmp4 * tmp4
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp8 = tl.sum(tmp6, 1)[:, None]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp9 = libdevice.sqrt(tmp8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp10 = 0.0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp11 = tmp9 == tmp10
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp12 = tmp4 / tmp9
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp13 = tl.where(tmp11, tmp10, tmp12)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(in_out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp13, None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp8, None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] cpp_fused_randint_5 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*'], '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                        int64_t* out_ptr0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] {
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     {
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         #pragma GCC ivdep
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(5L); x0+=static_cast<int64_t>(1L))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         {
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]             {
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                 {
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                     auto tmp1 = x0;
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                     auto tmp3 = static_cast<int64_t>(1);
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                     auto tmp4 = static_cast<int64_t>(10);
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp5;
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]                 }
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]             }
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         }
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     }
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] }
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dl/cdlysp33dc6ldavomatfyag73yuvmdynx4f3f4nftbql4ivy3jna.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   x_6 => copy
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_1, %slice_2), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %slice_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%empty, %copy, 1, 1, 2), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %slice_scatter_default_1 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %slice_8, 1, 0, 1), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %slice_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_1, %slice_14, 1, 2, 3), kwargs = {})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused_copy_6 = async_compile.triton('triton_poi_fused_copy_6', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused_copy_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 3
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = xindex
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = x0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.full([1], 2, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp3 = (-1) + x0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp6 = tmp5 & tmp2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp7 = x0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp8 = tl.full([1], 1, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp9 = tmp7 >= tmp8
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp10 = tl.full([1], 2, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp11 = tmp7 < tmp10
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp12 = tmp9 & tmp11
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp13 = tmp12 & tmp6
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp13, eviction_policy='evict_last', other=0.0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp15 = libdevice.sqrt(tmp14)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp16 = tl.full(tmp15.shape, 0.0, tmp15.dtype)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp17 = tl.where(tmp13, tmp15, tmp16)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp18 = float("nan")
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp19 = tl.where(tmp12, tmp17, tmp18)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp20 = tl.full(tmp19.shape, 0.0, tmp19.dtype)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp21 = tl.where(tmp6, tmp19, tmp20)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp22 = tmp3 >= tmp4
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp23 = tl.full([1], 2, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp24 = tmp3 < tmp23
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp25 = tmp22 & tmp24
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp26 = tmp25 & tmp2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp27 = tl.load(in_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp26, eviction_policy='evict_last', other=0.0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp28 = libdevice.sqrt(tmp27)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp29 = tl.full(tmp28.shape, 0.0, tmp28.dtype)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp30 = tl.where(tmp26, tmp28, tmp29)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp31 = float("nan")
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp32 = tl.where(tmp25, tmp30, tmp31)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp33 = tl.where(tmp5, tmp21, tmp32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp34 = tl.full(tmp33.shape, 0.0, tmp33.dtype)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp35 = tl.where(tmp2, tmp33, tmp34)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp36 = tl.full([1], 1, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp37 = tmp0 < tmp36
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp38 = 1 + x0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp39 = tl.full([1], 1, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp40 = tmp38 >= tmp39
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp41 = tl.full([1], 2, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp42 = tmp38 < tmp41
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp43 = tmp40 & tmp42
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp44 = tmp43 & tmp37
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp45 = tl.load(in_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp44, eviction_policy='evict_last', other=0.0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp46 = libdevice.sqrt(tmp45)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp47 = tl.full(tmp46.shape, 0.0, tmp46.dtype)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp48 = tl.where(tmp44, tmp46, tmp47)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp49 = float("nan")
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp50 = tl.where(tmp43, tmp48, tmp49)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp51 = tl.full(tmp50.shape, 0.0, tmp50.dtype)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp52 = tl.where(tmp37, tmp50, tmp51)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp53 = tmp0 >= tmp36
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp54 = tmp0 < tmp1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp55 = tmp53 & tmp54
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp56 = tl.load(in_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp55, eviction_policy='evict_last', other=0.0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp57 = libdevice.sqrt(tmp56)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp58 = tl.full(tmp57.shape, 0.0, tmp57.dtype)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp59 = tl.where(tmp55, tmp57, tmp58)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp60 = float("nan")
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp61 = tl.where(tmp55, tmp59, tmp60)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp62 = tl.where(tmp37, tmp52, tmp61)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp63 = tl.where(tmp2, tmp35, tmp62)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp63, xmask)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3h/c3hufvc3hejvaeevkycfntxircheivr44ic644zrk5zx3vsl33bm.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [input_lengths], Original ATen: [aten._to_copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   input_lengths => full_default_3
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1), kwargs = {dtype: torch.int64, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused__to_copy_7 = async_compile.triton('triton_poi_fused__to_copy_7', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused__to_copy_7(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.full([1], 1, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ae/caehtksfyusv56mp7l6j57fcy46x7q5bqvm6kb7yk4keafsjcggo.py
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [target_lengths], Original ATen: [aten._to_copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   target_lengths => full_default_2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 5), kwargs = {dtype: torch.int64, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused__to_copy_8 = async_compile.triton('triton_poi_fused__to_copy_8', '''
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused__to_copy_8(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 1
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.full([1], 5, tl.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] async_compile.wait(globals())
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] del async_compile
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def call(args):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     args.clear()
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     s1 = primals_3
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     s2 = primals_4
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_6, (16, 32, 2, 2), (128, 4, 2, 1))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_8, (512, 8192), (8192, 1))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_9, (512, 128), (128, 1))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_10, (512, ), (1, ))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_11, (512, ), (1, ))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_5, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         assert_size_stride(buf0, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         ps0 = s1*s2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_convolution_0_xnumel = 16*s1*s2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_2, ps0, triton_poi_fused_convolution_0_xnumel, grid=grid(triton_poi_fused_convolution_0_xnumel), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_6, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=True, output_padding=(0, 0), groups=1, bias=None)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         assert_size_stride(buf2, (1, 32, 2*s1, 2*s2), (128*s1*s2, 4*s1*s2, 2*s2, 1))
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         ps1 = 4*s1*s2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_convolution_1_xnumel = 128*s1*s2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_convolution_1.run(buf3, primals_7, ps1, triton_poi_fused_convolution_1_xnumel, grid=grid(triton_poi_fused_convolution_1_xnumel), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_7
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         ps2 = s2 // 2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         ps3 = s1 // 2
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         ps4 = (s1 // 2)*(s2 // 2)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 32, s1 // 2, s2 // 2), (32*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 32, s1 // 2, s2 // 2), (32*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.int8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.adaptive_max_pool2d]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2_xnumel = 32*(s1 // 2)*(s2 // 2)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2.run(buf3, buf4, buf5, ps2, ps3, ps4, s1, s2, triton_poi_fused_adaptive_max_pool2d_2_xnumel, grid=grid(triton_poi_fused_adaptive_max_pool2d_2_xnumel), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 128), (128, 1), torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [hx], Original ATen: [aten._to_copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused__to_copy_3.run(buf6, 128, grid=grid(128), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 512), (512, 1), torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [lstm_cell], Original ATen: [aten.mm]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (1, 32*(s1 // 2)*(s2 // 2)), (32*(s1 // 2)*(s2 // 2), 1), 0), reinterpret_tensor(primals_8, (8192, 512), (1, 8192), 0), out=buf7)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 512), (512, 1), torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [lstm_cell], Original ATen: [aten.mm]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_9, (128, 512), (1, 128), 0), out=buf8)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_9
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [lstm_cell], Original ATen: [aten._thnn_fused_lstm_cell]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf9 = torch.ops.aten._thnn_fused_lstm_cell.default(buf7, buf8, buf6, primals_10, primals_11)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf7
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf8
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_10
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_11
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf10 = buf9[0]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf11 = buf9[1]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf12 = buf9[2]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf9
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf13 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf18 = buf10; del buf10  # reuse
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.sub, aten.add, aten.norm, aten.div, aten.eq, aten.masked_fill]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_per_fused_add_div_eq_masked_fill_norm_sub_4.run(buf18, buf11, buf13, 1, 128, grid=grid(1), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     buf15 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf15)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     buf16 = empty_strided_cpu((1, 5), (5, 1), torch.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     cpp_fused_randint_5(buf15, buf16)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     del buf15
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf17 = empty_strided_cuda((1, 5), (5, 1), torch.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf17.copy_(buf16, False)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf16
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf19 = empty_strided_cuda((1, 3), (3, 1), torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_copy_6.run(buf13, buf19, 3, grid=grid(3), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf13
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf20 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [input_lengths], Original ATen: [aten._to_copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused__to_copy_7.run(buf20, 1, grid=grid(1), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf21 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [target_lengths], Original ATen: [aten._to_copy]
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused__to_copy_8.run(buf21, 1, grid=grid(1), stream=stream0)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     return (reinterpret_tensor(buf19, (1, 1, 3), (3, 3, 1), 0), buf17, buf20, buf21, primals_1, primals_5, primals_6, buf1, buf3, buf4, buf5, buf6, buf11, buf12, buf18, primals_8, s1, s2, )
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_3 = 32
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_4 = 32
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_5 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_6 = rand_strided((16, 32, 2, 2), (128, 4, 2, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_8 = rand_strided((512, 8192), (8192, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_9 = rand_strided((512, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_10 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_11 = rand_strided((512, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] if __name__ == "__main__":
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:30:02.043000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:02.057000 1612526 site-packages/torch/_inductor/graph.py:2022] [150/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/et/cetzw374qhhqagfgobbr4tzknjsabwun2jcggzhdzpjhh3kklvqy.py
I0205 14:30:03.024000 1612526 site-packages/torch/_inductor/graph.py:2056] [150/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/et/cetzw374qhhqagfgobbr4tzknjsabwun2jcggzhdzpjhh3kklvqy.py
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] Output code: 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # AOT ID: ['36_backward']
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import torch
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import math
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import random
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import os
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import tempfile
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from math import inf, nan
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from cmath import nanj
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch import device, empty_strided
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     grid,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     split_scan_grid,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     grid_combo_kernels,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     start_graph,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     end_graph,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     cooperative_reduction_grid,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] aten = torch.ops.aten
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] async_compile = AsyncCompile()
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/r7/cr7ce2cj2qhgfrj6p45arcgz7tdpxyisf3uueinqca4oxxqumbh7.py
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.clone, aten.zeros_like, aten.copy, aten.slice_backward, aten.add]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_18,), kwargs = {memory_format: torch.contiguous_format})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %full_default_4 : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([1, 1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %copy_4 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_18, %full_default_4), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %slice_scatter_default : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%squeeze, %copy_4, 1, 2, 3), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %full_default_5 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1, 3], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %slice_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%full_default_5, %clone, 1, 1, 2), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %add_19 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%slice_scatter_default, %slice_scatter_default_1), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%slice_21,), kwargs = {memory_format: torch.contiguous_format})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %copy_6 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_21, %full_default_4), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %slice_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%add_19, %copy_6, 1, 0, 1), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %slice_scatter_default_3 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%full_default_5, %clone_1, 1, 1, 2), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%slice_scatter_default_2, %slice_scatter_default_3), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused_add_clone_copy_slice_backward_zeros_like_0 = async_compile.triton('triton_poi_fused_add_clone_copy_slice_backward_zeros_like_0', '''
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_copy_slice_backward_zeros_like_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused_add_clone_copy_slice_backward_zeros_like_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 3
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = xindex
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (x0), xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = x0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp3 = 0.0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp4 = tl.full(tmp3.shape, 0.0, tmp3.dtype)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp6 = tl.full([1], 2, tl.int64)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp7 = tmp0 >= tmp6
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp8 = 0.0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp9 = tl.full(tmp8.shape, 0.0, tmp8.dtype)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp12 = tl.where(tmp7, tmp10, tmp11)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp13 = tmp0 >= tmp1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp14 = tmp0 < tmp6
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp15 = tmp13 & tmp14
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp16 = tl.load(in_ptr0 + (tl.full([XBLOCK], 2, tl.int32)), tmp15, eviction_policy='evict_last', other=0.0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp17 = 0.0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp18 = tl.where(tmp15, tmp16, tmp17)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp19 = tmp12 + tmp18
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp20 = tl.where(tmp2, tmp5, tmp19)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp21 = (-1) + x0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp22 = tl.full([1], 2, tl.int64)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp23 = tmp21 >= tmp22
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp24 = tmp23 & tmp15
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp25 = 0.0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp27 = tl.where(tmp24, tmp25, tmp26)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp28 = tl.load(in_ptr0 + ((-1) + x0), tmp15 & xmask, other=0.0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp29 = tl.where(tmp23, tmp27, tmp28)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp30 = tl.full([1], 1, tl.int64)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp31 = tmp21 >= tmp30
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp32 = tmp21 < tmp22
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp33 = tmp31 & tmp32
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp34 = tmp33 & tmp15
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp35 = tl.load(in_ptr0 + (tl.full([XBLOCK], 2, tl.int32)), tmp34, eviction_policy='evict_last', other=0.0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp36 = 0.0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp37 = tl.where(tmp33, tmp35, tmp36)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp38 = tmp29 + tmp37
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp39 = tl.full(tmp38.shape, 0.0, tmp38.dtype)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp40 = tl.where(tmp15, tmp38, tmp39)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp41 = tl.where(tmp15, tmp40, tmp17)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp42 = tmp20 + tmp41
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp42, xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tc/ctcficrpgu3lnnuvdutd66n5yd2ck76b6sbdkgnsb6p2y674emgi.py
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.neg, aten._thnn_fused_lstm_cell_backward_impl]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %mul_18 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_2, %where), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_18,), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %_thnn_fused_lstm_cell_backward_impl : [num_users=2] = call_function[target=torch.ops.aten._thnn_fused_lstm_cell_backward_impl.default](args = (%mul_18, %neg, %full_default, %getitem_3, %getitem_4, True), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused__thnn_fused_lstm_cell_backward_impl_mul_neg_1 = async_compile.triton('triton_poi_fused__thnn_fused_lstm_cell_backward_impl_mul_neg_1', '''
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 128}, 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__thnn_fused_lstm_cell_backward_impl_mul_neg_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused__thnn_fused_lstm_cell_backward_impl_mul_neg_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 128
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = xindex
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp4 = -tmp3
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4l/c4lncv33ogv3gckni7qbjbvy7atylienndwmasvstocsl4sdzyc6.py
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.adaptive_max_pool2d]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   x_2 => _low_memory_max_pool2d_offsets_to_indices
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %_low_memory_max_pool2d_offsets_to_indices : [num_users=1] = call_function[target=torch.ops.prims._low_memory_max_pool2d_offsets_to_indices.default](args = (%getitem_1, 4, %sym_size_int_3, [4, 4], [0, 0]), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_poi_fused_adaptive_max_pool2d_2 = async_compile.triton('triton_poi_fused_adaptive_max_pool2d_2', '''
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 8192}, 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i8', 'out_ptr0': '*i64', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_adaptive_max_pool2d_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     min_elem_per_thread=0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_poi_fused_adaptive_max_pool2d_2(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x3 = xindex
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask, eviction_policy='evict_last')
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp1 = tl.full([1], 4, tl.int32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tl.where((tmp0 < 0) != (tmp1 < 0), tl.where(tmp0 % tmp1 != 0, tmp0 // tmp1 - 1, tmp0 // tmp1), tmp0 // tmp1)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp3 = tmp2 * tmp1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp4 = tmp0 - tmp3
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp5 = 4*x1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp6 = tmp5 + tmp2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp7 = 4*x0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp8 = tmp7 + tmp4
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp9 = 2*ks2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp10 = tmp6 * tmp9
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp11 = tmp10 + tmp8
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp11, xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n5/cn53set4mlldv6nm3zapwmsn3aosbfu65gvk6ap2vculytqf4vk4.py
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%adaptive_max_pool2d_backward, [0, 2, 3]), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_red_fused_convolution_backward_3 = async_compile.triton('triton_red_fused_convolution_backward_3', '''
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.reduction(
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 4096},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_red_fused_convolution_backward_3(in_ptr0, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 32
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     rnumel = r0_numel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     rbase = r0_base
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = xindex
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         roffset = r0_offset
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         rindex = r0_index
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         r0_1 = r0_index
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4*ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qj/cqjfxcbod4ol3fdyt3if2loapolxvrnoocqc3pt6ruda2xonrw32.py
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Source node to ATen node mapping:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] # Graph fragment:
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%getitem_8, [0, 2, 3]), kwargs = {})
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_red_fused_convolution_backward_4 = async_compile.triton('triton_red_fused_convolution_backward_4', '''
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] import triton.language as tl
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton_heuristics.reduction(
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 1024},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     filename=__file__,
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] )
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] @triton.jit
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def triton_red_fused_convolution_backward_4(in_ptr0, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xnumel = 16
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     rnumel = r0_numel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     xmask = xindex < xnumel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     rbase = r0_base
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     x0 = xindex
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         roffset = r0_offset
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         rindex = r0_index
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         r0_1 = r0_index
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] ''', device_str='cuda')
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] async_compile.wait(globals())
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] del async_compile
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def call(args):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_3, primals_4, primals_1, primals_5, primals_6, convolution, convolution_1, getitem, getitem_1, full_default, getitem_3, getitem_4, where, permute_7, tangents_1 = args
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     args.clear()
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     s1 = primals_3
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     s2 = primals_4
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(primals_6, (16, 32, 2, 2), (128, 4, 2, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(convolution, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(convolution_1, (1, 32, 2*s1, 2*s2), (128*s1*s2, 4*s1*s2, 2*s2, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(getitem, (1, 32, s1 // 2, s2 // 2), (32*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(getitem_1, (1, 32, s1 // 2, s2 // 2), (32*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(full_default, (1, 128), (128, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(getitem_3, (1, 128), (128, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(getitem_4, (1, 512), (512, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(where, (1, 128), (128, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(permute_7, (512, 8192), (8192, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 1, 3), (3, 3, 1))
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3), (3, 1), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.clone, aten.zeros_like, aten.copy, aten.slice_backward, aten.add]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_add_clone_copy_slice_backward_zeros_like_0.run(tangents_1, buf0, 3, grid=grid(3), stream=stream0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del tangents_1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 128), (128, 1), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 128), (128, 1), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.neg, aten._thnn_fused_lstm_cell_backward_impl]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused__thnn_fused_lstm_cell_backward_impl_mul_neg_1.run(buf0, where, buf1, buf2, 128, grid=grid(128), stream=stream0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf0
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del where
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mul, aten.neg, aten._thnn_fused_lstm_cell_backward_impl]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf3 = torch.ops.aten._thnn_fused_lstm_cell_backward_impl.default(buf1, buf2, full_default, getitem_3, getitem_4, True)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del getitem_3
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del getitem_4
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf4 = buf3[0]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf6 = buf3[2]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf3
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf9 = empty_strided_cuda((1, 8192), (8192, 1), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mm]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         extern_kernels.mm(buf4, permute_7, out=buf9)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del permute_7
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         ps0 = s2 // 2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         ps1 = s1 // 2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf10 = empty_strided_cuda((1, 32, s1 // 2, s2 // 2), (32*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.int64)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.adaptive_max_pool2d]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2_xnumel = 32*(s1 // 2)*(s2 // 2)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2.run(getitem_1, buf10, ps0, ps1, s2, triton_poi_fused_adaptive_max_pool2d_2_xnumel, grid=grid(triton_poi_fused_adaptive_max_pool2d_2_xnumel), stream=stream0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del getitem_1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.adaptive_max_pool2d, aten.adaptive_max_pool2d_backward]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf11 = torch.ops.aten.adaptive_max_pool2d_backward.default(reinterpret_tensor(buf9, (1, 32, s1 // 2, s2 // 2), (32*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), 0), convolution_1, buf10)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf10
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf9
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del convolution_1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf12 = buf11
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf11
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf13 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_red_fused_convolution_backward_3_r0_numel = 4*s1*s2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_red_fused_convolution_backward_3.run(buf12, buf13, s1, s2, 32, triton_red_fused_convolution_backward_3_r0_numel, grid=grid(32), stream=stream0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf14 = torch.ops.aten.convolution_backward.default(buf12, convolution, primals_6, [32], [2, 2], [0, 0], [1, 1], True, [0, 0], 1, [True, True, False])
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf12
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del convolution
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_6
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf15 = buf14[0]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf16 = buf14[1]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf14
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf17 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_red_fused_convolution_backward_4_r0_numel = s1*s2
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         triton_red_fused_convolution_backward_4.run(buf15, buf17, s1, s2, 16, triton_red_fused_convolution_backward_4_r0_numel, grid=grid(16), stream=stream0)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf18 = torch.ops.aten.convolution_backward.default(buf15, primals_5, primals_1, [16], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False])
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf15
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_1
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del primals_5
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf19 = buf18[1]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf18
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf7 = empty_strided_cuda((512, 128), (128, 1), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mm]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (512, 1), (1, 512), 0), full_default, out=buf7)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del full_default
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         buf8 = empty_strided_cuda((512, 32*(s1 // 2)*(s2 // 2)), (32*(s1 // 2)*(s2 // 2), 1), torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.mm]
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (512, 1), (1, 512), 0), reinterpret_tensor(getitem, (1, 32*(s1 // 2)*(s2 // 2)), (32*(s1 // 2)*(s2 // 2), 1), 0), out=buf8)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del buf4
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]         del getitem
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     return (buf19, buf17, None, None, None, buf16, buf13, buf8, buf7, buf6, buf6, )
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_3 = 32
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_4 = 32
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_5 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     primals_6 = rand_strided((16, 32, 2, 2), (128, 4, 2, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     convolution = rand_strided((1, 16, 32, 32), (16384, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     convolution_1 = rand_strided((1, 32, 64, 64), (131072, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     getitem = rand_strided((1, 32, 16, 16), (8192, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     getitem_1 = rand_strided((1, 32, 16, 16), (8192, 256, 16, 1), device='cuda:0', dtype=torch.int8)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     full_default = rand_strided((1, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     getitem_3 = rand_strided((1, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     getitem_4 = rand_strided((1, 512), (512, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     where = rand_strided((1, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     permute_7 = rand_strided((512, 8192), (8192, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     tangents_1 = rand_strided((1, 1, 3), (3, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     fn = lambda: call([primals_3, primals_4, primals_1, primals_5, primals_6, convolution, convolution_1, getitem, getitem_1, full_default, getitem_3, getitem_4, where, permute_7, tangents_1])
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] if __name__ == "__main__":
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:30:03.393000 1612526 site-packages/torch/_inductor/graph.py:2014] [150/0_1] [__output_code] 
V0205 14:30:03.403000 1612526 site-packages/torch/_inductor/graph.py:2022] [150/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wg/cwgaqckogg2c5l6dqlvp5i5eznfjybd5v4qcuoc4ucseq4swudgy.py
I0205 14:30:03.542000 1612526 site-packages/torch/_inductor/graph.py:2056] [150/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wg/cwgaqckogg2c5l6dqlvp5i5eznfjybd5v4qcuoc4ucseq4swudgy.py

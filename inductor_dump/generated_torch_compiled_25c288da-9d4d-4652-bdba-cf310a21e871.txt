W0124 17:42:43.016000 1685906 site-packages/torch/utils/_sympy/interp.py:176] [460/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0124 17:42:43.019000 1685906 site-packages/torch/utils/_sympy/interp.py:176] [460/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0124 17:42:43.021000 1685906 site-packages/torch/utils/_sympy/interp.py:176] [460/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
W0124 17:42:43.370000 1685906 site-packages/torch/utils/_sympy/interp.py:176] [460/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] Output code: 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # AOT ID: ['112_inference']
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import torch
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import math
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import random
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import os
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import tempfile
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from math import inf, nan
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from cmath import nanj
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch import device, empty_strided
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import triton
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import triton.language as tl
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     grid,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     split_scan_grid,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     grid_combo_kernels,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     start_graph,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     end_graph,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     cooperative_reduction_grid,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] )
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] aten = torch.ops.aten
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] _quantized = torch.ops._quantized
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] async_compile = AsyncCompile()
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/go/cgoomakfpgeubhlhferl7keoiz4wcyzm3eozwbr2zh7qvkg7up6x.py
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.reflection_pad3d, aten.view, aten._native_batch_norm_legit]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   x => _unsafe_index, _unsafe_index_1, _unsafe_index_2
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   x_1 => var_mean, view
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # Graph fragment:
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %sub_5, None, None]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %sub_11, None]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_1, [None, None, None, None, %sub_17]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%_unsafe_index_2, [1, 10, %sub, %sub_6, %sub_12]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_reflection_pad3d_view_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_reflection_pad3d_view_0', '''
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import triton
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import triton.language as tl
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] @triton_heuristics.reduction(
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 65536},
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     filename=__file__,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_reflection_pad3d_view_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] )
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] @triton.jit
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_reflection_pad3d_view_0(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     xnumel = 10
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     rnumel = r0_numel
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     rbase = r0_base
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     x0 = xindex
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         roffset = r0_offset
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         rindex = r0_index
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         r0_1 = (r0_index % ks0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         r0_2 = ((r0_index // ks0) % ks1)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         r0_3 = r0_index // ks2
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (ks5*(tl.where((-1) + ks4 + ((-1)*tl_math.abs(1 + ((-1)*ks4) + tl_math.abs((-1) + r0_2))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks4) + tl_math.abs((-1) + r0_2))) + 2*ks4, (-1) + ks4 + ((-1)*tl_math.abs(1 + ((-1)*ks4) + tl_math.abs((-1) + r0_2))))) + ks4*ks5*(tl.where((-1) + ks3 + ((-1)*tl_math.abs(1 + ((-1)*ks3) + tl_math.abs((-1) + r0_3))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks3) + tl_math.abs((-1) + r0_3))) + 2*ks3, (-1) + ks3 + ((-1)*tl_math.abs(1 + ((-1)*ks3) + tl_math.abs((-1) + r0_3))))) + ks3*ks4*ks5*x0 + (tl.where((-1) + ks5 + ((-1)*tl_math.abs(1 + ((-1)*ks5) + tl_math.abs((-1) + r0_1))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks5) + tl_math.abs((-1) + r0_1))) + 2*ks5, (-1) + ks5 + ((-1)*tl_math.abs(1 + ((-1)*ks5) + tl_math.abs((-1) + r0_1)))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         )
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] ''', device_str='cuda')
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7f/c7fybqiebbgfjyovt3mqjeuvtd2h3pusflcmme3ptvxhcouctg24.py
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.reflection_pad3d, aten.view, aten._native_batch_norm_legit]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   x => _unsafe_index, _unsafe_index_1, _unsafe_index_2
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   x_1 => add_16, mul_22, rsqrt, sub_24, var_mean, view
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] # Graph fragment:
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %sub_5, None, None]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %sub_11, None]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_1, [None, None, None, None, %sub_17]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%_unsafe_index_2, [1, 10, %sub, %sub_6, %sub_12]), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %sub_24 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_16,), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_24, %rsqrt), kwargs = {})
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1', '''
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import triton
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] import triton.language as tl
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     size_hints={'x': 524288}, 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     filename=__file__,
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'ks7': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] )
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] @triton.jit
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] def triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, ks7, xnumel, XBLOCK : tl.constexpr):
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     x0 = (xindex % ks0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     x2 = ((xindex // ks2) % ks3)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     x3 = xindex // ks4
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     x4 = xindex
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (ks7*(tl.where((-1) + ks6 + ((-1)*tl_math.abs(1 + ((-1)*ks6) + tl_math.abs((-1) + x1))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks6) + tl_math.abs((-1) + x1))) + 2*ks6, (-1) + ks6 + ((-1)*tl_math.abs(1 + ((-1)*ks6) + tl_math.abs((-1) + x1))))) + ks6*ks7*(tl.where((-1) + ks5 + ((-1)*tl_math.abs(1 + ((-1)*ks5) + tl_math.abs((-1) + x2))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks5) + tl_math.abs((-1) + x2))) + 2*ks5, (-1) + ks5 + ((-1)*tl_math.abs(1 + ((-1)*ks5) + tl_math.abs((-1) + x2))))) + ks5*ks6*ks7*x3 + (tl.where((-1) + ks7 + ((-1)*tl_math.abs(1 + ((-1)*ks7) + tl_math.abs((-1) + x0))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks7) + tl_math.abs((-1) + x0))) + 2*ks7, (-1) + ks7 + ((-1)*tl_math.abs(1 + ((-1)*ks7) + tl_math.abs((-1) + x0)))))), xmask, eviction_policy='evict_last')
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3), xmask, eviction_policy='evict_last')
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x3), xmask, eviction_policy='evict_last')
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp4 = 8 + 4*ks5 + 4*ks6 + 4*ks7 + 2*ks5*ks6 + 2*ks5*ks7 + 2*ks6*ks7 + ks5*ks6*ks7
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp6 = tmp3 / tmp5
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp7 = 1e-05
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp9 = libdevice.rsqrt(tmp8)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tmp10 = tmp2 * tmp9
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp10, xmask)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] ''', device_str='cuda')
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] async_compile.wait(globals())
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] del async_compile
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] def call(args):
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     args.clear()
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     s1 = arg0_1
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     s2 = arg1_1
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     s3 = arg2_1
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     assert_size_stride(arg3_1, (1, 10, s1, s2, s3), (10*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         torch.cuda.set_device(0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         ps0 = 2 + s3
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         ps1 = 2 + s2
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         ps2 = 4 + 2*s2 + 2*s3 + s2*s3
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.reflection_pad3d, aten.view, aten._native_batch_norm_legit]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_reflection_pad3d_view_0_r0_numel = 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_reflection_pad3d_view_0.run(arg3_1, buf0, buf1, ps0, ps1, ps2, s1, s2, s3, 10, triton_red_fused__native_batch_norm_legit_reflection_pad3d_view_0_r0_numel, grid=grid(10), stream=stream0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         ps3 = 2 + s1
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         ps4 = 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 10, 2 + s1, 2 + s2, 2 + s3), (80 + 40*s1 + 40*s2 + 40*s3 + 20*s1*s2 + 20*s1*s3 + 20*s2*s3 + 10*s1*s2*s3, 8 + 4*s1 + 4*s2 + 4*s3 + 2*s1*s2 + 2*s1*s3 + 2*s2*s3 + s1*s2*s3, 4 + 2*s2 + 2*s3 + s2*s3, 2 + s3, 1), torch.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.reflection_pad3d, aten.view, aten._native_batch_norm_legit]
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1_xnumel = 80 + 40*s1 + 40*s2 + 40*s3 + 20*s1*s2 + 20*s1*s3 + 20*s2*s3 + 10*s1*s2*s3
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1.run(arg3_1, buf0, buf1, buf3, ps0, ps1, ps2, ps3, ps4, s1, s2, s3, triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1_xnumel, grid=grid(triton_poi_fused__native_batch_norm_legit_reflection_pad3d_view_1_xnumel), stream=stream0)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         del arg3_1
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         del buf0
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]         del buf1
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     return (buf3, )
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     arg0_1 = 32
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     arg1_1 = 32
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     arg2_1 = 32
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     arg3_1 = rand_strided((1, 10, 32, 32, 32), (327680, 32768, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] if __name__ == "__main__":
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:42:43.698000 1685906 site-packages/torch/_inductor/graph.py:2014] [460/0_1] [__output_code] 
V0124 17:42:43.700000 1685906 site-packages/torch/_inductor/graph.py:2022] [460/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pk/cpktldrd4i7y6hwzsfykw6333so6mvhnox2pn6w4ezz3zzow34aa.py
I0124 17:42:44.557000 1685906 site-packages/torch/_inductor/graph.py:2056] [460/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/pk/cpktldrd4i7y6hwzsfykw6333so6mvhnox2pn6w4ezz3zzow34aa.py
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] Output code: 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # AOT ID: ['113_inference']
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import torch
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import math
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import random
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import os
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import tempfile
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from math import inf, nan
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from cmath import nanj
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch import device, empty_strided
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import triton
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import triton.language as tl
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     grid,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     split_scan_grid,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     grid_combo_kernels,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     start_graph,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     end_graph,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     cooperative_reduction_grid,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] )
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] aten = torch.ops.aten
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] _quantized = torch.ops._quantized
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] async_compile = AsyncCompile()
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x7/cx7k3emihp6szugvpezz7imh6vkd44jw3sknxrt5bkcfkqnuc6bf.py
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # Topologically Sorted Source Nodes: [target], Original ATen: [aten.randn_like]
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] #   target => inductor_lookup_seed_default, inductor_random_default
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # Graph fragment:
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, %arg1_1, %arg2_1, %arg3_1], %inductor_lookup_seed_default, randn), kwargs = {})
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] triton_poi_fused_randn_like_0 = async_compile.triton('triton_poi_fused_randn_like_0', '''
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import triton
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import triton.language as tl
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     size_hints={'x': 524288}, 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     filename=__file__,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_randn_like_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] )
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] @triton.jit
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] def triton_poi_fused_randn_like_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     x0 = xindex
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     tmp1 = x0
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     tmp2 = tl.randn(tmp0, (tmp1).to(tl.uint32))
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] ''', device_str='cuda')
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5f/c5f5r6v4ersghfkhwgif37rgh44tq22fzkeqeuqrgmajegwtlwku.py
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # Topologically Sorted Source Nodes: [var], Original ATen: [aten.ones_like]
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] #   var => full_default
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] # Graph fragment:
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %arg0_1, %arg1_1, %arg2_1, %arg3_1], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] triton_poi_fused_ones_like_1 = async_compile.triton('triton_poi_fused_ones_like_1', '''
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import triton
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] import triton.language as tl
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     size_hints={'x': 524288}, 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     filename=__file__,
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_ones_like_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] )
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] @triton.jit
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] def triton_poi_fused_ones_like_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     x0 = xindex
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     tmp0 = 1.0
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] ''', device_str='cuda')
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] async_compile.wait(globals())
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] del async_compile
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] def call(args):
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     args.clear()
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     s0 = arg0_1
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     s1 = arg1_1
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     s2 = arg2_1
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     s3 = arg3_1
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     assert_size_stride(arg4_1, (1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         torch.cuda.set_device(0)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         buf1 = empty_strided_cuda((1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1), torch.float32)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         # Topologically Sorted Source Nodes: [target], Original ATen: [aten.randn_like]
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         triton_poi_fused_randn_like_0_xnumel = s0*s1*s2*s3
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         triton_poi_fused_randn_like_0.run(buf0, buf1, 0, triton_poi_fused_randn_like_0_xnumel, grid=grid(triton_poi_fused_randn_like_0_xnumel), stream=stream0)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         del buf0
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1), torch.float32)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         # Topologically Sorted Source Nodes: [var], Original ATen: [aten.ones_like]
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         triton_poi_fused_ones_like_1_xnumel = s0*s1*s2*s3
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]         triton_poi_fused_ones_like_1.run(buf2, triton_poi_fused_ones_like_1_xnumel, grid=grid(triton_poi_fused_ones_like_1_xnumel), stream=stream0)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     return (buf1, buf2, )
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     arg0_1 = 10
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     arg1_1 = 34
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     arg2_1 = 34
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     arg3_1 = 34
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     arg4_1 = rand_strided((1, 10, 34, 34, 34), (393040, 39304, 1156, 34, 1), device='cuda:0', dtype=torch.float32)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] if __name__ == "__main__":
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:42:45.046000 1685906 site-packages/torch/_inductor/graph.py:2014] [464/0_1] [__output_code] 
V0124 17:42:45.048000 1685906 site-packages/torch/_inductor/graph.py:2022] [464/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4b/c4bzokb5nkp6wequr54znjhs2rjemw65m7vez2gv7ie5nuobk7lb.py
I0124 17:42:45.409000 1685906 site-packages/torch/_inductor/graph.py:2056] [464/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4b/c4bzokb5nkp6wequr54znjhs2rjemw65m7vez2gv7ie5nuobk7lb.py
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] Output code: 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # AOT ID: ['114_inference']
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import torch
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import math
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import random
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import os
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import tempfile
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from math import inf, nan
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from cmath import nanj
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch import device, empty_strided
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import triton
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import triton.language as tl
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     grid,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     split_scan_grid,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     grid_combo_kernels,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     start_graph,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     end_graph,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     cooperative_reduction_grid,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] )
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] aten = torch.ops.aten
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] _quantized = torch.ops._quantized
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] async_compile = AsyncCompile()
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4x/c4x7w7bvguako5dsj2o6h7v37dpxfgbmprkr7kn3jv7shkllb4g7.py
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # Topologically Sorted Source Nodes: [poisson_loss], Original ATen: [aten.exp, aten.mul, aten.sub, aten.mean]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # Source node to ATen node mapping:
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   poisson_loss => exp, mean, mul, sub
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # Graph fragment:
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%arg1_1,), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%exp, %mul), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub,), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] triton_red_fused_exp_mean_mul_sub_0 = async_compile.triton('triton_red_fused_exp_mean_mul_sub_0', '''
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import triton
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import triton.language as tl
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] @triton_heuristics.reduction(
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     size_hints={'x': 64, 'r0_': 8192},
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     filename=__file__,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_exp_mean_mul_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] )
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] @triton.jit
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] def triton_red_fused_exp_mean_mul_sub_0(in_ptr0, in_ptr1, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xnumel = 48
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     r0_numel = 8189
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     rnumel = r0_numel
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xmask = xindex < xnumel
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     rbase = r0_base
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     x0 = xindex
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     _tmp11 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         r0_index = r0_offset + r0_base
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         r0_mask = r0_index < r0_numel
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         roffset = r0_offset
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         rindex = r0_index
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         r0_1 = r0_index
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp0 = r0_1 + 8189*x0
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp1 = tl.full([1, 1], 393040, tl.int32)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp2 = tmp0 < tmp1
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (((r0_1 + 8189*x0) % 393040)), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp4 = tl_math.exp(tmp3)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp5 = tl.load(in_ptr1 + (((r0_1 + 8189*x0) % 393040)), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp6 = tmp5 * tmp3
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp7 = tmp4 - tmp6
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp8 = tl.full(tmp7.shape, 0, tmp7.dtype)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp9 = tl.where(tmp2, tmp7, tmp8)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp10 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         tmp12 = _tmp11 + tmp10
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         _tmp11 = tl.where(r0_mask & xmask, tmp12, _tmp11)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tmp11 = tl.sum(_tmp11, 1)[:, None]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] ''', device_str='cuda')
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wg/cwg6kocvufqmw2gjiwul2ut3wxsch5yzfid3g4l4cyvifbb7akbf.py
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # Topologically Sorted Source Nodes: [poisson_loss], Original ATen: [aten.exp, aten.mul, aten.sub, aten.mean]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # Source node to ATen node mapping:
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   poisson_loss => exp, mean, mul, sub
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] # Graph fragment:
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%arg1_1,), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %arg1_1), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%exp, %mul), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub,), kwargs = {})
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] triton_per_fused_exp_mean_mul_sub_1 = async_compile.triton('triton_per_fused_exp_mean_mul_sub_1', '''
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import triton
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] import triton.language as tl
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] @triton_heuristics.persistent_reduction(
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     size_hints={'x': 1, 'r0_': 64},
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     filename=__file__,
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_exp_mean_mul_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] )
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] @triton.jit
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] def triton_per_fused_exp_mean_mul_sub_1(in_out_ptr0, in_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xnumel = 1
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     r0_numel = 48
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     R0_BLOCK: tl.constexpr = 64
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     rnumel = r0_numel
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     r0_offset = 0
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     r0_mask = r0_index < r0_numel
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     roffset = r0_offset
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     rindex = r0_index
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     r0_0 = r0_index
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tmp3 = tl.where(r0_mask, tmp1, 0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tmp5 = 393040.0
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tmp6 = tmp4 / tmp5
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tl.debug_barrier()
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp6, None)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] ''', device_str='cuda')
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] async_compile.wait(globals())
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] del async_compile
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] def call(args):
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     arg0_1, arg1_1 = args
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     args.clear()
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     assert_size_stride(arg0_1, (1, 10, 34, 34, 34), (393040, 39304, 1156, 34, 1))
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     assert_size_stride(arg1_1, (1, 10, 34, 34, 34), (393040, 39304, 1156, 34, 1))
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         torch.cuda.set_device(0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         buf0 = empty_strided_cuda((48, ), (1, ), torch.float32)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         # Topologically Sorted Source Nodes: [poisson_loss], Original ATen: [aten.exp, aten.mul, aten.sub, aten.mean]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         triton_red_fused_exp_mean_mul_sub_0.run(arg1_1, arg0_1, buf0, 48, 8189, grid=grid(48), stream=stream0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         del arg0_1
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         del arg1_1
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         # Topologically Sorted Source Nodes: [poisson_loss], Original ATen: [aten.exp, aten.mul, aten.sub, aten.mean]
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         triton_per_fused_exp_mean_mul_sub_1.run(buf2, buf0, 1, 48, grid=grid(1), stream=stream0)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]         del buf0
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     return (buf2, )
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     arg0_1 = rand_strided((1, 10, 34, 34, 34), (393040, 39304, 1156, 34, 1), device='cuda:0', dtype=torch.float32)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     arg1_1 = rand_strided((1, 10, 34, 34, 34), (393040, 39304, 1156, 34, 1), device='cuda:0', dtype=torch.float32)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] if __name__ == "__main__":
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:42:45.597000 1685906 site-packages/torch/_inductor/graph.py:2014] [465/0] [__output_code] 
V0124 17:42:45.600000 1685906 site-packages/torch/_inductor/graph.py:2022] [465/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hk/chkq5nnwkvac5fa24wrf2heztqzln4lbmnhr5wxqg2ptzuli7ral.py
I0124 17:42:45.694000 1685906 site-packages/torch/_inductor/graph.py:2056] [465/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hk/chkq5nnwkvac5fa24wrf2heztqzln4lbmnhr5wxqg2ptzuli7ral.py

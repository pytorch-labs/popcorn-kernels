V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] Output code: 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # AOT ID: ['22_inference']
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import torch
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import math
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import random
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import os
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import tempfile
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from math import inf, nan
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from cmath import nanj
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch import device, empty_strided
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton.language as tl
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     grid,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     split_scan_grid,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     grid_combo_kernels,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     start_graph,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     end_graph,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     cooperative_reduction_grid,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] aten = torch.ops.aten
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] _quantized = torch.ops._quantized
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] async_compile = AsyncCompile()
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ck/cck24yjfffawakt32jggsrghhvxkdbaic4zh6w3a6n7ihd6szf4x.py
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._adaptive_avg_pool2d, aten._native_batch_norm_legit]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x => _adaptive_avg_pool2d
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_1 => var_mean
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Graph fragment:
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_adaptive_avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%arg2_1, [16, 16]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%_adaptive_avg_pool2d, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit_0', '''
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton.language as tl
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] @triton_heuristics.reduction(
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     size_hints={'x': 4, 'r0_': 256},
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     filename=__file__,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] @triton.jit
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] def triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xnumel = 3
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     r0_numel = 256
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     rnumel = r0_numel
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xmask = xindex < xnumel
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     rbase = r0_base
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     x0 = xindex
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp34_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp34_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp34_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         roffset = r0_offset
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         rindex = r0_index
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_1 = (r0_index % 16)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_2 = r0_index // 16
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_3 = r0_index
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp1 = tl.load(in_ptr0 + (1 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (2 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp5 = tl.load(in_ptr0 + (3 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp7 = tl.load(in_ptr0 + (64 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp9 = tl.load(in_ptr0 + (65 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp11 = tl.load(in_ptr0 + (66 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp13 = tl.load(in_ptr0 + (67 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp15 = tl.load(in_ptr0 + (128 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp17 = tl.load(in_ptr0 + (129 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp19 = tl.load(in_ptr0 + (130 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp21 = tl.load(in_ptr0 + (131 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp23 = tl.load(in_ptr0 + (192 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp25 = tl.load(in_ptr0 + (193 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp27 = tl.load(in_ptr0 + (194 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp29 = tl.load(in_ptr0 + (195 + 4*r0_1 + 256*r0_2 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp2 = tmp1 + tmp0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp4 = tmp3 + tmp2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp6 = tmp5 + tmp4
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp8 = tmp7 + tmp6
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp10 = tmp9 + tmp8
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp12 = tmp11 + tmp10
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp14 = tmp13 + tmp12
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp16 = tmp15 + tmp14
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp18 = tmp17 + tmp16
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp20 = tmp19 + tmp18
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp22 = tmp21 + tmp20
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp24 = tmp23 + tmp22
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp26 = tmp25 + tmp24
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp28 = tmp27 + tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp30 = tmp29 + tmp28
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp31 = 0.0625
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp32 = tmp30 * tmp31
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp33 = tl.broadcast_to(tmp32, [XBLOCK, R0_BLOCK])
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp34_mean_next, tmp34_m2_next, tmp34_weight_next = triton_helpers.welford_reduce(
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]             tmp33, tmp34_mean, tmp34_m2, tmp34_weight, roffset == 0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp34_mean = tl.where(r0_mask & xmask, tmp34_mean_next, tmp34_mean)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp34_m2 = tl.where(r0_mask & xmask, tmp34_m2_next, tmp34_m2)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp34_weight = tl.where(r0_mask & xmask, tmp34_weight_next, tmp34_weight)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tl.store(out_ptr0 + (r0_3 + 256*x0), tmp32, r0_mask & xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp37, tmp38, tmp39 = triton_helpers.welford(tmp34_mean, tmp34_m2, tmp34_weight, 1)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp34 = tmp37[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp35 = tmp38[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp36 = tmp39[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp34, xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp35, xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] ''', device_str='cuda')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/od/codjeiartn347kg4hoxorrzwxffsucu37dfyamjomrajch7kcsh2.py
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2, x_3, x_4, x_5], Original ATen: [aten._native_batch_norm_legit, aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add, aten._adaptive_avg_pool2d]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_1 => add, mul, rsqrt, sub, var_mean
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_2 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_3, add_4, add_5, clamp_max_2, clamp_max_3, clamp_min_1, clamp_min_2, clamp_min_3, convert_element_type_1, convert_element_type_2, convert_element_type_3, iota_1, mul_2, mul_3, mul_4, mul_5, sub_1, sub_2, sub_3, sub_4, sub_5
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_3 => add_6, mul_6, rsqrt_1, sub_6, var_mean_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_4 => _adaptive_avg_pool2d_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_5 => var_mean_2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Graph fragment:
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%_adaptive_avg_pool2d, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_adaptive_avg_pool2d, %getitem_1), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (32,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 0.4838709677419355), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_2, 0.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_1, torch.int64), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %convert_element_type_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_1, 0.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %clamp_max_2), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_4), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %clamp_max_2), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %convert_element_type_1), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_4, 0.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %clamp_max_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_3, %mul_5), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%add_5, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %getitem_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %rsqrt_1), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_adaptive_avg_pool2d_1 : [num_users=2] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%mul_6, [32, 32]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %var_mean_2 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%_adaptive_avg_pool2d_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_1 = async_compile.triton('triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_1', '''
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton.language as tl
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] @triton_heuristics.reduction(
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     size_hints={'x': 4, 'r0_': 1024},
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     filename=__file__,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_1', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 4, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] @triton.jit
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] def triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_1(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, out_ptr2, out_ptr3, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xnumel = 3
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     r0_numel = 1024
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     rnumel = r0_numel
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xmask = xindex < xnumel
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     rbase = r0_base
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     x0 = xindex
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp56_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp56_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp56_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         roffset = r0_offset
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         rindex = r0_index
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_2 = r0_index // 32
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_1 = (r0_index % 32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_3 = r0_index
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp0 = r0_2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp1 = tmp0.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp2 = 0.4838709677419355
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp3 = tmp1 * tmp2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp4 = 0.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp6 = tmp5.to(tl.int32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp7 = tl.full([1, 1], 1, tl.int64)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp8 = tmp6 + tmp7
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp9 = tl.full([1, 1], 15, tl.int64)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp11 = r0_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp12 = tmp11.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp13 = tmp12 * tmp2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp14 = triton_helpers.maximum(tmp13, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp15 = tmp14.to(tl.int32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp16 = tmp15 + tmp7
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp17 = triton_helpers.minimum(tmp16, tmp9)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp18 = tl.load(in_ptr0 + (tmp17 + 16*tmp10 + 256*x0), r0_mask & xmask, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp20 = tmp18 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp22 = 256.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp23 = tmp21 / tmp22
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp24 = 1e-05
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp25 = tmp23 + tmp24
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp26 = libdevice.rsqrt(tmp25)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp27 = tmp20 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp28 = tl.load(in_ptr0 + (tmp15 + 16*tmp10 + 256*x0), r0_mask & xmask, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp29 = tmp28 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp30 = tmp29 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp31 = tmp27 - tmp30
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp32 = tmp15.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp33 = tmp14 - tmp32
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp34 = triton_helpers.maximum(tmp33, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp35 = 1.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp36 = triton_helpers.minimum(tmp34, tmp35)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp37 = tmp31 * tmp36
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp38 = tmp30 + tmp37
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp39 = tl.load(in_ptr0 + (tmp17 + 16*tmp6 + 256*x0), r0_mask & xmask, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp40 = tmp39 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp41 = tmp40 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp42 = tl.load(in_ptr0 + (tmp15 + 16*tmp6 + 256*x0), r0_mask & xmask, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp43 = tmp42 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp44 = tmp43 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp45 = tmp41 - tmp44
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp46 = tmp45 * tmp36
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp47 = tmp44 + tmp46
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp48 = tmp38 - tmp47
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp49 = tmp6.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp50 = tmp5 - tmp49
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp51 = triton_helpers.maximum(tmp50, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp52 = triton_helpers.minimum(tmp51, tmp35)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp53 = tmp48 * tmp52
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp54 = tmp47 + tmp53
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp55 = tl.broadcast_to(tmp54, [XBLOCK, R0_BLOCK])
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp56_mean_next, tmp56_m2_next, tmp56_weight_next = triton_helpers.welford_reduce(
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]             tmp55, tmp56_mean, tmp56_m2, tmp56_weight, roffset == 0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp56_mean = tl.where(r0_mask & xmask, tmp56_mean_next, tmp56_mean)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp56_m2 = tl.where(r0_mask & xmask, tmp56_m2_next, tmp56_m2)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp56_weight = tl.where(r0_mask & xmask, tmp56_weight_next, tmp56_weight)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tl.store(in_out_ptr0 + (r0_3 + 1024*x0), tmp38, r0_mask & xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tl.store(in_out_ptr1 + (r0_3 + 1024*x0), tmp47, r0_mask & xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp59, tmp60, tmp61 = triton_helpers.welford(tmp56_mean, tmp56_m2, tmp56_weight, 1)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp56 = tmp59[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp57 = tmp60[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp58 = tmp61[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp87_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp87_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp87_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         roffset = r0_offset
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         rindex = r0_index
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_3 = r0_index
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         r0_2 = r0_index // 32
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp62 = tl.load(in_out_ptr1 + (r0_3 + 1024*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp63 = tl.load(in_out_ptr0 + (r0_3 + 1024*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp64 = tmp63 - tmp62
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp65 = r0_2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp66 = tmp65.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp67 = 0.4838709677419355
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp68 = tmp66 * tmp67
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp69 = 0.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp70 = triton_helpers.maximum(tmp68, tmp69)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp71 = tmp70.to(tl.int32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp72 = tmp71.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp73 = tmp70 - tmp72
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp74 = triton_helpers.maximum(tmp73, tmp69)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp75 = 1.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp76 = triton_helpers.minimum(tmp74, tmp75)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp77 = tmp64 * tmp76
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp78 = tmp62 + tmp77
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp79 = tmp78 - tmp56
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp80 = 1024.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp81 = tmp57 / tmp80
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp82 = 1e-05
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp83 = tmp81 + tmp82
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp84 = libdevice.rsqrt(tmp83)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp85 = tmp79 * tmp84
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp86 = tl.broadcast_to(tmp85, [XBLOCK, R0_BLOCK])
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp87_mean_next, tmp87_m2_next, tmp87_weight_next = triton_helpers.welford_reduce(
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]             tmp86, tmp87_mean, tmp87_m2, tmp87_weight, roffset == 0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp87_mean = tl.where(r0_mask & xmask, tmp87_mean_next, tmp87_mean)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp87_m2 = tl.where(r0_mask & xmask, tmp87_m2_next, tmp87_m2)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tmp87_weight = tl.where(r0_mask & xmask, tmp87_weight_next, tmp87_weight)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         tl.store(in_out_ptr1 + (r0_3 + 1024*x0), tmp85, r0_mask & xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp90, tmp91, tmp92 = triton_helpers.welford(tmp87_mean, tmp87_m2, tmp87_weight, 1)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp87 = tmp90[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp88 = tmp91[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp89 = tmp92[:, None]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp87, xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp88, xmask)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] ''', device_str='cuda')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sl/cslpk47gz3zua5jkcx7uff7a7mm3d2l4rgac2ksfr6l5zmletwgm.py
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_3, x_4, x_5, x_6], Original ATen: [aten._to_copy, aten.sub, aten.clamp, aten.mul, aten.add, aten._native_batch_norm_legit, aten._adaptive_avg_pool2d, aten.arange, aten._unsafe_index]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Source node to ATen node mapping:
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_2 => add_5, clamp_max_3, clamp_min_3, convert_element_type_1, mul_5, sub_4, sub_5
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_3 => add_6, mul_6, rsqrt_1, sub_6, var_mean_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_4 => _adaptive_avg_pool2d_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_5 => add_7, mul_7, rsqrt_2, sub_7, var_mean_2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   x_6 => _unsafe_index_4, _unsafe_index_5, _unsafe_index_6, _unsafe_index_7, add_10, add_11, add_12, clamp_max_6, clamp_max_7, clamp_min_5, clamp_min_6, clamp_min_7, convert_element_type_5, convert_element_type_6, convert_element_type_7, iota_3, mul_10, mul_11, mul_12, mul_9, sub_10, sub_11, sub_12, sub_8, sub_9
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] # Graph fragment:
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %add_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %convert_element_type_1), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_4, 0.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %clamp_max_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_3, %mul_5), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%add_5, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_5, %getitem_3), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %rsqrt_1), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_adaptive_avg_pool2d_1 : [num_users=2] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%mul_6, [32, 32]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %var_mean_2 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%_adaptive_avg_pool2d_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_adaptive_avg_pool2d_1, %getitem_5), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_4, 1e-05), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %rsqrt_2 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_7,), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_7 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %rsqrt_2), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %convert_element_type_5 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_8, torch.int64), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %iota_3 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (64,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %convert_element_type_6 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_3, torch.float32), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_6, 0.49206349206349204), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_min_5 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_9, 0.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %convert_element_type_7 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_5, torch.int64), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index_7 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_7, [None, None, %clamp_max_4, %clamp_max_5]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index_6 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_7, [None, None, %clamp_max_4, %convert_element_type_7]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_7, %_unsafe_index_6), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_5, %convert_element_type_7), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_8, 0.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_max_6 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %clamp_max_6), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_6, %mul_11), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_7, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%mul_7, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %clamp_max_6), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_10 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_10), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_11, %add_10), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_8, %convert_element_type_5), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_min_7 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_11, 0.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %clamp_max_7 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_7, 1.0), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %clamp_max_7), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] #   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_10, %mul_12), kwargs = {})
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] triton_poi_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_2 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_2', '''
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] import triton.language as tl
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] @triton_heuristics.pointwise(
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     size_hints={'x': 16384}, 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     filename=__file__,
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     triton_meta={'signature': {'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_2', 'mutated_arg_names': ['in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     min_elem_per_thread=0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] @triton.jit
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] def triton_poi_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_2(in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xnumel = 12288
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     x1 = ((xindex // 64) % 64)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     x0 = (xindex % 64)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     x2 = xindex // 4096
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     x4 = xindex
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (x2), None, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp21 = tl.load(in_ptr2 + (x2), None, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp0 = x1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp2 = 0.49206349206349204
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp4 = 0.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp9 = tl.full([1], 31, tl.int64)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp11 = x0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp13 = tmp12 * tmp2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp15 = tmp14.to(tl.int32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp16 = tmp15 + tmp7
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp17 = triton_helpers.minimum(tmp16, tmp9)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (tmp17 + 32*tmp10 + 1024*x2), None, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp20 = tmp18 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp22 = 1024.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp23 = tmp21 / tmp22
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp24 = 1e-05
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp26 = libdevice.rsqrt(tmp25)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp27 = tmp20 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (tmp15 + 32*tmp10 + 1024*x2), None, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp29 = tmp28 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp30 = tmp29 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp31 = tmp27 - tmp30
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp32 = tmp15.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp33 = tmp14 - tmp32
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp34 = triton_helpers.maximum(tmp33, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp35 = 1.0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp36 = triton_helpers.minimum(tmp34, tmp35)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp37 = tmp31 * tmp36
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp38 = tmp30 + tmp37
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp39 = tl.load(in_ptr0 + (tmp17 + 32*tmp6 + 1024*x2), None, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp40 = tmp39 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp41 = tmp40 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp42 = tl.load(in_ptr0 + (tmp15 + 32*tmp6 + 1024*x2), None, eviction_policy='evict_last')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp43 = tmp42 - tmp19
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp44 = tmp43 * tmp26
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp45 = tmp41 - tmp44
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp46 = tmp45 * tmp36
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp47 = tmp44 + tmp46
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp48 = tmp38 - tmp47
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp49 = tmp6.to(tl.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp50 = tmp5 - tmp49
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp51 = triton_helpers.maximum(tmp50, tmp4)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp52 = triton_helpers.minimum(tmp51, tmp35)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp53 = tmp48 * tmp52
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tmp54 = tmp47 + tmp53
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     tl.store(in_out_ptr1 + (x4), tmp54, None)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] ''', device_str='cuda')
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] async_compile.wait(globals())
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] del async_compile
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] def call(args):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     args.clear()
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     s1 = arg0_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     s2 = arg1_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     assert_size_stride(arg2_1, (1, 3, 64, 64), (12288, 4096, 64, 1))
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         torch.cuda.set_device(0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf0 = empty_strided_cuda((1, 3, 16, 16), (768, 256, 16, 1), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf1 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf2 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._adaptive_avg_pool2d, aten._native_batch_norm_legit]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit_0.run(arg2_1, buf0, buf1, buf2, 3, 256, grid=grid(3), stream=stream0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del arg2_1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf4 = empty_strided_cuda((1, 3, 32, 32), (3072, 1024, 32, 1), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf7 = empty_strided_cuda((1, 3, 32, 32), (3072, 1024, 32, 1), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf8 = buf7; del buf7  # reuse
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf12 = buf8; del buf8  # reuse
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf13 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf14 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 3, 3), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2, x_3, x_4, x_5], Original ATen: [aten._native_batch_norm_legit, aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add, aten._adaptive_avg_pool2d]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         triton_red_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_1.run(buf6, buf12, buf0, buf1, buf2, buf13, buf14, 3, 1024, grid=grid(3), stream=stream0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del buf0
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del buf1
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del buf2
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del buf6
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf19 = empty_strided_cuda((1, 3, 64, 64), (12288, 4096, 64, 1), torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf20 = buf19; del buf19  # reuse
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         buf21 = buf20; del buf20  # reuse
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_3, x_4, x_5, x_6], Original ATen: [aten._to_copy, aten.sub, aten.clamp, aten.mul, aten.add, aten._native_batch_norm_legit, aten._adaptive_avg_pool2d, aten.arange, aten._unsafe_index]
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         triton_poi_fused__adaptive_avg_pool2d__native_batch_norm_legit__to_copy__unsafe_index_add_arange_clamp_mul_sub_2.run(buf21, buf12, buf13, buf14, 12288, grid=grid(12288), stream=stream0)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del buf12
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del buf13
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]         del buf14
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     return (buf21, )
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     arg0_1 = 64
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     arg1_1 = 64
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     arg2_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] if __name__ == "__main__":
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:28:53.436000 1612526 site-packages/torch/_inductor/graph.py:2014] [103/0] [__output_code] 
V0205 14:28:53.449000 1612526 site-packages/torch/_inductor/graph.py:2022] [103/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bm/cbmvjawgdrnvvfas6n2e3pnogx7gguerntxdyfqqmgvmcfxvvxs4.py
I0205 14:28:54.593000 1612526 site-packages/torch/_inductor/graph.py:2056] [103/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bm/cbmvjawgdrnvvfas6n2e3pnogx7gguerntxdyfqqmgvmcfxvvxs4.py

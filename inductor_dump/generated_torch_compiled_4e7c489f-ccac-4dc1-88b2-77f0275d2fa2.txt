V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] Output code: 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # AOT ID: ['92_inference']
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import torch
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import math
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import random
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import os
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import tempfile
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from math import inf, nan
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from cmath import nanj
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import triton
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import triton.language as tl
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     grid,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     split_scan_grid,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     grid_combo_kernels,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     start_graph,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     end_graph,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] )
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ur/curfjokdkohdpwskpg4dagtw7quy56vv5tpfgarcv3jfjuvqxxxb.py
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] #   x => inductor_lookup_seed_default, inductor_random_default
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # Graph fragment:
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 3, 3], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] triton_poi_fused_rand_0 = async_compile.triton('triton_poi_fused_rand_0', '''
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import triton
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import triton.language as tl
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     size_hints={'x': 16}, 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     filename=__file__,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] )
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] @triton.jit
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] def triton_poi_fused_rand_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xnumel = 9
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     x0 = xindex
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp1 = x0
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/us/cusokx4ukl4zoiut4t5asrwrgz3pmbuyjiwpbvrsokpaczyvzxto.py
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.adaptive_max_pool2d]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] #   x_2 => adaptive_max_pool2d
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] # Graph fragment:
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] #   %adaptive_max_pool2d : [num_users=1] = call_function[target=torch.ops.aten.adaptive_max_pool2d.default](args = (%unsqueeze, [1, 10]), kwargs = {})
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] triton_poi_fused_adaptive_max_pool2d_1 = async_compile.triton('triton_poi_fused_adaptive_max_pool2d_1', '''
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import triton
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] import triton.language as tl
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     size_hints={'x': 32}, 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     filename=__file__,
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_adaptive_max_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] )
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] @triton.jit
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] def triton_poi_fused_adaptive_max_pool2d_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xnumel = 30
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     x0 = (xindex % 10)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     x1 = xindex // 10
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     x2 = xindex
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp3 = (32*x0) // 5
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp4 = (73 + 64*x0) // 10
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp6 = tmp2 & tmp5
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (64*x1 + ((32*x0) // 5)), tmp6 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp8 = 1 + ((32*x0) // 5)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp9 = tmp8 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp10 = tmp2 & tmp9
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 64*x1 + ((32*x0) // 5)), tmp10 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp12 = triton_helpers.maximum(tmp11, tmp7)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp13 = 2 + ((32*x0) // 5)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp14 = tmp13 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp15 = tmp2 & tmp14
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp16 = tl.load(in_ptr0 + (2 + 64*x1 + ((32*x0) // 5)), tmp15 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp12)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp18 = 3 + ((32*x0) // 5)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp19 = tmp18 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp20 = tmp2 & tmp19
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp21 = tl.load(in_ptr0 + (3 + 64*x1 + ((32*x0) // 5)), tmp20 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp22 = triton_helpers.maximum(tmp21, tmp17)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp23 = 4 + ((32*x0) // 5)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp24 = tmp23 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp25 = tmp2 & tmp24
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp26 = tl.load(in_ptr0 + (4 + 64*x1 + ((32*x0) // 5)), tmp25 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp27 = triton_helpers.maximum(tmp26, tmp22)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp28 = 5 + ((32*x0) // 5)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp29 = tmp28 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp30 = tmp2 & tmp29
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp31 = tl.load(in_ptr0 + (5 + 64*x1 + ((32*x0) // 5)), tmp30 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp32 = triton_helpers.maximum(tmp31, tmp27)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp33 = 6 + ((32*x0) // 5)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp34 = tmp33 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp35 = tmp2 & tmp34
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp36 = tl.load(in_ptr0 + (6 + 64*x1 + ((32*x0) // 5)), tmp35 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp37 = triton_helpers.maximum(tmp36, tmp32)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp38 = 7 + ((32*x0) // 5)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp39 = tmp38 < tmp4
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp40 = tmp2 & tmp39
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp41 = tl.load(in_ptr0 + (7 + 64*x1 + ((32*x0) // 5)), tmp40 & xmask, eviction_policy='evict_last', other=float("-inf"))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tmp42 = triton_helpers.maximum(tmp41, tmp37)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp42, xmask)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] del async_compile
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] def call(args):
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     arg0_1, = args
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     args.clear()
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     assert_size_stride(arg0_1, (1, 3, 8, 8, 8), (1536, 512, 64, 8, 1))
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 3, 3), (9, 3, 1), torch.float32)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         triton_poi_fused_rand_0.run(buf0, buf1, 0, 9, grid=grid(9), stream=stream0)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         del buf0
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.fractional_max_pool3d]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         buf2 = torch.ops.aten.fractional_max_pool3d.default(arg0_1, [2, 2, 2], [4, 4, 4], buf1)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         del arg0_1
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         del buf1
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         buf3 = buf2[0]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         del buf2
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 3, 1, 10), (30, 10, 10, 1), torch.float32)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.adaptive_max_pool2d]
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         triton_poi_fused_adaptive_max_pool2d_1.run(buf3, buf5, 30, grid=grid(30), stream=stream0)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]         del buf3
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     return (reinterpret_tensor(buf5, (1, 3, 10, 1), (30, 10, 1, 1), 0), )
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     arg0_1 = rand_strided((1, 3, 8, 8, 8), (1536, 512, 64, 8, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:58.670000 703210 site-packages/torch/_inductor/graph.py:2014] [392/0_1] [__output_code] 
V0127 11:35:58.673000 703210 site-packages/torch/_inductor/graph.py:2022] [392/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6m/c6mnwfxbd7dhoj7fa5ts24u2u35njgdfzvj2bc2imidplwjgmovu.py
I0127 11:35:58.785000 703210 site-packages/torch/_inductor/graph.py:2056] [392/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6m/c6mnwfxbd7dhoj7fa5ts24u2u35njgdfzvj2bc2imidplwjgmovu.py
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] Output code: 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] # AOT ID: ['93_inference']
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] import torch
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] import math
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] import random
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] import os
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] import tempfile
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from math import inf, nan
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from cmath import nanj
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] del async_compile
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] def call(args):
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     args.clear()
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     s2 = arg0_1
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     s3 = arg1_1
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     assert_size_stride(arg2_1, (1, s2, s3, 1), (s2*s3, s3, 1, 1))
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     return (reinterpret_tensor(arg2_1, (1, s3, s2), (s2*s3, 1, s3), 0), )
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     arg0_1 = 3
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     arg1_1 = 10
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     arg2_1 = rand_strided((1, 3, 10, 1), (30, 10, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:58.861000 703210 site-packages/torch/_inductor/graph.py:2014] [393/0_1] [__output_code] 
V0127 11:35:58.862000 703210 site-packages/torch/_inductor/graph.py:2022] [393/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/si/csinzyxfc6ny7kdgvaoft5mjqirroyjjhjzbvkm2d45bzplytrwp.py
I0127 11:35:58.863000 703210 site-packages/torch/_inductor/graph.py:2056] [393/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/si/csinzyxfc6ny7kdgvaoft5mjqirroyjjhjzbvkm2d45bzplytrwp.py
W0127 11:35:58.864000 703210 site-packages/torch/_functorch/_aot_autograd/autograd_cache.py:887] [393/0_1] Bypassing autograd cache due to: Cannot cache a graph with functional tensor

W0124 17:40:02.383000 1685906 site-packages/torch/utils/_sympy/interp.py:176] [223/0_1] failed while executing pow_by_natural([VR[3, int_oo], VR[-1, -1]])
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] Output code: 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # AOT ID: ['52_inference']
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import torch
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import math
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import random
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import os
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import tempfile
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from math import inf, nan
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from cmath import nanj
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch import device, empty_strided
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import triton
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import triton.language as tl
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     grid,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     split_scan_grid,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     grid_combo_kernels,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     start_graph,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     end_graph,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     cooperative_reduction_grid,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] )
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] aten = torch.ops.aten
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] _quantized = torch.ops._quantized
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] async_compile = AsyncCompile()
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rf/crfhga3zdzzxmt5hrfj3ypjjvaavbhka4co2zwk2sgttfe64fcpd.py
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._to_copy, aten.arange, aten.clamp, aten.view, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   x => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_100, add_68, add_81, clamp_max_2, clamp_max_3, clamp_min_1, clamp_min_2, clamp_min_3, convert_element_type_1, convert_element_type_2, convert_element_type_3, iota_1, mul_42, mul_55, mul_70, sub_38, sub_41, sub_51, sub_61, sub_64, view_1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # Graph fragment:
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%mul_1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %scalar_tensor_default_5 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg2_1,), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %convert_element_type_default_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%scalar_tensor_default_5, torch.float64), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_3, %convert_element_type_default_3), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %full_default_4 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %full_default_5 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_5, %scalar_tensor_default_5), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %convert_element_type_default_4 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_2, torch.float64), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %add_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_4, %convert_element_type_default_4), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %true_divide_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor_2, %add_tensor_3), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %convert_element_type_default_5 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor_1, torch.float32), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_5), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_3, 0.0), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %view_1 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%mul_1]), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_1, torch.int64), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %sub_51 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %sub_38 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %convert_element_type_3), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_38, 0.0), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_51, %clamp_max_2), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %add_81 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_55), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %sub_41 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %mul_42 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_41, %clamp_max_2), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %add_68 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_42), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %sub_64 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_81, %add_68), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %sub_61 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_61, 0.0), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %mul_70 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_64, %clamp_max_3), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %add_100 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_68, %mul_70), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0', '''
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import triton
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import triton.language as tl
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     size_hints={'x': 16384}, 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     filename=__file__,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0', 'mutated_arg_names': ['in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] )
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] @triton.jit
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0(in_out_ptr1, in_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x1 = ((xindex // ks1) % ks2)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x0 = (xindex % ks1)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x2 = xindex // ks4
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x5 = xindex
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp0 = tl.full([1], -1.0, tl.float64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp1 = ks0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp2 = tmp1.to(tl.float64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp3 = tmp0 + tmp2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp4 = 2.0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp5 = tmp1.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp6 = tmp4 * tmp5
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp7 = tmp6.to(tl.float64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp8 = tmp0 + tmp7
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp9 = tmp3 / tmp8
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp11 = x1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp13 = tmp12 * tmp10
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp14 = 0.0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp15 = triton_helpers.maximum(tmp13, tmp14)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp16 = tmp15.to(tl.int64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp17 = ks3
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp18 = tmp17.to(tl.float64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp19 = tmp0 + tmp18
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp20 = tmp17.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp21 = tmp4 * tmp20
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp22 = tmp21.to(tl.float64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp23 = tmp0 + tmp22
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp24 = tmp19 / tmp23
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp26 = x0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp27 = tmp26.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp28 = tmp27 * tmp25
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp29 = triton_helpers.maximum(tmp28, tmp14)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp30 = tmp29.to(tl.int64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp31 = tl.load(in_ptr0 + (tmp30 + ks3*tmp16 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp32 = tl.full([1], 1, tl.int64)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp33 = tmp16 + tmp32
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp34 = (-1) + ks0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp35 = triton_helpers.minimum(tmp33, tmp34)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp36 = tl.load(in_ptr0 + (tmp30 + ks3*tmp35 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp37 = tmp30 + tmp32
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp38 = (-1) + ks3
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp39 = triton_helpers.minimum(tmp37, tmp38)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp40 = tl.load(in_ptr0 + (tmp39 + ks3*tmp35 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp41 = tmp40 - tmp36
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp42 = tl.load(in_ptr0 + (tmp39 + ks3*tmp16 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp43 = tmp42 - tmp31
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp44 = tmp30.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp45 = tmp29 - tmp44
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp14)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp47 = 1.0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp48 = triton_helpers.minimum(tmp46, tmp47)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp49 = tmp41 * tmp48
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp50 = tmp36 + tmp49
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp51 = tmp43 * tmp48
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp52 = tmp31 + tmp51
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp53 = tmp50 - tmp52
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp54 = tmp16.to(tl.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp55 = tmp15 - tmp54
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp56 = triton_helpers.maximum(tmp55, tmp14)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp57 = triton_helpers.minimum(tmp56, tmp47)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp58 = tmp53 * tmp57
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp59 = tmp52 + tmp58
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tl.store(in_out_ptr1 + (x5), tmp59, xmask)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] ''', device_str='cuda')
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4h/c4hutzzn3fyewktn5ghub65e6pfsfixdtrucakro23ydehfmnep7.py
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.replication_pad2d]
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   x_1 => _unsafe_index_4, _unsafe_index_5
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] # Graph fragment:
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_100, [None, None, %clamp_max_4, None]), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_4, [None, None, None, %clamp_max_5]), kwargs = {})
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] triton_poi_fused_replication_pad2d_1 = async_compile.triton('triton_poi_fused_replication_pad2d_1', '''
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import triton
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] import triton.language as tl
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     size_hints={'x': 16384}, 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     filename=__file__,
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_replication_pad2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] )
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] @triton.jit
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] def triton_poi_fused_replication_pad2d_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, xnumel, XBLOCK : tl.constexpr):
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x0 = (xindex % ks0)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x2 = xindex // ks2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     x3 = xindex
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*ks6*(((-1) + ks4) * (((-1) + ks4) <= (((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0))))) + (((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))) * ((((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))) < ((-1) + ks4))) + 4*ks5*ks6*x2 + (((-1) + ks3) * (((-1) + ks3) <= (((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0))))) + (((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))) * ((((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))) < ((-1) + ks3)))), xmask, eviction_policy='evict_last')
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] ''', device_str='cuda')
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] async_compile.wait(globals())
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] del async_compile
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] def call(args):
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     args.clear()
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     s0 = arg0_1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     s1 = arg1_1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     s2 = arg2_1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         torch.cuda.set_device(0)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         ps0 = 2*s2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         ps1 = 2*s1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         ps2 = 4*s1*s2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, 2*s1, 2*s2), (4*s0*s1*s2, 4*s1*s2, 2*s2, 1), torch.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         buf5 = buf2; del buf2  # reuse
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._to_copy, aten.arange, aten.clamp, aten.view, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0_xnumel = 4*s0*s1*s2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0.run(buf5, arg3_1, s1, ps0, ps1, s2, ps2, triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0_xnumel, grid=grid(triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_view_0_xnumel), stream=stream0)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         del arg3_1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         ps3 = 2 + 2*s2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         ps4 = 2 + 2*s1
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         ps5 = 4 + 4*s1 + 4*s2 + 4*s1*s2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         buf6 = empty_strided_cuda((1, s0, 2 + 2*s1, 2 + 2*s2), (4*s0 + 4*s0*s1 + 4*s0*s2 + 4*s0*s1*s2, 4 + 4*s1 + 4*s2 + 4*s1*s2, 2 + 2*s2, 1), torch.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.replication_pad2d]
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         triton_poi_fused_replication_pad2d_1_xnumel = 4*s0 + 4*s0*s1 + 4*s0*s2 + 4*s0*s1*s2
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         triton_poi_fused_replication_pad2d_1.run(buf5, buf6, ps3, ps4, ps5, ps0, ps1, s1, s2, triton_poi_fused_replication_pad2d_1_xnumel, grid=grid(triton_poi_fused_replication_pad2d_1_xnumel), stream=stream0)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]         del buf5
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     return (buf6, )
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     arg0_1 = 3
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     arg1_1 = 32
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     arg2_1 = 32
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] if __name__ == "__main__":
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:40:02.718000 1685906 site-packages/torch/_inductor/graph.py:2014] [223/0_1] [__output_code] 
V0124 17:40:02.722000 1685906 site-packages/torch/_inductor/graph.py:2022] [223/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sd/csdsn3pj72ahlyaqqlot5b3hrso66xsefebazg7dykwo5dtkn5tf.py
I0124 17:40:02.934000 1685906 site-packages/torch/_inductor/graph.py:2056] [223/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sd/csdsn3pj72ahlyaqqlot5b3hrso66xsefebazg7dykwo5dtkn5tf.py

V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] Output code: 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # AOT ID: ['168_inference']
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import torch
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import math
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import random
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import os
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import tempfile
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from math import inf, nan
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from cmath import nanj
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch import device, empty_strided
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import triton
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import triton.language as tl
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     grid,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     split_scan_grid,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     grid_combo_kernels,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     start_graph,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     end_graph,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     cooperative_reduction_grid,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] )
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] aten = torch.ops.aten
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] async_compile = AsyncCompile()
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6n/c6nulscxl4jmdru7l4ovqq2stmp776x75m5tcm6gnkrnx7wtxi36.py
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.sign, aten.abs, aten.relu, aten.mul]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # Source node to ATen node mapping:
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   x_1 => abs_3, mul_26, mul_30, relu, sign
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # Graph fragment:
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%squeeze,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %abs_3 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%squeeze,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%abs_3,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, %relu), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_26, 3), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] triton_poi_fused_abs_mul_relu_sign_0 = async_compile.triton('triton_poi_fused_abs_mul_relu_sign_0', '''
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import triton
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import triton.language as tl
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     size_hints={'x': 64}, 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     filename=__file__,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_mul_relu_sign_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     min_elem_per_thread=0
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] )
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] @triton.jit
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] def triton_poi_fused_abs_mul_relu_sign_0(in_ptr0, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     xmask = xindex < xnumel
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     x0 = xindex
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + 2*x0))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + 2*x0))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + 2*x0))))), xmask, eviction_policy='evict_last')
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + 2*x0))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + 2*x0))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + 2*x0))))), xmask, eviction_policy='evict_last')
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + 2*x0)) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + 2*x0)) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + 2*x0)))), xmask, eviction_policy='evict_last')
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp1 = tmp0 * tmp0
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp3 = tmp2 * tmp2
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp4 = tmp3 + tmp1
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp6 = tmp5 * tmp5
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp7 = tmp6 + tmp4
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp8 = 0.3333333333333333
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp9 = tmp7 * tmp8
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp11 = tmp10 < tmp9
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp12 = tmp11.to(tl.int8)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp13 = tmp9 < tmp10
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp14 = tmp13.to(tl.int8)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp15 = tmp12 - tmp14
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp16 = tmp15.to(tmp9.dtype)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp17 = tl_math.abs(tmp9)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp18 = triton_helpers.maximum(tmp10, tmp17)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp19 = tmp16 * tmp18
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp20 = 3.0
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp21 = tmp19 * tmp20
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp21, xmask)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] ''', device_str='cuda')
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nc/cncmjlnbzmucbim5atrfxblzz4bugydkdaftxviaqqxn257vaxxl.py
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # Topologically Sorted Source Nodes: [x_3, loss, randint_like], Original ATen: [aten.sign, aten.abs, aten.relu, aten.mul, aten.pow, aten.exp, aten.randint_like, aten.sub, aten.mean]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # Source node to ATen node mapping:
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   loss => exp, mean, mul_77, sub_37
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   randint_like => convert_element_type_default, inductor_lookup_seed_default, inductor_randint_default
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   x_3 => abs_6, mul_63, mul_67, pow_4, relu_1, sign_1
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] # Graph fragment:
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %sign_1 : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%squeeze_1,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %abs_6 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%squeeze_1,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%abs_6,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %mul_63 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign_1, %relu_1), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %mul_67 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_63, 3), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %pow_4 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mul_67, 0.5), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%pow_4,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %inductor_randint_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_randint.default](args = (0, 10, [1, 1, %sym_size_int_2], %inductor_lookup_seed_default), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %convert_element_type_default : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%inductor_randint_default, torch.float32), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %mul_77 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_default, %pow_4), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %sub_37 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%exp, %mul_77), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_37,), kwargs = {})
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] triton_red_fused_abs_exp_mean_mul_pow_randint_like_relu_sign_sub_1 = async_compile.triton('triton_red_fused_abs_exp_mean_mul_pow_randint_like_relu_sign_sub_1', '''
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import triton
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] import triton.language as tl
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] @triton_heuristics.reduction(
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     size_hints={'x': 1, 'r0_': 32},
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     filename=__file__,
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     triton_meta={'signature': {'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'ks0': 'i32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_abs_exp_mean_mul_pow_randint_like_relu_sign_sub_1', 'mutated_arg_names': ['in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] )
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] @triton.jit
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] def triton_red_fused_abs_exp_mean_mul_pow_randint_like_relu_sign_sub_1(in_out_ptr1, in_ptr0, in_ptr1, ks0, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     xnumel = 1
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     rnumel = r0_numel
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     rbase = r0_base
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     _tmp36 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         roffset = r0_offset
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         rindex = r0_index
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         r0_0 = r0_index
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (tl.where(((-1)*tl_math.abs(((-1)*((1 + ks0) // 2)) + tl_math.abs((-1) + 2*r0_0))) + ((1 + ks0) // 2) < 0, ((-1)*tl_math.abs(((-1)*((1 + ks0) // 2)) + tl_math.abs((-1) + 2*r0_0))) + ((1 + ks0) // 2) + ((3 + ks0) // 2), ((-1)*tl_math.abs(((-1)*((1 + ks0) // 2)) + tl_math.abs((-1) + 2*r0_0))) + ((1 + ks0) // 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (tl.where(((-1)*tl_math.abs(((-1)*((1 + ks0) // 2)) + 2*r0_0)) + ((1 + ks0) // 2) < 0, ((-1)*tl_math.abs(((-1)*((1 + ks0) // 2)) + 2*r0_0)) + ((1 + ks0) // 2) + ((3 + ks0) // 2), ((-1)*tl_math.abs(((-1)*((1 + ks0) // 2)) + 2*r0_0)) + ((1 + ks0) // 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp7 = tl.load(in_ptr0 + (tl.where(((-1)*tl_math.abs(1 + ((-1)*((1 + ks0) // 2)) + 2*r0_0)) + ((1 + ks0) // 2) < 0, ((-1)*tl_math.abs(1 + ((-1)*((1 + ks0) // 2)) + 2*r0_0)) + ((1 + ks0) // 2) + ((3 + ks0) // 2), ((-1)*tl_math.abs(1 + ((-1)*((1 + ks0) // 2)) + 2*r0_0)) + ((1 + ks0) // 2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp1 = libdevice.sqrt(tmp0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp2 = tmp1 * tmp1
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp4 = libdevice.sqrt(tmp3)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp5 = tmp4 * tmp4
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp6 = tmp5 + tmp2
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp8 = libdevice.sqrt(tmp7)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp9 = tmp8 * tmp8
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp10 = tmp9 + tmp6
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp11 = 0.3333333333333333
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp12 = tmp10 * tmp11
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp13 = tl_math.abs(tmp12)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp14 = tl.full([1, 1], 0, tl.int32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp15 = triton_helpers.maximum(tmp14, tmp13)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp16 = tmp14 < tmp12
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp17 = tmp16.to(tl.int8)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp18 = tmp12 < tmp14
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp19 = tmp18.to(tl.int8)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp20 = tmp17 - tmp19
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp21 = tmp20.to(tmp12.dtype)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp22 = tmp21 * tmp15
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp23 = 3.0
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp24 = tmp22 * tmp23
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp25 = libdevice.sqrt(tmp24)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp26 = tl_math.exp(tmp25)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp27 = tl.load(in_ptr1 + load_seed_offset)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp28 = r0_0
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp29 = tl.full([1, 1], 0, tl.int64)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp30 = tl.full([1, 1], 10, tl.int64)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp31 = triton_helpers.randint64(tmp27, (tmp28).to(tl.uint32), tmp29, tmp30)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp32 = tmp31.to(tl.float32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp33 = tmp32 * tmp25
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp34 = tmp26 - tmp33
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp35 = tl.broadcast_to(tmp34, [XBLOCK, R0_BLOCK])
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         tmp37 = _tmp36 + tmp35
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         _tmp36 = tl.where(r0_mask, tmp37, _tmp36)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp36 = tl.sum(_tmp36, 1)[:, None]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp38 = 1 + ((1 + ks0) // 4)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp39 = tmp38.to(tl.float32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tmp40 = tmp36 / tmp39
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tl.debug_barrier()
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp40, None)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] ''', device_str='cuda')
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] async_compile.wait(globals())
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] del async_compile
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] def call(args):
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     arg0_1, arg1_1 = args
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     args.clear()
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     s0 = arg0_1
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     assert_size_stride(arg1_1, (1, 1, s0), (s0, s0, 1))
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         buf0 = empty_strided_cuda((1, 1, (3 + s0) // 2), ((3 + s0) // 2, (3 + s0) // 2, 1), torch.float32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.sign, aten.abs, aten.relu, aten.mul]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         triton_poi_fused_abs_mul_relu_sign_0_xnumel = (3 + s0) // 2
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         triton_poi_fused_abs_mul_relu_sign_0.run(arg1_1, buf0, s0, triton_poi_fused_abs_mul_relu_sign_0_xnumel, grid=grid(triton_poi_fused_abs_mul_relu_sign_0_xnumel), stream=stream0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         del arg1_1
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         buf3 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf3)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3, loss, randint_like], Original ATen: [aten.sign, aten.abs, aten.relu, aten.mul, aten.pow, aten.exp, aten.randint_like, aten.sub, aten.mean]
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         triton_red_fused_abs_exp_mean_mul_pow_randint_like_relu_sign_sub_1_r0_numel = 1 + ((1 + s0) // 4)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         triton_red_fused_abs_exp_mean_mul_pow_randint_like_relu_sign_sub_1.run(buf5, buf0, buf3, s0, 0, 1, triton_red_fused_abs_exp_mean_mul_pow_randint_like_relu_sign_sub_1_r0_numel, grid=grid(1), stream=stream0)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         del buf0
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]         del buf3
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     return (buf5, )
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     arg0_1 = 64
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     arg1_1 = rand_strided((1, 1, 64), (64, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] if __name__ == "__main__":
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:39:29.048000 703210 site-packages/torch/_inductor/graph.py:2014] [675/0] [__output_code] 
V0127 11:39:29.053000 703210 site-packages/torch/_inductor/graph.py:2022] [675/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ud/cudil6bkm7mdvr4k2xkta7ae6plw6ih32g2kbpilxlyi7yhfa47d.py
I0127 11:39:29.205000 703210 site-packages/torch/_inductor/graph.py:2056] [675/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ud/cudil6bkm7mdvr4k2xkta7ae6plw6ih32g2kbpilxlyi7yhfa47d.py

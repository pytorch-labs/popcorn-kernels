V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] Output code: 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # AOT ID: ['27_forward']
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import torch
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import math
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import random
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import os
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import tempfile
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from math import inf, nan
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from cmath import nanj
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch import device, empty_strided
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton.language as tl
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     grid,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     split_scan_grid,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     grid_combo_kernels,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     start_graph,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     end_graph,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] )
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] aten = torch.ops.aten
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4g/c4gs3hzjmzfkn4bqwdyxibbdmfyemrn27tq2je4vzereeoiafnfr.py
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   x => inductor_lookup_seed_default, inductor_random_default
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Graph fragment:
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 64, 2], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_poi_fused_rand_0 = async_compile.triton('triton_poi_fused_rand_0', '''
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton.language as tl
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     size_hints={'x': 128}, 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     filename=__file__,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] )
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton.jit
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def triton_poi_fused_rand_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xnumel = 128
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     x0 = xindex
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp1 = x0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] ''', device_str='cuda')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wd/cwd2n5cbkrmwpctpjx7jpkooyha24ka4or4zzmsa2xq6rp54t5td.py
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.fractional_max_pool2d, aten._native_batch_norm_legit_functional, aten.native_batch_norm_backward]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   x => fractional_max_pool2d
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   x_1 => add_1, add_2, add_3, add_4, mul, mul_1, mul_2, mul_3, mul_4, mul_5, mul_6, rsqrt, sub, var_mean
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Graph fragment:
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %fractional_max_pool2d : [num_users=1] = call_function[target=torch.ops.aten.fractional_max_pool2d.default](args = (%primals_3, [2, 2], [14, 14], %inductor_random_default), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%getitem, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem, %getitem_3), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.9), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, 1.005128205128205), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, 0.1), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %mul_5), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %unsqueeze_1), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_3), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem, %unsqueeze_6), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_2), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_3), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_fractional_max_pool2d_native_batch_norm_backward_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_fractional_max_pool2d_native_batch_norm_backward_1', '''
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton.language as tl
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 256},
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     filename=__file__,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'out_ptr9': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_fractional_max_pool2d_native_batch_norm_backward_1', 'mutated_arg_names': ['in_ptr4', 'in_ptr5', 'out_ptr7', 'out_ptr9'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] )
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton.jit
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_fractional_max_pool2d_native_batch_norm_backward_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr3, out_ptr4, out_ptr5, out_ptr7, out_ptr9, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xnumel = 64
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     r0_numel = 196
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     rnumel = r0_numel
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     rbase = r0_base
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     x0 = xindex
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0), xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp21 = tl.load(in_ptr0 + (1 + 2*x0), xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp49_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp49_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp49_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         roffset = r0_offset
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         rindex = r0_index
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_2 = r0_index // 14
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_1 = (r0_index % 14)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_3 = r0_index
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp1 = ((-2) + ks0) / 13
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp2 = tmp1.to(tl.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp3 = r0_2
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp4 = tmp3.to(tl.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp5 = tmp4 + tmp0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp6 = tmp5 * tmp2
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp7 = libdevice.floor(tmp6)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp8 = tmp0 * tmp2
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp9 = libdevice.floor(tmp8)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp10 = tmp7 - tmp9
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp11 = tmp10.to(tl.int64)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp12 = tl.full([1, 1], 13, tl.int64)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp13 = tmp4 < tmp12
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp14 = (-2) + ks0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp15 = tl.where(tmp13, tmp11, tmp14)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp16 = ks0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp17 = tmp15 + tmp16
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp18 = tmp15 < 0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp19 = tl.where(tmp18, tmp17, tmp15)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tl.device_assert(((0 <= tmp19) & (tmp19 < ks0)) | ~(r0_mask & xmask), "index out of bounds: 0 <= tmp19 < ks0")
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp22 = ((-2) + ks1) / 13
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp23 = tmp22.to(tl.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp24 = r0_1
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp25 = tmp24.to(tl.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp26 = tmp25 + tmp21
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp27 = tmp26 * tmp23
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp28 = libdevice.floor(tmp27)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp29 = tmp21 * tmp23
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp30 = libdevice.floor(tmp29)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp31 = tmp28 - tmp30
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp32 = tmp31.to(tl.int64)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp33 = tmp25 < tmp12
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp34 = (-2) + ks1
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp35 = tl.where(tmp33, tmp32, tmp34)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp36 = ks1
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp37 = tmp35 + tmp36
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp38 = tmp35 < 0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp39 = tl.where(tmp38, tmp37, tmp35)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tl.device_assert(((0 <= tmp39) & (tmp39 < ks1)) | ~(r0_mask & xmask), "index out of bounds: 0 <= tmp39 < ks1")
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp41 = tl.load(in_ptr1 + (tmp39 + ks1*tmp19 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp42 = tl.load(in_ptr1 + (1 + tmp39 + ks1*tmp19 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp43 = triton_helpers.maximum(tmp42, tmp41)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp44 = tl.load(in_ptr1 + (ks1 + tmp39 + ks1*tmp19 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp45 = triton_helpers.maximum(tmp44, tmp43)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp46 = tl.load(in_ptr1 + (1 + ks1 + tmp39 + ks1*tmp19 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp47 = triton_helpers.maximum(tmp46, tmp45)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp48 = tl.broadcast_to(tmp47, [XBLOCK, R0_BLOCK])
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp49_mean_next, tmp49_m2_next, tmp49_weight_next = triton_helpers.welford_reduce(
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]             tmp48, tmp49_mean, tmp49_m2, tmp49_weight, roffset == 0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         )
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp49_mean = tl.where(r0_mask & xmask, tmp49_mean_next, tmp49_mean)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp49_m2 = tl.where(r0_mask & xmask, tmp49_m2_next, tmp49_m2)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp49_weight = tl.where(r0_mask & xmask, tmp49_weight_next, tmp49_weight)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tl.store(out_ptr0 + (r0_3 + 196*x0), tmp47, r0_mask & xmask)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp52, tmp53, tmp54 = triton_helpers.welford(tmp49_mean, tmp49_m2, tmp49_weight, 1)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp49 = tmp52[:, None]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp50 = tmp53[:, None]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp51 = tmp54[:, None]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp63 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp65 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         roffset = r0_offset
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         rindex = r0_index
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_3 = r0_index
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp55 = tl.load(out_ptr0 + (r0_3 + 196*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp56 = tmp55 - tmp49
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp57 = 196.0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp58 = tmp50 / tmp57
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp59 = 1e-05
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp60 = tmp58 + tmp59
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp61 = libdevice.rsqrt(tmp60)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp62 = tmp56 * tmp61
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp64 = tmp62 * tmp63
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp66 = tmp64 + tmp65
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tl.store(out_ptr3 + (r0_3 + 196*x0), tmp66, r0_mask & xmask)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tl.store(out_ptr4 + (r0_3 + 196*x0), tmp56, r0_mask & xmask)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp76 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp81 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp67 = 196.0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp68 = tmp50 / tmp67
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp69 = 1e-05
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp70 = tmp68 + tmp69
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp71 = libdevice.rsqrt(tmp70)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp72 = 1.005128205128205
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp73 = tmp68 * tmp72
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp74 = 0.1
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp75 = tmp73 * tmp74
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp77 = 0.9
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp78 = tmp76 * tmp77
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp79 = tmp75 + tmp78
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp80 = tmp49 * tmp74
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp82 = tmp81 * tmp77
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp83 = tmp80 + tmp82
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp71, xmask)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp79, xmask)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr9 + (x0), tmp83, xmask)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] ''', device_str='cuda')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ke/ckea67ksdr4pks2mcpodgvsybipmzvkeee2q7lfxwirdsmbe34x2.py
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   add_ => add
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Graph fragment:
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, 1), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add), kwargs = {})
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_poi_fused_add_2 = async_compile.triton('triton_poi_fused_add_2', '''
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton.language as tl
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     filename=__file__,
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_2', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] )
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton.jit
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def triton_poi_fused_add_2(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xnumel = 1
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] ''', device_str='cuda')
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] async_compile.wait(globals())
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] del async_compile
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def call(args):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     args.clear()
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     s1 = primals_1
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     s2 = primals_2
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_3, (1, 64, s1, s2), (64*s1*s2, s1*s2, s2, 1))
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_4, (), ())
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_6, (64, ), (1, ))
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_7, (64, ), (1, ))
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 64, 2), (128, 2, 1), torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         triton_poi_fused_rand_0.run(buf0, buf1, 0, 128, grid=grid(128), stream=stream0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del buf0
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 64, 14, 14), (12544, 196, 14, 1), torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 64, 14, 14), (12544, 196, 14, 1), torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 64, 14, 14), (12544, 196, 14, 1), torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 64, 1, 1), (64, 1, 64, 64), torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.fractional_max_pool2d, aten._native_batch_norm_legit_functional, aten.native_batch_norm_backward]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_fractional_max_pool2d_native_batch_norm_backward_1.run(buf1, primals_3, primals_7, primals_8, primals_6, primals_5, buf2, buf7, buf8, buf6, primals_6, primals_5, s1, s2, 64, 196, grid=grid(64), stream=stream0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del buf1
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del buf2
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_3
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_5
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_6
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_7
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_8
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         triton_poi_fused_add_2.run(primals_4, primals_4, 1, grid=grid(1), stream=stream0)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_4
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     return (buf7, reinterpret_tensor(buf6, (64, ), (1, ), 0), buf8, )
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_1 = 28
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_2 = 28
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_3 = rand_strided((1, 64, 28, 28), (50176, 784, 28, 1), device='cuda:0', dtype=torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_4 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_6 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] if __name__ == "__main__":
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:30:29.202000 2031468 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:30:29.208000 2031468 site-packages/torch/_inductor/graph.py:2022] [108/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/o6/co6v5wc2tn7r4rhr2hox5svht2d4fhxuin3fga47mbtfjz3kqoo3.py
I0127 12:30:30.804000 2031468 site-packages/torch/_inductor/graph.py:2056] [108/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/o6/co6v5wc2tn7r4rhr2hox5svht2d4fhxuin3fga47mbtfjz3kqoo3.py

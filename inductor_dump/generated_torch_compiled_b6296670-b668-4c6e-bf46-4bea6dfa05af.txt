V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] Output code: 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # AOT ID: ['80_inference']
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import torch
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import math
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import random
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import os
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import tempfile
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from math import inf, nan
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from cmath import nanj
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch import device, empty_strided
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton.language as tl
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     grid,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     split_scan_grid,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     grid_combo_kernels,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     start_graph,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     end_graph,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     cooperative_reduction_grid,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] )
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] aten = torch.ops.aten
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] async_compile = AsyncCompile()
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sq/csq7i2v4t6lorosm4knrgfuxafwjjuqombqnsxdlfciqhenb6isa.py
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Source node to ATen node mapping:
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   x => var_mean
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Graph fragment:
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton.language as tl
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] @triton_heuristics.reduction(
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     size_hints={'x': 16, 'r0_': 128},
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     filename=__file__,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] )
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] @triton.jit
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xnumel = 10
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     rnumel = r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xmask = xindex < xnumel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     rbase = r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     x0 = xindex
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         roffset = r0_offset
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         rindex = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_1 = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         )
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] ''', device_str='cuda')
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fk/cfkboxktx346jwjlevpwgif6eewom3wzs2izzkadbdeyd7iwkz6y.py
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Topologically Sorted Source Nodes: [x_2, poisson_loss, exp], Original ATen: [aten._log_softmax, aten.exp, aten.mul, aten.sub, aten.mean]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Source node to ATen node mapping:
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   exp => exp_1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   poisson_loss => exp_2, mean_1, mul_66, sub_34
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   x_2 => amax, exp, log, sub_11, sub_12, sum_1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Graph fragment:
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_2, [1], True), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sub_11 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %amax), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_11,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_1,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_11, %log), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %exp_2 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%view_3,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%view_3,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %mul_66 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%exp_1, %view_3), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sub_34 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%exp_2, %mul_66), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_34,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] triton_red_fused__log_softmax_exp_mean_mul_sub_1 = async_compile.triton('triton_red_fused__log_softmax_exp_mean_mul_sub_1', '''
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton.language as tl
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] @triton_heuristics.reduction(
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     size_hints={'x': 1, 'r0_': 2048},
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     filename=__file__,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': (8,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_exp_mean_mul_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] )
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] @triton.jit
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] def triton_red_fused__log_softmax_exp_mean_mul_sub_1(in_ptr0, in_ptr1, in_ptr2, out_ptr2, out_ptr3, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xnumel = 1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     rnumel = r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     rbase = r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     _tmp12 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         roffset = r0_offset
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         rindex = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_0 = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (r0_0 // (ks0*ks1*ks2)), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp3 = tl.load(in_ptr2 + (r0_0 // (ks0*ks1*ks2)), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp4 = ks0*ks1*ks2
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp5 = tmp4.to(tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp6 = tmp3 / tmp5
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp7 = 1e-05
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp8 = tmp6 + tmp7
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp9 = libdevice.rsqrt(tmp8)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp10 = tmp2 * tmp9
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp11 = tl.broadcast_to(tmp10, [XBLOCK, R0_BLOCK])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp13 = triton_helpers.maximum(_tmp12, tmp11)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         _tmp12 = tl.where(r0_mask, tmp13, _tmp12)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp12 = triton_helpers.max2(_tmp12, 1)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     _tmp28 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         roffset = r0_offset
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         rindex = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_0 = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp14 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp15 = tl.load(in_ptr1 + (r0_0 // (ks0*ks1*ks2)), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp17 = tl.load(in_ptr2 + (r0_0 // (ks0*ks1*ks2)), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp16 = tmp14 - tmp15
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp18 = ks0*ks1*ks2
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp19 = tmp18.to(tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp20 = tmp17 / tmp19
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp21 = 1e-05
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp22 = tmp20 + tmp21
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp23 = libdevice.rsqrt(tmp22)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp24 = tmp16 * tmp23
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp25 = tmp24 - tmp12
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp26 = tl_math.exp(tmp25)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp27 = tl.broadcast_to(tmp26, [XBLOCK, R0_BLOCK])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp29 = _tmp28 + tmp27
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         _tmp28 = tl.where(r0_mask, tmp29, _tmp28)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp28 = tl.sum(_tmp28, 1)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     _tmp48 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         roffset = r0_offset
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         rindex = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_0 = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp30 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp31 = tl.load(in_ptr1 + (r0_0 // (ks0*ks1*ks2)), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp33 = tl.load(in_ptr2 + (r0_0 // (ks0*ks1*ks2)), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp32 = tmp30 - tmp31
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp34 = ks0*ks1*ks2
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp35 = tmp34.to(tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp36 = tmp33 / tmp35
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp37 = 1e-05
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp38 = tmp36 + tmp37
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp39 = libdevice.rsqrt(tmp38)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp40 = tmp32 * tmp39
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp41 = tmp40 - tmp12
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp42 = tl_math.log(tmp28)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp43 = tmp41 - tmp42
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp44 = tl_math.exp(tmp43)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp45 = tmp44 * tmp43
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp46 = tmp44 - tmp45
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp47 = tl.broadcast_to(tmp46, [XBLOCK, R0_BLOCK])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp49 = _tmp48 + tmp47
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         _tmp48 = tl.where(r0_mask, tmp49, _tmp48)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tl.store(out_ptr2 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp43, r0_mask)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp48 = tl.sum(_tmp48, 1)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tl.store(out_ptr3 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp48, None)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] ''', device_str='cuda')
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5x/c5xaygcue5hqge56mmmvgpyqh74rqiaba55ezx5tsyp5o2geoycy.py
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Topologically Sorted Source Nodes: [dist_pos, add, dist_neg, sub, loss, triplet_loss, poisson_loss, exp, add_1], Original ATen: [aten.sub, aten.add, aten.norm, aten.clamp_min, aten.mean, aten.exp, aten.mul]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Source node to ATen node mapping:
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   add => add_54
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   add_1 => add_67
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   dist_neg => add_51, pow_3, pow_4, sub_27, sum_3
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   dist_pos => add_46, pow_1, pow_2, sub_24, sum_2
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   exp => exp_1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   loss => clamp_min
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   poisson_loss => exp_2, mean_1, mul_66, sub_34
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   sub => sub_30
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   triplet_loss => mean
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] # Graph fragment:
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sub_24 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select, %select_1), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %add_46 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_24, 1e-06), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_46, 2.0), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1]), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %add_54 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%pow_2, 1.0), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sub_27 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select, %select_2), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %add_51 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_27, 1e-06), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_51, 2.0), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1]), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 0.5), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sub_30 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_54, %pow_4), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_30, 0), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %exp_2 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%view_3,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%view_3,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %mul_66 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%exp_1, %view_3), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %sub_34 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%exp_2, %mul_66), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_34,), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] #   %add_67 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_1), kwargs = {})
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] triton_red_fused_add_clamp_min_exp_mean_mul_norm_sub_2 = async_compile.triton('triton_red_fused_add_clamp_min_exp_mean_mul_norm_sub_2', '''
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] import triton.language as tl
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] @triton_heuristics.reduction(
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     size_hints={'x': 1, 'r0_': 128},
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     filename=__file__,
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_clamp_min_exp_mean_mul_norm_sub_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] )
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] @triton.jit
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] def triton_red_fused_add_clamp_min_exp_mean_mul_norm_sub_2(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xnumel = 1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     rnumel = r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     rbase = r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     _tmp7 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     _tmp14 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         roffset = r0_offset
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         rindex = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         r0_0 = r0_index
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp1 = tl.load(in_ptr0 + (r0_0 + ks0*ks1*ks2), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp9 = tl.load(in_ptr0 + (r0_0 + 2*ks0*ks1*ks2), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp3 = 1e-06
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp4 = tmp2 + tmp3
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp5 = tmp4 * tmp4
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp8 = _tmp7 + tmp6
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         _tmp7 = tl.where(r0_mask, tmp8, _tmp7)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp10 = tmp0 - tmp9
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp11 = tmp10 + tmp3
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp12 = tmp11 * tmp11
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         tmp15 = _tmp14 + tmp13
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         _tmp14 = tl.where(r0_mask, tmp15, _tmp14)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp7 = tl.sum(_tmp7, 1)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp14 = tl.sum(_tmp14, 1)[:, None]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (0))
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK, 1])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp16 = libdevice.sqrt(tmp7)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp17 = 1.0
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp18 = tmp16 + tmp17
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp19 = libdevice.sqrt(tmp14)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp20 = tmp18 - tmp19
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp21 = 0.0
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp22 = triton_helpers.maximum(tmp20, tmp21)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp23 = tmp22 / tmp17
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp26 = 10*ks0*ks1*ks2
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp27 = tmp26.to(tl.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp28 = tmp25 / tmp27
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tmp29 = tmp23 + tmp28
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tl.debug_barrier()
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp29, None)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] ''', device_str='cuda')
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] async_compile.wait(globals())
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] del async_compile
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] def call(args):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     args.clear()
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     s1 = arg0_1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     s2 = arg1_1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     s3 = arg2_1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     assert_size_stride(arg3_1, (1, 10, s1, s2, s3), (10*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         buf0 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         buf1 = empty_strided_cuda((1, 10, 1, 1, 1), (10, 1, 10, 10, 10), torch.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         triton_red_fused__native_batch_norm_legit_0_r0_numel = s1*s2*s3
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg3_1, buf0, buf1, s1, s2, s3, 10, triton_red_fused__native_batch_norm_legit_0_r0_numel, grid=grid(10), stream=stream0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         buf5 = empty_strided_cuda((1, 10*s1*s2*s3), (10*s1*s2*s3, 1), torch.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2, poisson_loss, exp], Original ATen: [aten._log_softmax, aten.exp, aten.mul, aten.sub, aten.mean]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         triton_red_fused__log_softmax_exp_mean_mul_sub_1_r0_numel = 10*s1*s2*s3
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         triton_red_fused__log_softmax_exp_mean_mul_sub_1.run(arg3_1, buf0, buf1, buf5, buf8, s1, s2, s3, 1, triton_red_fused__log_softmax_exp_mean_mul_sub_1_r0_numel, grid=grid(1), stream=stream0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         del arg3_1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         del buf0
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         del buf1
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         buf6 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         buf9 = reinterpret_tensor(buf6, (), (), 0); del buf6  # reuse
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         # Topologically Sorted Source Nodes: [dist_pos, add, dist_neg, sub, loss, triplet_loss, poisson_loss, exp, add_1], Original ATen: [aten.sub, aten.add, aten.norm, aten.clamp_min, aten.mean, aten.exp, aten.mul]
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         triton_red_fused_add_clamp_min_exp_mean_mul_norm_sub_2_r0_numel = s1*s2*s3
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         triton_red_fused_add_clamp_min_exp_mean_mul_norm_sub_2.run(buf9, buf5, buf8, s1, s2, s3, 1, triton_red_fused_add_clamp_min_exp_mean_mul_norm_sub_2_r0_numel, grid=grid(1), stream=stream0)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         del buf5
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]         del buf8
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     return (buf9, )
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     arg0_1 = 5
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     arg1_1 = 5
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     arg2_1 = 5
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     arg3_1 = rand_strided((1, 10, 5, 5, 5), (1250, 125, 25, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] if __name__ == "__main__":
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:32:02.331000 3201829 site-packages/torch/_inductor/graph.py:2014] [276/0] [__output_code] 
V0205 11:32:02.367000 3201829 site-packages/torch/_inductor/graph.py:2022] [276/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6ktnf2yqdtx5liytuc44rfpivtj4qdfrlgmzvruwekd6l2kdswo.py
I0205 11:32:02.699000 3201829 site-packages/torch/_inductor/graph.py:2056] [276/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6ktnf2yqdtx5liytuc44rfpivtj4qdfrlgmzvruwekd6l2kdswo.py

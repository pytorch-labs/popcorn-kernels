V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] Output code: 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] # AOT ID: ['20_inference']
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import torch
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import math
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import random
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import os
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import tempfile
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from math import inf, nan
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from cmath import nanj
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch import device, empty_strided
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import triton
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import triton.language as tl
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     grid,
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     split_scan_grid,
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     grid_combo_kernels,
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     start_graph,
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     end_graph,
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] )
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] aten = torch.ops.aten
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ik/cik2qkzvhafsb3bftd36cx7s242bwuehoxuajkw7by3o77aulh5r.py
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.softplus, aten.pow, aten.avg_pool2d, aten.sign, aten.abs, aten.relu, aten.mul]
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   x => div, exp, gt, log1p, mul, where
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   x_1 => abs_1, avg_pool2d, mul_25, mul_30, pow_1, pow_2, relu, sign
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] # Graph fragment:
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %mul : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg3_1, 1.0), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%mul, 20.0), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%mul,), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp,), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%log1p, 1.0), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %arg3_1, %div), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%where, 2.0), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%pow_1, [2, 2], [2, 2]), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%avg_pool2d,), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%avg_pool2d,), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %relu : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%abs_1,), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, %relu), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %mul_30 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, 4), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mul_30, 0.5), kwargs = {})
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0 = async_compile.triton('triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0', '''
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import triton
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] import triton.language as tl
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     size_hints={'x': 4096}, 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     filename=__file__,
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] )
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] @triton.jit
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] def triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0(in_out_ptr0, in_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     x2 = xindex // ks2
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     x3 = xindex
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp19 = tl.load(in_ptr0 + (ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp28 = tl.load(in_ptr0 + (1 + ks4 + 2*x0 + 2*ks4*x1 + ks3*ks4*x2), xmask, eviction_policy='evict_last')
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp1 = 1.0
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp2 = tmp0 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp3 = 20.0
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp4 = tmp2 > tmp3
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp5 = tl_math.exp(tmp2)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp6 = libdevice.log1p(tmp5)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp7 = tmp6 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp8 = tl.where(tmp4, tmp0, tmp7)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp9 = tmp8 * tmp8
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp11 = tmp10 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp12 = tmp11 > tmp3
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp13 = tl_math.exp(tmp11)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp14 = libdevice.log1p(tmp13)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp15 = tmp14 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp16 = tl.where(tmp12, tmp10, tmp15)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp17 = tmp16 * tmp16
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp18 = tmp17 + tmp9
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp20 = tmp19 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp21 = tmp20 > tmp3
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp22 = tl_math.exp(tmp20)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp23 = libdevice.log1p(tmp22)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp24 = tmp23 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp25 = tl.where(tmp21, tmp19, tmp24)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp26 = tmp25 * tmp25
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp27 = tmp26 + tmp18
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp29 = tmp28 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp30 = tmp29 > tmp3
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp31 = tl_math.exp(tmp29)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp32 = libdevice.log1p(tmp31)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp33 = tmp32 * tmp1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp34 = tl.where(tmp30, tmp28, tmp33)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp35 = tmp34 * tmp34
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp36 = tmp35 + tmp27
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp37 = 0.25
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp38 = tmp36 * tmp37
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp39 = tl.full([1], 0, tl.int32)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp40 = tmp39 < tmp38
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp41 = tmp40.to(tl.int8)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp42 = tmp38 < tmp39
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp43 = tmp42.to(tl.int8)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp44 = tmp41 - tmp43
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp45 = tmp44.to(tmp38.dtype)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp46 = tl_math.abs(tmp38)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp47 = triton_helpers.maximum(tmp39, tmp46)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp48 = tmp45 * tmp47
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp49 = 4.0
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp50 = tmp48 * tmp49
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tmp51 = libdevice.sqrt(tmp50)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp51, xmask)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] ''', device_str='cuda')
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] async_compile.wait(globals())
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] del async_compile
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] def call(args):
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     args.clear()
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     s0 = arg0_1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     s1 = arg1_1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     s2 = arg2_1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         ps0 = s2 // 2
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         ps1 = s1 // 2
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         ps2 = (s1 // 2)*(s2 // 2)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, s1 // 2, s2 // 2), (s0*(s1 // 2)*(s2 // 2), (s1 // 2)*(s2 // 2), s2 // 2, 1), torch.float32)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.softplus, aten.pow, aten.avg_pool2d, aten.sign, aten.abs, aten.relu, aten.mul]
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0_xnumel = s0*(s1 // 2)*(s2 // 2)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0.run(buf1, arg3_1, ps0, ps1, ps2, s1, s2, triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0_xnumel, grid=grid(triton_poi_fused_abs_avg_pool2d_mul_pow_relu_sign_softplus_0_xnumel), stream=stream0)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]         del arg3_1
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     return (buf1, )
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     arg0_1 = 3
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     arg1_1 = 64
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     arg2_1 = 64
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] if __name__ == "__main__":
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:25:50.218000 1940816 site-packages/torch/_inductor/graph.py:2014] [65/0_1] [__output_code] 
V0127 12:25:50.220000 1940816 site-packages/torch/_inductor/graph.py:2022] [65/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bo/cbogomg5uvusbo7ywtjjzam3s7zi2acsssmnocd6e3kzosnjudfw.py
I0127 12:25:50.423000 1940816 site-packages/torch/_inductor/graph.py:2056] [65/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bo/cbogomg5uvusbo7ywtjjzam3s7zi2acsssmnocd6e3kzosnjudfw.py
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] Output code: 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] # AOT ID: ['21_inference']
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] import torch
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] import math
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] import random
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] import os
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] import tempfile
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from math import inf, nan
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from cmath import nanj
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from torch import device, empty_strided
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] aten = torch.ops.aten
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] async_compile.wait(globals())
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] del async_compile
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] def call(args):
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     arg0_1, = args
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     args.clear()
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     assert_size_stride(arg0_1, (1, 3, 32, 32), (3072, 1024, 32, 1))
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._adaptive_avg_pool2d]
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]         buf0 = torch.ops.aten._adaptive_avg_pool2d.default(arg0_1, [5, 5])
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]         del arg0_1
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]         buf1 = buf0
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]         del buf0
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     return (reinterpret_tensor(buf1, (1, 25, 3), (75, 1, 25), 0), )
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     arg0_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] if __name__ == "__main__":
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:25:50.508000 1940816 site-packages/torch/_inductor/graph.py:2014] [66/0_1] [__output_code] 
V0127 12:25:50.509000 1940816 site-packages/torch/_inductor/graph.py:2022] [66/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wn/cwnpv3qtbvyozxqy7hnjnxcsxeupi2pmyy3evxrqsw3alagee6om.py
I0127 12:25:50.510000 1940816 site-packages/torch/_inductor/graph.py:2056] [66/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/wn/cwnpv3qtbvyozxqy7hnjnxcsxeupi2pmyy3evxrqsw3alagee6om.py

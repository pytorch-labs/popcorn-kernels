V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] Output code: 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # AOT ID: ['58_inference']
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import torch
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import math
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import random
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import os
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import tempfile
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from math import inf, nan
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from cmath import nanj
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch import device, empty_strided
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import triton
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import triton.language as tl
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     grid,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     split_scan_grid,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     grid_combo_kernels,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     start_graph,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     end_graph,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     cooperative_reduction_grid,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] )
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] aten = torch.ops.aten
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] _quantized = torch.ops._quantized
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] async_compile = AsyncCompile()
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ro/cro5mb3is6yiy4xpefrmvgkpn77xd4mkmesvmmbjaorefvoop2n2.py
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # Source node to ATen node mapping:
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] #   x => inductor_lookup_seed_default, inductor_random_default
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # Graph fragment:
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, 2], %inductor_lookup_seed_default, rand), kwargs = {})
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] triton_poi_fused_rand_0 = async_compile.triton('triton_poi_fused_rand_0', '''
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import triton
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import triton.language as tl
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] @triton_heuristics.pointwise(
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     size_hints={'x': 8}, 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     filename=__file__,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     min_elem_per_thread=0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] )
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] @triton.jit
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] def triton_poi_fused_rand_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     xmask = xindex < xnumel
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     x0 = xindex
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp1 = x0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] ''', device_str='cuda')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2d/c2dmfe53ju2ipjino2rqy7tlovbllybc6w6rdbnaxwor7xov62ng.py
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_3], Original ATen: [aten.fractional_max_pool2d, aten.relu]
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # Source node to ATen node mapping:
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] #   x => fractional_max_pool2d
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] #   x_3 => relu_1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] # Graph fragment:
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] #   %fractional_max_pool2d : [num_users=1] = call_function[target=torch.ops.aten.fractional_max_pool2d.default](args = (%arg3_1, [2, 2], [14, 14], %inductor_random_default), kwargs = {})
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%view,), kwargs = {})
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] triton_poi_fused_fractional_max_pool2d_relu_1 = async_compile.triton('triton_poi_fused_fractional_max_pool2d_relu_1', '''
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import triton
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] import triton.language as tl
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] @triton_heuristics.pointwise(
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     size_hints={'x': 1024}, 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     filename=__file__,
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_fractional_max_pool2d_relu_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     min_elem_per_thread=0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] )
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] @triton.jit
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] def triton_poi_fused_fractional_max_pool2d_relu_1(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     xmask = xindex < xnumel
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     x2 = xindex // 196
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     x1 = ((xindex // 14) % 14)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     x0 = (xindex % 14)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     x3 = xindex
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2), xmask, eviction_policy='evict_last')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (1 + 2*x2), xmask, eviction_policy='evict_last')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp1 = ((-2) + ks0) / 13
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp2 = tmp1.to(tl.float32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp3 = x1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp4 = tmp3.to(tl.float32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp5 = tmp4 + tmp0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp6 = tmp5 * tmp2
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp7 = libdevice.floor(tmp6)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp8 = tmp0 * tmp2
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp9 = libdevice.floor(tmp8)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp10 = tmp7 - tmp9
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp11 = tmp10.to(tl.int64)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp12 = tl.full([1], 13, tl.int64)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp13 = tmp4 < tmp12
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp14 = (-2) + ks0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp15 = tl.where(tmp13, tmp11, tmp14)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp16 = ks0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp18 = tmp15 < 0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp15)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tl.device_assert(((0 <= tmp19) & (tmp19 < ks0)) | ~(xmask), "index out of bounds: 0 <= tmp19 < ks0")
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp22 = ((-2) + ks1) / 13
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp24 = x0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp26 = tmp25 + tmp21
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp27 = tmp26 * tmp23
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp28 = libdevice.floor(tmp27)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp29 = tmp21 * tmp23
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp30 = libdevice.floor(tmp29)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp31 = tmp28 - tmp30
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp32 = tmp31.to(tl.int64)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp33 = tmp25 < tmp12
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp34 = (-2) + ks1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp35 = tl.where(tmp33, tmp32, tmp34)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp36 = ks1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp37 = tmp35 + tmp36
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp38 = tmp35 < 0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp39 = tl.where(tmp38, tmp37, tmp35)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tl.device_assert(((0 <= tmp39) & (tmp39 < ks1)) | ~(xmask), "index out of bounds: 0 <= tmp39 < ks1")
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp41 = tl.load(in_ptr1 + (tmp39 + ks1*tmp19 + ks0*ks1*x2), xmask, eviction_policy='evict_last')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp42 = tl.load(in_ptr1 + (1 + tmp39 + ks1*tmp19 + ks0*ks1*x2), xmask, eviction_policy='evict_last')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp43 = triton_helpers.maximum(tmp42, tmp41)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp44 = tl.load(in_ptr1 + (ks1 + tmp39 + ks1*tmp19 + ks0*ks1*x2), xmask, eviction_policy='evict_last')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp45 = triton_helpers.maximum(tmp44, tmp43)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp46 = tl.load(in_ptr1 + (1 + ks1 + tmp39 + ks1*tmp19 + ks0*ks1*x2), xmask, eviction_policy='evict_last')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp47 = triton_helpers.maximum(tmp46, tmp45)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp48 = tl.full([1], 0, tl.int32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp49 = triton_helpers.maximum(tmp48, tmp47)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tmp50 = triton_helpers.maximum(tmp48, tmp49)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp50, xmask)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] ''', device_str='cuda')
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] async_compile.wait(globals())
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] del async_compile
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] def call(args):
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     args.clear()
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     s0 = arg0_1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     s1 = arg1_1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     s2 = arg2_1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         torch.cuda.set_device(0)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         buf1 = empty_strided_cuda((1, s0, 2), (2*s0, 2, 1), torch.float32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.rand]
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         triton_poi_fused_rand_0_xnumel = 2*s0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         triton_poi_fused_rand_0.run(buf0, buf1, 0, triton_poi_fused_rand_0_xnumel, grid=grid(triton_poi_fused_rand_0_xnumel), stream=stream0)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         del buf0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         buf2 = empty_strided_cuda((1, s0, 14, 14), (196*s0, 196, 14, 1), torch.float32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         buf3 = reinterpret_tensor(buf2, (1, 196*s0), (196*s0, 1), 0); del buf2  # reuse
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_3], Original ATen: [aten.fractional_max_pool2d, aten.relu]
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         triton_poi_fused_fractional_max_pool2d_relu_1_xnumel = 196*s0
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         triton_poi_fused_fractional_max_pool2d_relu_1.run(buf3, buf1, arg3_1, s1, s2, triton_poi_fused_fractional_max_pool2d_relu_1_xnumel, grid=grid(triton_poi_fused_fractional_max_pool2d_relu_1_xnumel), stream=stream0)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         del arg3_1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]         del buf1
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     return (buf3, )
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     arg0_1 = 3
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     arg1_1 = 28
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     arg2_1 = 28
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     arg3_1 = rand_strided((1, 3, 28, 28), (2352, 784, 28, 1), device='cuda:0', dtype=torch.float32)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] if __name__ == "__main__":
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 20:54:45.759000 2742634 site-packages/torch/_inductor/graph.py:2014] [248/0] [__output_code] 
V0204 20:54:45.762000 2742634 site-packages/torch/_inductor/graph.py:2022] [248/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ua/cua73vtdcsfxyxbtat3snbgggjvxs7rrfdob2nuzxcu2xlpglo6h.py
I0204 20:54:45.972000 2742634 site-packages/torch/_inductor/graph.py:2056] [248/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ua/cua73vtdcsfxyxbtat3snbgggjvxs7rrfdob2nuzxcu2xlpglo6h.py

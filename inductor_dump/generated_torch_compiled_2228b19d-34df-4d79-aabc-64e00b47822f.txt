W0124 17:42:13.264000 1685906 site-packages/torch/utils/_sympy/interp.py:176] [413/0_1] failed while executing pow_by_natural([VR[3, int_oo], VR[-1, -1]])
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] Output code: 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] # AOT ID: ['100_inference']
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import torch
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import math
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import random
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import os
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import tempfile
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from math import inf, nan
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from cmath import nanj
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch import device, empty_strided
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import triton
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import triton.language as tl
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     grid,
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     split_scan_grid,
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     grid_combo_kernels,
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     start_graph,
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     end_graph,
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     cooperative_reduction_grid,
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] )
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] aten = torch.ops.aten
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] _quantized = torch.ops._quantized
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] async_compile = AsyncCompile()
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mb/cmbtfbiy6gbc43hobdmuuxxfvwn4e74xpbkthxdcde3cb6embbmg.py
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.avg_pool3d]
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] # Source node to ATen node mapping:
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] #   x_3 => avg_pool3d
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] # Graph fragment:
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] #   %avg_pool3d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool3d.default](args = (%unsqueeze, [2, 2, 2], [2, 2, 2]), kwargs = {})
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] triton_poi_fused_avg_pool3d_0 = async_compile.triton('triton_poi_fused_avg_pool3d_0', '''
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import triton
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] import triton.language as tl
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] @triton_heuristics.pointwise(
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     size_hints={'x': 2048}, 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     filename=__file__,
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool3d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     min_elem_per_thread=0
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] )
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] @triton.jit
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] def triton_poi_fused_avg_pool3d_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, XBLOCK : tl.constexpr):
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     xmask = xindex < xnumel
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     x0 = (xindex % ks0)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     x2 = xindex // ks2
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0))))) + (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((x1 % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0))))) + (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*(x1 // 2) + (((2*x1) % 2))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0))))) + (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((x1 % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0))))) + (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*(x1 // 2) + (((2*x1) % 2))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0))))) + (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((x1 % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0))))) + (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*(x1 // 2) + (((2*x1) % 2))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0))))) + (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((x1 % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0))))) + (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*(x1 // 2) + (((2*x1) % 2))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (1 + 2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0))))) + (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((((1 + 2*x1) // 2) % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0))))) + (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*((((1 + 2*x1) // 4) % ks5))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (1 + 2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0))))) + (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((((1 + 2*x1) // 2) % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0))))) + (((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x2)) + ((-2) + 2*x2) * (((-2) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*((((1 + 2*x1) // 4) % ks5))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (1 + 2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0))))) + (((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-2) + 2*x0)) + ((-2) + 2*x0) * (((-2) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((((1 + 2*x1) // 2) % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0))))) + (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*((((1 + 2*x1) // 4) % ks5))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp13 = tl.load(in_ptr0 + (1 + 2*(((-1) + (ks4 // 2)) * (((-1) + (ks4 // 2)) <= (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0))))) + (((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x0)) + ((-1) + 2*x0) * (((-1) + 2*x0) > (0)))) < ((-1) + (ks4 // 2)))) + 2*(ks4 // 2)*((((1 + 2*x1) // 2) % 2)) + 4*(ks4 // 2)*(((-1) + (ks3 // 2)) * (((-1) + (ks3 // 2)) <= (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0))))) + (((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) * ((((0) * ((0) >= ((-1) + 2*x2)) + ((-1) + 2*x2) * (((-1) + 2*x2) > (0)))) < ((-1) + (ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*((((1 + 2*x1) // 4) % ks5))), xmask, eviction_policy='evict_last')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp2 = tmp1 + tmp0
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp4 = tmp3 + tmp2
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp6 = tmp5 + tmp4
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp8 = tmp7 + tmp6
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp10 = tmp9 + tmp8
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp12 = tmp11 + tmp10
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp14 = tmp13 + tmp12
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp15 = 0.125
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tmp16 = tmp14 * tmp15
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     tl.store(out_ptr0 + (x0 + 2*x2 + 4*x1 + x2*(ks4 // 4) + 2*x1*(ks3 // 4) + 2*x1*(ks4 // 4) + x1*(ks3 // 4)*(ks4 // 4)), tmp16, xmask)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] ''', device_str='cuda')
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] async_compile.wait(globals())
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] del async_compile
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] def call(args):
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     args.clear()
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     s0 = arg0_1
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     s1 = arg1_1
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     s2 = arg2_1
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         torch.cuda.set_device(0)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         ps0 = 2 + (s2 // 4)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         ps1 = 2*s0
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         ps2 = 4*s0 + 2*s0*(s2 // 4)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 1, 2*s0, 2 + (s1 // 4), 2 + (s2 // 4)), (8*s0 + 4*s0*(s1 // 4) + 4*s0*(s2 // 4) + 2*s0*(s1 // 4)*(s2 // 4), 8*s0 + 4*s0*(s1 // 4) + 4*s0*(s2 // 4) + 2*s0*(s1 // 4)*(s2 // 4), 4 + 2*(s1 // 4) + 2*(s2 // 4) + (s1 // 4)*(s2 // 4), 2 + (s2 // 4), 1), torch.float32)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.avg_pool3d]
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         triton_poi_fused_avg_pool3d_0_xnumel = 8*s0 + 4*s0*(s1 // 4) + 4*s0*(s2 // 4) + 2*s0*(s1 // 4)*(s2 // 4)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         triton_poi_fused_avg_pool3d_0.run(arg3_1, buf0, ps0, ps1, ps2, s1, s2, s0, triton_poi_fused_avg_pool3d_0_xnumel, grid=grid(triton_poi_fused_avg_pool3d_0_xnumel), stream=stream0)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]         del arg3_1
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     return (reinterpret_tensor(buf0, (1, (8*s0 + 4*s0*(s1 // 4) + 4*s0*(s2 // 4) + 2*s0*(s1 // 4)*(s2 // 4)) // ((s0*(s1 // (s1 // 2))*(s2 // (s2 // 2))) // 2), (s0*(s1 // (s1 // 2))*(s2 // (s2 // 2))) // 2), (((8*s0 + 4*s0*(s1 // 4) + 4*s0*(s2 // 4) + 2*s0*(s1 // 4)*(s2 // 4)) // ((s0*(s1 // (s1 // 2))*(s2 // (s2 // 2))) // 2))*((s0*(s1 // (s1 // 2))*(s2 // (s2 // 2))) // 2), 1, (8*s0 + 4*s0*(s1 // 4) + 4*s0*(s2 // 4) + 2*s0*(s1 // 4)*(s2 // 4)) // ((s0*(s1 // (s1 // 2))*(s2 // (s2 // 2))) // 2)), 0), )
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     arg0_1 = 3
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     arg1_1 = 64
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     arg2_1 = 64
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] if __name__ == "__main__":
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:42:14.271000 1685906 site-packages/torch/_inductor/graph.py:2014] [413/0_1] [__output_code] 
V0124 17:42:14.274000 1685906 site-packages/torch/_inductor/graph.py:2022] [413/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hc/chcxwjhifcjeu5cwav6fqv7qvufxc5urfo72emaqt6p6vqdt2av5.py
I0124 17:42:14.581000 1685906 site-packages/torch/_inductor/graph.py:2056] [413/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hc/chcxwjhifcjeu5cwav6fqv7qvufxc5urfo72emaqt6p6vqdt2av5.py

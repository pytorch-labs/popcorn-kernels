V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] Output code: 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # AOT ID: ['186_inference']
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import torch
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import math
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import random
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import os
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import tempfile
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from math import inf, nan
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from cmath import nanj
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch import device, empty_strided
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton.language as tl
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     grid,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     split_scan_grid,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     grid_combo_kernels,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     start_graph,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     end_graph,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     cooperative_reduction_grid,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] )
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] aten = torch.ops.aten
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] async_compile = AsyncCompile()
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/75/c75uhi3u7elcuuabyap7qu227jqcphe7ehzzfm5id6zpag4y7od5.py
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.constant_pad_nd]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Source node to ATen node mapping:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   x_1 => constant_pad_nd
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Graph fragment:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%unsqueeze_1, [0, 0, 2, 2], 0.0), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton.language as tl
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     size_hints={'x': 4096}, 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     filename=__file__,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     min_elem_per_thread=0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] )
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton.jit
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xmask = xindex < xnumel
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x0 = (xindex % ks0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x2 = xindex // ks3
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x3 = xindex
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp0 = (-2) + x1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp3 = ks2
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (((-2)*ks4) + 2*x0 + ks4*x1 + ks2*ks4*x2), tmp5 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (1 + ((-2)*ks4) + 2*x0 + ks4*x1 + ks2*ks4*x2), tmp5 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp8 = tmp7 + tmp6
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp9 = 0.5
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp11 = tmp10 * tmp10
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp13 = tl.where(tmp5, tmp11, tmp12)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] ''', device_str='cuda')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wu/cwukxm2odxubyz7ecofd6oogqkdporv35ip5kyzpptsxqbmab2mp.py
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.mul, aten.add, aten.pow, aten.div]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Source node to ATen node mapping:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   x_1 => add_41, div, mul_34, pow_1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Graph fragment:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_1, 0.0001), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %add_41 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_34, 1.0), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_41, 0.75), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%squeeze, %pow_1), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_poi_fused_add_div_mul_pow_1 = async_compile.triton('triton_poi_fused_add_div_mul_pow_1', '''
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton.language as tl
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     size_hints={'x': 1024}, 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     filename=__file__,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mul_pow_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     min_elem_per_thread=0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] )
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton.jit
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] def triton_poi_fused_add_div_mul_pow_1(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xmask = xindex < xnumel
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x0 = (xindex % ks0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x3 = xindex // ks0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x2 = xindex // ks2
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x4 = (xindex % ks2)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x5 = xindex
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + ks1*x3), xmask, eviction_policy='evict_last')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + ks1*x3), xmask, eviction_policy='evict_last')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x4 + 4*ks0*x2 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (ks0 + x4 + 4*ks0*x2 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (x4 + 2*ks0 + 4*ks0*x2 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x4 + 3*ks0 + 4*ks0*x2 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (x4 + 4*ks0 + 4*ks0*x2 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp2 = tmp1 + tmp0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp3 = 0.5
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp7 = tmp6 + tmp5
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp9 = tmp8 + tmp7
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp11 = tmp10 + tmp9
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp13 = tmp12 + tmp11
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp14 = 0.2
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp16 = 0.0001
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp18 = 1.0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp20 = 0.75
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp21 = libdevice.pow(tmp19, tmp20)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp22 = tmp4 / tmp21
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp22, xmask)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] ''', device_str='cuda')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ex/cexnz42zi4jczi3sbjkpvgp6ip4cwab33tm2ux55qog7anckqbpz.py
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.sub, aten.add, aten.norm]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Source node to ATen node mapping:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   loss => add_74, add_83, pow_2, pow_4, sub_47, sub_53, sum_1, sum_2
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Graph fragment:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %sub_47 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %view), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %add_74 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_47, 1e-06), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_74, 2.0), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [1]), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %sub_53 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %view), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %add_83 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_53, 1e-06), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_83, 2.0), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_4, [1]), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_red_fused_add_norm_sub_2 = async_compile.triton('triton_red_fused_add_norm_sub_2', '''
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton.language as tl
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton_heuristics.reduction(
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     size_hints={'x': 16, 'r0_': 64},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     filename=__file__,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_norm_sub_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] )
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton.jit
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] def triton_red_fused_add_norm_sub_2(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     rnumel = r0_numel
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xmask = xindex < xnumel
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     rbase = r0_base
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     x0 = xindex
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     _tmp10 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         roffset = r0_offset
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         rindex = r0_index
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         r0_1 = r0_index
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (2*((r0_1 % (ks2 // 4))) + ks0*(triton_helpers.div_floor_integer(r0_1,  ks2 // 4)) + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp1 = tl.load(in_ptr0 + (1 + 2*((r0_1 % (ks2 // 4))) + ks0*(triton_helpers.div_floor_integer(r0_1,  ks2 // 4)) + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp2 = tmp1 + tmp0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp3 = 0.5
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp4 = tmp2 * tmp3
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp5 = tmp4 - tmp4
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp6 = 1e-06
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp7 = tmp5 + tmp6
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp8 = tmp7 * tmp7
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp11 = _tmp10 + tmp9
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         _tmp10 = tl.where(r0_mask & xmask, tmp11, _tmp10)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp10 = tl.sum(_tmp10, 1)[:, None]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, xmask)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] ''', device_str='cuda')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gq/cgqvdkizzsebdty6l53evx73hcpprubodtyttqcia3zh43eqhn5h.py
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Source node to ATen node mapping:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   loss => add_89, clamp_min, mean, pow_3, pow_5, sub_60
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] # Graph fragment:
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %add_89 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%pow_3, 1.0), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %sub_60 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_89, %pow_5), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_60, 0), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min,), kwargs = {})
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_red_fused_add_clamp_min_mean_norm_sub_3 = async_compile.triton('triton_red_fused_add_clamp_min_mean_norm_sub_3', '''
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] import triton.language as tl
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton_heuristics.reduction(
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     size_hints={'x': 1, 'r0_': 16},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     filename=__file__,
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_clamp_min_mean_norm_sub_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] )
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] @triton.jit
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] def triton_red_fused_add_clamp_min_mean_norm_sub_3(in_out_ptr0, in_ptr0, in_ptr1, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xnumel = 1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     rnumel = r0_numel
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     rbase = r0_base
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     _tmp10 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         roffset = r0_offset
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         rindex = r0_index
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         r0_0 = r0_index
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp1 = libdevice.sqrt(tmp0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp2 = 1.0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp3 = tmp1 + tmp2
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp5 = libdevice.sqrt(tmp4)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp6 = tmp3 - tmp5
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp7 = 0.0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         tmp11 = _tmp10 + tmp9
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         _tmp10 = tl.where(r0_mask, tmp11, _tmp10)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp10 = tl.sum(_tmp10, 1)[:, None]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp12 = ks0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tmp14 = tmp10 / tmp13
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tl.debug_barrier()
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp14, None)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] ''', device_str='cuda')
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] async_compile.wait(globals())
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] del async_compile
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] def call(args):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     args.clear()
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     s0 = arg0_1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     s1 = arg1_1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     s2 = arg2_1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     assert_size_stride(arg3_1, (s0, s1, s2), (s1*s2, s2, 1))
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         ps0 = s2 // 2
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         ps1 = 4 + s1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         ps2 = 4*(s2 // 2) + s1*(s2 // 2)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         buf0 = empty_strided_cuda((s0, 1, 4 + s1, s2 // 2), (4*(s2 // 2) + s1*(s2 // 2), 4*s0*(s2 // 2) + s0*s1*(s2 // 2), s2 // 2, 1), torch.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.constant_pad_nd]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 4*s0*(s2 // 2) + s0*s1*(s2 // 2)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(arg3_1, buf0, ps0, ps1, s1, ps2, s2, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         ps3 = s1*(s2 // 2)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         buf1 = empty_strided_cuda((s0, s1, s2 // 2), (s1*(s2 // 2), s2 // 2, 1), torch.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.mul, aten.add, aten.pow, aten.div]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         triton_poi_fused_add_div_mul_pow_1_xnumel = s0*s1*(s2 // 2)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         triton_poi_fused_add_div_mul_pow_1.run(arg3_1, buf0, buf1, ps0, s2, ps3, s1, triton_poi_fused_add_div_mul_pow_1_xnumel, grid=grid(triton_poi_fused_add_div_mul_pow_1_xnumel), stream=stream0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         del arg3_1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         del buf0
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         buf2 = empty_strided_cuda((s0, ), (1, ), torch.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         buf3 = empty_strided_cuda((s0, ), (1, ), torch.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.sub, aten.add, aten.norm]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         triton_red_fused_add_norm_sub_2_r0_numel = s1*(s2 // 4)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         triton_red_fused_add_norm_sub_2.run(buf1, buf2, buf3, ps0, s1, s2, s0, triton_red_fused_add_norm_sub_2_r0_numel, grid=grid(s0), stream=stream0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         del buf1
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean]
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         triton_red_fused_add_clamp_min_mean_norm_sub_3.run(buf5, buf2, buf3, s0, 1, s0, grid=grid(1), stream=stream0)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         del buf2
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]         del buf3
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     return (buf5, )
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     arg0_1 = 10
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     arg1_1 = 3
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     arg2_1 = 64
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     arg3_1 = rand_strided((10, 3, 64), (192, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] if __name__ == "__main__":
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:55:29.986000 3201829 site-packages/torch/_inductor/graph.py:2014] [708/0] [__output_code] 
V0205 11:55:29.995000 3201829 site-packages/torch/_inductor/graph.py:2022] [708/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/se/csetogtmclhccqdg66tnterszsweikan37lfjdpqjnjizhe5a6o5.py
I0205 11:55:30.189000 3201829 site-packages/torch/_inductor/graph.py:2056] [708/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/se/csetogtmclhccqdg66tnterszsweikan37lfjdpqjnjizhe5a6o5.py

V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] Output code: 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # AOT ID: ['39_inference']
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import torch
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import math
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import random
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import os
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import tempfile
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from math import inf, nan
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from cmath import nanj
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch import device, empty_strided
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton.language as tl
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     grid,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     split_scan_grid,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     grid_combo_kernels,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     start_graph,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     end_graph,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     cooperative_reduction_grid,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] )
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] aten = torch.ops.aten
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] async_compile = AsyncCompile()
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tq/ctqjxxl5ikxegiv5wa3eisurqpzaz3qtpu2pztpnhasouiv5235j.py
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Source node to ATen node mapping:
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   x => var_mean
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Graph fragment:
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton.language as tl
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] @triton_heuristics.reduction(
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     size_hints={'x': 128, 'r0_': 128},
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     filename=__file__,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] )
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] @triton.jit
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr0, out_ptr1, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xnumel = 128
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     rnumel = r0_numel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xmask = xindex < xnumel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     rbase = r0_base
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     x0 = xindex
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         roffset = r0_offset
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         rindex = r0_index
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_1 = r0_index
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         )
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp2 = tmp5[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp3 = tmp6[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] ''', device_str='cuda')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ch/cchqju5nvoo2fxc6ljkhu4g6omi364v7sgimjmp5bxay43d2devv.py
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten._native_batch_norm_legit, aten.view, aten.glu]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Source node to ATen node mapping:
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   x => add_3, mul_6, rsqrt, sub_1, var_mean, view_1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   x_1 => glu
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   x_2 => var_mean_1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Graph fragment:
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %view_1 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%mul_6, [1, 128, %arg0_1]), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %glu : [num_users=1] = call_function[target=torch.ops.aten.glu.default](args = (%view_1, 1), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_2, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] triton_red_fused__native_batch_norm_legit_glu_view_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_glu_view_1', '''
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton.language as tl
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] @triton_heuristics.reduction(
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     size_hints={'x': 64, 'r0_': 128},
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     filename=__file__,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_glu_view_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] )
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] @triton.jit
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] def triton_red_fused__native_batch_norm_legit_glu_view_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xnumel = 64
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     rnumel = r0_numel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xmask = xindex < xnumel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     rbase = r0_base
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     x0 = xindex
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (64 + x0), xmask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (64 + x0), xmask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp22_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp22_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp22_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         roffset = r0_offset
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         rindex = r0_index
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_1 = r0_index
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp11 = tl.load(in_ptr0 + (r0_1 + 64*ks0 + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp2 = tmp0 - tmp1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp4 = ks0
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp5 = tmp4.to(tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp6 = tmp3 / tmp5
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp7 = 1e-05
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp8 = tmp6 + tmp7
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp9 = libdevice.rsqrt(tmp8)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp10 = tmp2 * tmp9
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp13 = tmp11 - tmp12
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp15 = tmp14 / tmp5
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp16 = tmp15 + tmp7
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp17 = libdevice.rsqrt(tmp16)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp18 = tmp13 * tmp17
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp19 = tl.sigmoid(tmp18)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp20 = tmp10 * tmp19
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp21 = tl.broadcast_to(tmp20, [XBLOCK, R0_BLOCK])
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp22_mean_next, tmp22_m2_next, tmp22_weight_next = triton_helpers.welford_reduce(
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]             tmp21, tmp22_mean, tmp22_m2, tmp22_weight, roffset == 0
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         )
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp22_mean = tl.where(r0_mask & xmask, tmp22_mean_next, tmp22_mean)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp22_m2 = tl.where(r0_mask & xmask, tmp22_m2_next, tmp22_m2)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp22_weight = tl.where(r0_mask & xmask, tmp22_weight_next, tmp22_weight)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tl.store(out_ptr0 + (r0_1 + ks0*x0), tmp20, r0_mask & xmask)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp25, tmp26, tmp27 = triton_helpers.welford(tmp22_mean, tmp22_m2, tmp22_weight, 1)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp22 = tmp25[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp23 = tmp26[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp24 = tmp27[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp22, xmask)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp23, xmask)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] ''', device_str='cuda')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3t/c3t7bwbncw37r6hgwzh2w6barkvs62bv7kpgf4w7l3yczk4urzdw.py
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Topologically Sorted Source Nodes: [target, loss], Original ATen: [aten.randint, aten.nll_loss2d_forward]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Source node to ATen node mapping:
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   loss => convert_element_type, div, full_default_1, gather, ne_3, ne_4, neg, sum_1, sum_2, where_1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   target => inductor_lookup_seed_default, inductor_randint_default
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] # Graph fragment:
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %inductor_randint_default : [num_users=4] = call_function[target=torch.ops.prims.inductor_randint.default](args = (0, 32, [1, 1, %arg0_1], %inductor_lookup_seed_default), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %ne_3 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%inductor_randint_default, -100), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %gather : [num_users=1] = call_function[target=torch.ops.aten.gather.default](args = (%view_4, 1, %unsqueeze), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%squeeze_4,), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_3, %neg, %full_default_1), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%where_1,), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %ne_4 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%inductor_randint_default, -100), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%ne_4,), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%sum_1, torch.float32), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_2, %convert_element_type), kwargs = {})
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] triton_red_fused_nll_loss2d_forward_randint_2 = async_compile.triton('triton_red_fused_nll_loss2d_forward_randint_2', '''
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] import triton.language as tl
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] @triton_heuristics.reduction(
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     size_hints={'x': 1, 'r0_': 128},
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     filename=__file__,
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'load_seed_offset': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': (7,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_nll_loss2d_forward_randint_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] )
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] @triton.jit
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] def triton_red_fused_nll_loss2d_forward_randint_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, load_seed_offset, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xnumel = 1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     rnumel = r0_numel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     rbase = r0_base
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     _tmp38 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     _tmp42 = tl.full([XBLOCK, R0_BLOCK], 0, tl.int64)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         roffset = r0_offset
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         rindex = r0_index
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         r0_0 = r0_index
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp1 = r0_0
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp2 = tl.full([1, 1], 0, tl.int64)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp3 = tl.full([1, 1], 32, tl.int64)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp4 = triton_helpers.randint64(tmp0, (tmp1).to(tl.uint32), tmp2, tmp3)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp5 = tl.full([1, 1], -100, tl.int64)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp6 = tmp4 != tmp5
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp7 = tl.where(tmp6, tmp4, tmp2)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp8 = tl.full([XBLOCK, R0_BLOCK], 32, tl.int32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp9 = tmp7 + tmp8
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp10 = tmp7 < 0
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp11 = tl.where(tmp10, tmp9, tmp7)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tl.device_assert(((0 <= tmp11) & (tmp11 < 32)) | ~(r0_mask), "index out of bounds: 0 <= tmp11 < 32")
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp13 = tl.load(in_ptr1 + (r0_0 + ks1*tmp11), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp14 = tl.load(in_ptr2 + (tmp11), r0_mask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp15 = tmp13 - tmp14
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp16 = tl.load(in_ptr3 + (tmp11), r0_mask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp17 = ks1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp18 = tmp17.to(tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp19 = tmp16 / tmp18
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp20 = 1e-05
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp21 = tmp19 + tmp20
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp22 = libdevice.rsqrt(tmp21)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp23 = tmp15 * tmp22
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp24 = tl.load(in_ptr1 + (r0_0 + 32*ks1 + ks1*tmp11), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp25 = tl.load(in_ptr2 + (32 + tmp11), r0_mask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp26 = tmp24 - tmp25
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp27 = tl.load(in_ptr3 + (32 + tmp11), r0_mask, eviction_policy='evict_last')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp28 = tmp27 / tmp18
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp29 = tmp28 + tmp20
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp30 = libdevice.rsqrt(tmp29)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp31 = tmp26 * tmp30
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp32 = tl.sigmoid(tmp31)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp33 = tmp23 * tmp32
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp34 = -tmp33
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp35 = 0.0
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp36 = tl.where(tmp6, tmp34, tmp35)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp37 = tl.broadcast_to(tmp36, [XBLOCK, R0_BLOCK])
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp39 = _tmp38 + tmp37
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         _tmp38 = tl.where(r0_mask, tmp39, _tmp38)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp40 = tmp6.to(tl.int64)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp41 = tl.broadcast_to(tmp40, [XBLOCK, R0_BLOCK])
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         tmp43 = _tmp42 + tmp41
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         _tmp42 = tl.where(r0_mask, tmp43, _tmp42)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp38 = tl.sum(_tmp38, 1)[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp42 = tl.sum(_tmp42, 1)[:, None]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp44 = tmp42.to(tl.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tmp45 = tmp38 / tmp44
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tl.debug_barrier()
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp45, None)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] ''', device_str='cuda')
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] async_compile.wait(globals())
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] del async_compile
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] def call(args):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     arg0_1, arg1_1 = args
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     args.clear()
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     s1 = arg0_1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     assert_size_stride(arg1_1, (1, 128, s1), (128*s1, s1, 1))
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf0 = empty_strided_cuda((1, 128, 1), (128, 1, 128), torch.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf1 = empty_strided_cuda((1, 128, 1), (128, 1, 128), torch.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg1_1, buf0, buf1, s1, 128, s1, grid=grid(128), stream=stream0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf3 = empty_strided_cuda((1, 64, s1), (64*s1, s1, 1), torch.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf4 = empty_strided_cuda((1, 64, 1), (64, 1, 64), torch.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf5 = empty_strided_cuda((1, 64, 1), (64, 1, 64), torch.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten._native_batch_norm_legit, aten.view, aten.glu]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         triton_red_fused__native_batch_norm_legit_glu_view_1.run(arg1_1, buf0, buf1, buf3, buf4, buf5, s1, 64, s1, grid=grid(64), stream=stream0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         del arg1_1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         del buf0
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         del buf1
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf7 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf7)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf9 = empty_strided_cuda((), (), torch.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         buf11 = buf9; del buf9  # reuse
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         # Topologically Sorted Source Nodes: [target, loss], Original ATen: [aten.randint, aten.nll_loss2d_forward]
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         triton_red_fused_nll_loss2d_forward_randint_2.run(buf11, buf7, buf3, buf4, buf5, 0, s1, 1, s1, grid=grid(1), stream=stream0)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         del buf3
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         del buf4
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         del buf5
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]         del buf7
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     return (buf11, )
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     arg0_1 = 100
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     arg1_1 = rand_strided((1, 128, 100), (12800, 100, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] if __name__ == "__main__":
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:41:30.287000 2062045 site-packages/torch/_inductor/graph.py:2014] [100/0] [__output_code] 
V0205 10:41:30.294000 2062045 site-packages/torch/_inductor/graph.py:2022] [100/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/er/cersjumqnfg52avcv4m3fkl7ux3s4yc6djlg7euqqg4d3uckettg.py
I0205 10:41:30.604000 2062045 site-packages/torch/_inductor/graph.py:2056] [100/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/er/cersjumqnfg52avcv4m3fkl7ux3s4yc6djlg7euqqg4d3uckettg.py

V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] Output code: 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # AOT ID: ['26_inference']
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import torch
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import math
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import random
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import os
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import tempfile
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from math import inf, nan
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from cmath import nanj
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch import device, empty_strided
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import triton
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import triton.language as tl
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     grid,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     split_scan_grid,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     grid_combo_kernels,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     start_graph,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     end_graph,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     cooperative_reduction_grid,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] )
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] aten = torch.ops.aten
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] _quantized = torch.ops._quantized
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] async_compile = AsyncCompile()
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ro/cro5mb3is6yiy4xpefrmvgkpn77xd4mkmesvmmbjaorefvoop2n2.py
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.rand]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # Source node to ATen node mapping:
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   x_1 => inductor_lookup_seed_default, inductor_random_default
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # Graph fragment:
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, 2], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] triton_poi_fused_rand_0 = async_compile.triton('triton_poi_fused_rand_0', '''
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import triton
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import triton.language as tl
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] @triton_heuristics.pointwise(
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     size_hints={'x': 8}, 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     filename=__file__,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     min_elem_per_thread=0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] )
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] @triton.jit
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] def triton_poi_fused_rand_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     xmask = xindex < xnumel
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     x0 = xindex
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tmp1 = x0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] ''', device_str='cuda')
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/26/c26vfhgcl2drn7bux7ftollw2huko7mur45ynhoykar7yzjbodk7.py
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, loss], Original ATen: [aten.replication_pad2d, aten.fractional_max_pool2d, aten.ne, aten.fill, aten.sub, aten.clamp_min, aten.zeros_like, aten.where, aten.add, aten.mean]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # Source node to ATen node mapping:
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   loss => add_55, clamp_min_2, full_1, full_2, full_default, full_default_1, mean, sub_22, where, where_1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   x => _unsafe_index, _unsafe_index_1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   x_1 => fractional_max_pool2d
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] # Graph fragment:
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %clamp_max, None]), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %clamp_max_1]), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %fractional_max_pool2d : [num_users=1] = call_function[target=torch.ops.aten.fractional_max_pool2d.default](args = (%_unsafe_index_1, [2, 2], [14, 14], %inductor_random_default), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %full_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %sym_size_int_3], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %sub_22 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_2, %view), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_22, 0), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %full_1 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1, %sym_size_int_3], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default, %clamp_min_2, %full_1), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_1, %view, %full_1), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %add_55 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %where_1), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%add_55,), kwargs = {})
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] triton_red_fused_add_clamp_min_fill_fractional_max_pool2d_mean_ne_replication_pad2d_sub_where_zeros_like_1 = async_compile.triton('triton_red_fused_add_clamp_min_fill_fractional_max_pool2d_mean_ne_replication_pad2d_sub_where_zeros_like_1', '''
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import triton
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] import triton.language as tl
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] @triton_heuristics.reduction(
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     filename=__file__,
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_clamp_min_fill_fractional_max_pool2d_mean_ne_replication_pad2d_sub_where_zeros_like_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] )
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] @triton.jit
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] def triton_red_fused_add_clamp_min_fill_fractional_max_pool2d_mean_ne_replication_pad2d_sub_where_zeros_like_1(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     xnumel = 1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     rnumel = r0_numel
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     rbase = r0_base
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     _tmp60 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         roffset = r0_offset
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         rindex = r0_index
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         r0_2 = r0_index // 196
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         r0_1 = ((r0_index // 14) % 14)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         r0_0 = (r0_index % 14)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         r0_3 = r0_index
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (2*r0_2), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp21 = tl.load(in_ptr0 + (1 + 2*r0_2), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp1 = (2 + ks0) / 13
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp2 = tmp1.to(tl.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp3 = r0_1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp4 = tmp3.to(tl.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp5 = tmp4 + tmp0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp6 = tmp5 * tmp2
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp7 = libdevice.floor(tmp6)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp8 = tmp0 * tmp2
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp9 = libdevice.floor(tmp8)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp10 = tmp7 - tmp9
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp11 = tmp10.to(tl.int64)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp12 = tl.full([1, 1], 13, tl.int64)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp13 = tmp4 < tmp12
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp14 = 2 + ks0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp15 = tl.where(tmp13, tmp11, tmp14)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp16 = 4 + ks0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp17 = tmp15 + tmp16
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp18 = tmp15 < 0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp19 = tl.where(tmp18, tmp17, tmp15)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tl.device_assert(((0 <= tmp19) & (tmp19 < 4 + ks0)) | ~(r0_mask), "index out of bounds: 0 <= tmp19 < 4 + ks0")
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp22 = (2 + ks1) / 13
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp23 = tmp22.to(tl.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp24 = r0_0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp25 = tmp24.to(tl.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp26 = tmp25 + tmp21
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp27 = tmp26 * tmp23
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp28 = libdevice.floor(tmp27)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp29 = tmp21 * tmp23
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp30 = libdevice.floor(tmp29)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp31 = tmp28 - tmp30
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp32 = tmp31.to(tl.int64)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp33 = tmp25 < tmp12
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp34 = 2 + ks1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp35 = tl.where(tmp33, tmp32, tmp34)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp36 = 4 + ks1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp37 = tmp35 + tmp36
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp38 = tmp35 < 0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp39 = tl.where(tmp38, tmp37, tmp35)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tl.device_assert(((0 <= tmp39) & (tmp39 < 4 + ks1)) | ~(r0_mask), "index out of bounds: 0 <= tmp39 < 4 + ks1")
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp41 = tl.load(in_ptr1 + (ks1*(((-1) + ks0) * (((-1) + ks0) <= (((0) * ((0) >= ((-2) + tmp19)) + ((-2) + tmp19) * (((-2) + tmp19) > (0))))) + (((0) * ((0) >= ((-2) + tmp19)) + ((-2) + tmp19) * (((-2) + tmp19) > (0)))) * ((((0) * ((0) >= ((-2) + tmp19)) + ((-2) + tmp19) * (((-2) + tmp19) > (0)))) < ((-1) + ks0))) + ks0*ks1*r0_2 + (((-1) + ks1) * (((-1) + ks1) <= (((0) * ((0) >= ((-2) + tmp39)) + ((-2) + tmp39) * (((-2) + tmp39) > (0))))) + (((0) * ((0) >= ((-2) + tmp39)) + ((-2) + tmp39) * (((-2) + tmp39) > (0)))) * ((((0) * ((0) >= ((-2) + tmp39)) + ((-2) + tmp39) * (((-2) + tmp39) > (0)))) < ((-1) + ks1)))), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp42 = tl.load(in_ptr1 + (ks1*(((-1) + ks0) * (((-1) + ks0) <= (((0) * ((0) >= ((-2) + tmp19)) + ((-2) + tmp19) * (((-2) + tmp19) > (0))))) + (((0) * ((0) >= ((-2) + tmp19)) + ((-2) + tmp19) * (((-2) + tmp19) > (0)))) * ((((0) * ((0) >= ((-2) + tmp19)) + ((-2) + tmp19) * (((-2) + tmp19) > (0)))) < ((-1) + ks0))) + ks0*ks1*r0_2 + (((-1) + ks1) * (((-1) + ks1) <= (((0) * ((0) >= ((-1) + tmp39)) + ((-1) + tmp39) * (((-1) + tmp39) > (0))))) + (((0) * ((0) >= ((-1) + tmp39)) + ((-1) + tmp39) * (((-1) + tmp39) > (0)))) * ((((0) * ((0) >= ((-1) + tmp39)) + ((-1) + tmp39) * (((-1) + tmp39) > (0)))) < ((-1) + ks1)))), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp43 = triton_helpers.maximum(tmp42, tmp41)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp44 = tl.load(in_ptr1 + (ks1*(((-1) + ks0) * (((-1) + ks0) <= (((0) * ((0) >= ((-1) + tmp19)) + ((-1) + tmp19) * (((-1) + tmp19) > (0))))) + (((0) * ((0) >= ((-1) + tmp19)) + ((-1) + tmp19) * (((-1) + tmp19) > (0)))) * ((((0) * ((0) >= ((-1) + tmp19)) + ((-1) + tmp19) * (((-1) + tmp19) > (0)))) < ((-1) + ks0))) + ks0*ks1*r0_2 + (((-1) + ks1) * (((-1) + ks1) <= (((0) * ((0) >= ((-2) + tmp39)) + ((-2) + tmp39) * (((-2) + tmp39) > (0))))) + (((0) * ((0) >= ((-2) + tmp39)) + ((-2) + tmp39) * (((-2) + tmp39) > (0)))) * ((((0) * ((0) >= ((-2) + tmp39)) + ((-2) + tmp39) * (((-2) + tmp39) > (0)))) < ((-1) + ks1)))), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp45 = triton_helpers.maximum(tmp44, tmp43)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp46 = tl.load(in_ptr1 + (ks1*(((-1) + ks0) * (((-1) + ks0) <= (((0) * ((0) >= ((-1) + tmp19)) + ((-1) + tmp19) * (((-1) + tmp19) > (0))))) + (((0) * ((0) >= ((-1) + tmp19)) + ((-1) + tmp19) * (((-1) + tmp19) > (0)))) * ((((0) * ((0) >= ((-1) + tmp19)) + ((-1) + tmp19) * (((-1) + tmp19) > (0)))) < ((-1) + ks0))) + ks0*ks1*r0_2 + (((-1) + ks1) * (((-1) + ks1) <= (((0) * ((0) >= ((-1) + tmp39)) + ((-1) + tmp39) * (((-1) + tmp39) > (0))))) + (((0) * ((0) >= ((-1) + tmp39)) + ((-1) + tmp39) * (((-1) + tmp39) > (0)))) * ((((0) * ((0) >= ((-1) + tmp39)) + ((-1) + tmp39) * (((-1) + tmp39) > (0)))) < ((-1) + ks1)))), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp47 = triton_helpers.maximum(tmp46, tmp45)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp48 = libdevice.tanh(tmp47)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp49 = tmp47 - tmp48
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp50 = 1.0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp51 = tmp50 - tmp49
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp52 = 0.0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp53 = triton_helpers.maximum(tmp51, tmp52)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp54 = tl.full([1, 1], False, tl.int1)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp55 = tl.where(tmp54, tmp53, tmp52)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp56 = tl.full([1, 1], True, tl.int1)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp57 = tl.where(tmp56, tmp49, tmp52)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp58 = tmp55 + tmp57
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp59 = tl.broadcast_to(tmp58, [XBLOCK, R0_BLOCK])
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         tmp61 = _tmp60 + tmp59
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         _tmp60 = tl.where(r0_mask, tmp61, _tmp60)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tmp60 = tl.sum(_tmp60, 1)[:, None]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tmp62 = 196*ks2
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tmp63 = tmp62.to(tl.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tmp64 = tmp60 / tmp63
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tl.debug_barrier()
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp64, None)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] ''', device_str='cuda')
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] async_compile.wait(globals())
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] del async_compile
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] def call(args):
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     args.clear()
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     s0 = arg0_1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     s1 = arg1_1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     s2 = arg2_1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         torch.cuda.set_device(0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         buf1 = empty_strided_cuda((1, s0, 2), (2*s0, 2, 1), torch.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.rand]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         triton_poi_fused_rand_0_xnumel = 2*s0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         triton_poi_fused_rand_0.run(buf0, buf1, 0, triton_poi_fused_rand_0_xnumel, grid=grid(triton_poi_fused_rand_0_xnumel), stream=stream0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         del buf0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, loss], Original ATen: [aten.replication_pad2d, aten.fractional_max_pool2d, aten.ne, aten.fill, aten.sub, aten.clamp_min, aten.zeros_like, aten.where, aten.add, aten.mean]
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         triton_red_fused_add_clamp_min_fill_fractional_max_pool2d_mean_ne_replication_pad2d_sub_where_zeros_like_1_r0_numel = 196*s0
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         triton_red_fused_add_clamp_min_fill_fractional_max_pool2d_mean_ne_replication_pad2d_sub_where_zeros_like_1.run(buf4, buf1, arg3_1, s1, s2, s0, 1, triton_red_fused_add_clamp_min_fill_fractional_max_pool2d_mean_ne_replication_pad2d_sub_where_zeros_like_1_r0_numel, grid=grid(1), stream=stream0)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         del arg3_1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]         del buf1
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     return (buf4, )
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     arg0_1 = 3
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     arg1_1 = 28
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     arg2_1 = 28
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     arg3_1 = rand_strided((1, 3, 28, 28), (2352, 784, 28, 1), device='cuda:0', dtype=torch.float32)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] if __name__ == "__main__":
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:30:26.509000 2031468 site-packages/torch/_inductor/graph.py:2014] [105/0] [__output_code] 
V0127 12:30:26.515000 2031468 site-packages/torch/_inductor/graph.py:2022] [105/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h6/ch64g4ueiqkmdtmaw4bpbpayqj64qwo5ynkui24bgz3ni22dcpfs.py
I0127 12:30:27.427000 2031468 site-packages/torch/_inductor/graph.py:2056] [105/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h6/ch64g4ueiqkmdtmaw4bpbpayqj64qwo5ynkui24bgz3ni22dcpfs.py

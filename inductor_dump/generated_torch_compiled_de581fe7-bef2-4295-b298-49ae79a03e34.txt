V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] Output code: 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # AOT ID: ['176_inference']
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import torch
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import math
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import random
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import os
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import tempfile
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from math import inf, nan
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from cmath import nanj
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch import device, empty_strided
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import triton
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import triton.language as tl
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     grid,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     split_scan_grid,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     grid_combo_kernels,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     start_graph,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     end_graph,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] )
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] aten = torch.ops.aten
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ib/cib5ekj7thpr45kt7brvmgnj7yfcwvkpb4nogs6e7lvyq5kblbmd.py
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._softmax]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   x => amax, exp, sub, sum_1
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # Graph fragment:
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg3_1, [-3], True), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg3_1, %amax), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-3], True), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] triton_red_fused__softmax_0 = async_compile.triton('triton_red_fused__softmax_0', '''
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import triton
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import triton.language as tl
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     size_hints={'x': 1024, 'r0_': 16},
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     filename=__file__,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] )
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] @triton.jit
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] def triton_red_fused__softmax_0(in_ptr0, out_ptr0, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     rnumel = r0_numel
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     rbase = r0_base
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     x0 = xindex
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         rindex = r0_index
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + ks0*ks1*r0_1), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp3 = triton_helpers.maximum(_tmp2, tmp1)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp2 = triton_helpers.max2(_tmp2, 1)[:, None]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     _tmp8 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         roffset = r0_offset
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         rindex = r0_index
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         r0_1 = r0_index
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp4 = tl.load(in_ptr0 + (x0 + ks0*ks1*r0_1), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp5 = tmp4 - tmp2
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp6 = tl_math.exp(tmp5)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         tmp9 = _tmp8 + tmp7
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         _tmp8 = tl.where(r0_mask & xmask, tmp9, _tmp8)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp8 = tl.sum(_tmp8, 1)[:, None]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp8, xmask)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ap/cap5jssomvldckhsl7snqr7zfx2qo73d4rxxmt6zdcmm3w7rwhpt.py
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, log_probs], Original ATen: [aten._softmax, aten.log]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   log_probs => log
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   x => div, exp, sub
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] # Graph fragment:
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg3_1, %amax), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%view,), kwargs = {})
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] triton_poi_fused__softmax_log_1 = async_compile.triton('triton_poi_fused__softmax_log_1', '''
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import triton
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] import triton.language as tl
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     filename=__file__,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_log_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] )
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] @triton.jit
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] def triton_poi_fused__softmax_log_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     x2 = xindex
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp5 = tmp3 / tmp4
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tmp6 = tl_math.log(tmp5)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp5, xmask)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp6, xmask)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] cpp_fused_full_randint_2 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'int64_t*', 'int64_t*', 'const int64_t', 'const int64_t', 'const int64_t'], '''
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                        int64_t* out_ptr0,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                        int64_t* out_ptr1,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                        int64_t* out_ptr2,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                        const int64_t ks0,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                        const int64_t ks1,
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                        const int64_t ks2)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         #pragma GCC ivdep
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(10L); x0+=static_cast<int64_t>(1L))
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]             {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                 {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     auto tmp1 = x0;
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     auto tmp3 = static_cast<int64_t>(1);
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     auto tmp4 = ks0;
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     auto tmp5 = c10::convert<int64_t>(tmp4);
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     auto tmp6 = randint64_cpu(tmp0, tmp2, tmp3, tmp5);
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp6;
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                 }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]             }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]             {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                 auto tmp0 = ks1*ks2;
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                 auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp1;
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]             }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]             {
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                 auto tmp0 = static_cast<int64_t>(10);
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]                 out_ptr2[static_cast<int64_t>(0L)] = tmp0;
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]             }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] }
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] ''')
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] async_compile.wait(globals())
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] del async_compile
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] def call(args):
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     args.clear()
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     s0 = arg0_1
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     s1 = arg1_1
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     s2 = arg2_1
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 1, s1, s2), (s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 1, s1, s2), (s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._softmax]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         triton_red_fused__softmax_0_xnumel = s1*s2
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         triton_red_fused__softmax_0.run(arg3_1, buf0, buf1, s1, s2, triton_red_fused__softmax_0_xnumel, s0, grid=grid(triton_red_fused__softmax_0_xnumel), stream=stream0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         ps0 = s1*s2
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1), torch.float32)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         buf3 = empty_strided_cuda((1, s0, s1*s2), (s0*s1*s2, s1*s2, 1), torch.float32)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, log_probs], Original ATen: [aten._softmax, aten.log]
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         triton_poi_fused__softmax_log_1_xnumel = s0*s1*s2
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         triton_poi_fused__softmax_log_1.run(arg3_1, buf0, buf1, buf2, buf3, ps0, triton_poi_fused__softmax_log_1_xnumel, grid=grid(triton_poi_fused__softmax_log_1_xnumel), stream=stream0)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         del arg3_1
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         del buf0
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]         del buf1
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     buf4 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf4)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     buf5 = empty_strided_cpu((1, 10), (10, 1), torch.int64)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     buf6 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     buf7 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     cpp_fused_full_randint_2(buf4, buf5, buf6, buf7, s0, s1, s2)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     return (buf3, buf5, buf6, buf7, reinterpret_tensor(buf2, (1, s0, s1*s2), (s0*s1*s2, s1*s2, 1), 0), )
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     arg0_1 = 10
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     arg1_1 = 32
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     arg2_1 = 32
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     arg3_1 = rand_strided((1, 10, 32, 32), (10240, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] if __name__ == "__main__":
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:55:11.939000 3201829 site-packages/torch/_inductor/graph.py:2014] [665/0_1] [__output_code] 
V0205 11:55:11.943000 3201829 site-packages/torch/_inductor/graph.py:2022] [665/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/su/csuiqeifmm5inolnand6ntqqysiwoojrjfkklcsenylbjqiw3eov.py
I0205 11:55:12.914000 3201829 site-packages/torch/_inductor/graph.py:2056] [665/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/su/csuiqeifmm5inolnand6ntqqysiwoojrjfkklcsenylbjqiw3eov.py

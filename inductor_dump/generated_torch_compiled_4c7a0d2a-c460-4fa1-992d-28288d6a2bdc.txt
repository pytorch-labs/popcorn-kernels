V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] Output code: 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # AOT ID: ['84_inference']
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import torch
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import math
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import random
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import os
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import tempfile
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from math import inf, nan
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from cmath import nanj
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import triton
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import triton.language as tl
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     grid,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     split_scan_grid,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     grid_combo_kernels,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     start_graph,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     end_graph,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] )
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/j4/cj4pfikvsejsfeq55f5hywom4t6j66vf4ks6hqfbwie33of73dys.py
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.rand]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] #   x_2 => inductor_lookup_seed_default, inductor_random_default
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # Graph fragment:
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 1, 3], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] triton_poi_fused_rand_0 = async_compile.triton('triton_poi_fused_rand_0', '''
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import triton
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import triton.language as tl
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     size_hints={'x': 4}, 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     filename=__file__,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] )
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] @triton.jit
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] def triton_poi_fused_rand_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xnumel = 3
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     x0 = xindex
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tmp1 = x0
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7j/c7jsg5s3udg6ssx7filpp7oidgkcciwl352t5mhevo7kgeftwpcs.py
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.tanh, aten.sub]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] #   x => sub, tanh
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] # Graph fragment:
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%arg0_1,), kwargs = {})
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %tanh), kwargs = {})
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] triton_poi_fused_sub_tanh_1 = async_compile.triton('triton_poi_fused_sub_tanh_1', '''
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import triton
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] import triton.language as tl
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     size_hints={'x': 4096}, 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     filename=__file__,
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sub_tanh_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] )
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] @triton.jit
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] def triton_poi_fused_sub_tanh_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xnumel = 4096
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     x0 = xindex
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), None)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, None)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] del async_compile
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] def call(args):
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     arg0_1, = args
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     args.clear()
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     assert_size_stride(arg0_1, (1, 1, 16, 16, 16), (4096, 4096, 256, 16, 1))
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 1, 3), (3, 3, 1), torch.float32)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.rand]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         triton_poi_fused_rand_0.run(buf0, buf1, 0, 3, grid=grid(3), stream=stream0)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         del buf0
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 1, 16, 16, 16), (4096, 4096, 256, 16, 1), torch.float32)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.tanh, aten.sub]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         triton_poi_fused_sub_tanh_1.run(arg0_1, buf2, 4096, grid=grid(4096), stream=stream0)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         del arg0_1
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, x_2], Original ATen: [aten.tanh, aten.sub, aten.view, aten.fractional_max_pool3d]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         buf3 = torch.ops.aten.fractional_max_pool3d.default(buf2, [2, 2, 2], [8, 8, 8], buf1)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         del buf1
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         del buf2
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         buf4 = buf3[0]
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]         del buf3
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     return (buf4, )
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     arg0_1 = rand_strided((1, 1, 16, 16, 16), (4096, 4096, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:23.258000 703210 site-packages/torch/_inductor/graph.py:2014] [367/0_1] [__output_code] 
V0127 11:35:23.260000 703210 site-packages/torch/_inductor/graph.py:2022] [367/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/oq/coqdrhvrls474kz2st6upltniryftwcev74x6shdkpkv7imnnaqy.py
I0127 11:35:23.372000 703210 site-packages/torch/_inductor/graph.py:2056] [367/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/oq/coqdrhvrls474kz2st6upltniryftwcev74x6shdkpkv7imnnaqy.py
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] Output code: 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] # AOT ID: ['85_inference']
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import torch
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import math
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import random
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import os
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import tempfile
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from math import inf, nan
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from cmath import nanj
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch import device, empty_strided
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import triton
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import triton.language as tl
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     grid,
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     split_scan_grid,
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     grid_combo_kernels,
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     start_graph,
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     end_graph,
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] )
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] aten = torch.ops.aten
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tk/ctkaev4r7gvr22pkc26dsimbgkz6sl6x3bhg2stufy77nvt26oat.py
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.copy]
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] #   x_1 => copy
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] # Graph fragment:
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_1, %slice_2), kwargs = {})
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] #   %slice_scatter_default : [num_users=3] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%empty, %copy, 2, 1, 9), kwargs = {})
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] #   %slice_scatter_default_1 : [num_users=3] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %slice_7, 2, 0, 1), kwargs = {})
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] #   %slice_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_1, %slice_12, 2, 9, 10), kwargs = {})
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] triton_poi_fused_copy_0 = async_compile.triton('triton_poi_fused_copy_0', '''
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import triton
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] import triton.language as tl
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     size_hints={'x': 1024}, 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     filename=__file__,
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] )
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] @triton.jit
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] def triton_poi_fused_copy_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     xnumel = 640
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     x0 = (xindex % 10)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     x1 = xindex // 10
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     x2 = xindex
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp0 = x0
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp1 = tl.full([1], 9, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp3 = (-8) + x0
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp4 = tl.full([1], 1, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp5 = tmp3 < tmp4
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp6 = tmp5 & tmp2
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp7 = x0
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp8 = tl.full([1], 1, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp9 = tmp7 >= tmp8
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp10 = tl.full([1], 9, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp11 = tmp7 < tmp10
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp12 = tmp9 & tmp11
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp13 = tmp12 & tmp6
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp14 = tl.load(in_ptr0 + ((-1) + x0 + 8*x1), tmp13 & xmask, other=0.0)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp15 = 0.1
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp16 = tmp14 <= tmp15
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp17 = 0.5
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp18 = tl.where(tmp16, tmp17, tmp14)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp20 = tl.where(tmp13, tmp18, tmp19)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp21 = float("nan")
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp22 = tl.where(tmp12, tmp20, tmp21)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp24 = tl.where(tmp6, tmp22, tmp23)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp25 = tmp3 >= tmp4
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp26 = tl.full([1], 9, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp27 = tmp3 < tmp26
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp28 = tmp25 & tmp27
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp29 = tmp28 & tmp2
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp30 = tl.load(in_ptr0 + ((-9) + x0 + 8*x1), tmp29 & xmask, other=0.0)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp31 = 0.1
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp32 = tmp30 <= tmp31
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp33 = 0.5
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp34 = tl.where(tmp32, tmp33, tmp30)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp35 = tl.full(tmp34.shape, 0.0, tmp34.dtype)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp36 = tl.where(tmp29, tmp34, tmp35)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp37 = float("nan")
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp38 = tl.where(tmp28, tmp36, tmp37)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp39 = tl.where(tmp5, tmp24, tmp38)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp40 = tl.full(tmp39.shape, 0.0, tmp39.dtype)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp41 = tl.where(tmp2, tmp39, tmp40)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp42 = tl.full([1], 1, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp43 = tmp0 < tmp42
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp44 = 8 + x0
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp45 = tl.full([1], 1, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp46 = tmp44 >= tmp45
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp47 = tl.full([1], 9, tl.int64)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp48 = tmp44 < tmp47
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp49 = tmp46 & tmp48
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp50 = tmp49 & tmp43
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp51 = tl.load(in_ptr0 + (7 + x0 + 8*x1), tmp50 & xmask, other=0.0)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp52 = 0.1
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp53 = tmp51 <= tmp52
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp54 = 0.5
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp55 = tl.where(tmp53, tmp54, tmp51)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp56 = tl.full(tmp55.shape, 0.0, tmp55.dtype)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp57 = tl.where(tmp50, tmp55, tmp56)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp58 = float("nan")
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp59 = tl.where(tmp49, tmp57, tmp58)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp60 = tl.full(tmp59.shape, 0.0, tmp59.dtype)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp61 = tl.where(tmp43, tmp59, tmp60)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp62 = tmp0 >= tmp42
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp63 = tmp0 < tmp1
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp64 = tmp62 & tmp63
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp65 = tl.load(in_ptr0 + ((-1) + x0 + 8*x1), tmp64 & xmask, other=0.0)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp66 = 0.1
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp67 = tmp65 <= tmp66
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp68 = 0.5
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp69 = tl.where(tmp67, tmp68, tmp65)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp70 = tl.full(tmp69.shape, 0.0, tmp69.dtype)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp71 = tl.where(tmp64, tmp69, tmp70)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp72 = float("nan")
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp73 = tl.where(tmp64, tmp71, tmp72)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp74 = tl.where(tmp43, tmp61, tmp73)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tmp75 = tl.where(tmp2, tmp41, tmp74)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp75, xmask)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] ''', device_str='cuda')
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] async_compile.wait(globals())
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] del async_compile
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] def call(args):
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     arg0_1, = args
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     args.clear()
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     assert_size_stride(arg0_1, (1, 1, 8, 8, 8), (512, 512, 64, 8, 1))
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]         buf1 = empty_strided_cuda((8, 8, 10), (80, 10, 1), torch.float32)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.copy]
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]         triton_poi_fused_copy_0.run(arg0_1, buf1, 640, grid=grid(640), stream=stream0)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]         del arg0_1
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     return (reinterpret_tensor(buf1, (10, 8, 8), (64, 8, 1), 0), )
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     arg0_1 = rand_strided((1, 1, 8, 8, 8), (512, 512, 64, 8, 1), device='cuda:0', dtype=torch.float32)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] if __name__ == "__main__":
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:35:23.550000 703210 site-packages/torch/_inductor/graph.py:2014] [368/0_1] [__output_code] 
V0127 11:35:23.553000 703210 site-packages/torch/_inductor/graph.py:2022] [368/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/cm/ccmrqy7itl3ha5bs2inoixcoyppr5sszjces3cxc55kfyqj7atwi.py
I0127 11:35:23.714000 703210 site-packages/torch/_inductor/graph.py:2056] [368/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/cm/ccmrqy7itl3ha5bs2inoixcoyppr5sszjces3cxc55kfyqj7atwi.py

V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] Output code: 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] # AOT ID: ['0_inference']
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import torch
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import math
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import random
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import os
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import tempfile
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from math import inf, nan
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from cmath import nanj
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import triton
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import triton.language as tl
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     grid,
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     split_scan_grid,
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     start_graph,
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     end_graph,
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] )
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/y3/cy3hw64bmvewpithkeocwqetenfnikjeydgaltoy33qxaat6bbo3.py
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1, result], Original ATen: [aten.constant_pad_nd, aten.avg_pool2d, aten.threshold]
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   result => full_default, le, where
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   x => constant_pad_nd
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   x_1 => avg_pool2d
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] # Graph fragment:
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg0_1, [1, 1, 1, 1], 0.0), kwargs = {})
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   %avg_pool2d : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%constant_pad_nd, [2, 2], [2, 2]), kwargs = {})
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%avg_pool2d, 0.5), kwargs = {})
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %full_default, %avg_pool2d), kwargs = {})
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] triton_poi_fused_avg_pool2d_constant_pad_nd_threshold_0 = async_compile.triton('triton_poi_fused_avg_pool2d_constant_pad_nd_threshold_0', '''
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import triton
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] import triton.language as tl
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     filename=__file__,
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_constant_pad_nd_threshold_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] )
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] @triton.jit
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] def triton_poi_fused_avg_pool2d_constant_pad_nd_threshold_0(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     xnumel = 3267
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     x1 = ((xindex // 33) % 33)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     x0 = (xindex % 33)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     x2 = xindex // 1089
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     x3 = (xindex % 1089)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     x5 = xindex
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp0 = (-1) + 2*x1
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp3 = tl.full([1], 64, tl.int64)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp5 = (-1) + 2*x0
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp7 = tmp5 < tmp3
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp8 = tmp2 & tmp4
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp9 = tmp8 & tmp6
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp10 = tmp9 & tmp7
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-65) + 2*x0 + 128*x1 + 4096*x2), tmp10 & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp12 = 2*x0
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp14 = tmp12 < tmp3
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp15 = tmp8 & tmp13
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp16 = tmp15 & tmp14
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-64) + 2*x0 + 128*x1 + 4096*x2), tmp16 & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp18 = tmp17 + tmp11
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp19 = 2*x1
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp20 = tmp19 >= tmp1
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp21 = tmp19 < tmp3
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp22 = tmp20 & tmp21
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp23 = tmp22 & tmp6
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp24 = tmp23 & tmp7
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp25 = tl.load(in_ptr0 + ((-1) + 2*x0 + 128*x1 + 4096*x2), tmp24 & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp26 = tmp25 + tmp18
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp27 = tmp22 & tmp13
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp28 = tmp27 & tmp14
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp29 = tl.load(in_ptr0 + (2*x0 + 128*x1 + 4096*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp30 = tmp29 + tmp26
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp31 = 0.25
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp32 = tmp30 * tmp31
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp33 = 0.5
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp34 = tmp32 <= tmp33
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp35 = 0.0
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tmp36 = tl.where(tmp34, tmp35, tmp32)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     tl.store(out_ptr1 + (x5), tmp36, xmask)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] del async_compile
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] def call(args):
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     arg0_1, = args
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     args.clear()
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (1, 3, 64, 64), (12288, 4096, 64, 1))
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 3, 33, 33), (3267, 1089, 33, 1), torch.float32)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1, result], Original ATen: [aten.constant_pad_nd, aten.avg_pool2d, aten.threshold]
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]         triton_poi_fused_avg_pool2d_constant_pad_nd_threshold_0.run(arg0_1, buf1, 3267, grid=grid(3267), stream=stream0)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]         del arg0_1
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     return (reinterpret_tensor(buf1, (1, 3, 1, 33, 33), (3267, 1089, 1089, 33, 1), 0), )
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     arg0_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:38:54.756000 2062045 site-packages/torch/_inductor/graph.py:2014] [0/0_1] [__output_code] 
V0205 10:38:54.759000 2062045 site-packages/torch/_inductor/graph.py:2022] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sj/csjt53o33y6vklithrfplbe3pcnqda2bzcaz5au2m4ta62ychzaj.py
I0205 10:38:54.918000 2062045 site-packages/torch/_inductor/graph.py:2056] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sj/csjt53o33y6vklithrfplbe3pcnqda2bzcaz5au2m4ta62ychzaj.py
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] Output code: 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # AOT ID: ['1_inference']
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import torch
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import math
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import random
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import os
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import tempfile
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from math import inf, nan
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from cmath import nanj
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch import device, empty_strided
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton.language as tl
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     grid,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     split_scan_grid,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     grid_combo_kernels,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     start_graph,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     end_graph,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     cooperative_reduction_grid,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] )
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] aten = torch.ops.aten
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] async_compile = AsyncCompile()
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2u/c2uio5agy6zf3faddgdmtmmahogsytx7pojobedoblrtu6wecsqf.py
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.bernoulli]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Source node to ATen node mapping:
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   x_1 => inductor_lookup_seed_default, inductor_random_default
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Graph fragment:
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 1, 1, 1, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] triton_poi_fused_bernoulli_0 = async_compile.triton('triton_poi_fused_bernoulli_0', '''
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton.language as tl
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     size_hints={'x': 1}, 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     filename=__file__,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     min_elem_per_thread=0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] )
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] @triton.jit
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] def triton_poi_fused_bernoulli_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xnumel = 1
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp2, None)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] ''', device_str='cuda')
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7w/c7wbfinwy63p2pnytjmx4q6jepq6si4igi7lwqdrh4sv27i7q7kj.py
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Topologically Sorted Source Nodes: [positive, triplet_loss, negative], Original ATen: [aten.roll, aten.sub, aten.add, aten.norm]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Source node to ATen node mapping:
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   negative => index_1
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   positive => index
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   triplet_loss => add_2, add_3, pow_1, pow_3, sub, sub_1, sum_1, sum_2
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Graph fragment:
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%squeeze_1, [%fmod]), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_1, %index), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub, 1e-06), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_2, 2.0), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [3]), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %index_1 : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%squeeze_1, [%fmod_1]), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%squeeze_1, %index_1), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub_1, 1e-06), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_3, 2.0), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [3]), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] triton_per_fused_add_norm_roll_sub_1 = async_compile.triton('triton_per_fused_add_norm_roll_sub_1', '''
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton.language as tl
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     size_hints={'x': 128, 'r0_': 64},
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     filename=__file__,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_norm_roll_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] )
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] @triton.jit
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] def triton_per_fused_add_norm_roll_sub_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xnumel = 99
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_numel = 33
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     R0_BLOCK: tl.constexpr = 64
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     rnumel = r0_numel
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xmask = xindex < xnumel
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_offset = 0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     roffset = r0_offset
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     rindex = r0_index
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_1 = r0_index
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     x0 = xindex
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 33*x0), r0_mask & xmask, other=0.0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp3 = 0.5
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp4 = tmp2 < tmp3
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp6 = 2.0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp7 = tmp5 * tmp6
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp8 = tmp0 * tmp7
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp9 = tmp8 - tmp8
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp10 = 1e-06
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK, R0_BLOCK])
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp15 = tl.where(r0_mask & xmask, tmp13, 0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp16 = tl.sum(tmp15, 1)[:, None]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp16, xmask)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp16, xmask)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] ''', device_str='cuda')
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/f6/cf6df2h24wrql5okja7dwxo5hjfrzgpio3xws5bsuyvl5b2dwwss.py
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Topologically Sorted Source Nodes: [triplet_loss, hinge_loss, add], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.ne, aten.fill, aten.zeros_like, aten.where]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Source node to ATen node mapping:
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   add => add_6
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   hinge_loss => add_5, clamp_min_1, full_default, full_default_1, full_default_2, full_default_3, mean_1, sub_3, where, where_1
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   triplet_loss => add_4, clamp_min, mean, pow_2, pow_4, sub_2
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] # Graph fragment:
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%pow_2, 1.0), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %pow_4), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_2, 0), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min,), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default_1, %select_5), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_2, %clamp_min_1, %full_default), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_3, %select_5, %full_default), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %where_1), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%add_5,), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %mean_1), kwargs = {})
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2 = async_compile.triton('triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2', '''
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] import triton.language as tl
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     size_hints={'x': 1, 'r0_': 128},
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     filename=__file__,
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] )
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] @triton.jit
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] def triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xnumel = 1
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_numel = 99
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     R0_BLOCK: tl.constexpr = 128
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     rnumel = r0_numel
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_offset = 0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     roffset = r0_offset
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     rindex = r0_index
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     r0_0 = r0_index
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0_0), r0_mask, other=0.0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (0))
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp16 = tl.broadcast_to(tmp15, [XBLOCK, 1])
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (0))
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, 1])
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp1 = libdevice.sqrt(tmp0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp2 = 1.0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp5 = libdevice.sqrt(tmp4)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp6 = tmp3 - tmp5
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp7 = 0.0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp11 = tl.where(r0_mask, tmp9, 0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp12 = tl.sum(tmp11, 1)[:, None]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp13 = 99.0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp14 = tmp12 / tmp13
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp19 = 0.5
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp20 = tmp18 < tmp19
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp21 = tmp20.to(tl.float32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp22 = 2.0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp23 = tmp21 * tmp22
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp24 = tmp16 * tmp23
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp25 = tmp2 - tmp24
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp7)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp27 = tl.full([1, 1], False, tl.int1)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp28 = tl.where(tmp27, tmp26, tmp7)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp29 = tl.full([1, 1], True, tl.int1)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp30 = tl.where(tmp29, tmp24, tmp7)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp31 = tmp28 + tmp30
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp32 = tmp31 / tmp2
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tmp33 = tmp14 + tmp32
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tl.debug_barrier()
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp33, None)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] ''', device_str='cuda')
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] async_compile.wait(globals())
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] del async_compile
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] def call(args):
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     arg0_1, = args
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     args.clear()
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     assert_size_stride(arg0_1, (1, 3, 1, 33, 33), (3267, 1089, 1089, 33, 1))
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         buf1 = empty_strided_cuda((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), torch.float32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.bernoulli]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         triton_poi_fused_bernoulli_0.run(buf0, buf1, 0, 1, grid=grid(1), stream=stream0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         del buf0
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         buf2 = empty_strided_cuda((1, 3, 33), (99, 33, 1), torch.float32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         buf3 = empty_strided_cuda((1, 3, 33), (99, 33, 1), torch.float32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [positive, triplet_loss, negative], Original ATen: [aten.roll, aten.sub, aten.add, aten.norm]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         triton_per_fused_add_norm_roll_sub_1.run(arg0_1, buf1, buf2, buf3, 99, 33, grid=grid(99), stream=stream0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         # Topologically Sorted Source Nodes: [triplet_loss, hinge_loss, add], Original ATen: [aten.norm, aten.add, aten.sub, aten.clamp_min, aten.mean, aten.ne, aten.fill, aten.zeros_like, aten.where]
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         triton_per_fused_add_clamp_min_fill_mean_ne_norm_sub_where_zeros_like_2.run(buf5, buf2, buf3, arg0_1, buf1, 1, 99, grid=grid(1), stream=stream0)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         del arg0_1
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         del buf1
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         del buf2
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]         del buf3
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     return (buf5, )
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     arg0_1 = rand_strided((1, 3, 1, 33, 33), (3267, 1089, 1089, 33, 1), device='cuda:0', dtype=torch.float32)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] if __name__ == "__main__":
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:38:55.333000 2062045 site-packages/torch/_inductor/graph.py:2014] [1/0] [__output_code] 
V0205 10:38:55.338000 2062045 site-packages/torch/_inductor/graph.py:2022] [1/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5f/c5fva6fl7hukthqslkj3cgmyxuenpjtuiopc4d4jjmry2loisf4l.py
I0205 10:38:55.665000 2062045 site-packages/torch/_inductor/graph.py:2056] [1/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5f/c5fva6fl7hukthqslkj3cgmyxuenpjtuiopc4d4jjmry2loisf4l.py

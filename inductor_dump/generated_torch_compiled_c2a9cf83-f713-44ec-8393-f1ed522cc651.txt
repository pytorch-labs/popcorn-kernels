V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] Output code: 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # AOT ID: ['30_inference']
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import torch
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import math
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import random
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import os
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import tempfile
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from math import inf, nan
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from cmath import nanj
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch import device, empty_strided
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import triton
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import triton.language as tl
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     grid,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     split_scan_grid,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     grid_combo_kernels,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     start_graph,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     end_graph,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] )
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] aten = torch.ops.aten
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pd/cpdttccks6x3ldgdss5drnpva7sry6xjqcllkzoamkeydwiry3j2.py
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.im2col]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] #   x => clone
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # Graph fragment:
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] triton_poi_fused_im2col_0 = async_compile.triton('triton_poi_fused_im2col_0', '''
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import triton
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import triton.language as tl
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     size_hints={'y': 32, 'x': 1024}, tile_hint=TileHint.DEFAULT,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     filename=__file__,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_im2col_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] )
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] @triton.jit
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] def triton_poi_fused_im2col_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     ymask = yindex < ynumel
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     x4 = xindex // ks0
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     y1 = ((yindex // 3) % 3)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     x3 = (xindex % ks0)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     y0 = (yindex % 3)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     y2 = yindex // 9
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     x7 = xindex
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     y6 = yindex
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     tl.device_assert((x4 + y1 < ks1) | ~(xmask & ymask), "index out of bounds: x4 + y1 < ks1")
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     tl.device_assert((x3 + y0 < ks2) | ~(xmask & ymask), "index out of bounds: x3 + y0 < ks2")
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     tmp2 = tl.load(in_ptr0 + (x3 + y0 + ks2*x4 + ks2*y1 + ks1*ks2*y2), xmask & ymask, eviction_policy='evict_last')
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     tl.store(out_ptr0 + (x7 + 4*y6 + ((-2)*ks1*y6) + ((-2)*ks2*y6) + ks1*ks2*y6), tmp2, xmask & ymask)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] ''', device_str='cuda')
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cv/ccvnobwwacmjsf355nsd6d2yigpymi577ouhfkqugjuzcgnug5ce.py
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._adaptive_avg_pool2d]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] #   x_2 => _adaptive_avg_pool2d
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] # Graph fragment:
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] #   %_adaptive_avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten._adaptive_avg_pool2d.default](args = (%unsqueeze_6, [1, 10]), kwargs = {})
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] triton_poi_fused__adaptive_avg_pool2d_1 = async_compile.triton('triton_poi_fused__adaptive_avg_pool2d_1', '''
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import triton
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] import triton.language as tl
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     size_hints={'x': 32768}, 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     filename=__file__,
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__adaptive_avg_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] )
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] @triton.jit
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] def triton_poi_fused__adaptive_avg_pool2d_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     x1 = xindex // ks0
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     x2 = xindex
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (((-2)*(x0 // ks1)) + 4*x1 + ks3*(x0 // ks1) + ((-2)*ks2*x1) + ((-2)*ks3*x1) + ks2*ks3*x1 + ((x0 % ks1))), xmask, eviction_policy='evict_last')
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] ''', device_str='cuda')
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] async_compile.wait(globals())
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] del async_compile
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] def call(args):
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     args.clear()
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     s0 = arg0_1
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     s1 = arg1_1
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     s2 = arg2_1
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         ps0 = (-2) + s2
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 3, 3, (-2) + s1, (-2) + s2), (36*s0 + ((-18)*s0*s1) + ((-18)*s0*s2) + 9*s0*s1*s2, 36 + ((-18)*s1) + ((-18)*s2) + 9*s1*s2, 12 + ((-6)*s1) + ((-6)*s2) + 3*s1*s2, 4 + ((-2)*s1) + ((-2)*s2) + s1*s2, (-2) + s2, 1), torch.float32)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.im2col]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         triton_poi_fused_im2col_0_ynumel = 9*s0
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         triton_poi_fused_im2col_0_xnumel = 4 + ((-2)*s1) + ((-2)*s2) + s1*s2
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         triton_poi_fused_im2col_0.run(arg3_1, buf0, ps0, s1, s2, triton_poi_fused_im2col_0_ynumel, triton_poi_fused_im2col_0_xnumel, grid=grid(triton_poi_fused_im2col_0_ynumel, triton_poi_fused_im2col_0_xnumel), stream=stream0)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         del arg3_1
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         ps1 = 4 + ((-2)*s1) + ((-2)*s2) + s1*s2
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 9*s0, 1, 4 + ((-2)*s1) + ((-2)*s2) + s1*s2), (36*s0 + ((-18)*s0*s1) + ((-18)*s0*s2) + 9*s0*s1*s2, 4 + ((-2)*s1) + ((-2)*s2) + s1*s2, 36*s0 + ((-18)*s0*s1) + ((-18)*s0*s2) + 9*s0*s1*s2, 1), torch.float32)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._adaptive_avg_pool2d]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_1_xnumel = 36*s0 + ((-18)*s0*s1) + ((-18)*s0*s2) + 9*s0*s1*s2
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         triton_poi_fused__adaptive_avg_pool2d_1.run(buf0, buf1, ps1, ps0, s1, s2, triton_poi_fused__adaptive_avg_pool2d_1_xnumel, grid=grid(triton_poi_fused__adaptive_avg_pool2d_1_xnumel), stream=stream0)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         del buf0
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten._adaptive_avg_pool2d]
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         buf2 = torch.ops.aten.avg_pool2d.default(buf1, [1, 90], [1, 90], [0, 0], False, True, None)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         del buf1
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         buf3 = buf2
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]         del buf2
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     return (reinterpret_tensor(buf3, (1, 1 + (((-86) + ((-2)*s1) + ((-2)*s2) + s1*s2) // 90), 9*s0), (9*s0 + 9*s0*(((-86) + ((-2)*s1) + ((-2)*s2) + s1*s2) // 90), 1, 1 + (((-86) + ((-2)*s1) + ((-2)*s2) + s1*s2) // 90)), 0), )
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     arg0_1 = 3
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     arg1_1 = 32
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     arg2_1 = 32
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] if __name__ == "__main__":
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:30:35.730000 2031468 site-packages/torch/_inductor/graph.py:2014] [122/0_1] [__output_code] 
V0127 12:30:35.733000 2031468 site-packages/torch/_inductor/graph.py:2022] [122/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/k4/ck4tydw3fimvvlfvizvqgubvq6h5ecj6kj6nv2jrvawzrnat4yba.py
I0127 12:30:36.323000 2031468 site-packages/torch/_inductor/graph.py:2056] [122/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/k4/ck4tydw3fimvvlfvizvqgubvq6h5ecj6kj6nv2jrvawzrnat4yba.py

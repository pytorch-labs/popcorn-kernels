V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] Output code: 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # AOT ID: ['13_inference']
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import torch
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import math
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import random
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import os
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import tempfile
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from math import inf, nan
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from cmath import nanj
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch import device, empty_strided
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton.language as tl
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     grid,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     split_scan_grid,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     grid_combo_kernels,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     start_graph,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     end_graph,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] aten = torch.ops.aten
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7u/c7ute72rlckfur2ehipuxufogbv2yt4rqr5z7wcsgntifcnabqqi.py
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   x_1 => add_6, mul_9, rsqrt, sub_2, var_mean
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Graph fragment:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton.language as tl
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     size_hints={'x': 64, 'r0_': 512},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     filename=__file__,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton.jit
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xnumel = 64
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     rnumel = r0_numel
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     rbase = r0_base
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x0 = xindex
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         roffset = r0_offset
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         rindex = r0_index
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         r0_1 = r0_index
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         roffset = r0_offset
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         rindex = r0_index
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         r0_1 = r0_index
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp10 = ks0*ks1*ks2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp11 = tmp10.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp12 = tmp3 / tmp11
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp13 = 1e-05
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp14 = tmp12 + tmp13
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp15 = libdevice.rsqrt(tmp14)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tmp16 = tmp9 * tmp15
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*ks1*ks2*x0), tmp16, r0_mask & xmask)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uq/cuqrikhfertit4m4ssvbxvwzqueed65bz3hn7gpm55xrzfaqqxo4.py
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.avg_pool3d]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   x_3 => avg_pool3d
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Graph fragment:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %avg_pool3d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool3d.default](args = (%view_3, [2, 2, 2], [2, 2, 2]), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_poi_fused_avg_pool3d_1 = async_compile.triton('triton_poi_fused_avg_pool3d_1', '''
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton.language as tl
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     filename=__file__,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool3d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton.jit
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] def triton_poi_fused_avg_pool3d_1(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xnumel = 4096
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x0 = (xindex % 4)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x3 = xindex // 64
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x4 = xindex
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp3 = tl.load(in_ptr0 + (8 + 2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (9 + 2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (64 + 2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp9 = tl.load(in_ptr0 + (65 + 2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp11 = tl.load(in_ptr0 + (72 + 2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp13 = tl.load(in_ptr0 + (73 + 2*x0 + 16*x1 + 128*x2 + ks0*ks1*ks2*x3), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2 = tmp1 + tmp0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp4 = tmp3 + tmp2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp6 = tmp5 + tmp4
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp8 = tmp7 + tmp6
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp10 = tmp9 + tmp8
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp12 = tmp11 + tmp10
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp14 = tmp13 + tmp12
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp15 = 0.125
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp16 = tmp14 * tmp15
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp16, None)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ol/coluoqxa64bo4zyouqcuwfarpqqgv4urvauoynde5taizvwpakar.py
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.add]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   x_5 => add_41, clamp_max_1, clamp_min_1, convert_element_type_2, convert_element_type_3, iota_1, view_6
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Graph fragment:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 4), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %scalar_tensor_default_2 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg0_1,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %scalar_tensor_default_3 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg1_1,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%scalar_tensor_default_2, %scalar_tensor_default_3), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %scalar_tensor_default_4 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg2_1,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_tensor, %scalar_tensor_default_4), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 128), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %div_tensor_mode : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor_mode](args = (%mul_tensor_1, %full_default_2), kwargs = {rounding_mode: floor})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_1, %div_tensor_mode), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_default : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_2, torch.float64), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_4 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 8), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_4, %div_tensor_mode), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_default_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_3, torch.float64), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_3, %convert_element_type_default_1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %true_divide_tensor : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor, %add_tensor_1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_default_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor, torch.float32), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_2), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_4, 0.0), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %view_6 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%floordiv]), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_6, torch.int64), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_41 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_3, 1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %clamp_max_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add_41, %sub_19), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_poi_fused__to_copy_add_arange_clamp_view_2 = async_compile.triton('triton_poi_fused__to_copy_add_arange_clamp_view_2', '''
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton.language as tl
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     size_hints={'x': 32}, 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     filename=__file__,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_clamp_view_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton.jit
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] def triton_poi_fused__to_copy_add_arange_clamp_view_2(out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x0 = xindex
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp0 = ks0*ks1*ks2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2 = 128.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp3 = tmp1 / tmp2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp4 = libdevice.floor(tmp3)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp5 = 4.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp6 = tmp5 * tmp4
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp7 = tmp6.to(tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp8 = tl.full([1], -1.0, tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp9 = tmp8 + tmp7
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp10 = 8.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp11 = tmp10 * tmp4
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp12 = tmp11.to(tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp13 = tmp8 + tmp12
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp14 = tmp9 / tmp13
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp16 = x0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp18 = tmp17 * tmp15
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp19 = 0.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp20 = triton_helpers.maximum(tmp18, tmp19)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp22 = tl.full([1], 1, tl.int64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp23 = tmp21 + tmp22
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp24 = (-1) + 4*((ks0*ks1*ks2) // 128)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp25 = triton_helpers.minimum(tmp23, tmp24)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, xmask)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/47/c47ee5ympnsvr3yxo35oxhiwekd5uqtuzac5dteoj4tg6xfzppgb.py
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.sub]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   x_5 => clamp_max_2, clamp_min_1, clamp_min_2, convert_element_type_2, convert_element_type_3, iota_1, sub_25, view_6
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Graph fragment:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 4), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %scalar_tensor_default_2 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg0_1,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %scalar_tensor_default_3 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg1_1,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%scalar_tensor_default_2, %scalar_tensor_default_3), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %scalar_tensor_default_4 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%arg2_1,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_tensor, %scalar_tensor_default_4), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 128), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %div_tensor_mode : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor_mode](args = (%mul_tensor_1, %full_default_2), kwargs = {rounding_mode: floor})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_1, %div_tensor_mode), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_default : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_2, torch.float64), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %full_default_4 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 8), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_4, %div_tensor_mode), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_default_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_3, torch.float64), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default_3, %convert_element_type_default_1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %true_divide_tensor : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor, %add_tensor_1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_default_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor, torch.float32), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_2), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_4, 0.0), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %view_6 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%floordiv]), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_6, torch.int64), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_6, %convert_element_type_3), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_25, 0.0), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_poi_fused__to_copy_arange_clamp_sub_view_3 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_sub_view_3', '''
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton.language as tl
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     size_hints={'x': 32}, 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     filename=__file__,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_sub_view_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton.jit
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] def triton_poi_fused__to_copy_arange_clamp_sub_view_3(out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x0 = xindex
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp0 = ks0*ks1*ks2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2 = 128.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp3 = tmp1 / tmp2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp4 = libdevice.floor(tmp3)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp5 = 4.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp6 = tmp5 * tmp4
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp7 = tmp6.to(tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp8 = tl.full([1], -1.0, tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp9 = tmp8 + tmp7
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp10 = 8.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp11 = tmp10 * tmp4
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp12 = tmp11.to(tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp13 = tmp8 + tmp12
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp14 = tmp9 / tmp13
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp16 = x0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp18 = tmp17 * tmp15
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp19 = 0.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp20 = triton_helpers.maximum(tmp18, tmp19)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp23 = tmp20 - tmp22
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp19)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp25 = 1.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp26 = triton_helpers.minimum(tmp24, tmp25)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp26, xmask)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/a6/ca6moj7i7yqdgx24v3ttnrdeehd347ea5775v5wbuv2mzlczxgdz.py
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten._to_copy, aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.clamp, aten.gelu]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   x_5 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_100, add_74, add_87, clamp_max_3, clamp_min_3, convert_element_type_1, mul_63, mul_76, mul_89, sub_28, sub_32, sub_36, sub_37
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   x_6 => add_105, erf, mul_102, mul_103, mul_104
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] # Graph fragment:
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_5, torch.int64), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_4, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_4, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %sub_32 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_76 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_32, %clamp_max_2), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_87 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_76), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_4, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_4, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %sub_28 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_63 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_28, %clamp_max_2), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_74 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_63), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %sub_37 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_87, %add_74), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %sub_36 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %convert_element_type_1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_36, 0.0), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_89 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_37, %clamp_max_3), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_100 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_74, %mul_89), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_102 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_100, 0.5), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_103 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_100, 0.7071067811865476), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %erf : [num_users=1] = call_function[target=torch.ops.aten.erf.default](args = (%mul_103,), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %add_105 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%erf, 1), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] #   %mul_104 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_102, %add_105), kwargs = {})
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4', '''
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] import triton.language as tl
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     filename=__file__,
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] @triton.jit
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x1 = ((xindex // ks0) % 8)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x2 = xindex // ks4
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     x3 = xindex
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp34 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp41 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp0 = x1
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp2 = 0.42857142857142855
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp4 = 0.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp9 = tl.full([1], 3, tl.int64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp11 = ks1*ks2*ks3
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp13 = 128.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp14 = tmp12 / tmp13
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp15 = libdevice.floor(tmp14)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp16 = 4.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp17 = tmp16 * tmp15
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp18 = tmp17.to(tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp19 = tl.full([1], -1.0, tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp20 = tmp19 + tmp18
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp21 = 8.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp22 = tmp21 * tmp15
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp23 = tmp22.to(tl.float64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp24 = tmp19 + tmp23
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp25 = tmp20 / tmp24
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp26 = tmp25.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp27 = x0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp28 = tmp27.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp29 = tmp28 * tmp26
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp30 = triton_helpers.maximum(tmp29, tmp4)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp31 = tmp30.to(tl.int64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp32 = tl.load(in_ptr0 + (16*tmp10 + 64*x2 + ((tmp31 % 16))), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp33 = tl.load(in_ptr0 + (16*tmp6 + 64*x2 + ((tmp31 % 16))), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp35 = tl.full([XBLOCK], 16, tl.int32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp36 = tmp34 + tmp35
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp37 = tmp34 < 0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp38 = tl.where(tmp37, tmp36, tmp34)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp39 = tl.load(in_ptr0 + (16*tmp6 + 64*x2 + ((tmp38 % 16))), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp40 = tmp39 - tmp33
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp42 = tmp40 * tmp41
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp43 = tmp33 + tmp42
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp44 = tl.load(in_ptr0 + (16*tmp10 + 64*x2 + ((tmp38 % 16))), None, eviction_policy='evict_last')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp45 = tmp44 - tmp32
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp46 = tmp45 * tmp41
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp47 = tmp32 + tmp46
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp48 = tmp47 - tmp43
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp49 = tmp6.to(tl.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp50 = tmp5 - tmp49
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp51 = triton_helpers.maximum(tmp50, tmp4)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp52 = 1.0
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp53 = triton_helpers.minimum(tmp51, tmp52)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp54 = tmp48 * tmp53
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp55 = tmp43 + tmp54
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp56 = 0.5
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp57 = tmp55 * tmp56
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp58 = 0.7071067811865476
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp59 = tmp55 * tmp58
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp60 = libdevice.erf(tmp59)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp61 = tmp60 + tmp52
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tmp62 = tmp57 * tmp61
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp62, None)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] ''', device_str='cuda')
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] async_compile.wait(globals())
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] del async_compile
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] def call(args):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     args.clear()
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     s1 = arg0_1
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     s2 = arg1_1
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     s3 = arg2_1
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     assert_size_stride(arg3_1, (1, 64, s1, s2, s3), (64*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 64, s1*s2*s3), (64*s1*s2*s3, s1*s2*s3, 1), torch.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_0_r0_numel = s1*s2*s3
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg3_1, buf3, s1, s2, s3, 64, triton_red_fused__native_batch_norm_legit_0_r0_numel, grid=grid(64), stream=stream0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         del arg3_1
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 64, 4, 4, 4), (4096, 64, 16, 4, 1), torch.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.avg_pool3d]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_poi_fused_avg_pool3d_1.run(buf3, buf4, s1, s2, s3, 4096, grid=grid(4096), stream=stream0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         del buf3
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         buf5 = empty_strided_cuda((8*((s1*s2*s3) // 128), ), (1, ), torch.int64)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.add]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_view_2_xnumel = 8*((s1*s2*s3) // 128)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_clamp_view_2.run(buf5, s1, s2, s3, triton_poi_fused__to_copy_add_arange_clamp_view_2_xnumel, grid=grid(triton_poi_fused__to_copy_add_arange_clamp_view_2_xnumel), stream=stream0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         buf7 = empty_strided_cuda((8*((s1*s2*s3) // 128), ), (1, ), torch.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten._to_copy, aten.clamp, aten.view, aten.sub]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_poi_fused__to_copy_arange_clamp_sub_view_3_xnumel = 8*((s1*s2*s3) // 128)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_poi_fused__to_copy_arange_clamp_sub_view_3.run(buf7, s1, s2, s3, triton_poi_fused__to_copy_arange_clamp_sub_view_3_xnumel, grid=grid(triton_poi_fused__to_copy_arange_clamp_sub_view_3_xnumel), stream=stream0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         ps0 = 8*((s1*s2*s3) // 128)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         ps1 = 64*((s1*s2*s3) // 128)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 64, 8, 8*((s1*s2*s3) // 128)), (4096*((s1*s2*s3) // 128), 64*((s1*s2*s3) // 128), 8*((s1*s2*s3) // 128), 1), torch.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         buf10 = buf9; del buf9  # reuse
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten._to_copy, aten._unsafe_index, aten.sub, aten.mul, aten.add, aten.clamp, aten.gelu]
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4_xnumel = 4096*((s1*s2*s3) // 128)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4.run(buf10, buf4, buf5, buf7, ps0, s1, s2, s3, ps1, triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4_xnumel, grid=grid(triton_poi_fused__to_copy__unsafe_index_add_clamp_gelu_mul_sub_4_xnumel), stream=stream0)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         del buf4
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         del buf5
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]         del buf7
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     return (reinterpret_tensor(buf10, (1, 64, 64*((s1*s2*s3) // 128)), (4096*((s1*s2*s3) // 128), 64*((s1*s2*s3) // 128), 1), 0), )
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     arg0_1 = 8
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     arg1_1 = 8
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     arg2_1 = 8
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     arg3_1 = rand_strided((1, 64, 8, 8, 8), (32768, 512, 64, 8, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] if __name__ == "__main__":
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:40:14.641000 2062045 site-packages/torch/_inductor/graph.py:2014] [28/0_1] [__output_code] 
V0205 10:40:14.653000 2062045 site-packages/torch/_inductor/graph.py:2022] [28/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3w/c3wiy3ctvggenjsternxygyn4f6jkmkgdnpyzsmanua4mewixjok.py
I0205 10:40:14.871000 2062045 site-packages/torch/_inductor/graph.py:2056] [28/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3w/c3wiy3ctvggenjsternxygyn4f6jkmkgdnpyzsmanua4mewixjok.py
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0] failed while attempting to run meta for aten.view.default
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0] Traceback (most recent call last):
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_subclasses/fake_tensor.py", line 2376, in _dispatch_impl
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     r = func(*args, **kwargs)
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_ops.py", line 749, in __call__
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     return self._op(*args, **kwargs)
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]            ~~~~~~~~^^^^^^^^^^^^^^^^^
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_refs/__init__.py", line 4664, in view
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     return _reshape_view_helper(a, *shape, allow_copy=False)
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_refs/__init__.py", line 3702, in _reshape_view_helper
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     shape = utils.infer_size(shape, a.numel())
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/_prims_common/__init__.py", line 939, in infer_size
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     torch._check(
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     ~~~~~~~~~~~~^
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]         numel == newsize,
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]         ^^^^^^^^^^^^^^^^^
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]         lambda: f"shape '{list(shape)}' is invalid for input of size {numel}",
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     )
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     ^
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/__init__.py", line 1651, in _check
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     _check_with(RuntimeError, cond, message)
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]   File "/home/sahanp/.conda/envs/popcorn/lib/python3.13/site-packages/torch/__init__.py", line 1633, in _check_with
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0]     raise error_type(message_evaluated)
E0205 10:40:14.983000 2062045 site-packages/torch/_subclasses/fake_tensor.py:2380] [29/0] RuntimeError: shape '[1, 64, 4, 4, 4]' is invalid for input of size 16384

V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] Output code: 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # AOT ID: ['28_inference']
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import torch
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import math
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import random
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import os
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import tempfile
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from math import inf, nan
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from cmath import nanj
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch import device, empty_strided
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton.language as tl
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     grid,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     split_scan_grid,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     grid_combo_kernels,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     start_graph,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     end_graph,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     cooperative_reduction_grid,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] )
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] aten = torch.ops.aten
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] _quantized = torch.ops._quantized
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] async_compile = AsyncCompile()
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pt/cptwwyqidth7dqasoci257uqbiu2wzesaumggpjnart3tm6ib62i.py
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.linalg_vector_norm]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Source node to ATen node mapping:
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   x_2 => pow_3, sum_2
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Graph fragment:
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%slice_5, 2), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1], True), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] triton_red_fused_linalg_vector_norm_0 = async_compile.triton('triton_red_fused_linalg_vector_norm_0', '''
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton.language as tl
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] @triton_heuristics.reduction(
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     size_hints={'x': 32, 'r0_': 8},
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     filename=__file__,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_linalg_vector_norm_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] )
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] @triton.jit
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] def triton_red_fused_linalg_vector_norm_0(in_ptr0, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     rnumel = r0_numel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xmask = xindex < xnumel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     rbase = r0_base
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     x0 = xindex
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     _tmp3 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         roffset = r0_offset
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         rindex = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_1 = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (ks1*r0_1 + ks1*(ks0 // 2) + (tl.where((-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + (tl.where(3 + ks1 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks1, 3 + ks1 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0))))))))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + (tl.where(3 + ks1 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks1, 3 + ks1 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0))))))))) + 2*ks1, (-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + (tl.where(3 + ks1 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks1, 3 + ks1 + ((-1)*tl_math.abs(3 + ks1 + ((-1)*tl_math.abs((-3) + x0)))))))))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp1 = tmp0 * tmp0
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         _tmp3 = tl.where(r0_mask & xmask, tmp4, _tmp3)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, xmask)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] ''', device_str='cuda')
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jw/cjwvrvpxjttsc6nff3g7o6bx33g5ssdypidu2acywvgrc6khidha.py
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.linalg_vector_norm, aten.clamp_min, aten.div, aten.mul, aten.sum]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Source node to ATen node mapping:
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   x_2 => clamp_min, clamp_min_1, div, div_1, mul_56, pow_1, pow_2, pow_4, sum_1, sum_3
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Graph fragment:
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%slice_2, 2), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1], True), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%pow_2, 1e-08), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%slice_2, %clamp_min), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, 0.5), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%pow_4, 1e-08), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%slice_5, %clamp_min_1), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_1, %div), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %sum_3 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_56, [1]), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1 = async_compile.triton('triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1', '''
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton.language as tl
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] @triton_heuristics.reduction(
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     size_hints={'x': 32, 'r0_': 8},
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     filename=__file__,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] )
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] @triton.jit
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] def triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     rnumel = r0_numel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xmask = xindex < xnumel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     rbase = r0_base
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     x0 = xindex
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     _tmp3 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         roffset = r0_offset
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         rindex = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_1 = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (ks0*r0_1 + (tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0))))))))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0))))))))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))))))))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp1 = tmp0 * tmp0
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp4 = _tmp3 + tmp2
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         _tmp3 = tl.where(r0_mask & xmask, tmp4, _tmp3)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp3 = tl.sum(_tmp3, 1)[:, None]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     _tmp17 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         roffset = r0_offset
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         rindex = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_1 = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp5 = tl.load(in_ptr0 + (ks0*r0_1 + (tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0))))))))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0))))))))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))))))))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp10 = tl.load(in_ptr0 + (ks0*r0_1 + ks0*(ks1 // 2) + (tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0))))))))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0))))))))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + (tl.where(3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) < 0, 7 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))) + 2*ks0, 3 + ks0 + ((-1)*tl_math.abs(3 + ks0 + ((-1)*tl_math.abs((-3) + x0)))))))))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp6 = libdevice.sqrt(tmp3)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp7 = 1e-08
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp9 = tmp5 / tmp8
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp12 = libdevice.sqrt(tmp11)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp13 = triton_helpers.maximum(tmp12, tmp7)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp14 = tmp10 / tmp13
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp15 = tmp9 * tmp14
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp16 = tl.broadcast_to(tmp15, [XBLOCK, R0_BLOCK])
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp18 = _tmp17 + tmp16
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         _tmp17 = tl.where(r0_mask & xmask, tmp18, _tmp17)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp17 = tl.sum(_tmp17, 1)[:, None]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp17, xmask)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] ''', device_str='cuda')
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3k/c3kx6q5nkvt4ta5oz3sqdzj6wacfbypcryn6jejxhnmzrgfld462.py
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.exp, aten.mul, aten.sub, aten.mean]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Source node to ATen node mapping:
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   loss => exp, mean, mul_62, sub_45
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] # Graph fragment:
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sum_3,), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %mul_62 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_3, %sum_3), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %sub_45 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%exp, %mul_62), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_45,), kwargs = {})
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] triton_red_fused_exp_mean_mul_sub_2 = async_compile.triton('triton_red_fused_exp_mean_mul_sub_2', '''
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] import triton.language as tl
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] @triton_heuristics.reduction(
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     size_hints={'x': 1, 'r0_': 32},
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     filename=__file__,
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_exp_mean_mul_sub_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] )
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] @triton.jit
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] def triton_red_fused_exp_mean_mul_sub_2(in_out_ptr0, in_ptr0, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xnumel = 1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     rnumel = r0_numel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     rbase = r0_base
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     _tmp5 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         roffset = r0_offset
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         rindex = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         r0_0 = r0_index
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp1 = tl_math.exp(tmp0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp2 = tmp0 * tmp0
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp3 = tmp1 - tmp2
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         tmp6 = _tmp5 + tmp4
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         _tmp5 = tl.where(r0_mask, tmp6, _tmp5)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp7 = 10 + ks0
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tmp9 = tmp5 / tmp8
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tl.debug_barrier()
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp9, None)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] ''', device_str='cuda')
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] async_compile.wait(globals())
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] del async_compile
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] def call(args):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     args.clear()
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     s0 = arg0_1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     s1 = arg1_1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     assert_size_stride(arg2_1, (1, s0, s1), (s0*s1, s1, 1))
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         torch.cuda.set_device(0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         buf1 = empty_strided_cuda((1, 1, 10 + s1), (10 + s1, 10 + s1, 1), torch.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.linalg_vector_norm]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_linalg_vector_norm_0_xnumel = 10 + s1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_linalg_vector_norm_0_r0_numel = s0 + ((-1)*(s0 // 2))
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_linalg_vector_norm_0.run(arg2_1, buf1, s0, s1, triton_red_fused_linalg_vector_norm_0_xnumel, triton_red_fused_linalg_vector_norm_0_r0_numel, grid=grid(triton_red_fused_linalg_vector_norm_0_xnumel), stream=stream0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         buf0 = empty_strided_cuda((1, 1, 10 + s1), (10 + s1, 10 + s1, 1), torch.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         buf2 = reinterpret_tensor(buf0, (1, 10 + s1), (10 + s1, 1), 0); del buf0  # reuse
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.linalg_vector_norm, aten.clamp_min, aten.div, aten.mul, aten.sum]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1_xnumel = 10 + s1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1_r0_numel = s0 // 2
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1.run(buf2, arg2_1, buf1, s1, s0, triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1_xnumel, triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1_r0_numel, grid=grid(triton_red_fused_clamp_min_div_linalg_vector_norm_mul_sum_1_xnumel), stream=stream0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         del arg2_1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         del buf1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.exp, aten.mul, aten.sub, aten.mean]
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_exp_mean_mul_sub_2_r0_numel = 10 + s1
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         triton_red_fused_exp_mean_mul_sub_2.run(buf4, buf2, s1, 1, triton_red_fused_exp_mean_mul_sub_2_r0_numel, grid=grid(1), stream=stream0)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]         del buf2
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     return (buf4, )
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     arg0_1 = 10
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     arg1_1 = 20
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     arg2_1 = rand_strided((1, 10, 20), (200, 20, 1), device='cuda:0', dtype=torch.float32)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] if __name__ == "__main__":
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:30:31.635000 2031468 site-packages/torch/_inductor/graph.py:2014] [110/0] [__output_code] 
V0127 12:30:31.640000 2031468 site-packages/torch/_inductor/graph.py:2022] [110/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4n/c4nnwb5ap67vifvzwj4jcd26fglz2iajiscinstqfyqzx7xtmqtz.py
I0127 12:30:32.217000 2031468 site-packages/torch/_inductor/graph.py:2056] [110/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4n/c4nnwb5ap67vifvzwj4jcd26fglz2iajiscinstqfyqzx7xtmqtz.py

V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] Output code: 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # AOT ID: ['1_forward']
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import torch
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import math
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import random
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import os
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import tempfile
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from math import inf, nan
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from cmath import nanj
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch import device, empty_strided
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton.language as tl
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     grid,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     split_scan_grid,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     grid_combo_kernels,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     start_graph,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     end_graph,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     cooperative_reduction_grid,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] )
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] aten = torch.ops.aten
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] async_compile = AsyncCompile()
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nu/cnu7y5btmkamkkj35xqncna2e7i5ep75okiycneyuo4hd2tygeoa.py
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Topologically Sorted Source Nodes: [linear, x_1], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Source node to ATen node mapping:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   linear => add_tensor_3
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   x_1 => sigmoid
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Graph fragment:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %add_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_3, %primals_3), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_tensor_3,), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_poi_fused_addmm_sigmoid_0 = async_compile.triton('triton_poi_fused_addmm_sigmoid_0', '''
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton.language as tl
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     size_hints={'x': 128}, 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     filename=__file__,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_sigmoid_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     min_elem_per_thread=0
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] )
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton.jit
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] def triton_poi_fused_addmm_sigmoid_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xnumel = 128
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xmask = xindex < xnumel
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     x0 = xindex
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] ''', device_str='cuda')
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hy/chy5mtt5gzq77nwrfi36rf7fxahuohpxiw7h2obj5c7ot33np6wn.py
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Topologically Sorted Source Nodes: [linear_1, x_2], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Source node to ATen node mapping:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   linear_1 => add_tensor_2
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   x_2 => sigmoid_1
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Graph fragment:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_2, %primals_5), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %sigmoid_1 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_tensor_2,), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_poi_fused_addmm_sigmoid_1 = async_compile.triton('triton_poi_fused_addmm_sigmoid_1', '''
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton.language as tl
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     size_hints={'x': 64}, 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     filename=__file__,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_sigmoid_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     min_elem_per_thread=0
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] )
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton.jit
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] def triton_poi_fused_addmm_sigmoid_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xnumel = 64
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xmask = xindex < xnumel
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     x0 = xindex
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] ''', device_str='cuda')
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/is/cisaxkmhcffj7fhhr3hjomlgjxe52dpiucrefanf2cfjj4ywvykl.py
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Topologically Sorted Source Nodes: [linear_2, x_3], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Source node to ATen node mapping:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   linear_2 => add_tensor_1
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   x_3 => sigmoid_2
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Graph fragment:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_7), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %sigmoid_2 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_tensor_1,), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_poi_fused_addmm_sigmoid_2 = async_compile.triton('triton_poi_fused_addmm_sigmoid_2', '''
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton.language as tl
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     size_hints={'x': 32}, 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     filename=__file__,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_sigmoid_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     min_elem_per_thread=0
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] )
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton.jit
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] def triton_poi_fused_addmm_sigmoid_2(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xnumel = 32
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xmask = xindex < xnumel
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     x0 = xindex
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] ''', device_str='cuda')
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pe/cpe7tlekzlgzkfslhmhnft5izvmdaunvwszlnkzz5pwc7p24fnad.py
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Source node to ATen node mapping:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   input_1 => add_tensor
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   input_2 => sigmoid_3
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] # Graph fragment:
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_9), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] #   %sigmoid_3 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%add_tensor,), kwargs = {})
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_poi_fused_addmm_sigmoid_3 = async_compile.triton('triton_poi_fused_addmm_sigmoid_3', '''
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] import triton.language as tl
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     size_hints={'x': 16}, 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     filename=__file__,
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addmm_sigmoid_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     min_elem_per_thread=0
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] )
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] @triton.jit
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] def triton_poi_fused_addmm_sigmoid_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xnumel = 16
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     xmask = xindex < xnumel
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     x0 = xindex
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] ''', device_str='cuda')
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] async_compile.wait(globals())
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] del async_compile
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] def call(args):
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     args.clear()
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_1, (1, 3, 32, 32), (3072, 1024, 32, 1))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_2, (128, 3072), (3072, 1))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_3, (128, ), (1, ))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_4, (64, 128), (128, 1))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_5, (64, ), (1, ))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_6, (32, 64), (64, 1))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_8, (16, 32), (32, 1))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_9, (16, ), (1, ))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_10, (8, 16), (16, 1))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     assert_size_stride(primals_11, (8, ), (1, ))
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf0 = empty_strided_cuda((1, 128), (128, 1), torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_1, (1, 3072), (3072, 1), 0), reinterpret_tensor(primals_2, (3072, 128), (1, 3072), 0), out=buf0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         del primals_2
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [linear, x_1], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         triton_poi_fused_addmm_sigmoid_0.run(buf1, primals_3, 128, grid=grid(128), stream=stream0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         del primals_3
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf2 = empty_strided_cuda((1, 64), (64, 1), torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1], Original ATen: [aten.addmm]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(primals_4, (128, 64), (1, 128), 0), out=buf2)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf3 = buf2; del buf2  # reuse
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_1, x_2], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         triton_poi_fused_addmm_sigmoid_1.run(buf3, primals_5, 64, grid=grid(64), stream=stream0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         del primals_5
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf4 = empty_strided_cuda((1, 32), (32, 1), torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_2], Original ATen: [aten.addmm]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         extern_kernels.mm(buf3, reinterpret_tensor(primals_6, (64, 32), (1, 64), 0), out=buf4)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_2, x_3], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         triton_poi_fused_addmm_sigmoid_2.run(buf5, primals_7, 32, grid=grid(32), stream=stream0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         del primals_7
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf6 = empty_strided_cuda((1, 16), (16, 1), torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         extern_kernels.mm(buf5, reinterpret_tensor(primals_8, (32, 16), (1, 32), 0), out=buf6)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf7 = buf6; del buf6  # reuse
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.addmm, aten.sigmoid]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         triton_poi_fused_addmm_sigmoid_3.run(buf7, primals_9, 16, grid=grid(16), stream=stream0)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         del primals_9
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         buf8 = empty_strided_cuda((1, 8), (8, 1), torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         extern_kernels.addmm(primals_11, buf7, reinterpret_tensor(primals_10, (16, 8), (1, 16), 0), alpha=1, beta=1, out=buf8)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]         del primals_11
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     return (buf8, reinterpret_tensor(primals_1, (1, 3072), (3072, 1), 0), buf1, buf3, buf5, buf7, primals_10, primals_8, primals_6, primals_4, )
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_2 = rand_strided((128, 3072), (3072, 1), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_3 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_4 = rand_strided((64, 128), (128, 1), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_6 = rand_strided((32, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_8 = rand_strided((16, 32), (32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_9 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_10 = rand_strided((8, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     primals_11 = rand_strided((8, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] if __name__ == "__main__":
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:21:24.709000 703210 site-packages/torch/_inductor/graph.py:2014] [2/0] [__output_code] 
V0127 11:21:24.714000 703210 site-packages/torch/_inductor/graph.py:2022] [2/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sf/csf4dtvufx2ezauolmyaqxqiy3o6zjvuedntkhqyyk67wm2ptrvy.py
I0127 11:21:24.815000 703210 site-packages/torch/_inductor/graph.py:2056] [2/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sf/csf4dtvufx2ezauolmyaqxqiy3o6zjvuedntkhqyyk67wm2ptrvy.py

V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] Output code: 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] # AOT ID: ['8_inference']
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] import torch
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] import math
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] import random
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] import os
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] import tempfile
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from math import inf, nan
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from cmath import nanj
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from torch import device, empty_strided
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] aten = torch.ops.aten
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] async_compile.wait(globals())
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] del async_compile
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] def call(args):
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     args.clear()
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     s0 = arg0_1
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     s1 = arg1_1
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     s2 = arg2_1
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     s3 = arg3_1
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     assert_size_stride(arg4_1, (1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.adaptive_max_pool3d]
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         buf0 = torch.ops.aten.adaptive_max_pool3d.default(arg4_1, [8, 8, 8])
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         del arg4_1
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         buf1 = buf0[0]
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         del buf0
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.max_pool3d_with_indices]
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         buf3 = torch.ops.aten.max_pool3d_with_indices.default(buf1, [2, 2, 2], [2, 2, 2])
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         del buf1
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         buf4 = buf3[0]
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]         del buf3
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     return (reinterpret_tensor(buf4, (1, s0, 64), (64*s0, 64, 1), 0), s0, )
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     arg0_1 = 3
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     arg1_1 = 16
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     arg2_1 = 16
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     arg3_1 = 16
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     arg4_1 = rand_strided((1, 3, 16, 16, 16), (12288, 4096, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] if __name__ == "__main__":
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:40:04.477000 2062045 site-packages/torch/_inductor/graph.py:2014] [18/0_1] [__output_code] 
V0205 10:40:04.478000 2062045 site-packages/torch/_inductor/graph.py:2022] [18/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/w6/cw6wo6ueqqgrs3ue5a3gkyrkyvkfyg7q6hno5hyoglfekt23lhoq.py
I0205 10:40:04.479000 2062045 site-packages/torch/_inductor/graph.py:2056] [18/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/w6/cw6wo6ueqqgrs3ue5a3gkyrkyvkfyg7q6hno5hyoglfekt23lhoq.py
W0205 10:40:04.584000 2062045 site-packages/torch/_inductor/utils.py:1611] [19/0] DeviceCopy in input program
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] Output code: 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # AOT ID: ['9_inference']
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import torch
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import math
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import random
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import os
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import tempfile
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from math import inf, nan
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from cmath import nanj
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch import device, empty_strided
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     grid,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     split_scan_grid,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     grid_combo_kernels,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     start_graph,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     end_graph,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     cooperative_reduction_grid,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] aten = torch.ops.aten
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] async_compile = AsyncCompile()
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] cpp_fused_randint_0 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*'], '''
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                        int64_t* out_ptr0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] {
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     {
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         #pragma GCC ivdep
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(64L); x0+=static_cast<int64_t>(1L))
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         {
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]             {
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                 {
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                     auto tmp1 = x0;
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                     auto tmp3 = static_cast<int64_t>(0);
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                     auto tmp4 = static_cast<int64_t>(3);
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp5;
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]                 }
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]             }
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         }
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     }
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] }
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] ''')
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wa/cwayilnd2gfpyhoewshge3qzoesjlirzbbi4yf6s2nyauze3mi5c.py
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.nll_loss2d_forward]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Source node to ATen node mapping:
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   loss => convert_element_type_1, div_1, full_default_1, ne_1, ne_2, neg, sum_2, sum_3, where_1
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Graph fragment:
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %ne_1 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%view_2, -100), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%squeeze,), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_1, %neg, %full_default_1), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%where_1,), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %ne_2 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%view_2, -100), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%ne_2,), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%sum_2, torch.float32), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_3, %convert_element_type_1), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_per_fused_nll_loss2d_forward_1 = async_compile.triton('triton_per_fused_nll_loss2d_forward_1', '''
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     size_hints={'x': 1, 'r0_': 64},
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     filename=__file__,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_nll_loss2d_forward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton.jit
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def triton_per_fused_nll_loss2d_forward_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xnumel = 1
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_numel = 64
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     R0_BLOCK: tl.constexpr = 64
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     rnumel = r0_numel
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_offset = 0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     roffset = r0_offset
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     rindex = r0_index
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_0 = r0_index
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (r0_0), None)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (64 + r0_0), None)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (128 + r0_0), None)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp1 = tl.full([1, 1], -100, tl.int64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp2 = tmp0 != tmp1
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp3 = tl.full([1, 1], 0, tl.int64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp4 = tl.where(tmp2, tmp0, tmp3)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp5 = tl.full([XBLOCK, R0_BLOCK], 3, tl.int32)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp7 = tmp4 < 0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp4)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.device_assert((0 <= tmp8) & (tmp8 < 3), "index out of bounds: 0 <= tmp8 < 3")
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (r0_0 + 64*tmp8), None)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp13 = triton_helpers.maximum(tmp11, tmp12)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp13, tmp14)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp16 = tmp10 - tmp15
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp17 = tl_math.exp(tmp16)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp18 = tmp11 - tmp15
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp19 = tl_math.exp(tmp18)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp20 = tmp12 - tmp15
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp22 = tmp19 + tmp21
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp23 = tmp14 - tmp15
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp24 = tl_math.exp(tmp23)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp25 = tmp22 + tmp24
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp26 = tmp17 / tmp25
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp27 = -tmp26
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp28 = 0.0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp29 = tl.where(tmp2, tmp27, tmp28)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp30 = tl.broadcast_to(tmp29, [XBLOCK, R0_BLOCK])
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp32 = tl.sum(tmp30, 1)[:, None]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp33 = tmp2.to(tl.int64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [XBLOCK, R0_BLOCK])
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp36 = tl.sum(tmp34, 1)[:, None]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp37 = tmp36.to(tl.float32)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp38 = tmp32 / tmp37
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.debug_barrier()
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp38, None)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] ''', device_str='cuda')
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nx/cnx4dtlzxsba47wy3jfmlitzfuyd7elxfak6dwjfgju3ce4cclgq.py
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, target_huber, loss_huber], Original ATen: [aten._softmax, aten.randn_like, aten.huber_loss]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Source node to ATen node mapping:
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   loss_huber => abs_1, lt, mean, mul, mul_1, mul_2, sub_1, sub_2, where_2
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   target_huber => inductor_lookup_seed_default_1, inductor_random_default
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   x_1 => amax, div, exp, sub, sum_1
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] # Graph fragment:
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view, [1], True), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %amax), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default_1, 0), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 3, 4, 4, 4], %inductor_lookup_seed_default_1, randn), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %inductor_random_default), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %abs_1 : [num_users=4] = call_function[target=torch.ops.aten.abs.default](args = (%sub_1,), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %abs_1), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, 1.0), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %mul_1, %mul_2), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where_2,), kwargs = {})
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_per_fused__softmax_huber_loss_randn_like_2 = async_compile.triton('triton_per_fused__softmax_huber_loss_randn_like_2', '''
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] import triton.language as tl
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     size_hints={'x': 1, 'r0_': 256},
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     filename=__file__,
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     triton_meta={'signature': {'in_out_ptr1': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 5), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_huber_loss_randn_like_2', 'mutated_arg_names': ['in_out_ptr1'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] )
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] @triton.jit
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def triton_per_fused__softmax_huber_loss_randn_like_2(in_out_ptr1, in_ptr0, in_ptr1, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xnumel = 1
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_numel = 192
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     R0_BLOCK: tl.constexpr = 256
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     rnumel = r0_numel
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_offset = 0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     roffset = r0_offset
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     rindex = r0_index
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_0 = r0_index
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     r0_1 = (r0_index % 64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r0_0), r0_mask, other=0.0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (64 + r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (128 + r0_1), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp1 = r0_0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp2 = tl.randn(tmp0, (tmp1).to(tl.uint32))
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp9 = tmp3 - tmp8
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp10 = tl_math.exp(tmp9)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp11 = tmp4 - tmp8
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp12 = tl_math.exp(tmp11)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp13 = tmp5 - tmp8
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp15 = tmp12 + tmp14
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp16 = tmp7 - tmp8
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp17 = tl_math.exp(tmp16)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp18 = tmp15 + tmp17
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp19 = tmp10 / tmp18
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp20 = tmp19 - tmp2
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp21 = tl_math.abs(tmp20)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp22 = 1.0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp23 = tmp21 < tmp22
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp24 = 0.5
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp25 = tmp21 * tmp24
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp26 = tmp25 * tmp21
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp27 = tmp21 - tmp24
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp28 = tmp27 * tmp22
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp29 = tl.where(tmp23, tmp26, tmp28)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp30 = tl.broadcast_to(tmp29, [XBLOCK, R0_BLOCK])
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp32 = tl.where(r0_mask, tmp30, 0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp33 = tl.sum(tmp32, 1)[:, None]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp34 = 192.0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tmp35 = tmp33 / tmp34
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.debug_barrier()
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp35, None)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] ''', device_str='cuda')
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] async_compile.wait(globals())
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] del async_compile
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def call(args):
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     arg0_1, = args
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     args.clear()
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     assert_size_stride(arg0_1, (1, 3, 64), (192, 64, 1))
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     buf0 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     buf1 = empty_strided_cpu((1, 4, 4, 4), (64, 16, 4, 1), torch.int64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     cpp_fused_randint_0(buf0, buf1)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     del buf0
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf2 = empty_strided_cuda((1, 4, 4, 4), (64, 16, 4, 1), torch.int64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf2.copy_(buf1, False)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del buf1
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf3 = empty_strided_cuda((), (), torch.float32)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf9 = buf3; del buf3  # reuse
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.nll_loss2d_forward]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         triton_per_fused_nll_loss2d_forward_1.run(buf9, buf2, arg0_1, 1, 64, grid=grid(1), stream=stream0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del buf2
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf5 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf5)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         buf10 = buf8; del buf8  # reuse
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, target_huber, loss_huber], Original ATen: [aten._softmax, aten.randn_like, aten.huber_loss]
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         triton_per_fused__softmax_huber_loss_randn_like_2.run(buf10, buf5, arg0_1, 0, 1, 192, grid=grid(1), stream=stream0)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del arg0_1
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]         del buf5
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     return (buf9, buf10, )
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     arg0_1 = rand_strided((1, 3, 64), (192, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] if __name__ == "__main__":
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:40:06.952000 2062045 site-packages/torch/_inductor/graph.py:2014] [19/0] [__output_code] 
V0205 10:40:06.958000 2062045 site-packages/torch/_inductor/graph.py:2022] [19/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yw/cywcpfjs5c3nkkrh2hlrdavyjem2ft2ebqku3s7tcqgtdudc5p7e.py
I0205 10:40:07.918000 2062045 site-packages/torch/_inductor/graph.py:2056] [19/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yw/cywcpfjs5c3nkkrh2hlrdavyjem2ft2ebqku3s7tcqgtdudc5p7e.py

W0205 11:32:59.336000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [339/0_1] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] Output code: 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # AOT ID: ['94_inference']
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import torch
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import math
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import random
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import os
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import tempfile
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from math import inf, nan
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from cmath import nanj
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch import device, empty_strided
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton.language as tl
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     grid,
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     split_scan_grid,
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     grid_combo_kernels,
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     start_graph,
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     end_graph,
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] )
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] aten = torch.ops.aten
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4a/c4avngit4peai5wyzxbzupzmlscvio7pwbdws2vz3lanrzskzb4n.py
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   x => constant_pad_nd
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] # Graph fragment:
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] #   %constant_pad_nd : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%arg3_1, [2, 2, 2, 2], 3.0), kwargs = {})
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] import triton.language as tl
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     filename=__file__,
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] )
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] @triton.jit
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     x2 = xindex // ks4
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     x4 = xindex
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp0 = (-2) + x1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp3 = ks2
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp5 = (-2) + x0
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp7 = ks3
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp9 = tmp2 & tmp4
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp11 = tmp10 & tmp8
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-2) + x0 + ((-2)*ks3) + ks3*x1 + ks2*ks3*x2), tmp11 & xmask, eviction_policy='evict_last', other=3.0)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp12, xmask)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] ''', device_str='cuda')
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] async_compile.wait(globals())
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] del async_compile
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] def call(args):
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     args.clear()
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     s0 = arg0_1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     s1 = arg1_1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     s2 = arg2_1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         ps0 = 4 + s2
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         ps1 = 4 + s1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         ps2 = 16 + 4*s1 + 4*s2 + s1*s2
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 4 + s1, 4 + s2), (16*s0 + 4*s0*s1 + 4*s0*s2 + s0*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 16*s0 + 4*s0*s1 + 4*s0*s2 + s0*s1*s2
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(arg3_1, buf0, ps0, ps1, s1, s2, ps2, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]         del arg3_1
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     return (buf0, )
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     arg0_1 = 3
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     arg1_1 = 32
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     arg2_1 = 32
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] if __name__ == "__main__":
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:32:59.457000 3201829 site-packages/torch/_inductor/graph.py:2014] [339/0_1] [__output_code] 
V0205 11:32:59.458000 3201829 site-packages/torch/_inductor/graph.py:2022] [339/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ag/caggxanubgkm4ydhwgadvsowm3whvxwyuy7xf55zpg5w2q3mxswg.py
I0205 11:32:59.469000 3201829 site-packages/torch/_inductor/graph.py:2056] [339/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ag/caggxanubgkm4ydhwgadvsowm3whvxwyuy7xf55zpg5w2q3mxswg.py
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] Output code: 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # AOT ID: ['95_inference']
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import torch
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import math
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import random
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import os
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import tempfile
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from math import inf, nan
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from cmath import nanj
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch import device, empty_strided
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton.language as tl
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     grid,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     split_scan_grid,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     grid_combo_kernels,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     start_graph,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     end_graph,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] )
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] aten = torch.ops.aten
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/o4/co4mue3yl26x5fsjgl5hprfbj4blly6dtspjrf6umyur4kncpdyc.py
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   x => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_2, add_3, add_4, clamp_max_2, clamp_max_3, clamp_min_1, clamp_min_2, clamp_min_3, convert_element_type_1, convert_element_type_2, convert_element_type_3, iota_1, mul_1, mul_2, mul_3, mul_4, sub, sub_1, sub_2, sub_3, sub_4
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Graph fragment:
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (72,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, 0.49295774647887325), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %clamp_min_1 : [num_users=2] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_1, 0.0), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%clamp_min_1, torch.int64), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_1, %convert_element_type_3), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %clamp_max_2), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_3), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg0_1, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %add_2), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_3, 0.0), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %clamp_max_3), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_4), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0', '''
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton.language as tl
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     filename=__file__,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] )
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] @triton.jit
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xnumel = 15552
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x1 = ((xindex // 72) % 72)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x0 = (xindex % 72)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x2 = xindex // 5184
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x4 = xindex
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp0 = x1
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp2 = 0.49295774647887325
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp4 = 0.0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp9 = tl.full([1], 35, tl.int64)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp11 = x0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp13 = tmp12 * tmp2
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp14 = triton_helpers.maximum(tmp13, tmp4)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp15 = tmp14.to(tl.int32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp16 = tl.load(in_ptr0 + (tmp15 + 36*tmp10 + 1296*x2), xmask, eviction_policy='evict_last')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp17 = tmp15 + tmp7
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp18 = triton_helpers.minimum(tmp17, tmp9)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp19 = tl.load(in_ptr0 + (tmp18 + 36*tmp10 + 1296*x2), xmask, eviction_policy='evict_last')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp20 = tmp19 - tmp16
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp21 = tmp15.to(tl.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp22 = tmp14 - tmp21
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp4)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp24 = 1.0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp25 = triton_helpers.minimum(tmp23, tmp24)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp26 = tmp20 * tmp25
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp27 = tmp16 + tmp26
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp28 = tl.load(in_ptr0 + (tmp15 + 36*tmp6 + 1296*x2), xmask, eviction_policy='evict_last')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp29 = tl.load(in_ptr0 + (tmp18 + 36*tmp6 + 1296*x2), xmask, eviction_policy='evict_last')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp30 = tmp29 - tmp28
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp31 = tmp30 * tmp25
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp32 = tmp28 + tmp31
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp33 = tmp27 - tmp32
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp34 = tmp6.to(tl.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp35 = tmp5 - tmp34
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp36 = triton_helpers.maximum(tmp35, tmp4)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp37 = triton_helpers.minimum(tmp36, tmp24)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp38 = tmp33 * tmp37
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp39 = tmp32 + tmp38
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp39, xmask)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/iz/cizr2y7h2tk5v3oilthhx2gkszbdm6onmjhy27fvm4sjwvr5uka7.py
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.bernoulli]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   x_2 => inductor_lookup_seed_default, inductor_random_default
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Graph fragment:
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 3, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] triton_poi_fused_bernoulli_1 = async_compile.triton('triton_poi_fused_bernoulli_1', '''
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton.language as tl
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     filename=__file__,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] )
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] @triton.jit
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] def triton_poi_fused_bernoulli_1(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xnumel = 3
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x0 = xindex
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp1 = x0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jf/cjfvi2gykkxxq5nvvnf3vj2dwdm5fbcr3gkx4xivemrml3pnhlld.py
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten.replication_pad2d, aten.tanh]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   x_4 => _unsafe_index_4, _unsafe_index_5
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   x_5 => tanh
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] # Graph fragment:
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_3, [None, None, %clamp_max_4, None]), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_4, [None, None, None, %clamp_max_5]), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] #   %tanh : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%_unsafe_index_5,), kwargs = {})
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] triton_poi_fused_replication_pad2d_tanh_2 = async_compile.triton('triton_poi_fused_replication_pad2d_tanh_2', '''
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] import triton.language as tl
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     size_hints={'x': 32768}, 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     filename=__file__,
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_replication_pad2d_tanh_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] )
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] @triton.jit
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] def triton_poi_fused_replication_pad2d_tanh_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xnumel = 16428
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x0 = (xindex % 74)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x1 = ((xindex // 74) % 74)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x2 = xindex // 5476
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     x3 = xindex
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (72*((71) * ((71) <= (((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0))))) + (((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))) * ((((0) * ((0) >= ((-1) + x1)) + ((-1) + x1) * (((-1) + x1) > (0)))) < (71))) + 5184*x2 + ((71) * ((71) <= (((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0))))) + (((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))) * ((((0) * ((0) >= ((-1) + x0)) + ((-1) + x0) * (((-1) + x0) > (0)))) < (71)))), xmask, eviction_policy='evict_last')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp2 = 0.5
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp3 = tmp1 < tmp2
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp4 = tmp3.to(tl.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp5 = 2.0
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp6 = tmp4 * tmp5
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp7 = tmp0 * tmp6
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tmp8 = libdevice.tanh(tmp7)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] async_compile.wait(globals())
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] del async_compile
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] def call(args):
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     arg0_1, = args
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     args.clear()
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     assert_size_stride(arg0_1, (1, 3, 36, 36), (3888, 1296, 36, 1))
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 72, 72), (15552, 5184, 72, 1), torch.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._to_copy, aten.arange, aten.mul, aten.clamp, aten._unsafe_index, aten.sub, aten.add]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0.run(buf1, arg0_1, 15552, grid=grid(15552), stream=stream0)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         del arg0_1
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         buf2 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf2)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 3, 1), (3, 1, 3), torch.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.bernoulli]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         triton_poi_fused_bernoulli_1.run(buf2, buf3, 0, 3, grid=grid(3), stream=stream0)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         del buf2
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, 74, 74), (16428, 5476, 74, 1), torch.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5], Original ATen: [aten.replication_pad2d, aten.tanh]
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         triton_poi_fused_replication_pad2d_tanh_2.run(buf1, buf3, buf4, 16428, grid=grid(16428), stream=stream0)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         del buf1
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]         del buf3
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     return (buf4, )
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     arg0_1 = rand_strided((1, 3, 36, 36), (3888, 1296, 36, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     fn = lambda: call([arg0_1])
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] if __name__ == "__main__":
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:33:00.003000 3201829 site-packages/torch/_inductor/graph.py:2014] [340/0_1] [__output_code] 
V0205 11:33:00.010000 3201829 site-packages/torch/_inductor/graph.py:2022] [340/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gq/cgqkdl7imloc65gayhd4kcs4xcakksdfxezxjs5qiepo62y4rovn.py
I0205 11:33:00.211000 3201829 site-packages/torch/_inductor/graph.py:2056] [340/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gq/cgqkdl7imloc65gayhd4kcs4xcakksdfxezxjs5qiepo62y4rovn.py

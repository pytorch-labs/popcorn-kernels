V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] Output code: 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # AOT ID: ['37_inference']
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import torch
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import math
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import random
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import os
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import tempfile
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from math import inf, nan
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from cmath import nanj
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch import device, empty_strided
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton.language as tl
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     grid,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     split_scan_grid,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     grid_combo_kernels,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     start_graph,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     end_graph,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     cooperative_reduction_grid,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] aten = torch.ops.aten
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] async_compile = AsyncCompile()
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7k/c7kc2vp6syzi2cfcn56tigjkxo4lrg22fmub2dr4anm7vjz7dhph.py
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Source node to ATen node mapping:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_1 => var_mean
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Graph fragment:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton.language as tl
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton_heuristics.reduction(
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     size_hints={'x': 256, 'r0_': 8192},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     filename=__file__,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton.jit
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xnumel = 256
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_numel = 8192
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     rnumel = r0_numel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xmask = xindex < xnumel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     rbase = r0_base
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     x0 = xindex
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         roffset = r0_offset
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         rindex = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_1 = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 8192*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp2 = tmp5[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp3 = tmp6[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp4 = tmp7[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp3, xmask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp4, xmask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] ''', device_str='cuda')
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3t/c3tuvxj2g35kcg46pkv3x5aep5fcimfjpm53gbsoy7oqfmnyuir5.py
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Source node to ATen node mapping:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_1 => var_mean
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Graph fragment:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_per_fused__native_batch_norm_legit_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_1', '''
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton.language as tl
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     size_hints={'x': 64, 'r0_': 4},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     filename=__file__,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton.jit
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] def triton_per_fused__native_batch_norm_legit_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xnumel = 64
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_numel = 4
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     R0_BLOCK: tl.constexpr = 4
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     rnumel = r0_numel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xmask = xindex < xnumel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_offset = 0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     roffset = r0_offset
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     rindex = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_1 = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     x0 = xindex
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 4*x0), xmask, other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp13 = tmp10[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp14 = tmp11[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp15 = tmp12[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] ''', device_str='cuda')
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kz/ckzmohkzhnwink2ez4mbi2ncamux3nbi7zi5ps7voeaqe3dyldq2.py
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Source node to ATen node mapping:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_1 => add, mul, rsqrt, sub, var_mean
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Graph fragment:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_poi_fused__native_batch_norm_legit_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_2', '''
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton.language as tl
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     size_hints={'x': 2097152}, 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     filename=__file__,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     min_elem_per_thread=0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton.jit
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xnumel = 2097152
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     x2 = xindex
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     x1 = xindex // 32768
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), None, eviction_policy='evict_last')
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp4 = 32768.0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp6 = 1e-05
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp8 = libdevice.rsqrt(tmp7)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, None)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] ''', device_str='cuda')
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7z/c7zljb744fb4d6xooml25jsxvyhhvvipl6fdr6vsalocrcahykgl.py
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.bernoulli]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Source node to ATen node mapping:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_4 => inductor_lookup_seed_default, inductor_random_default_1
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Graph fragment:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 64, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_poi_fused_bernoulli_3 = async_compile.triton('triton_poi_fused_bernoulli_3', '''
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton.language as tl
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton_heuristics.pointwise(
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     size_hints={'x': 64}, 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     filename=__file__,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     min_elem_per_thread=0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton.jit
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] def triton_poi_fused_bernoulli_3(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xnumel = 64
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xmask = xindex < xnumel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     x0 = xindex
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp1 = x0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] ''', device_str='cuda')
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gt/cgt6mhta7evggcbyz2n5px3bubkxvznnsu7h4ealct34itpd22js.py
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Topologically Sorted Source Nodes: [x_6, x_7, x_8, x_9], Original ATen: [aten.leaky_relu, aten.bernoulli, aten._to_copy, aten.mul, aten.add, aten.abs, aten.le, aten.scalar_tensor, aten.where, aten.neg, aten._softmax]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Source node to ATen node mapping:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_6 => gt, mul_2, where
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_7 => add_1, add_2, add_3, convert_element_type_1, inductor_lookup_seed_default_1, inductor_random_default, lt_1, mul_3, mul_4, mul_5
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_8 => abs_1, full_default, le, where_1
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   x_9 => amax, div_1, exp, neg, sub_1, sum_1
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] # Graph fragment:
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_4, 0), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_4, 0.01), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %view_4, %mul_2), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 8192], %inductor_lookup_seed_default_1, rand), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %convert_element_type_1 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt_1, torch.float32), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%convert_element_type_1, 0.8864048946659319), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %mul_4), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%convert_element_type_1, -1), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%add_1, 1.558387861036063), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_3, 0.7791939305180315), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %add_2), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_3,), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %full_default, %add_3), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %neg : [num_users=2] = call_function[target=torch.ops.aten.neg.default](args = (%where_1,), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%neg, [1], True), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%neg, %amax), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_red_fused__softmax__to_copy_abs_add_bernoulli_le_leaky_relu_mul_neg_scalar_tensor_where_4 = async_compile.triton('triton_red_fused__softmax__to_copy_abs_add_bernoulli_le_leaky_relu_mul_neg_scalar_tensor_where_4', '''
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] import triton.language as tl
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton_heuristics.reduction(
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     size_hints={'x': 1, 'r0_': 8192},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     filename=__file__,
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1, 'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 5), 'tt.equal_to': (3, 4)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax__to_copy_abs_add_bernoulli_le_leaky_relu_mul_neg_scalar_tensor_where_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] @triton.jit
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] def triton_red_fused__softmax__to_copy_abs_add_bernoulli_le_leaky_relu_mul_neg_scalar_tensor_where_4(in_out_ptr0, in_ptr0, in_ptr1, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xnumel = 1
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_numel = 8192
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     rnumel = r0_numel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     rbase = r0_base
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     _tmp33 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         roffset = r0_offset
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         rindex = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_0 = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp3 = tl.load(in_out_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_0 // 128), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp1 = r0_0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp5 = 0.5
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp6 = tmp4 < tmp5
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp7 = tmp6.to(tl.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp8 = 2.0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp9 = tmp7 * tmp8
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp10 = tmp3 * tmp9
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp11 = 0.0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp12 = tmp10 > tmp11
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp13 = 0.01
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp14 = tmp10 * tmp13
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp15 = tl.where(tmp12, tmp10, tmp14)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp16 = tmp2 < tmp5
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp17 = tmp16.to(tl.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp18 = 0.8864048946659319
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp19 = tmp17 * tmp18
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp20 = tmp15 * tmp19
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp21 = -1.0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp22 = tmp17 + tmp21
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp23 = 1.558387861036063
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp24 = tmp22 * tmp23
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp25 = 0.7791939305180315
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp26 = tmp24 + tmp25
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp27 = tmp20 + tmp26
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp28 = tl_math.abs(tmp27)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp29 = tmp28 <= tmp5
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp30 = tl.where(tmp29, tmp11, tmp27)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp31 = -tmp30
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp32 = tl.broadcast_to(tmp31, [XBLOCK, R0_BLOCK])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp34 = triton_helpers.maximum(_tmp33, tmp32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         _tmp33 = tl.where(r0_mask, tmp34, _tmp33)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp31, r0_mask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp33 = triton_helpers.max2(_tmp33, 1)[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     _tmp39 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         roffset = r0_offset
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         rindex = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_0 = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp35 = tl.load(in_out_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp36 = tmp35 - tmp33
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp37 = tl_math.exp(tmp36)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp38 = tl.broadcast_to(tmp37, [XBLOCK, R0_BLOCK])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp40 = _tmp39 + tmp38
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         _tmp39 = tl.where(r0_mask, tmp40, _tmp39)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     tmp39 = tl.sum(_tmp39, 1)[:, None]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         roffset = r0_offset
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         rindex = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         r0_0 = r0_index
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp41 = tl.load(in_out_ptr0 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp42 = tmp41 - tmp33
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp43 = tl_math.exp(tmp42)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tmp44 = tmp43 / tmp39
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         tl.store(in_out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp44, r0_mask)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] ''', device_str='cuda')
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] async_compile.wait(globals())
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] del async_compile
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] def call(args):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     arg0_1, = args
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     args.clear()
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     assert_size_stride(arg0_1, (1, 64, 32, 32, 32), (2097152, 32768, 1024, 32, 1))
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf0 = empty_strided_cuda((1, 64, 1, 1, 1, 4), (256, 4, 256, 256, 256, 1), torch.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf1 = empty_strided_cuda((1, 64, 1, 1, 1, 4), (256, 4, 256, 256, 256, 1), torch.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf2 = empty_strided_cuda((1, 64, 1, 1, 1, 4), (256, 4, 256, 256, 256, 1), torch.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg0_1, buf0, buf1, buf2, 256, 8192, grid=grid(256), stream=stream0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf3 = empty_strided_cuda((1, 64, 1, 1, 1), (64, 1, 64, 64, 64), torch.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf4 = empty_strided_cuda((1, 64, 1, 1, 1), (64, 1, 64, 64, 64), torch.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         triton_per_fused__native_batch_norm_legit_1.run(buf0, buf1, buf2, buf3, buf4, 64, 4, grid=grid(64), stream=stream0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf0
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf1
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf2
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf6 = empty_strided_cuda((1, 64, 32, 32, 32), (2097152, 32768, 1024, 32, 1), torch.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_2.run(arg0_1, buf3, buf4, buf6, 2097152, grid=grid(2097152), stream=stream0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del arg0_1
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf3
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.adaptive_max_pool2d]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf7 = torch.ops.aten.max_pool2d_with_indices.default(reinterpret_tensor(buf6, (1, 64, 1, 32768), (0, 32768, 0, 1), 0), [1, 256])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf6
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf8 = buf7[0]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf7
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf10 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf10)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf11 = reinterpret_tensor(buf4, (1, 64, 1), (64, 1, 64), 0); del buf4  # reuse
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.bernoulli]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         triton_poi_fused_bernoulli_3.run(buf10, buf11, 0, 64, grid=grid(64), stream=stream0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf13 = reinterpret_tensor(buf8, (1, 8192), (8192, 1), 0); del buf8  # reuse
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         buf16 = buf13; del buf13  # reuse
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6, x_7, x_8, x_9], Original ATen: [aten.leaky_relu, aten.bernoulli, aten._to_copy, aten.mul, aten.add, aten.abs, aten.le, aten.scalar_tensor, aten.where, aten.neg, aten._softmax]
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         triton_red_fused__softmax__to_copy_abs_add_bernoulli_le_leaky_relu_mul_neg_scalar_tensor_where_4.run(buf16, buf10, buf11, 1, 1, 8192, grid=grid(1), stream=stream0)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf10
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]         del buf11
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     return (buf16, )
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     arg0_1 = rand_strided((1, 64, 32, 32, 32), (2097152, 32768, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] if __name__ == "__main__":
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:29:42.799000 3201829 site-packages/torch/_inductor/graph.py:2014] [114/0] [__output_code] 
V0205 11:29:42.810000 3201829 site-packages/torch/_inductor/graph.py:2022] [114/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/e3/ce3opvwgg6pomb4idgvdbolzblebfcgfasqbhoybw6wikpnumde2.py
I0205 11:29:43.180000 3201829 site-packages/torch/_inductor/graph.py:2056] [114/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/e3/ce3opvwgg6pomb4idgvdbolzblebfcgfasqbhoybw6wikpnumde2.py

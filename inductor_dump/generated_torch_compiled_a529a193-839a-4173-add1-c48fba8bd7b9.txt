V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] Output code: 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # AOT ID: ['33_forward']
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import torch
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import math
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import random
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import os
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import tempfile
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from math import inf, nan
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from cmath import nanj
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch import device, empty_strided
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton.language as tl
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     grid,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     split_scan_grid,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     grid_combo_kernels,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     start_graph,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     end_graph,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] )
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] aten = torch.ops.aten
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oq/coqijdjy3sjppa5lk6awjnxd52f4epb5j62cnsiera2guolzx57w.py
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   x => add_1, add_2, add_3, add_4, mul_10, mul_11, mul_12, mul_6, mul_7, mul_8, mul_9, rsqrt, sub, var_mean
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   x_1 => abs_1, gt, mul_28, mul_37, sign, sub_12, where
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Graph fragment:
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_3, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_3, %getitem_1), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.9), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %mul_8), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_1), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_9, 0.1), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_10, %mul_11), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_6, %unsqueeze_1), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %add_4 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %unsqueeze_3), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_4,), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%add_4,), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, 0.5), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %mul_28), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 0), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %sub_12, %mul_37), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_2), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_3), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0', '''
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton.language as tl
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     filename=__file__,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] )
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] @triton.jit
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr4, out_ptr6, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xnumel = 3
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     rnumel = r0_numel
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     rbase = r0_base
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     x0 = xindex
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         roffset = r0_offset
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         rindex = r0_index
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_1 = r0_index
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         )
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp19 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp24 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp8 = ks0*ks1
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp10 = tmp3 / tmp9
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp11 = 1e-05
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp12 = tmp10 + tmp11
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp13 = libdevice.rsqrt(tmp12)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp14 = (((3*ks0*ks1) / 3) / ((tl.full([], -1.00000000000000, tl.float64)) + ((3*ks0*ks1) / 3)))
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp16 = tmp10 * tmp15
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp17 = 0.1
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp18 = tmp16 * tmp17
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp20 = 0.9
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp21 = tmp19 * tmp20
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp22 = tmp18 + tmp21
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp23 = tmp2 * tmp17
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp25 = tmp24 * tmp20
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp26 = tmp23 + tmp25
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp13, xmask)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp22, xmask)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp26, xmask)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp30 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp32 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         roffset = r0_offset
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         rindex = r0_index
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_1 = r0_index
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp27 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp28 = tmp27 - tmp2
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp29 = tmp28 * tmp13
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp31 = tmp29 * tmp30
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp33 = tmp31 + tmp32
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp34 = tl_math.abs(tmp33)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp35 = 0.5
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp36 = tmp34 > tmp35
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp37 = tl.full([1, 1], 0, tl.int32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp38 = tmp37 < tmp33
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp39 = tmp38.to(tl.int8)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp40 = tmp33 < tmp37
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp41 = tmp40.to(tl.int8)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp42 = tmp39 - tmp41
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp43 = tmp42.to(tmp33.dtype)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp44 = tmp43 * tmp35
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp45 = tmp33 - tmp44
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp46 = 0.0
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp47 = tmp33 * tmp46
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp48 = tl.where(tmp36, tmp45, tmp47)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp48, r0_mask & xmask)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] ''', device_str='cuda')
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zt/czti5ww3hkbfoh6kbq2q5vcy46pdzd2je37jucl26n23wpmvdlrl.py
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   add_ => add
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Graph fragment:
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, 1), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add), kwargs = {})
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] triton_poi_fused_add_1 = async_compile.triton('triton_poi_fused_add_1', '''
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton.language as tl
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     filename=__file__,
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_1', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] )
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] @triton.jit
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] def triton_poi_fused_add_1(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xnumel = 1
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] ''', device_str='cuda')
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] async_compile.wait(globals())
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] del async_compile
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] def call(args):
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     args.clear()
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     s1 = primals_1
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     s2 = primals_2
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_3, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_4, (), ())
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_5, (3, ), (1, ))
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_6, (3, ), (1, ))
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_7, (3, ), (1, ))
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_8, (3, ), (1, ))
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 1, 1), torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 1, 1), torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1), torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         buf5 = buf4; del buf4  # reuse
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0_r0_numel = s1*s2
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0.run(buf5, primals_3, primals_6, primals_5, primals_7, primals_8, buf0, buf3, primals_6, primals_5, s1, s2, 3, triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0_r0_numel, grid=grid(3), stream=stream0)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del primals_5
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del primals_6
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         triton_poi_fused_add_1.run(primals_4, primals_4, 1, grid=grid(1), stream=stream0)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del primals_4
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     return (buf5, primals_3, primals_7, primals_8, buf0, buf3, s1, s2, )
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_1 = 64
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_2 = 64
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_4 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_5 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_6 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_7 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_8 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] if __name__ == "__main__":
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:26:22.589000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.628000 1940816 site-packages/torch/_inductor/graph.py:2022] [107/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/rr/crrj4ydzq3gmqomqinb3r7olavc6ayrpaprgxd2m36pafj44qe6n.py
I0127 12:26:22.798000 1940816 site-packages/torch/_inductor/graph.py:2056] [107/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/rr/crrj4ydzq3gmqomqinb3r7olavc6ayrpaprgxd2m36pafj44qe6n.py
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] Output code: 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # AOT ID: ['33_backward']
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import torch
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import math
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import random
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import os
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import tempfile
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from math import inf, nan
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from cmath import nanj
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch import device, empty_strided
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton.language as tl
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     grid,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     split_scan_grid,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     grid_combo_kernels,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     start_graph,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     end_graph,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] )
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] aten = torch.ops.aten
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jz/cjzpaekd6cq3iz5nqc6s7qnbonks4f7xmbnavwgqoc5hy6adkg5m.py
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.scalar_tensor, aten.where, aten.mul, aten.add, aten.native_batch_norm_backward]
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   x => add_4, mul_12, mul_6, sub
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   x_1 => abs_1, gt
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] # Graph fragment:
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_3, %getitem_1), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_6, %unsqueeze_1), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %unsqueeze_3), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_4,), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %full_default, %tangents_1), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %tangents_1, %full_default), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_1, 0), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %add_37 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_46, %where_2), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%add_37, [0, 2, 3]), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_3, %unsqueeze_6), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_48 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_37, %sub_19), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_48, [0, 2, 3]), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] #   %mul_58 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_abs_add_gt_mul_native_batch_norm_backward_scalar_tensor_where_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_abs_add_gt_mul_native_batch_norm_backward_scalar_tensor_where_0', '''
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] import triton.language as tl
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     filename=__file__,
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_abs_add_gt_mul_native_batch_norm_backward_scalar_tensor_where_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] )
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] @triton.jit
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_abs_add_gt_mul_native_batch_norm_backward_scalar_tensor_where_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xnumel = 3
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     rnumel = r0_numel
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     rbase = r0_base
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     x0 = xindex
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     _tmp19 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     _tmp23 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         roffset = r0_offset
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         rindex = r0_index
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         r0_1 = r0_index
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp12 = tl.load(in_ptr4 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp2 = tmp0 - tmp1
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp4 = tmp2 * tmp3
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp6 = tmp4 * tmp5
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp8 = tmp6 + tmp7
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp9 = tl_math.abs(tmp8)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp10 = 0.5
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp11 = tmp9 > tmp10
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp13 = 0.0
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp14 = tl.where(tmp11, tmp13, tmp12)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp15 = tmp14 * tmp13
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp16 = tl.where(tmp11, tmp12, tmp13)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp17 = tmp15 + tmp16
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp18 = tl.broadcast_to(tmp17, [XBLOCK, R0_BLOCK])
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp20 = _tmp19 + tmp18
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         _tmp19 = tl.where(r0_mask & xmask, tmp20, _tmp19)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp21 = tmp17 * tmp2
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp22 = tl.broadcast_to(tmp21, [XBLOCK, R0_BLOCK])
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         tmp24 = _tmp23 + tmp22
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         _tmp23 = tl.where(r0_mask & xmask, tmp24, _tmp23)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp19 = tl.sum(_tmp19, 1)[:, None]
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp23 = tl.sum(_tmp23, 1)[:, None]
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp19, xmask)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tmp25 = tmp23 * tmp3
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.debug_barrier()
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp25, xmask)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] ''', device_str='cuda')
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] async_compile.wait(globals())
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] del async_compile
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] def call(args):
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_7, primals_8, getitem_1, rsqrt, tangents_1 = args
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     args.clear()
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     s1 = primals_1
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     s2 = primals_2
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_3, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_7, (3, ), (1, ))
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(primals_8, (3, ), (1, ))
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(getitem_1, (1, 3, 1, 1), (3, 1, 1, 1))
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(rsqrt, (1, 3, 1, 1), (3, 1, 1, 1))
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         buf1 = empty_strided_cuda((3, ), (1, ), torch.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         buf2 = reinterpret_tensor(getitem_1, (3, ), (1, ), 0); del getitem_1  # reuse
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         buf3 = buf2; del buf2  # reuse
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.scalar_tensor, aten.where, aten.mul, aten.add, aten.native_batch_norm_backward]
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_abs_add_gt_mul_native_batch_norm_backward_scalar_tensor_where_0_r0_numel = s1*s2
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_abs_add_gt_mul_native_batch_norm_backward_scalar_tensor_where_0.run(buf3, primals_3, rsqrt, primals_7, primals_8, tangents_1, buf1, s1, s2, 3, triton_red_fused__native_batch_norm_legit_functional_abs_add_gt_mul_native_batch_norm_backward_scalar_tensor_where_0_r0_numel, grid=grid(3), stream=stream0)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del primals_3
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del primals_7
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del primals_8
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del rsqrt
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]         del tangents_1
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     return (None, None, None, None, None, None, buf3, buf1, )
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_1 = 64
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_2 = 64
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_7 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     primals_8 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     getitem_1 = rand_strided((1, 3, 1, 1), (3, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     rsqrt = rand_strided((1, 3, 1, 1), (3, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     tangents_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_7, primals_8, getitem_1, rsqrt, tangents_1])
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] if __name__ == "__main__":
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:26:22.909000 1940816 site-packages/torch/_inductor/graph.py:2014] [107/0_1] [__output_code] 
V0127 12:26:22.913000 1940816 site-packages/torch/_inductor/graph.py:2022] [107/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hq/chqrcbinanyvof7quqj7carbekfwcrf2pyzqszlv2xwujsfesnxh.py
I0127 12:26:23.019000 1940816 site-packages/torch/_inductor/graph.py:2056] [107/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hq/chqrcbinanyvof7quqj7carbekfwcrf2pyzqszlv2xwujsfesnxh.py
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] Output code: 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # AOT ID: ['34_forward']
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import torch
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import math
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import random
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import os
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import tempfile
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from math import inf, nan
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from cmath import nanj
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch import device, empty_strided
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton.language as tl
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     grid,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     split_scan_grid,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     grid_combo_kernels,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     start_graph,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     end_graph,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     cooperative_reduction_grid,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] )
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] aten = torch.ops.aten
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] async_compile = AsyncCompile()
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xn/cxnhsokfpfll5yxamvrdus37agflnypvlamr3ezrhi5qtdkneudk.py
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   x => add_1, add_2, add_3, add_4, mul, mul_1, mul_2, mul_3, mul_4, mul_5, mul_6, rsqrt, sub, var_mean
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   x_1 => abs_1, gt, mul_7, mul_8, sign, sub_1, where
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Graph fragment:
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%primals_1, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %getitem_1), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, 0.9), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %mul_2), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, 1.0002442002442002), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, 0.1), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_4, 0.9), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %mul_5), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %unsqueeze_1), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add_4 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_3), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%add_4,), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%abs_1, 0.5), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%add_4,), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, 0.5), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %mul_7), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 0), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %sub_1, %mul_8), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_3, %add_2), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add_3), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0', '''
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton.language as tl
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton_heuristics.reduction(
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     size_hints={'x': 4, 'r0_': 4096},
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     filename=__file__,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] )
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton.jit
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr4, out_ptr6, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xnumel = 3
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     r0_numel = 4096
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     rnumel = r0_numel
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xmask = xindex < xnumel
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     rbase = r0_base
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     x0 = xindex
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         roffset = r0_offset
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         rindex = r0_index
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_1 = r0_index
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 4096*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         )
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp22 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp8 = 4096.0
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp9 = tmp3 / tmp8
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp10 = 1e-05
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp11 = tmp9 + tmp10
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp12 = libdevice.rsqrt(tmp11)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp13 = 1.0002442002442002
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp14 = tmp9 * tmp13
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp15 = 0.1
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp16 = tmp14 * tmp15
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp18 = 0.9
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp19 = tmp17 * tmp18
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp20 = tmp16 + tmp19
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp21 = tmp2 * tmp15
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp23 = tmp22 * tmp18
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp24 = tmp21 + tmp23
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp12, xmask)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp20, xmask)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp24, xmask)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp28 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp30 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         roffset = r0_offset
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         rindex = r0_index
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         r0_1 = r0_index
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp25 = tl.load(in_ptr0 + (r0_1 + 4096*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp26 = tmp25 - tmp2
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp27 = tmp26 * tmp12
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp29 = tmp27 * tmp28
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp31 = tmp29 + tmp30
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp32 = tl_math.abs(tmp31)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp33 = 0.5
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp34 = tmp32 > tmp33
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp35 = tl.full([1, 1], 0, tl.int32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp36 = tmp35 < tmp31
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp37 = tmp36.to(tl.int8)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp38 = tmp31 < tmp35
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp39 = tmp38.to(tl.int8)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp40 = tmp37 - tmp39
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp41 = tmp40.to(tmp31.dtype)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp42 = tmp41 * tmp33
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp43 = tmp31 - tmp42
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp44 = 0.0
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp45 = tmp31 * tmp44
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tmp46 = tl.where(tmp34, tmp43, tmp45)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 4096*x0), tmp46, r0_mask & xmask)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] ''', device_str='cuda')
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zt/czti5ww3hkbfoh6kbq2q5vcy46pdzd2je37jucl26n23wpmvdlrl.py
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Source node to ATen node mapping:
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   add_ => add
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] # Graph fragment:
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_2, 1), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_2, %add), kwargs = {})
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_poi_fused_add_1 = async_compile.triton('triton_poi_fused_add_1', '''
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] import triton.language as tl
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     filename=__file__,
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_1', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     min_elem_per_thread=0
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] )
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] @triton.jit
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def triton_poi_fused_add_1(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xnumel = 1
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] ''', device_str='cuda')
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] async_compile.wait(globals())
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] del async_compile
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def call(args):
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6 = args
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     args.clear()
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_1, (1, 3, 64, 64), (12288, 4096, 64, 1))
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_2, (), ())
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_3, (3, ), (1, ))
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_4, (3, ), (1, ))
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_5, (3, ), (1, ))
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     assert_size_stride(primals_6, (3, ), (1, ))
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 1, 1), torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 3, 1, 1), (3, 1, 1, 1), torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 3, 64, 64), (12288, 4096, 64, 1), torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         buf5 = buf4; del buf4  # reuse
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten._native_batch_norm_legit_functional, aten.abs, aten.gt, aten.sign, aten.mul, aten.sub, aten.where]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_abs_gt_mul_sign_sub_where_0.run(buf5, primals_1, primals_4, primals_3, primals_5, primals_6, buf0, buf3, primals_4, primals_3, 3, 4096, grid=grid(3), stream=stream0)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_3
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_4
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         triton_poi_fused_add_1.run(primals_2, primals_2, 1, grid=grid(1), stream=stream0)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]         del primals_2
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     return (buf5, primals_1, primals_5, primals_6, buf0, buf3, )
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_2 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_3 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_4 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_5 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     primals_6 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6])
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] if __name__ == "__main__":
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 12:26:23.253000 1940816 site-packages/torch/_inductor/graph.py:2014] [108/0_1] [__output_code] 
V0127 12:26:23.258000 1940816 site-packages/torch/_inductor/graph.py:2022] [108/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/iw/ciwclpcxyqycrfxuek2jcqzqrlgs3vqr4t4agsvygwdxxqqxjsej.py
I0127 12:26:23.407000 1940816 site-packages/torch/_inductor/graph.py:2056] [108/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/iw/ciwclpcxyqycrfxuek2jcqzqrlgs3vqr4t4agsvygwdxxqqxjsej.py

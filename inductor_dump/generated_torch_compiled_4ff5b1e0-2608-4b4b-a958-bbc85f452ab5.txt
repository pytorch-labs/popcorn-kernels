W0127 11:36:05.491000 703210 site-packages/torch/utils/_sympy/interp.py:176] [407/0_1] failed while executing pow_by_natural([VR[4, int_oo], VR[-1, -1]])
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] Output code: 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # AOT ID: ['96_forward']
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import torch
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import math
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import random
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import os
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import tempfile
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from math import inf, nan
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from cmath import nanj
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch import device, empty_strided
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton.language as tl
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     grid,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     split_scan_grid,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     grid_combo_kernels,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     start_graph,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     end_graph,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] )
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] aten = torch.ops.aten
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/x6/cx6zr6cj3ilshwtb4iiaefg7ko5jimawjdwaelbqym3iaoodeswe.py
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.relu, aten._to_copy, aten.arange, aten.clamp, aten.view, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   x => relu
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   x_1 => _unsafe_index, _unsafe_index_1, _unsafe_index_2, _unsafe_index_3, add_104, add_72, add_85, clamp_max_2, clamp_max_3, clamp_min_1, clamp_min_2, clamp_min_3, convert_element_type_1, convert_element_type_2, convert_element_type_3, iota_1, mul_46, mul_59, mul_74, sub_36, sub_39, sub_46, sub_53, sub_56, view_1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Graph fragment:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %relu : [num_users=4] = call_function[target=torch.ops.aten.relu.default](args = (%primals_3,), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %full_default : [num_users=4] = call_function[target=torch.ops.aten.full.default](args = ([], -1.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %full_default_2 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 2), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %convert_element_type_1 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%mul_5,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota_1, torch.float32), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %scalar_tensor_default_5 : [num_users=2] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_2,), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %convert_element_type_default_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%scalar_tensor_default_5, torch.float64), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default_3), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_2, %scalar_tensor_default_5), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %convert_element_type_default_4 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_2, torch.float64), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %convert_element_type_default_4), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %true_divide_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%add_tensor_2, %add_tensor_3), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %convert_element_type_default_5 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor_1, torch.float32), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_2, %convert_element_type_default_5), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_tensor_3, 0.0), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %view_1 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%clamp_min_1, [%mul_5]), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %convert_element_type_3 : [num_users=4] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_1, torch.int64), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %clamp_max, %convert_element_type_3]), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%relu, [None, None, %clamp_max, %clamp_max_1]), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sub_36 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %convert_element_type_3), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_36, 0.0), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %clamp_max_2 : [num_users=2] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sub_39 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_39, %clamp_max_2), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_72 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_46), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sub_46 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_3, %_unsafe_index_2), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_59 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_46, %clamp_max_2), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_85 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_2, %mul_59), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sub_53 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %convert_element_type_1), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_53, 0.0), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %clamp_max_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_3, 1.0), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sub_56 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_85, %add_72), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_74 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_56, %clamp_max_3), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_104 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_72, %mul_74), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0 = async_compile.triton('triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0', '''
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton.language as tl
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     size_hints={'x': 65536}, 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     filename=__file__,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0', 'mutated_arg_names': ['in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] )
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton.jit
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0(in_out_ptr1, in_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x1 = ((xindex // ks1) % ks2)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x0 = (xindex % ks1)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x2 = xindex // ks4
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x4 = xindex
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp0 = tl.full([1], -1.0, tl.float64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp1 = ks0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp2 = tmp1.to(tl.float64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp3 = tmp0 + tmp2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp4 = 2.0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp5 = tmp1.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp6 = tmp4 * tmp5
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp7 = tmp6.to(tl.float64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp8 = tmp0 + tmp7
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp9 = tmp3 / tmp8
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp11 = x1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp12 = tmp11.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp13 = tmp12 * tmp10
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp14 = 0.0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp15 = triton_helpers.maximum(tmp13, tmp14)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp16 = tmp15.to(tl.int64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp17 = tl.full([1], 1, tl.int64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp18 = tmp16 + tmp17
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp19 = (-1) + ks0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp20 = triton_helpers.minimum(tmp18, tmp19)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp21 = ks3
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp22 = tmp21.to(tl.float64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp23 = tmp0 + tmp22
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp24 = tmp21.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp25 = tmp4 * tmp24
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp26 = tmp25.to(tl.float64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp27 = tmp0 + tmp26
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp28 = tmp23 / tmp27
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp29 = tmp28.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp30 = x0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp31 = tmp30.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp32 = tmp31 * tmp29
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp33 = triton_helpers.maximum(tmp32, tmp14)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp34 = tmp33.to(tl.int64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp35 = tl.load(in_ptr0 + (tmp34 + ks3*tmp20 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp36 = tl.full([1], 0, tl.int32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp37 = triton_helpers.maximum(tmp36, tmp35)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp38 = tl.load(in_ptr0 + (tmp34 + ks3*tmp16 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp39 = triton_helpers.maximum(tmp36, tmp38)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp40 = tmp34 + tmp17
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp41 = (-1) + ks3
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp42 = triton_helpers.minimum(tmp40, tmp41)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp43 = tl.load(in_ptr0 + (tmp42 + ks3*tmp16 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp44 = triton_helpers.maximum(tmp36, tmp43)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp45 = tmp44 - tmp39
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp46 = tl.load(in_ptr0 + (tmp42 + ks3*tmp20 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp47 = triton_helpers.maximum(tmp36, tmp46)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp48 = tmp47 - tmp37
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp49 = tmp34.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp50 = tmp33 - tmp49
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp51 = triton_helpers.maximum(tmp50, tmp14)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp52 = 1.0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp53 = triton_helpers.minimum(tmp51, tmp52)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp54 = tmp48 * tmp53
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp55 = tmp37 + tmp54
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp56 = tmp45 * tmp53
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp57 = tmp39 + tmp56
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp58 = tmp55 - tmp57
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp59 = tmp16.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp60 = tmp15 - tmp59
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp61 = triton_helpers.maximum(tmp60, tmp14)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp62 = triton_helpers.minimum(tmp61, tmp52)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp63 = tmp58 * tmp62
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp64 = tmp57 + tmp63
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(in_out_ptr1 + (x4), tmp64, xmask)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] ''', device_str='cuda')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kt/cktuepwdmon7kzhurvv5ivpbhrlowwlcb6b7hzuf63l753bltn3n.py
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.reflection_pad2d]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   x_2 => _unsafe_index_4, _unsafe_index_5
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Graph fragment:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_104, [None, None, %sub_68, None]), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %_unsafe_index_5 : [num_users=4] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_4, [None, None, None, %sub_74]), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_poi_fused_reflection_pad2d_1 = async_compile.triton('triton_poi_fused_reflection_pad2d_1', '''
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton.language as tl
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     size_hints={'x': 65536}, 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     filename=__file__,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'ks6': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] )
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton.jit
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def triton_poi_fused_reflection_pad2d_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, ks6, xnumel, XBLOCK : tl.constexpr):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x2 = xindex // ks2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x3 = xindex
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*ks6*(tl.where((-1) + ks4 + ((-1)*tl_math.abs(1 + ((-2)*ks5) + tl_math.abs((-2) + x1))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-2)*ks5) + tl_math.abs((-2) + x1))) + 4*ks5, (-1) + ks4 + ((-1)*tl_math.abs(1 + ((-2)*ks5) + tl_math.abs((-2) + x1))))) + 4*ks5*ks6*x2 + (tl.where((-1) + ks3 + ((-1)*tl_math.abs(1 + ((-2)*ks6) + tl_math.abs((-2) + x0))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-2)*ks6) + tl_math.abs((-2) + x0))) + 4*ks6, (-1) + ks3 + ((-1)*tl_math.abs(1 + ((-2)*ks6) + tl_math.abs((-2) + x0)))))), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] ''', device_str='cuda')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/24/c24i7dgtyuabye76wknyq2jesuuwrbzo7x6jn7ctkj3e4xowjqgf.py
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit_functional]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   x_3 => add_118, add_119, add_120, add_121, mul_100, mul_101, mul_102, mul_103, mul_104, mul_105, mul_99, rsqrt, sub_77, var_mean
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Graph fragment:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%_unsafe_index_5, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_118 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_118,), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sub_77 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %getitem_1), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_99 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_77, %rsqrt), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_100 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze, 0.1), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_101 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.9), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_119 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_100, %mul_101), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_102 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_2, %truediv_3), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_103 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_102, 0.1), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_104 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_6, 0.9), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_120 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_103, %mul_104), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_105 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_99, %unsqueeze_1), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_121 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_105, %unsqueeze_3), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_5, %add_119), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %copy__2 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_6, %add_120), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_2 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_2', '''
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton.language as tl
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     filename=__file__,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr5': '*fp32', 'out_ptr7': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_2', 'mutated_arg_names': ['in_ptr3', 'in_ptr4', 'out_ptr5', 'out_ptr7'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] )
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton.jit
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr3, out_ptr5, out_ptr7, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xnumel = 10
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     rnumel = r0_numel
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     rbase = r0_base
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x0 = xindex
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         roffset = r0_offset
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         rindex = r0_index
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_1 = r0_index
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 16*x0 + 8*ks0*x0 + 8*ks1*x0 + 4*ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         )
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp19 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         roffset = r0_offset
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         rindex = r0_index
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_1 = r0_index
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + 16*x0 + 8*ks0*x0 + 8*ks1*x0 + 4*ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp10 = 16 + ks2 + 8*ks0 + 8*ks1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp11 = tmp10.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp12 = tmp3 / tmp11
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp13 = 1e-05
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp14 = tmp12 + tmp13
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp15 = libdevice.rsqrt(tmp14)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp16 = tmp9 * tmp15
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp18 = tmp16 * tmp17
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp20 = tmp18 + tmp19
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + 16*x0 + 8*ks0*x0 + 8*ks1*x0 + 4*ks0*ks1*x0), tmp20, r0_mask & xmask)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp32 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp37 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp21 = 16 + ks2 + 8*ks0 + 8*ks1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp23 = tmp3 / tmp22
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp24 = 1e-05
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp25 = tmp23 + tmp24
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp26 = libdevice.rsqrt(tmp25)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp27 = (((160 + 80*ks0 + 80*ks1 + 40*ks0*ks1) / 10) / ((tl.full([], -1.00000000000000, tl.float64)) + ((160 + 80*ks0 + 80*ks1 + 40*ks0*ks1) / 10)))
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp28 = tmp27.to(tl.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp29 = tmp23 * tmp28
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp30 = 0.1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp31 = tmp29 * tmp30
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp33 = 0.9
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp34 = tmp32 * tmp33
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp35 = tmp31 + tmp34
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp36 = tmp2 * tmp30
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp38 = tmp37 * tmp33
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp39 = tmp36 + tmp38
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp26, xmask)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(out_ptr5 + (x0), tmp35, xmask)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(out_ptr7 + (x0), tmp39, xmask)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] ''', device_str='cuda')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/36/c36fsokdqemetuxowygjraqhmkvfqomdt7tvtednpyk77ioklyqe.py
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   add_ => add_117
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Graph fragment:
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %add_117 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_4, 1), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_4, %add_117), kwargs = {})
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_poi_fused_add_3 = async_compile.triton('triton_poi_fused_add_3', '''
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton.language as tl
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     size_hints={'x': 1}, 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     filename=__file__,
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_3', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] )
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton.jit
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def triton_poi_fused_add_3(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xnumel = 1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp2 = tl.full([1], 1, tl.int64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp3 = tmp1 + tmp2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp3, None)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] ''', device_str='cuda')
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] async_compile.wait(globals())
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] del async_compile
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def call(args):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     args.clear()
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     s1 = primals_1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     s2 = primals_2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(primals_3, (1, 10, s1, s2), (10*s1*s2, s1*s2, s2, 1))
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(primals_4, (), ())
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(primals_5, (10, ), (1, ))
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(primals_6, (10, ), (1, ))
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(primals_7, (10, ), (1, ))
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(primals_8, (10, ), (1, ))
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         ps0 = 2*s2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         ps1 = 2*s1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         ps2 = 4*s1*s2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 10, 2*s1, 2*s2), (40*s1*s2, 4*s1*s2, 2*s2, 1), torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf5 = buf0; del buf0  # reuse
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.relu, aten._to_copy, aten.arange, aten.clamp, aten.view, aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0_xnumel = 40*s1*s2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0.run(buf5, primals_3, s1, ps0, ps1, s2, ps2, triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0_xnumel, grid=grid(triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_relu_sub_view_0_xnumel), stream=stream0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del primals_3
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         ps3 = 4 + 2*s2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         ps4 = 4 + 2*s1
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         ps5 = 16 + 8*s1 + 8*s2 + 4*s1*s2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 10, 4 + 2*s1, 4 + 2*s2), (160 + 80*s1 + 80*s2 + 40*s1*s2, 16 + 8*s1 + 8*s2 + 4*s1*s2, 4 + 2*s2, 1), torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.reflection_pad2d]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_poi_fused_reflection_pad2d_1_xnumel = 160 + 80*s1 + 80*s2 + 40*s1*s2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_poi_fused_reflection_pad2d_1.run(buf5, buf6, ps3, ps4, ps5, ps0, ps1, s1, s2, triton_poi_fused_reflection_pad2d_1_xnumel, grid=grid(triton_poi_fused_reflection_pad2d_1_xnumel), stream=stream0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del buf5
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 10, 1, 1), (10, 1, 10, 10), torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf11 = empty_strided_cuda((1, 10, 4 + 2*s1, 4 + 2*s2), (160 + 80*s1 + 80*s2 + 40*s1*s2, 16 + 8*s1 + 8*s2 + 4*s1*s2, 4 + 2*s2, 1), torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf10 = empty_strided_cuda((1, 10, 1, 1), (10, 1, 10, 10), torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten._native_batch_norm_legit_functional]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_2_r0_numel = 16 + 8*s1 + 8*s2 + 4*s1*s2
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_2.run(buf6, primals_7, primals_8, primals_6, primals_5, buf7, buf11, buf10, primals_6, primals_5, s1, s2, ps2, 10, triton_red_fused__native_batch_norm_legit_functional_2_r0_numel, grid=grid(10), stream=stream0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del primals_5
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del primals_6
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del primals_7
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del primals_8
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add_], Original ATen: [aten.add]
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_poi_fused_add_3.run(primals_4, primals_4, 1, grid=grid(1), stream=stream0)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del primals_4
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     return (reinterpret_tensor(buf11, (1, 1, 1, 10, 4 + 2*s1, 4 + 2*s2), (160 + 80*s1 + 80*s2 + 40*s1*s2, 160 + 80*s1 + 80*s2 + 40*s1*s2, 160 + 80*s1 + 80*s2 + 40*s1*s2, 16 + 8*s1 + 8*s2 + 4*s1*s2, 4 + 2*s2, 1), 0), buf6, reinterpret_tensor(buf10, (10, ), (1, ), 0), reinterpret_tensor(buf7, (1, 10, 1, 1), (10, 1, 1, 1), 0), s1, s2, )
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_1 = 32
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_2 = 32
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_3 = rand_strided((1, 10, 32, 32), (10240, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_4 = rand_strided((), (), device='cuda:0', dtype=torch.int64)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_5 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_6 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_7 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_8 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] if __name__ == "__main__":
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:36:05.815000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:05.825000 703210 site-packages/torch/_inductor/graph.py:2022] [407/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ti/cti7s5b6ecpgoiawdelnpozkpiwtof6hecxnwbjbh6poi7rwlrsh.py
I0127 11:36:06.162000 703210 site-packages/torch/_inductor/graph.py:2056] [407/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ti/cti7s5b6ecpgoiawdelnpozkpiwtof6hecxnwbjbh6poi7rwlrsh.py
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] Output code: 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # AOT ID: ['96_backward']
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import torch
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import math
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import random
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import os
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import tempfile
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from math import inf, nan
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from cmath import nanj
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch import device, empty_strided
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton.language as tl
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     grid,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     split_scan_grid,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     grid_combo_kernels,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     start_graph,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     end_graph,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] )
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] aten = torch.ops.aten
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2d/c2dbbbu2r3wyu5zydb5emv4z47bzvou5gftfhxqgfs3znt6lomae.py
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] # Graph fragment:
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%squeeze_4, [0, 2, 3]), kwargs = {})
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sub_85 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %unsqueeze_8), kwargs = {})
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_121 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_4, %sub_85), kwargs = {})
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_121, [0, 2, 3]), kwargs = {})
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] #   %mul_131 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_red_fused_native_batch_norm_backward_0 = async_compile.triton('triton_red_fused_native_batch_norm_backward_0', '''
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] import triton.language as tl
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     filename=__file__,
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_batch_norm_backward_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] )
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] @triton.jit
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def triton_red_fused_native_batch_norm_backward_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xnumel = 10
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     rnumel = r0_numel
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     rbase = r0_base
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     x0 = xindex
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp5 = tl.load(in_out_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     _tmp9 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         roffset = r0_offset
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         rindex = r0_index
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         r0_1 = r0_index
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 16*x0 + 8*ks0*x0 + 8*ks1*x0 + 4*ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_1 + 16*x0 + 8*ks0*x0 + 8*ks1*x0 + 4*ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp6 = tmp4 - tmp5
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp7 = tmp0 * tmp6
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp8 = tl.broadcast_to(tmp7, [XBLOCK, R0_BLOCK])
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         tmp10 = _tmp9 + tmp8
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         _tmp9 = tl.where(r0_mask & xmask, tmp10, _tmp9)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp9 = tl.sum(_tmp9, 1)[:, None]
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp11 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tmp12 = tmp9 * tmp11
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.debug_barrier()
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp12, xmask)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] ''', device_str='cuda')
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] async_compile.wait(globals())
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] del async_compile
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def call(args):
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_1, primals_2, _unsafe_index_5, squeeze_1, unsqueeze_8, tangents_1 = args
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     args.clear()
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     s1 = primals_1
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     s2 = primals_2
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(_unsafe_index_5, (1, 10, 4 + 2*s1, 4 + 2*s2), (160 + 80*s1 + 80*s2 + 40*s1*s2, 16 + 8*s1 + 8*s2 + 4*s1*s2, 4 + 2*s2, 1))
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(squeeze_1, (10, ), (1, ))
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(unsqueeze_8, (1, 10, 1, 1), (10, 1, 1, 1))
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 1, 1, 10, 4 + 2*s1, 4 + 2*s2), (160 + 80*s1 + 80*s2 + 40*s1*s2, 160 + 80*s1 + 80*s2 + 40*s1*s2, 160 + 80*s1 + 80*s2 + 40*s1*s2, 16 + 8*s1 + 8*s2 + 4*s1*s2, 4 + 2*s2, 1))
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf0 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf1 = reinterpret_tensor(unsqueeze_8, (10, ), (1, ), 0); del unsqueeze_8  # reuse
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         buf2 = buf1; del buf1  # reuse
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.native_batch_norm_backward]
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0_r0_numel = 16 + 8*s1 + 8*s2 + 4*s1*s2
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         triton_red_fused_native_batch_norm_backward_0.run(buf2, tangents_1, _unsafe_index_5, squeeze_1, buf0, s1, s2, 10, triton_red_fused_native_batch_norm_backward_0_r0_numel, grid=grid(10), stream=stream0)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del _unsafe_index_5
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del squeeze_1
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]         del tangents_1
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     return (None, None, None, None, None, None, buf2, buf0, )
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_1 = 32
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     primals_2 = 32
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     _unsafe_index_5 = rand_strided((1, 10, 68, 68), (46240, 4624, 68, 1), device='cuda:0', dtype=torch.float32)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     squeeze_1 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     unsqueeze_8 = rand_strided((1, 10, 1, 1), (10, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     tangents_1 = rand_strided((1, 1, 1, 10, 68, 68), (46240, 46240, 46240, 4624, 68, 1), device='cuda:0', dtype=torch.float32)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, _unsafe_index_5, squeeze_1, unsqueeze_8, tangents_1])
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] if __name__ == "__main__":
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:36:06.240000 703210 site-packages/torch/_inductor/graph.py:2014] [407/0_1] [__output_code] 
V0127 11:36:06.242000 703210 site-packages/torch/_inductor/graph.py:2022] [407/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xf/cxfnfmoujjuqx77idn6vvjc3bsj3jthb3mh2yayampa2paef2znl.py
I0127 11:36:06.356000 703210 site-packages/torch/_inductor/graph.py:2056] [407/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xf/cxfnfmoujjuqx77idn6vvjc3bsj3jthb3mh2yayampa2paef2znl.py

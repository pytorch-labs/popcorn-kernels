V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] Output code: 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # AOT ID: ['38_forward']
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import torch
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import math
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import random
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import os
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import tempfile
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from math import inf, nan
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from cmath import nanj
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch import device, empty_strided
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     grid,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     split_scan_grid,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     grid_combo_kernels,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     start_graph,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     end_graph,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] aten = torch.ops.aten
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/te/cteirftltzazbwjzwheaosul4tjrgtd3d5gvdp5vpdmbv7ghvegk.py
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x => convolution
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Graph fragment:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_6, %primals_1, %primals_2, [1, 1, 1], [0, 0, 0], [1, 1, 1], False, [0, 0, 0], 1), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     size_hints={'x': 32768}, 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     filename=__file__,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton.jit
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     x2 = xindex
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     x1 = xindex // ks0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/id/cidrgrrsoznyird7qjqe6grrtrtta4yk7ll3qduzdvxgailpbda3.py
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2, x_4, x_5], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.mean, aten.leaky_relu]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_2 => convolution_1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_4 => add_19, add_22, mean, mean_1, mul_23, mul_29, rsqrt, sub_9, var_mean
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_5 => gt, mul_36, where
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Graph fragment:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%view, %primals_7, %primals_8, [1, 1], [0, 0], [1, 1], True, [0, 0], 1), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_2, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_19,), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %getitem_1), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %rsqrt), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_23, %unsqueeze), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %add_22 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_29, %unsqueeze_1), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_4, [0]), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%view_6, [0]), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_7, 0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_36 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 0.01), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where : [num_users=4] = call_function[target=torch.ops.aten.where.self](args = (%gt, %view_7, %mul_36), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_9, %mean), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %copy__1 : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_10, %mean_1), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_leaky_relu_mean_1 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_leaky_relu_mean_1', '''
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 4096},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     filename=__file__,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr4': '*fp32', 'out_ptr6': '*fp32', 'out_ptr7': '*fp32', 'out_ptr8': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_leaky_relu_mean_1', 'mutated_arg_names': ['in_out_ptr0', 'in_ptr1', 'in_ptr2', 'out_ptr4', 'out_ptr6'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton.jit
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_leaky_relu_mean_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr2, out_ptr4, out_ptr6, out_ptr7, out_ptr8, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xnumel = 20
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     rnumel = r0_numel
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     rbase = r0_base
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     x0 = xindex
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         roffset = r0_offset
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         rindex = r0_index
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_1 = r0_index
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp2 = tmp0 + tmp1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]             tmp3, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         )
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp4_mean = tl.where(r0_mask & xmask, tmp4_mean_next, tmp4_mean)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp4_m2 = tl.where(r0_mask & xmask, tmp4_m2_next, tmp4_m2)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp4_weight = tl.where(r0_mask & xmask, tmp4_weight_next, tmp4_weight)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), tmp2, r0_mask & xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp7, tmp8, tmp9 = triton_helpers.welford(tmp4_mean, tmp4_m2, tmp4_weight, 1)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp5 = tmp8[:, None]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp6 = tmp9[:, None]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp21 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp28 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp10 = ((tl.full([], 0.0, tl.float64)) * ((tl.full([], 0.0, tl.float64)) >= (6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2)) + (6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2) * ((6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2) > (tl.full([], 0.0, tl.float64))))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp11 = tmp10.to(tl.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp12 = tmp5 / tmp11
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp13 = 1e-05
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp15 = libdevice.rsqrt(tmp14)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp16 = (((120*ks2 + ((-40)*ks0*ks2) + ((-40)*ks1*ks2) + 20*ks0*ks1*ks2) / 20) / ((tl.full([], -1.00000000000000, tl.float64)) + ((120*ks2 + ((-40)*ks0*ks2) + ((-40)*ks1*ks2) + 20*ks0*ks1*ks2) / 20)))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp18 = tmp12 * tmp17
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp19 = 0.1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp20 = tmp18 * tmp19
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp22 = 0.9
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp23 = tmp21 * tmp22
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp24 = tmp20 + tmp23
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp25 = 1.0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp26 = tmp24 / tmp25
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp27 = tmp4 * tmp19
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp29 = tmp28 * tmp22
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp30 = tmp27 + tmp29
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp31 = tmp30 / tmp25
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp15, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr4 + (x0), tmp26, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr6 + (x0), tmp31, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp35 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp37 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         roffset = r0_offset
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         rindex = r0_index
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_1 = r0_index
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp32 = tl.load(in_out_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp33 = tmp32 - tmp4
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp34 = tmp33 * tmp15
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp36 = tmp34 * tmp35
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp38 = tmp36 + tmp37
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp39 = 0.0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp40 = tmp38 > tmp39
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp41 = 0.01
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp42 = tmp38 * tmp41
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp43 = tl.where(tmp40, tmp38, tmp42)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tl.store(out_ptr7 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), tmp38, r0_mask & xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tl.store(out_ptr8 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), tmp43, r0_mask & xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/35/c35jab27y7s7dmhdo4parjk6sii7i2ww5wfupazw7v73uvthyysq.py
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten.leaky_relu, aten.rrelu_with_noise_functional, aten.hardsigmoid, aten.hardsigmoid_backward]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_5 => gt, mul_36, where
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_6 => le, mul_43, where_1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_7 => add_38, clamp_max, clamp_min, div
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Graph fragment:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_7, 0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_36 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 0.01), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where : [num_users=4] = call_function[target=torch.ops.aten.where.self](args = (%gt, %view_7, %mul_36), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%where, 0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_43 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %uniform), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where_1 : [num_users=3] = call_function[target=torch.ops.aten.where.self](args = (%le, %mul_43, %where), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %add_38 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, 3), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_38, 0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%clamp_max, 6), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %gt_1 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%where_1, -3.0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%where_1, 3.0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %bitwise_and : [num_users=1] = call_function[target=torch.ops.aten.bitwise_and.Tensor](args = (%gt_1, %lt_1), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2 = async_compile.triton('triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2', '''
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     size_hints={'x': 65536}, 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     filename=__file__,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton.jit
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     x0 = xindex
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0), xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp8 = tl.load(in_ptr2 + (x0), xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp1 = 0.0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp2 = tmp0 > tmp1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp3 = 0.01
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp4 = tmp0 * tmp3
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp0, tmp4)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp6 = tmp5 <= tmp1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp9 = tmp7 * tmp8
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp10 = tl.where(tmp6, tmp9, tmp7)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp11 = 3.0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp12 = tmp10 + tmp11
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp13 = triton_helpers.maximum(tmp12, tmp1)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp14 = 6.0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp15 = triton_helpers.minimum(tmp13, tmp14)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp16 = 0.16666666666666666
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp17 = tmp15 * tmp16
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp18 = -3.0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp19 = tmp10 > tmp18
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp20 = tmp10 < tmp11
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp21 = tmp19 & tmp20
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp17, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp21, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gv/cgvcsl4psstuaxzfydrlfkfa73ur62edfyzb7cxgwoh5yauccktn.py
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5, x_6, x_7, x_8], Original ATen: [aten.leaky_relu, aten.rrelu_with_noise_functional, aten.hardsigmoid, aten.view]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_5 => gt, mul_36, where
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_6 => le, mul_43, where_1
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_7 => add_38, clamp_max, clamp_min, div
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_8 => view_8
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Graph fragment:
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_7, 0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_36 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 0.01), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where : [num_users=4] = call_function[target=torch.ops.aten.where.self](args = (%gt, %view_7, %mul_36), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%where, 0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_43 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where, %uniform), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where_1 : [num_users=3] = call_function[target=torch.ops.aten.where.self](args = (%le, %mul_43, %where), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %add_38 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where_1, 3), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_38, 0), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 6), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%clamp_max, 6), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %view_8 : [num_users=1] = call_function[target=torch.ops.aten.reshape.default](args = (%div, [1, -1]), kwargs = {})
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3 = async_compile.triton('triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3', '''
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     size_hints={'x': 65536}, 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     filename=__file__,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton.jit
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, XBLOCK : tl.constexpr):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     x0 = xindex
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (6*ks2*(triton_helpers.div_floor_integer(x0,  6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2)) + ((-2)*ks0*ks2*(triton_helpers.div_floor_integer(x0,  6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2))) + ((-2)*ks1*ks2*(triton_helpers.div_floor_integer(x0,  6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2))) + ks0*ks1*ks2*(triton_helpers.div_floor_integer(x0,  6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2)) + ((x0 % (6*ks2 + ((-2)*ks0*ks2) + ((-2)*ks1*ks2) + ks0*ks1*ks2)))), xmask, eviction_policy='evict_last')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] cpp_fused_full_randint_4 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'int64_t*', 'int64_t*', 'const int64_t', 'const int64_t', 'const int64_t'], '''
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                        int64_t* out_ptr0,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                        int64_t* out_ptr1,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                        int64_t* out_ptr2,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                        const int64_t ks0,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                        const int64_t ks1,
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                        const int64_t ks2)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]             {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp2 = static_cast<int64_t>(0);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp3 = 120L*ks2 + ((-40L)*ks0*ks2) + ((-40L)*ks1*ks2) + 20L*ks0*ks1*ks2;
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp4 = c10::convert<int64_t>(tmp3);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp5 = randint64_cpu(tmp0, tmp1, tmp2, tmp4);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 out_ptr0[static_cast<int64_t>(0L)] = tmp5;
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]             }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]             {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp0 = 120L*ks2 + ((-40L)*ks0*ks2) + ((-40L)*ks1*ks2) + 20L*ks0*ks1*ks2;
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp1;
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]             }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]             {
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(1L)];
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp2 = static_cast<int64_t>(1);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp3 = 120L*ks2 + ((-40L)*ks0*ks2) + ((-40L)*ks1*ks2) + 20L*ks0*ks1*ks2;
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp4 = c10::convert<int64_t>(tmp3);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 auto tmp5 = randint64_cpu(tmp0, tmp1, tmp2, tmp4);
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]                 out_ptr2[static_cast<int64_t>(0L)] = tmp5;
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]             }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] }
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] ''')
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] async_compile.wait(globals())
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] del async_compile
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def call(args):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12 = args
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     args.clear()
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     s0 = primals_3
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     s1 = primals_4
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     s2 = primals_5
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_1, (10, 1, 3, 3, 3), (27, 27, 9, 3, 1))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_2, (10, ), (1, ))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_6, (1, 1, s0, s1, s2), (s0*s1*s2, s0*s1*s2, s1*s2, s2, 1))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_7, (10, 20, 3, 3), (180, 9, 3, 1))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_8, (20, ), (1, ))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_9, (20, ), (1, ))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_10, (20, ), (1, ))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_11, (20, ), (1, ))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_12, (20, ), (1, ))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_6, primals_1, stride=(1, 1, 1), padding=(0, 0, 0), dilation=(1, 1, 1), transposed=False, output_padding=(0, 0, 0), groups=1, bias=None)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, (-2) + s0, (-2) + s1, (-2) + s2), ((-80) + 40*s0 + 40*s1 + 40*s2 + ((-20)*s0*s1) + ((-20)*s0*s2) + ((-20)*s1*s2) + 10*s0*s1*s2, (-8) + 4*s0 + 4*s1 + 4*s2 + ((-2)*s0*s1) + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 4 + ((-2)*s1) + ((-2)*s2) + s1*s2, (-2) + s2, 1))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         ps0 = (-8) + 4*s0 + 4*s1 + 4*s2 + ((-2)*s0*s1) + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_poi_fused_convolution_0_xnumel = (-80) + 40*s0 + 40*s1 + 40*s2 + ((-20)*s0*s1) + ((-20)*s0*s2) + ((-20)*s1*s2) + 10*s0*s1*s2
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_2, ps0, triton_poi_fused_convolution_0_xnumel, grid=grid(triton_poi_fused_convolution_0_xnumel), stream=stream0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_2
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(buf1, (1, 10, 4 + ((-2)*s0) + ((-2)*s1) + s0*s1, (-2) + s2), ((-80) + 40*s0 + 40*s1 + 40*s2 + ((-20)*s0*s1) + ((-20)*s0*s2) + ((-20)*s1*s2) + 10*s0*s1*s2, (-8) + 4*s0 + 4*s1 + 4*s2 + ((-2)*s0*s1) + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, (-2) + s2, 1), 0), primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=True, output_padding=(0, 0), groups=1, bias=None)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         assert_size_stride(buf2, (1, 20, 6 + ((-2)*s0) + ((-2)*s1) + s0*s1, s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, s2, 1))
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf3 = buf2; del buf2  # reuse
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 20, 1), (20, 1, 1), torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf7 = empty_strided_cuda((1, 20, 1), (20, 1, 1), torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf8 = empty_strided_cuda((1, 20, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 1), torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf9 = empty_strided_cuda((1, 20, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 1), torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2, x_4, x_5], Original ATen: [aten.convolution, aten._native_batch_norm_legit_functional, aten.mean, aten.leaky_relu]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_leaky_relu_mean_1_r0_numel = 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_leaky_relu_mean_1.run(buf3, primals_8, primals_10, primals_9, primals_11, primals_12, buf4, buf7, primals_10, primals_9, buf8, buf9, s0, s1, s2, 20, triton_red_fused__native_batch_norm_legit_functional_convolution_leaky_relu_mean_1_r0_numel, grid=grid(20), stream=stream0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_10
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_8
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_9
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6], Original ATen: [aten.leaky_relu, aten.rrelu_with_noise_functional]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf10 = torch.ops.aten.uniform.default(buf9, 0.125, 0.3333333333333333)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf11 = buf10
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del buf10
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf12 = empty_strided_cuda((1, 20, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 1), torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf15 = empty_strided_cuda((1, 20, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 1), torch.bool)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6, x_7], Original ATen: [aten.leaky_relu, aten.rrelu_with_noise_functional, aten.hardsigmoid, aten.hardsigmoid_backward]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2_xnumel = 120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2.run(buf8, buf9, buf11, buf12, buf15, triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2_xnumel, grid=grid(triton_poi_fused_hardsigmoid_hardsigmoid_backward_leaky_relu_rrelu_with_noise_functional_2_xnumel), stream=stream0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del buf8
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf13 = reinterpret_tensor(buf9, (1, 120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 1), 0); del buf9  # reuse
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5, x_6, x_7, x_8], Original ATen: [aten.leaky_relu, aten.rrelu_with_noise_functional, aten.hardsigmoid, aten.view]
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3_xnumel = 120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3.run(buf12, buf13, s0, s1, s2, triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3_xnumel, grid=grid(triton_poi_fused_hardsigmoid_leaky_relu_rrelu_with_noise_functional_view_3_xnumel), stream=stream0)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del buf12
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     buf14 = empty_strided_cpu((2, ), (1, ), torch.int64)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf14)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     buf24 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     buf25 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     buf26 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     cpp_fused_full_randint_4(buf14, buf24, buf25, buf26, s0, s1, s2)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     return (buf13, buf24, buf25, buf26, primals_1, primals_6, primals_7, primals_11, primals_12, buf1, buf3, buf4, buf7, buf11, buf15, s2, s0, s1, (-2) + s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, )
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_1 = rand_strided((10, 1, 3, 3, 3), (27, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_2 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_3 = 16
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_4 = 16
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_5 = 16
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_6 = rand_strided((1, 1, 16, 16, 16), (4096, 4096, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_7 = rand_strided((10, 20, 3, 3), (180, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_8 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_9 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_10 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_11 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_12 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12])
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] if __name__ == "__main__":
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:41:27.860000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:27.871000 2062045 site-packages/torch/_inductor/graph.py:2022] [99/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6kqzlt7qi3hnx5mat5rwpchwgpmje466ijogaiibkm2rw5xgwwn.py
I0205 10:41:28.815000 2062045 site-packages/torch/_inductor/graph.py:2056] [99/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6kqzlt7qi3hnx5mat5rwpchwgpmje466ijogaiibkm2rw5xgwwn.py
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] Output code: 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # AOT ID: ['38_backward']
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import torch
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import math
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import random
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import os
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import tempfile
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from math import inf, nan
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from cmath import nanj
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch import device, empty_strided
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     grid,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     split_scan_grid,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     grid_combo_kernels,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     start_graph,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     end_graph,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] aten = torch.ops.aten
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i6/ci6iolr7io5v7hdafrpby3igjuksn7uk3mpdcvfxjalm6qyqfzne.py
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5, x_6], Original ATen: [aten.hardsigmoid_backward, aten._native_batch_norm_legit_functional, aten.leaky_relu, aten.rrelu_with_noise_functional, aten.rrelu_with_noise_backward, aten.leaky_relu_backward, aten.view, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_4 => add_22, mul_23, mul_29, sub_9
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_5 => gt, mul_36, where
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   x_6 => full_default, le, where_2
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Graph fragment:
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_9, 0.16666666666666666), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%bitwise_and, %mul_55, %full_default_1), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %getitem_1), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_23 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %rsqrt), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_23, %unsqueeze), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %add_22 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_29, %unsqueeze_1), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %gt : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%view_7, 0), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_36 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, 0.01), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %view_7, %mul_36), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%where, 0), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%le, %uniform, %full_default), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_56 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%where_3, %where_2), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_57 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_56, 0.01), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %where_4 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %mul_56, %mul_57), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %view_10 : [num_users=3] = call_function[target=torch.ops.aten.reshape.default](args = (%where_4, [1, 20, %sym_size_int_6]), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_10, [0, 2]), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sub_18 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_2, %unsqueeze_3), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_58 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_10, %sub_18), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sum_2 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_58, [0, 2]), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_65 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_18, %unsqueeze_7), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_10, %mul_65), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_20, %unsqueeze_5), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_66 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %unsqueeze_9), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %mul_67 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sum_2, %squeeze_1), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_12, [0, 2, 3]), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardsigmoid_backward_leaky_relu_leaky_relu_backward_native_batch_norm_backward_rrelu_with_noise_backward_rrelu_with_noise_functional_view_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardsigmoid_backward_leaky_relu_leaky_relu_backward_native_batch_norm_backward_rrelu_with_noise_backward_rrelu_with_noise_functional_view_0', '''
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 4096},
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     filename=__file__,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*i1', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardsigmoid_backward_leaky_relu_leaky_relu_backward_native_batch_norm_backward_rrelu_with_noise_backward_rrelu_with_noise_functional_view_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton.jit
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardsigmoid_backward_leaky_relu_leaky_relu_backward_native_batch_norm_backward_rrelu_with_noise_backward_rrelu_with_noise_functional_view_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr2, out_ptr3, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xnumel = 20
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     rnumel = r0_numel
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     rbase = r0_base
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     x0 = xindex
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     _tmp27 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     _tmp31 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         roffset = r0_offset
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         rindex = r0_index
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_1 = r0_index
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp11 = tl.load(in_ptr5 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0).to(tl.int1)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp12 = tl.load(in_ptr6 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp20 = tl.load(in_ptr7 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp2 = tmp0 - tmp1
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp4 = tmp2 * tmp3
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp6 = tmp4 * tmp5
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp8 = tmp6 + tmp7
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp9 = 0.0
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp10 = tmp8 > tmp9
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp13 = 0.16666666666666666
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp14 = tmp12 * tmp13
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp15 = tl.where(tmp11, tmp14, tmp9)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp16 = 0.01
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp17 = tmp8 * tmp16
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp18 = tl.where(tmp10, tmp8, tmp17)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp19 = tmp18 <= tmp9
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp21 = 1.0
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp22 = tl.where(tmp19, tmp20, tmp21)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp23 = tmp15 * tmp22
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp24 = tmp23 * tmp16
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp25 = tl.where(tmp10, tmp23, tmp24)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp26 = tl.broadcast_to(tmp25, [XBLOCK, R0_BLOCK])
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp28 = _tmp27 + tmp26
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         _tmp27 = tl.where(r0_mask & xmask, tmp28, _tmp27)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp29 = tmp25 * tmp2
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp30 = tl.broadcast_to(tmp29, [XBLOCK, R0_BLOCK])
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp32 = _tmp31 + tmp30
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         _tmp31 = tl.where(r0_mask & xmask, tmp32, _tmp31)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), tmp8, r0_mask & xmask)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp27 = tl.sum(_tmp27, 1)[:, None]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp31 = tl.sum(_tmp31, 1)[:, None]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp27, xmask)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     _tmp65 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         roffset = r0_offset
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         rindex = r0_index
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_1 = r0_index
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp33 = tl.load(in_out_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp36 = tl.load(in_ptr5 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp37 = tl.load(in_ptr6 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp45 = tl.load(in_ptr7 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp51 = tl.load(in_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp34 = 0.0
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp35 = tmp33 > tmp34
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp38 = 0.16666666666666666
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp39 = tmp37 * tmp38
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp40 = tl.where(tmp36, tmp39, tmp34)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp41 = 0.01
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp42 = tmp33 * tmp41
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp43 = tl.where(tmp35, tmp33, tmp42)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp44 = tmp43 <= tmp34
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp46 = 1.0
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp47 = tl.where(tmp44, tmp45, tmp46)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp48 = tmp40 * tmp47
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp49 = tmp48 * tmp41
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp50 = tl.where(tmp35, tmp48, tmp49)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp52 = tmp51 - tmp1
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp53 = (tl.full([], 1.00000000000000, tl.float64) / ((120*ks2 + ((-40)*ks0*ks2) + ((-40)*ks1*ks2) + 20*ks0*ks1*ks2) / 20))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp54 = tmp53.to(tl.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp55 = tmp31 * tmp54
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp56 = tmp3 * tmp3
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp57 = tmp55 * tmp56
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp58 = tmp52 * tmp57
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp59 = tmp50 - tmp58
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp60 = tmp27 * tmp54
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp61 = tmp59 - tmp60
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp62 = tmp3 * tmp5
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp63 = tmp61 * tmp62
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp64 = tl.broadcast_to(tmp63, [XBLOCK, R0_BLOCK])
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp66 = _tmp65 + tmp64
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         _tmp65 = tl.where(r0_mask & xmask, tmp66, _tmp65)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + 6*ks2*x0 + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), tmp63, r0_mask & xmask)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp65 = tl.sum(_tmp65, 1)[:, None]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp65, xmask)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp67 = tmp31 * tmp3
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp67, xmask)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ko/ckoaenermn3myczxfmozlr3auweawgwpnq5gr3epua7c246szwkk.py
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] # Graph fragment:
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%view_13, [0, 2, 3, 4]), kwargs = {})
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_red_fused_convolution_backward_1 = async_compile.triton('triton_red_fused_convolution_backward_1', '''
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] import triton.language as tl
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton_heuristics.reduction(
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 4096},
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     filename=__file__,
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] )
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] @triton.jit
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def triton_red_fused_convolution_backward_1(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xnumel = 10
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     rnumel = r0_numel
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     rbase = r0_base
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     x0 = xindex
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         roffset = r0_offset
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         rindex = r0_index
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         r0_1 = r0_index
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ((-8)*x0) + 4*ks0*x0 + 4*ks1*x0 + 4*ks2*x0 + ((-2)*ks0*ks1*x0) + ((-2)*ks0*ks2*x0) + ((-2)*ks1*ks2*x0) + ks0*ks1*ks2*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] ''', device_str='cuda')
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] async_compile.wait(globals())
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] del async_compile
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def call(args):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_5, primals_3, primals_4, sym_sum, sym_size_int_6, mul_54, primals_1, primals_6, primals_7, primals_11, primals_12, convolution, convolution_1, getitem_1, rsqrt, uniform, bitwise_and, tangents_1 = args
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     args.clear()
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     s2 = primals_5
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     s0 = primals_3
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     s1 = primals_4
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_1, (10, 1, 3, 3, 3), (27, 27, 9, 3, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_6, (1, 1, s0, s1, s2), (s0*s1*s2, s0*s1*s2, s1*s2, s2, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_7, (10, 20, 3, 3), (180, 9, 3, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_11, (20, ), (1, ))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(primals_12, (20, ), (1, ))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(convolution, (1, 10, (-2) + s0, (-2) + s1, (-2) + s2), ((-80) + 40*s0 + 40*s1 + 40*s2 + ((-20)*s0*s1) + ((-20)*s0*s2) + ((-20)*s1*s2) + 10*s0*s1*s2, (-8) + 4*s0 + 4*s1 + 4*s2 + ((-2)*s0*s1) + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 4 + ((-2)*s1) + ((-2)*s2) + s1*s2, (-2) + s2, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(convolution_1, (1, 20, 6 + ((-2)*s0) + ((-2)*s1) + s0*s1, s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, s2, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(getitem_1, (1, 20, 1), (20, 1, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(rsqrt, (1, 20, 1), (20, 1, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(uniform, (1, 20, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(bitwise_and, (1, 20, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 1))
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 20, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2), (120*s2 + ((-40)*s0*s2) + ((-40)*s1*s2) + 20*s0*s1*s2, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 1), torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf1 = empty_strided_cuda((20, ), (1, ), torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf3 = buf0; del buf0  # reuse
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf5 = buf3; del buf3  # reuse
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf6 = empty_strided_cuda((20, ), (1, ), torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf4 = empty_strided_cuda((20, ), (1, ), torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5, x_6], Original ATen: [aten.hardsigmoid_backward, aten._native_batch_norm_legit_functional, aten.leaky_relu, aten.rrelu_with_noise_functional, aten.rrelu_with_noise_backward, aten.leaky_relu_backward, aten.view, aten.native_batch_norm_backward, aten.convolution_backward]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardsigmoid_backward_leaky_relu_leaky_relu_backward_native_batch_norm_backward_rrelu_with_noise_backward_rrelu_with_noise_functional_view_0_r0_numel = 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardsigmoid_backward_leaky_relu_leaky_relu_backward_native_batch_norm_backward_rrelu_with_noise_backward_rrelu_with_noise_functional_view_0.run(buf5, convolution_1, getitem_1, rsqrt, primals_11, primals_12, bitwise_and, tangents_1, uniform, buf1, buf6, buf4, s0, s1, s2, 20, triton_red_fused__native_batch_norm_legit_functional_convolution_backward_hardsigmoid_backward_leaky_relu_leaky_relu_backward_native_batch_norm_backward_rrelu_with_noise_backward_rrelu_with_noise_functional_view_0_r0_numel, grid=grid(20), stream=stream0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del bitwise_and
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del convolution_1
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del getitem_1
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_11
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_12
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del rsqrt
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del tangents_1
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del uniform
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf7 = torch.ops.aten.convolution_backward.default(reinterpret_tensor(buf5, (1, 20, 6 + ((-2)*s0) + ((-2)*s1) + s0*s1, s2), (0, 6*s2 + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, s2, 1), 0), reinterpret_tensor(convolution, (1, 10, 4 + ((-2)*s0) + ((-2)*s1) + s0*s1, (-2) + s2), ((-80) + 40*s0 + 40*s1 + 40*s2 + ((-20)*s0*s1) + ((-20)*s0*s2) + ((-20)*s1*s2) + 10*s0*s1*s2, (-8) + 4*s0 + 4*s1 + 4*s2 + ((-2)*s0*s1) + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, (-2) + s2, 1), 0), primals_7, [20], [1, 1], [0, 0], [1, 1], True, [0, 0], 1, [True, True, False])
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del buf5
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del convolution
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_7
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf8 = buf7[0]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf9 = buf7[1]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del buf7
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf10 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_red_fused_convolution_backward_1_r0_numel = (-8) + 4*s0 + 4*s1 + 4*s2 + ((-2)*s0*s1) + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         triton_red_fused_convolution_backward_1.run(buf8, buf10, s0, s1, s2, 10, triton_red_fused_convolution_backward_1_r0_numel, grid=grid(10), stream=stream0)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf11 = torch.ops.aten.convolution_backward.default(reinterpret_tensor(buf8, (1, 10, (-2) + s0, (-2) + s1, (-2) + s2), ((-80) + 40*s0 + 40*s1 + 40*s2 + ((-20)*s0*s1) + ((-20)*s0*s2) + ((-20)*s1*s2) + 10*s0*s1*s2, (-8) + 4*s0 + 4*s1 + 4*s2 + ((-2)*s0*s1) + ((-2)*s0*s2) + ((-2)*s1*s2) + s0*s1*s2, 4 + ((-2)*s1) + ((-2)*s2) + s1*s2, (-2) + s2, 1), 0), primals_6, primals_1, [10], [1, 1, 1], [0, 0, 0], [1, 1, 1], False, [0, 0, 0], 1, [False, True, False])
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del buf8
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_1
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del primals_6
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         buf12 = buf11[1]
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]         del buf11
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     return (buf12, buf10, None, None, None, None, buf9, buf6, None, None, buf4, buf1, )
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_5 = 16
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_3 = 16
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_4 = 16
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     sym_sum = 14
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     sym_size_int_6 = 3168
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     mul_54 = 63360
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_1 = rand_strided((10, 1, 3, 3, 3), (27, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_6 = rand_strided((1, 1, 16, 16, 16), (4096, 4096, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_7 = rand_strided((10, 20, 3, 3), (180, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_11 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     primals_12 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     convolution = rand_strided((1, 10, 14, 14, 14), (27440, 2744, 196, 14, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     convolution_1 = rand_strided((1, 20, 198, 16), (63360, 3168, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     getitem_1 = rand_strided((1, 20, 1), (20, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     rsqrt = rand_strided((1, 20, 1), (20, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     uniform = rand_strided((1, 20, 3168), (63360, 3168, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     bitwise_and = rand_strided((1, 20, 3168), (63360, 3168, 1), device='cuda:0', dtype=torch.bool)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     tangents_1 = rand_strided((1, 63360), (63360, 1), device='cuda:0', dtype=torch.float32)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     fn = lambda: call([primals_5, primals_3, primals_4, sym_sum, sym_size_int_6, mul_54, primals_1, primals_6, primals_7, primals_11, primals_12, convolution, convolution_1, getitem_1, rsqrt, uniform, bitwise_and, tangents_1])
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] if __name__ == "__main__":
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:41:29.560000 2062045 site-packages/torch/_inductor/graph.py:2014] [99/0_1] [__output_code] 
V0205 10:41:29.568000 2062045 site-packages/torch/_inductor/graph.py:2022] [99/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zt/cztkavtwetuyiyr4xwvzqofvb32byxmmi3lbg2vkzdd4t6iasrvn.py
I0205 10:41:29.784000 2062045 site-packages/torch/_inductor/graph.py:2056] [99/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/zt/cztkavtwetuyiyr4xwvzqofvb32byxmmi3lbg2vkzdd4t6iasrvn.py

W0205 11:55:23.176000 3201829 site-packages/torch/utils/_sympy/interp.py:176] [680/0_1] failed while executing pow_by_natural([VR[3, int_oo], VR[-1, -1]])
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] Output code: 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] # AOT ID: ['181_inference']
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import torch
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import math
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import random
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import os
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import tempfile
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from math import inf, nan
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from cmath import nanj
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch import device, empty_strided
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import triton
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import triton.language as tl
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     grid,
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     split_scan_grid,
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     grid_combo_kernels,
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     start_graph,
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     end_graph,
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] )
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] aten = torch.ops.aten
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yf/cyf5apwcjugkzd4z6tnthoho7cn4a2lywwe2w2t63dq22kdcamik.py
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] # Topologically Sorted Source Nodes: [pad, x_2], Original ATen: [aten.replication_pad3d, aten._unsafe_index]
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] #   pad => _unsafe_index_1, _unsafe_index_2, _unsafe_index_3
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] #   x_2 => _unsafe_index_4
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] # Graph fragment:
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%unsqueeze_1, [None, None, %clamp_max, None, None]), kwargs = {})
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] #   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_1, [None, None, None, %clamp_max_1, None]), kwargs = {})
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] #   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index_2, [None, None, None, None, %clamp_max_2]), kwargs = {})
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] #   %_unsafe_index_4 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%squeeze, [None, None, %unsqueeze_3, %unsqueeze_4, %convert_element_type_9]), kwargs = {})
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] triton_poi_fused__unsafe_index_replication_pad3d_0 = async_compile.triton('triton_poi_fused__unsafe_index_replication_pad3d_0', '''
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import triton
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] import triton.language as tl
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     size_hints={'x': 524288}, 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     filename=__file__,
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'ks5': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_replication_pad3d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] )
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] @triton.jit
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] def triton_poi_fused__unsafe_index_replication_pad3d_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, ks5, xnumel, XBLOCK : tl.constexpr):
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     x2 = ((xindex // ks0) % 6)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     x1 = ((xindex // ks2) % ks3)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     x0 = (xindex % ks2)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     x7 = xindex // ks5
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     x4 = xindex
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp0 = x2
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp2 = 0.5
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp4 = tmp3.to(tl.int32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp5 = 2.0
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp6 = ks1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp8 = tmp5 * tmp7
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp9 = tmp5 + tmp8
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp10 = tmp9.to(tl.float64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp11 = tl.full([1], 2.0, tl.float64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp12 = tmp11 * tmp10
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp13 = tmp10 / tmp12
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp15 = x1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp17 = tmp16 * tmp14
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp18 = tmp17.to(tl.int64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp19 = 2 + 2*ks1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp20 = tmp18 + tmp19
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp21 = tmp18 < 0
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp22 = tl.where(tmp21, tmp20, tmp18)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp23 = ks4
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp24 = tmp23.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp25 = tmp5 * tmp24
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp26 = tmp5 + tmp25
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp27 = tmp26.to(tl.float64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp28 = tmp11 * tmp27
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp29 = tmp27 / tmp28
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp30 = tmp29.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp31 = x0
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp32 = tmp31.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp33 = tmp32 * tmp30
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp34 = tmp33.to(tl.int64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp35 = 2 + 2*ks4
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp36 = tmp34 + tmp35
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp37 = tmp34 < 0
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp38 = tl.where(tmp37, tmp36, tmp34)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp39 = tmp6.to(tl.float64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp40 = tmp11 * tmp39
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp41 = tmp39 / tmp40
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp42 = tmp41.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp43 = (((-1) + 2*ks1) * (((-1) + 2*ks1) <= (((0) * ((0) >= ((-1) + tmp22)) + ((-1) + tmp22) * (((-1) + tmp22) > (0))))) + (((0) * ((0) >= ((-1) + tmp22)) + ((-1) + tmp22) * (((-1) + tmp22) > (0)))) * ((((0) * ((0) >= ((-1) + tmp22)) + ((-1) + tmp22) * (((-1) + tmp22) > (0)))) < ((-1) + 2*ks1)))
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp44 = tmp43.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp45 = tmp44 * tmp42
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp46 = tmp45.to(tl.int64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp47 = tmp46 + tmp6
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp48 = tmp46 < 0
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp50 = tmp23.to(tl.float64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp51 = tmp11 * tmp50
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp52 = tmp50 / tmp51
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp53 = tmp52.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp54 = (((-1) + 2*ks4) * (((-1) + 2*ks4) <= (((0) * ((0) >= ((-1) + tmp38)) + ((-1) + tmp38) * (((-1) + tmp38) > (0))))) + (((0) * ((0) >= ((-1) + tmp38)) + ((-1) + tmp38) * (((-1) + tmp38) > (0)))) * ((((0) * ((0) >= ((-1) + tmp38)) + ((-1) + tmp38) * (((-1) + tmp38) > (0)))) < ((-1) + 2*ks4)))
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp55 = tmp54.to(tl.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp56 = tmp55 * tmp53
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp57 = tmp56.to(tl.int64)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp58 = tmp57 + tmp23
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp59 = tmp57 < 0
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp60 = tl.where(tmp59, tmp58, tmp57)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tmp61 = tl.load(in_ptr0 + (tmp60 + ks4*tmp49 + ks1*ks4*x7), xmask, eviction_policy='evict_last')
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp61, xmask)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] ''', device_str='cuda')
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] async_compile.wait(globals())
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] del async_compile
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] def call(args):
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     args.clear()
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     s0 = arg0_1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     s1 = arg1_1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     s2 = arg2_1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         ps0 = 16 + 16*s1 + 16*s2 + 16*s1*s2
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         ps1 = 4 + 4*s2
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         ps2 = 4 + 4*s1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         ps3 = 96 + 96*s1 + 96*s2 + 96*s1*s2
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 6, 4 + 4*s1, 4 + 4*s2), (96*s0 + 96*s0*s1 + 96*s0*s2 + 96*s0*s1*s2, 96 + 96*s1 + 96*s2 + 96*s1*s2, 16 + 16*s1 + 16*s2 + 16*s1*s2, 4 + 4*s2, 1), torch.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pad, x_2], Original ATen: [aten.replication_pad3d, aten._unsafe_index]
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         triton_poi_fused__unsafe_index_replication_pad3d_0_xnumel = 96*s0 + 96*s0*s1 + 96*s0*s2 + 96*s0*s1*s2
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         triton_poi_fused__unsafe_index_replication_pad3d_0.run(arg3_1, buf0, ps0, s1, ps1, ps2, s2, ps3, triton_poi_fused__unsafe_index_replication_pad3d_0_xnumel, grid=grid(triton_poi_fused__unsafe_index_replication_pad3d_0_xnumel), stream=stream0)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]         del arg3_1
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     return (reinterpret_tensor(buf0, (1, s0, 1, 6, 4 + 4*s1, 4 + 4*s2), (96*s0 + 96*s0*s1 + 96*s0*s2 + 96*s0*s1*s2, 96 + 96*s1 + 96*s2 + 96*s1*s2, 96 + 96*s1 + 96*s2 + 96*s1*s2, 16 + 16*s1 + 16*s2 + 16*s1*s2, 4 + 4*s2, 1), 0), )
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     arg0_1 = 3
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     arg1_1 = 32
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     arg2_1 = 32
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] if __name__ == "__main__":
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:55:23.429000 3201829 site-packages/torch/_inductor/graph.py:2014] [680/0_1] [__output_code] 
V0205 11:55:23.432000 3201829 site-packages/torch/_inductor/graph.py:2022] [680/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gl/cglqq5v6e5jo355c5jjdmkd2bfnsd765gwc2ttldarargv4y546c.py
I0205 11:55:23.673000 3201829 site-packages/torch/_inductor/graph.py:2056] [680/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/gl/cglqq5v6e5jo355c5jjdmkd2bfnsd765gwc2ttldarargv4y546c.py

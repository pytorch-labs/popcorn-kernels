W0127 11:40:49.897000 703210 site-packages/torch/utils/_sympy/interp.py:176] [779/0_1] failed while executing pow_by_natural([VR[6, int_oo], VR[-1, -1]])
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] Output code: 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # AOT ID: ['192_forward']
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import torch
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import math
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import random
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import os
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import tempfile
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from math import inf, nan
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from cmath import nanj
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch import device, empty_strided
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton.language as tl
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     grid,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     split_scan_grid,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     grid_combo_kernels,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     start_graph,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     end_graph,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] )
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] aten = torch.ops.aten
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yp/cypo5mynywawr4ccz7ys6gef46tv3ajsxyhbbqabocyaxbq6zokc.py
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   x => constant_pad_nd
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Graph fragment:
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%primals_3, [2, 2, 2, 2], 0.0), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton.language as tl
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     size_hints={'x': 16384}, 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     filename=__file__,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] )
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] @triton.jit
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     x1 = ((xindex // ks0) % ks1)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     x0 = (xindex % ks0)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     x2 = xindex // ks4
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     x4 = xindex
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp0 = (-2) + x1
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp3 = ks2
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp5 = (-2) + x0
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp6 = tmp5 >= tmp1
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp7 = ks3
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp8 = tmp5 < tmp7
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp9 = tmp2 & tmp4
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp10 = tmp9 & tmp6
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp11 = tmp10 & tmp8
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-2) + x0 + ((-2)*ks3) + ks3*x1 + ks2*ks3*x2), tmp11 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp12, xmask)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yw/cywpnl7n2c4xjswj2nztfcsayldjs2e3iv25zjdouwauubdyqvag.py
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2, x_3, x_4], Original ATen: [aten.convolution, aten.hardtanh, aten.native_dropout, aten.add, aten.hardtanh_backward]
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   x_1 => convolution
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   x_2 => clamp_max, clamp_min
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   x_3 => gt_2, inductor_lookup_seed_default, inductor_random_default, mul_14, mul_15
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   x_4 => add_20
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Graph fragment:
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %convolution : [num_users=5] = call_function[target=torch.ops.aten.convolution.default](args = (%constant_pad_nd, %primals_4, %primals_5, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%convolution, -1.0), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1.0), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 16, %sym_size_int_2, %sym_size_int_3], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %gt_2 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%gt_2, %clamp_max), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %mul_15 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_14, 2.0), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %add_20 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_15, %view), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%convolution, -1.0), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%convolution, 1.0), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %bitwise_or : [num_users=1] = call_function[target=torch.ops.aten.bitwise_or.Tensor](args = (%le, %ge), kwargs = {})
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1 = async_compile.triton('triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1', '''
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton.language as tl
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     size_hints={'x': 131072}, 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     filename=__file__,
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr1': '*i1', 'out_ptr2': '*fp32', 'out_ptr3': '*i1', 'load_seed_offset': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] )
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] @triton.jit
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] def triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr1, out_ptr2, out_ptr3, load_seed_offset, ks1, xnumel, XBLOCK : tl.constexpr):
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     x0 = xindex
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     x2 = xindex // ks1
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp7 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp16 = tl.load(in_ptr3 + (x2), xmask, eviction_policy='evict_last')
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp1 = x0
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp3 = 0.5
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp4 = tmp2 > tmp3
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp9 = -1.0
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp11 = 1.0
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp12 = triton_helpers.minimum(tmp10, tmp11)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp13 = tmp5 * tmp12
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp14 = 2.0
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp15 = tmp13 * tmp14
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp17 = tmp15 + tmp16
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp18 = tmp8 <= tmp9
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp19 = tmp8 >= tmp11
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp20 = tmp18 | tmp19
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp17, xmask)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tl.store(out_ptr3 + (x0), tmp20, xmask)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] async_compile.wait(globals())
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] del async_compile
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] def call(args):
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6 = args
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     args.clear()
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     s1 = primals_1
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     s2 = primals_2
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(primals_3, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(primals_4, (16, 3, 3, 3), (27, 9, 3, 1))
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         ps0 = 4 + s2
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         ps1 = 4 + s1
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         ps2 = 16 + 4*s1 + 4*s2 + s1*s2
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 3, 4 + s1, 4 + s2), (48 + 12*s1 + 12*s2 + 3*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.constant_pad_nd]
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0_xnumel = 48 + 12*s1 + 12*s2 + 3*s1*s2
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_3, buf0, ps0, ps1, s1, s2, ps2, triton_poi_fused_constant_pad_nd_0_xnumel, grid=grid(triton_poi_fused_constant_pad_nd_0_xnumel), stream=stream0)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del primals_3
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.convolution]
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         assert_size_stride(buf1, (1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1))
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf2 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf2)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.bool)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf5 = empty_strided_cuda((1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.bool)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2, x_3, x_4], Original ATen: [aten.convolution, aten.hardtanh, aten.native_dropout, aten.add, aten.hardtanh_backward]
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1_xnumel = 256 + 64*s1 + 64*s2 + 16*s1*s2
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1.run(buf2, buf1, primals_5, primals_6, buf4, buf5, buf6, 0, ps2, triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1_xnumel, grid=grid(triton_poi_fused_add_convolution_hardtanh_hardtanh_backward_native_dropout_1_xnumel), stream=stream0)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del buf1
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del buf2
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del primals_5
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del primals_6
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     return (buf5, primals_4, buf0, buf4, buf6, s1, s2, )
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_1 = 64
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_2 = 64
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_3 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_4 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6])
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] if __name__ == "__main__":
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:50.073000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.076000 703210 site-packages/torch/_inductor/graph.py:2022] [779/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sn/csnpbceo3dxrzbo7pm6prfw2jmg7hay7ivonvyo3mawfqsywsdf6.py
I0127 11:40:50.393000 703210 site-packages/torch/_inductor/graph.py:2056] [779/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/sn/csnpbceo3dxrzbo7pm6prfw2jmg7hay7ivonvyo3mawfqsywsdf6.py
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] Output code: 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # AOT ID: ['192_backward']
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import torch
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import math
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import random
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import os
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import tempfile
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from math import inf, nan
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from cmath import nanj
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch import device, empty_strided
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton.language as tl
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     grid,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     split_scan_grid,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     grid_combo_kernels,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     start_graph,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     end_graph,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] )
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] aten = torch.ops.aten
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qm/cqmj4tcleejutbb2h3cajpavgf5esva3fa37ea42anr5in6p7tul.py
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.sum, aten.native_dropout_backward, aten.hardtanh_backward, aten.convolution_backward]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] # Graph fragment:
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%tangents_1, [2, 3], True), kwargs = {})
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%gt_2, torch.float32), kwargs = {})
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %mul_27 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 2.0), kwargs = {})
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%tangents_1, %mul_27), kwargs = {})
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %where : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%bitwise_or, %full_default, %mul_28), kwargs = {})
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where, [0, 2, 3]), kwargs = {})
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] triton_red_fused_convolution_backward_hardtanh_backward_native_dropout_backward_sum_0 = async_compile.triton('triton_red_fused_convolution_backward_hardtanh_backward_native_dropout_backward_sum_0', '''
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] import triton.language as tl
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 8192},
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     filename=__file__,
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i1', 'in_ptr2': '*i1', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_hardtanh_backward_native_dropout_backward_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] )
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] @triton.jit
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] def triton_red_fused_convolution_backward_hardtanh_backward_native_dropout_backward_sum_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xnumel = 16
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     rnumel = r0_numel
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     rbase = r0_base
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     x0 = xindex
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     _tmp13 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         roffset = r0_offset
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         rindex = r0_index
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         r0_1 = r0_index
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + 16*x0 + 4*ks0*x0 + 4*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp4 = tl.load(in_ptr1 + (r0_1 + 16*x0 + 4*ks0*x0 + 4*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp5 = tl.load(in_ptr2 + (r0_1 + 16*x0 + 4*ks0*x0 + 4*ks1*x0 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp3 = _tmp2 + tmp1
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         _tmp2 = tl.where(r0_mask & xmask, tmp3, _tmp2)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp6 = tmp5.to(tl.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp7 = 2.0
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp8 = tmp6 * tmp7
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp9 = tmp0 * tmp8
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp10 = 0.0
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp11 = tl.where(tmp4, tmp10, tmp9)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tmp14 = _tmp13 + tmp12
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         _tmp13 = tl.where(r0_mask & xmask, tmp14, _tmp13)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         tl.store(out_ptr1 + (r0_1 + 16*x0 + 4*ks0*x0 + 4*ks1*x0 + ks0*ks1*x0), tmp11, r0_mask & xmask)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tmp13 = tl.sum(_tmp13, 1)[:, None]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tl.store(out_ptr2 + (x0), tmp13, xmask)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] async_compile.wait(globals())
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] del async_compile
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] def call(args):
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_1, primals_2, primals_4, constant_pad_nd, gt_2, bitwise_or, tangents_1 = args
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     args.clear()
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     s1 = primals_1
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     s2 = primals_2
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(primals_4, (16, 3, 3, 3), (27, 9, 3, 1))
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(constant_pad_nd, (1, 3, 4 + s1, 4 + s2), (48 + 12*s1 + 12*s2 + 3*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1))
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(gt_2, (1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1))
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(bitwise_or, (1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1))
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     assert_size_stride(tangents_1, (1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1))
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 16, 1, 1), (16, 1, 1, 1), torch.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 16, 4 + s1, 4 + s2), (256 + 64*s1 + 64*s2 + 16*s1*s2, 16 + 4*s1 + 4*s2 + s1*s2, 4 + s2, 1), torch.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf2 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.sum, aten.native_dropout_backward, aten.hardtanh_backward, aten.convolution_backward]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         triton_red_fused_convolution_backward_hardtanh_backward_native_dropout_backward_sum_0_r0_numel = 16 + 4*s1 + 4*s2 + s1*s2
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         triton_red_fused_convolution_backward_hardtanh_backward_native_dropout_backward_sum_0.run(tangents_1, bitwise_or, gt_2, buf0, buf1, buf2, s1, s2, 16, triton_red_fused_convolution_backward_hardtanh_backward_native_dropout_backward_sum_0_r0_numel, grid=grid(16), stream=stream0)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del bitwise_or
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del gt_2
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del tangents_1
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf3 = torch.ops.aten.convolution_backward.default(buf1, constant_pad_nd, primals_4, [16], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False])
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del buf1
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del constant_pad_nd
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del primals_4
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         buf4 = buf3[1]
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]         del buf3
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     return (None, None, None, buf4, buf2, reinterpret_tensor(buf0, (16, ), (1, ), 0), )
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_1 = 64
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_2 = 64
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     primals_4 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     constant_pad_nd = rand_strided((1, 3, 68, 68), (13872, 4624, 68, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     gt_2 = rand_strided((1, 16, 68, 68), (73984, 4624, 68, 1), device='cuda:0', dtype=torch.bool)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     bitwise_or = rand_strided((1, 16, 68, 68), (73984, 4624, 68, 1), device='cuda:0', dtype=torch.bool)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     tangents_1 = rand_strided((1, 16, 68, 68), (73984, 4624, 68, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_4, constant_pad_nd, gt_2, bitwise_or, tangents_1])
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] if __name__ == "__main__":
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:50.525000 703210 site-packages/torch/_inductor/graph.py:2014] [779/0_1] [__output_code] 
V0127 11:40:50.528000 703210 site-packages/torch/_inductor/graph.py:2022] [779/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/n5/cn54btwzparesquz4bb3bt4fxbg6lsgy3a27lznnzhnn3cznexrc.py
I0127 11:40:50.654000 703210 site-packages/torch/_inductor/graph.py:2056] [779/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/n5/cn54btwzparesquz4bb3bt4fxbg6lsgy3a27lznnzhnn3cznexrc.py

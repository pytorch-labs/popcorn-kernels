V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] Output code: 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # AOT ID: ['55_inference']
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import torch
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import math
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import random
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import os
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import tempfile
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from math import inf, nan
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from cmath import nanj
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch import device, empty_strided
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton.language as tl
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     grid,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     split_scan_grid,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     grid_combo_kernels,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     start_graph,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     end_graph,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     cooperative_reduction_grid,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] )
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] aten = torch.ops.aten
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] async_compile = AsyncCompile()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n7/cn7qso3zkomgmxdmtreqk72wxyjpu4ykeukhc2qdthfbsnddif47.py
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.max_unpool3d]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Source node to ATen node mapping:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   x => full
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Graph fragment:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, %arg0_1, %sub_9, %sub_11, %sub_13], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_poi_fused_max_unpool3d_0 = async_compile.triton('triton_poi_fused_max_unpool3d_0', '''
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton.language as tl
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     size_hints={'x': 16384}, 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     filename=__file__,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool3d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     min_elem_per_thread=0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] )
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton.jit
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] def triton_poi_fused_max_unpool3d_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xmask = xindex < xnumel
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     x0 = xindex
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp0 = 0.0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] ''', device_str='cuda')
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rf/crf2hanawqe2bryu24phriacft65ivjbh4diq7w74qyqhizcu7ik.py
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten.max_unpool3d]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Source node to ATen node mapping:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   x => index_put
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Graph fragment:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%view_2, [%view_1], %view_3), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_poi_fused_max_unpool3d_1 = async_compile.triton('triton_poi_fused_max_unpool3d_1', '''
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton.language as tl
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     size_hints={'x': 2048}, 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     filename=__file__,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_unpool3d_1', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     min_elem_per_thread=0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] )
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton.jit
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] def triton_poi_fused_max_unpool3d_1(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, ks2, ks3, xnumel, XBLOCK : tl.constexpr):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xmask = xindex < xnumel
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     x0 = xindex
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (x0), xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp1 = 8*(ks0 // 2)*(ks1 // 2)*(ks2 // 2)*(triton_helpers.div_floor_integer(x0,  (ks0 // 2)*(ks1 // 2)*(ks2 // 2)))
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp3 = 8*ks3*(ks0 // 2)*(ks1 // 2)*(ks2 // 2)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp5 = tmp2 < 0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp6 = tl.where(tmp5, tmp4, tmp2)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.device_assert(((0 <= tmp6) & (tmp6 < 8*ks3*(ks0 // 2)*(ks1 // 2)*(ks2 // 2))) | ~(xmask), "index out of bounds: 0 <= tmp6 < 8*ks3*(ks0 // 2)*(ks1 // 2)*(ks2 // 2)")
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to((tmp6 % (8*ks3*(ks0 // 2)*(ks1 // 2)*(ks2 // 2))), [XBLOCK])), tmp8, xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] ''', device_str='cuda')
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gz/cgzxqukvuzltjb2hv3qgkjrqzhhhv3iuamqkshsexzki6xhogz3o.py
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.bernoulli]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Source node to ATen node mapping:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   x_1 => inductor_lookup_seed_default, inductor_random_default_1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Graph fragment:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, 1, 1, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_poi_fused_bernoulli_2 = async_compile.triton('triton_poi_fused_bernoulli_2', '''
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton.language as tl
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     size_hints={'x': 4}, 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     filename=__file__,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     min_elem_per_thread=0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] )
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton.jit
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] def triton_poi_fused_bernoulli_2(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xmask = xindex < xnumel
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     x0 = xindex
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp1 = x0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] ''', device_str='cuda')
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hv/chv7dgs35veae5v4pcxpzhoql5zyzsf3o7om5iwecgfs5qqy462t.py
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Topologically Sorted Source Nodes: [random_tensor, loss], Original ATen: [aten.randn_like, aten.mul, aten.sum]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Source node to ATen node mapping:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   loss => mul_75, mul_78, mul_81, sum_1, sum_2, sum_3
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   random_tensor => inductor_lookup_seed_default_1, inductor_random_default
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Graph fragment:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, %sub_9, %sub_11, %sym_size_int_4], %inductor_lookup_seed_default_1, randn), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mul_75 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, %view_6), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_75, [1]), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mul_78 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, %view_7), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_78, [1]), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mul_81 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %view_6), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_81, [1]), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_red_fused_mul_randn_like_sum_3 = async_compile.triton('triton_red_fused_mul_randn_like_sum_3', '''
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton.language as tl
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton_heuristics.reduction(
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     filename=__file__,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'load_seed_offset': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mul_randn_like_sum_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] )
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton.jit
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] def triton_red_fused_mul_randn_like_sum_3(in_ptr0, in_ptr1, in_ptr2, out_ptr1, out_ptr2, out_ptr3, load_seed_offset, ks1, ks2, ks3, ks4, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xnumel = 2
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     rnumel = r0_numel
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xmask = xindex < xnumel
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     rbase = r0_base
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     x0 = xindex
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     _tmp20 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     _tmp24 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     _tmp28 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         roffset = r0_offset
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         rindex = r0_index
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         r0_1 = r0_index
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp3 = tl.load(in_ptr1 + (2*(ks4 // 2)*((((2*(ks4 // 2)*(((r0_1 // (2*(ks4 // 2))) % (2*(ks3 // 2)))) + ((r0_1 % (2*(ks4 // 2))))) // (2*(ks4 // 2))) % (2*(ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*((((2*(ks4 // 2)*(((r0_1 // (2*(ks4 // 2))) % (2*(ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*((((r0_1 + 4*ks1*x0*(ks2 // 2)*(ks3 // 2)*(ks4 // 2)) // (4*(ks3 // 2)*(ks4 // 2))) % (2*(ks2 // 2)))) + ((r0_1 % (2*(ks4 // 2))))) // (4*(ks3 // 2)*(ks4 // 2))) % (2*(ks2 // 2)))) + 8*(ks2 // 2)*(ks3 // 2)*(ks4 // 2)*((((2*(ks4 // 2)*(((r0_1 // (2*(ks4 // 2))) % (2*(ks3 // 2)))) + 4*(ks3 // 2)*(ks4 // 2)*((((r0_1 + 4*ks1*x0*(ks2 // 2)*(ks3 // 2)*(ks4 // 2)) // (4*(ks3 // 2)*(ks4 // 2))) % (2*(ks2 // 2)))) + 8*(ks2 // 2)*(ks3 // 2)*(ks4 // 2)*((((r0_1 + 4*ks1*x0*(ks2 // 2)*(ks3 // 2)*(ks4 // 2)) // (8*(ks2 // 2)*(ks3 // 2)*(ks4 // 2))) % ks1)) + ((r0_1 % (2*(ks4 // 2))))) // (8*(ks2 // 2)*(ks3 // 2)*(ks4 // 2))) % ks1)) + ((((r0_1 % (2*(ks4 // 2)))) % (2*(ks4 // 2))))), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp4 = tl.load(in_ptr2 + ((((r0_1 + 4*ks1*x0*(ks2 // 2)*(ks3 // 2)*(ks4 // 2)) // (8*(ks2 // 2)*(ks3 // 2)*(ks4 // 2))) % ks1)), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp1 = r0_1 + 4*ks1*x0*(ks2 // 2)*(ks3 // 2)*(ks4 // 2)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp2 = tl.randn(tmp0, (tmp1).to(tl.uint32))
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp5 = 0.5
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp6 = tmp4 < tmp5
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp7 = tmp6.to(tl.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp8 = 0.8864048946659319
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp9 = tmp7 * tmp8
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp10 = tmp3 * tmp9
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp11 = -1.0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp12 = tmp7 + tmp11
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp13 = 1.558387861036063
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp14 = tmp12 * tmp13
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp15 = 0.7791939305180315
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp16 = tmp14 + tmp15
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp17 = tmp10 + tmp16
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp18 = tmp17 * tmp2
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp19 = tl.broadcast_to(tmp18, [XBLOCK, R0_BLOCK])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp21 = _tmp20 + tmp19
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         _tmp20 = tl.where(r0_mask & xmask, tmp21, _tmp20)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp22 = tmp17 * tmp17
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp23 = tl.broadcast_to(tmp22, [XBLOCK, R0_BLOCK])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp25 = _tmp24 + tmp23
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         _tmp24 = tl.where(r0_mask & xmask, tmp25, _tmp24)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp26 = tmp2 * tmp2
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp27 = tl.broadcast_to(tmp26, [XBLOCK, R0_BLOCK])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         tmp29 = _tmp28 + tmp27
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         _tmp28 = tl.where(r0_mask & xmask, tmp29, _tmp28)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp20 = tl.sum(_tmp20, 1)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp24 = tl.sum(_tmp24, 1)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp28 = tl.sum(_tmp28, 1)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp20, xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp24, xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp28, xmask)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] ''', device_str='cuda')
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5e/c5ehi25goaoyb4xnasydpnjluu3dcvwujmxfsrtlwibsvgifnsug.py
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.eq, aten.fill, aten.mul, aten.sum, aten.add, aten.sqrt, aten.div, aten.sub, aten.zeros_like, aten.where, aten.clamp_min, aten.mean]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Source node to ATen node mapping:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   loss => add_106, add_109, add_110, clamp_min, div, full_default, full_default_1, full_default_2, full_default_3, mean, mul_75, mul_78, mul_81, mul_84, sqrt, sub_52, sub_53, sum_1, sum_2, sum_3, where, where_1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] # Graph fragment:
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mul_75 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, %view_6), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_75, [1]), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mul_78 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_7, %view_7), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_78, [1]), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %add_106 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sum_2, 9.999999960041972e-13), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mul_81 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_6, %view_6), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_81, [1]), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %add_109 : [num_users=1] = call_function[target=torch.ops.aten.add.Scalar](args = (%sum_3, 9.999999960041972e-13), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mul_84 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_106, %add_109), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%mul_84,), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_1, %sqrt), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sub_52 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default_1, %div), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_2, %sub_52, %full_default), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %sub_53 : [num_users=1] = call_function[target=torch.ops.aten.sub.Scalar](args = (%div, 0.0), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_53, 0), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_3, %clamp_min, %full_default), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %add_110 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %where_1), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%add_110,), kwargs = {})
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_per_fused_add_clamp_min_div_eq_fill_mean_mul_sqrt_sub_sum_where_zeros_like_4 = async_compile.triton('triton_per_fused_add_clamp_min_div_eq_fill_mean_mul_sqrt_sub_sum_where_zeros_like_4', '''
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] import triton.language as tl
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     size_hints={'x': 1, 'r0_': 2},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     filename=__file__,
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (4,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clamp_min_div_eq_fill_mean_mul_sqrt_sub_sum_where_zeros_like_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] )
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] @triton.jit
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] def triton_per_fused_add_clamp_min_div_eq_fill_mean_mul_sqrt_sub_sum_where_zeros_like_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xnumel = 1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     r0_numel = 2
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     rnumel = r0_numel
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     r0_offset = 0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     roffset = r0_offset
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     rindex = r0_index
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     r0_0 = r0_index
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0_0), None)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp8 = tl.load(in_ptr2 + (r0_0), None)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp7 = tl.sum(tmp5, 1)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp11 = tl.sum(tmp9, 1)[:, None]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp12 = 9.999999960041972e-13
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp13 = tmp7 + tmp12
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp14 = tmp11 + tmp12
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp16 = libdevice.sqrt(tmp15)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp17 = tmp3 / tmp16
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp18 = 1.0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp19 = tmp18 - tmp17
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp20 = tl.full([1, 1], True, tl.int1)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp21 = 0.0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp22 = tl.where(tmp20, tmp19, tmp21)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp23 = tmp17 - tmp21
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp24 = triton_helpers.maximum(tmp23, tmp21)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp25 = tl.full([1, 1], False, tl.int1)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp26 = tl.where(tmp25, tmp24, tmp21)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp27 = tmp22 + tmp26
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tmp28 = tmp27 / tmp18
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.debug_barrier()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp28, None)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] ''', device_str='cuda')
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] async_compile.wait(globals())
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] del async_compile
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] def call(args):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1, arg4_1 = args
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     args.clear()
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     s0 = arg0_1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     s1 = arg1_1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     s2 = arg2_1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     s3 = arg3_1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     assert_size_stride(arg4_1, (1, s0, s1, s2, s3), (s0*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         # Topologically Sorted Source Nodes: [max_pool3d], Original ATen: [aten.max_pool3d_with_indices]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf0 = torch.ops.aten.max_pool3d_with_indices.default(arg4_1, [2, 2, 2], [2, 2, 2])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del arg4_1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf1 = buf0[0]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf2 = buf0[1]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf0
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf3 = empty_strided_cuda((1, s0, 2*(s1 // 2), 2*(s2 // 2), 2*(s3 // 2)), (8*s0*(s1 // 2)*(s2 // 2)*(s3 // 2), 8*(s1 // 2)*(s2 // 2)*(s3 // 2), 4*(s2 // 2)*(s3 // 2), 2*(s3 // 2), 1), torch.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.max_unpool3d]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_poi_fused_max_unpool3d_0_xnumel = 8*s0*(s1 // 2)*(s2 // 2)*(s3 // 2)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_poi_fused_max_unpool3d_0.run(buf3, triton_poi_fused_max_unpool3d_0_xnumel, grid=grid(triton_poi_fused_max_unpool3d_0_xnumel), stream=stream0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.max_unpool3d]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_poi_fused_max_unpool3d_1_xnumel = s0*(s1 // 2)*(s2 // 2)*(s3 // 2)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_poi_fused_max_unpool3d_1.run(buf2, buf1, buf3, s1, s2, s3, s0, triton_poi_fused_max_unpool3d_1_xnumel, grid=grid(triton_poi_fused_max_unpool3d_1_xnumel), stream=stream0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf1
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf2
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf5 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf5)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf6 = empty_strided_cuda((1, s0, 1, 1, 1), (s0, 1, s0, s0, s0), torch.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.bernoulli]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_poi_fused_bernoulli_2.run(buf5, buf6, 0, s0, grid=grid(s0), stream=stream0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf8 = empty_strided_cuda((1, 2), (2, 1), torch.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf10 = empty_strided_cuda((1, 2), (2, 1), torch.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf12 = empty_strided_cuda((1, 2), (2, 1), torch.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         # Topologically Sorted Source Nodes: [random_tensor, loss], Original ATen: [aten.randn_like, aten.mul, aten.sum]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_red_fused_mul_randn_like_sum_3_r0_numel = 4*s0*(s1 // 2)*(s2 // 2)*(s3 // 2)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_red_fused_mul_randn_like_sum_3.run(buf5, buf3, buf6, buf8, buf10, buf12, 1, s0, s1, s2, s3, 2, triton_red_fused_mul_randn_like_sum_3_r0_numel, grid=grid(2), stream=stream0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf3
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf5
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf6
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf9 = empty_strided_cuda((1, ), (1, ), torch.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         buf14 = reinterpret_tensor(buf9, (), (), 0); del buf9  # reuse
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.eq, aten.fill, aten.mul, aten.sum, aten.add, aten.sqrt, aten.div, aten.sub, aten.zeros_like, aten.where, aten.clamp_min, aten.mean]
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         triton_per_fused_add_clamp_min_div_eq_fill_mean_mul_sqrt_sub_sum_where_zeros_like_4.run(buf14, buf8, buf10, buf12, 1, 2, grid=grid(1), stream=stream0)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf10
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf12
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]         del buf8
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     return (buf14, )
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     arg0_1 = 3
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     arg1_1 = 16
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     arg2_1 = 16
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     arg3_1 = 16
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     arg4_1 = rand_strided((1, 3, 16, 16, 16), (12288, 4096, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1])
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] if __name__ == "__main__":
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:42:29.334000 2062045 site-packages/torch/_inductor/graph.py:2014] [136/0] [__output_code] 
V0205 10:42:29.344000 2062045 site-packages/torch/_inductor/graph.py:2022] [136/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qz/cqzmf56n4qie5beu27v5l4prr7m2zqfxl3pctvk3ppd4pw6ojkd7.py
I0205 10:42:29.880000 2062045 site-packages/torch/_inductor/graph.py:2056] [136/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qz/cqzmf56n4qie5beu27v5l4prr7m2zqfxl3pctvk3ppd4pw6ojkd7.py

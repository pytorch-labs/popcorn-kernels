V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] Output code: 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] # AOT ID: ['182_forward']
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import torch
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import math
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import random
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import os
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import tempfile
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from math import inf, nan
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from cmath import nanj
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch import device, empty_strided
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import triton
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import triton.language as tl
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     grid,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     split_scan_grid,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     grid_combo_kernels,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     start_graph,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     end_graph,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     cooperative_reduction_grid,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] )
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] aten = torch.ops.aten
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] async_compile = AsyncCompile()
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/k3/ck3e5yqapmumwt34d7bv2wkcxtw6vkj2gfxabqz3vcxbzbvymprw.py
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] # Topologically Sorted Source Nodes: [normalize, mul, mul_1], Original ATen: [aten.linalg_vector_norm, aten.div, aten.mul]
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] # Source node to ATen node mapping:
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   mul => mul
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   mul_1 => mul_1
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   normalize => div, pow_1, pow_2, sum_1
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] # Graph fragment:
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2.0), kwargs = {})
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1], True), kwargs = {})
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %expand), kwargs = {})
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, 8.0), kwargs = {})
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_2), kwargs = {})
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] triton_per_fused_div_linalg_vector_norm_mul_0 = async_compile.triton('triton_per_fused_div_linalg_vector_norm_mul_0', '''
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import triton
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] import triton.language as tl
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     size_hints={'x': 512, 'r0_': 64},
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     filename=__file__,
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_div_linalg_vector_norm_mul_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] )
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] @triton.jit
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] def triton_per_fused_div_linalg_vector_norm_mul_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     xnumel = 320
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     r0_numel = 64
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     R0_BLOCK: tl.constexpr = 64
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     rnumel = r0_numel
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     xmask = xindex < xnumel
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     r0_offset = 0
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     roffset = r0_offset
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     rindex = r0_index
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     r0_1 = r0_index
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     x0 = xindex
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 64*x0), xmask, other=0.0)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (r0_1), None, eviction_policy='evict_last')
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp1 = tmp0 * tmp0
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp4 = tl.where(xmask, tmp2, 0)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp7 = 1e-12
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp9 = tmp0 / tmp8
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp10 = 8.0
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp11 = tmp9 * tmp10
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tmp13 = tmp11 * tmp12
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tl.debug_barrier()
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp6, xmask)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     tl.store(out_ptr0 + (r0_1 + 64*x0), tmp13, xmask)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] ''', device_str='cuda')
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] async_compile.wait(globals())
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] del async_compile
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] def call(args):
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     primals_1, primals_2 = args
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     args.clear()
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     assert_size_stride(primals_1, (32, 10, 64), (640, 64, 1))
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     assert_size_stride(primals_2, (64, ), (1, ))
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]         buf0 = empty_strided_cuda((32, 10, 1), (10, 1, 320), torch.float32)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]         buf1 = reinterpret_tensor(buf0, (32, 10, 1), (10, 1, 1), 0); del buf0  # reuse
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]         buf2 = empty_strided_cuda((32, 10, 64), (640, 64, 1), torch.float32)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]         # Topologically Sorted Source Nodes: [normalize, mul, mul_1], Original ATen: [aten.linalg_vector_norm, aten.div, aten.mul]
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]         triton_per_fused_div_linalg_vector_norm_mul_0.run(buf1, primals_1, primals_2, buf2, 320, 64, grid=grid(320), stream=stream0)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     return (buf2, primals_1, primals_2, buf1, )
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     primals_1 = rand_strided((32, 10, 64), (640, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] if __name__ == "__main__":
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:21.311000 703210 site-packages/torch/_inductor/graph.py:2014] [736/0] [__output_code] 
V0127 11:40:21.313000 703210 site-packages/torch/_inductor/graph.py:2022] [736/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jo/cjorbdkmfjnhnpna4omirj242socowdluobzhoek4n5idfrglyvq.py
I0127 11:40:21.540000 703210 site-packages/torch/_inductor/graph.py:2056] [736/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jo/cjorbdkmfjnhnpna4omirj242socowdluobzhoek4n5idfrglyvq.py
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] Output code: 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] # AOT ID: ['183_forward']
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import torch
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import math
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import random
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import os
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import tempfile
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from math import inf, nan
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from cmath import nanj
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch import device, empty_strided
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import triton
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import triton.language as tl
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     grid,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     split_scan_grid,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     grid_combo_kernels,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     start_graph,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     end_graph,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     cooperative_reduction_grid,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] )
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] aten = torch.ops.aten
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] async_compile = AsyncCompile()
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fx/cfxpwkenb335rz3sv63alhpt746343qguaclccksrerxpd4sgjcj.py
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] # Topologically Sorted Source Nodes: [pairwise_distance], Original ATen: [aten.sub, aten.add, aten.norm, aten.div, aten.eq, aten.masked_fill]
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] # Source node to ATen node mapping:
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   pairwise_distance => add, pow_1, pow_2, sub, sum_1
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] # Graph fragment:
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Scalar](args = (%sub, 1e-06), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add, 2.0), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1]), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %pow_2 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add, %unsqueeze_1), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%unsqueeze_1, 0), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default, %div), kwargs = {})
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] triton_per_fused_add_div_eq_masked_fill_norm_sub_0 = async_compile.triton('triton_per_fused_add_div_eq_masked_fill_norm_sub_0', '''
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import triton
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] import triton.language as tl
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] @triton_heuristics.persistent_reduction(
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     size_hints={'x': 32, 'r0_': 64},
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     filename=__file__,
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_eq_masked_fill_norm_sub_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] )
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] @triton.jit
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] def triton_per_fused_add_div_eq_masked_fill_norm_sub_0(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     xnumel = 32
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     r0_numel = 64
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     R0_BLOCK: tl.constexpr = 64
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     rnumel = r0_numel
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     xmask = xindex < xnumel
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     r0_offset = 0
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     roffset = r0_offset
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     rindex = r0_index
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     r0_1 = r0_index
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     x0 = xindex
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 640*x0), xmask, other=0.0)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 640*x0), xmask, other=0.0)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp2 = tmp0 - tmp1
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp3 = 1e-06
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp4 = tmp2 + tmp3
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp5 = tmp4 * tmp4
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, R0_BLOCK])
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp8 = tl.where(xmask, tmp6, 0)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp9 = tl.sum(tmp8, 1)[:, None]
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp11 = 0.0
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp12 = tmp10 == tmp11
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp13 = tmp4 / tmp10
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tmp14 = tl.where(tmp12, tmp11, tmp13)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tl.debug_barrier()
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp10, xmask)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     tl.store(out_ptr0 + (r0_1 + 64*x0), tmp14, xmask)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] ''', device_str='cuda')
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] async_compile.wait(globals())
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] del async_compile
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] def call(args):
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     primals_1, primals_2 = args
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     args.clear()
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     assert_size_stride(primals_1, (32, 64), (640, 1))
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     assert_size_stride(primals_2, (32, 64), (640, 1))
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         buf0 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         buf2 = empty_strided_cuda((32, 64), (64, 1), torch.float32)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         # Topologically Sorted Source Nodes: [pairwise_distance], Original ATen: [aten.sub, aten.add, aten.norm, aten.div, aten.eq, aten.masked_fill]
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         triton_per_fused_add_div_eq_masked_fill_norm_sub_0.run(buf1, primals_2, primals_1, buf2, 32, 64, grid=grid(32), stream=stream0)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         del primals_1
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]         del primals_2
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     return (buf1, buf2, )
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     primals_1 = rand_strided((32, 64), (640, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     primals_2 = rand_strided((32, 64), (640, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] if __name__ == "__main__":
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:21.669000 703210 site-packages/torch/_inductor/graph.py:2014] [737/0] [__output_code] 
V0127 11:40:21.672000 703210 site-packages/torch/_inductor/graph.py:2022] [737/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bo/cbomvk5sd2rcamg5oeq2mmdb4o7xwsahonw7sz5iuke4sbbufqad.py
I0127 11:40:21.909000 703210 site-packages/torch/_inductor/graph.py:2056] [737/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bo/cbomvk5sd2rcamg5oeq2mmdb4o7xwsahonw7sz5iuke4sbbufqad.py

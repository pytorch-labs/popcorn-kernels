V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] Output code: 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # AOT ID: ['47_forward']
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import torch
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import math
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import random
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import os
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import tempfile
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from math import inf, nan
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from cmath import nanj
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch import device, empty_strided
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import triton
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import triton.language as tl
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     grid,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     split_scan_grid,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     grid_combo_kernels,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     start_graph,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     end_graph,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     cooperative_reduction_grid,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] )
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] aten = torch.ops.aten
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] async_compile = AsyncCompile()
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lb/clbmr335ob5mk4dcb3osppluarwc3phmdn7cjreg6gya6fteqwq6.py
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.add, aten.view]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # Source node to ATen node mapping:
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   x => add
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   x_1 => view_5
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # Graph fragment:
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%_trilinear, %primals_3), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %view_5 : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%add, [-1, 20]), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] triton_poi_fused_add_view_0 = async_compile.triton('triton_poi_fused_add_view_0', '''
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import triton
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import triton.language as tl
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     size_hints={'x': 32}, 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     filename=__file__,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_view_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     min_elem_per_thread=0
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] )
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] @triton.jit
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] def triton_poi_fused_add_view_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xnumel = 20
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xmask = xindex < xnumel
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     x0 = xindex
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp2, xmask)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] ''', device_str='cuda')
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sm/csmnfyg6hxn6pjynzq26fniijn462tppnzxm57layvnaxiergx22.py
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # Topologically Sorted Source Nodes: [x_1, x_2, loss], Original ATen: [aten.add, aten._softmax, aten.zeros_like, aten.fill, aten.sub, aten.clamp_min, aten.ne, aten.where, aten.mean]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # Source node to ATen node mapping:
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   loss => add_2, clamp_min, full_default, full_default_1, full_default_2, full_default_3, mean, sub_1, where, where_1
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   x_1 => add_1
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   x_2 => amax, div, exp, sub, sum_1
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] # Graph fragment:
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_trilinear_1, %primals_5), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add_1, [1], True), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1, %amax), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %div : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %full_default : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([1, 10], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 10], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%full_default_1, %div), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_1, 0), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 10], False), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_2, %clamp_min, %full_default), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 10], True), kwargs = {dtype: torch.bool, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%full_default_3, %div, %full_default), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%where, %where_1), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%add_2,), kwargs = {})
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] triton_per_fused__softmax_add_clamp_min_fill_mean_ne_sub_where_zeros_like_1 = async_compile.triton('triton_per_fused__softmax_add_clamp_min_fill_mean_ne_sub_where_zeros_like_1', '''
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import triton
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] import triton.language as tl
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     size_hints={'x': 1, 'r0_': 16},
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     filename=__file__,
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_out_ptr1': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_add_clamp_min_fill_mean_ne_sub_where_zeros_like_1', 'mutated_arg_names': ['in_out_ptr0', 'in_out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] )
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] @triton.jit
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] def triton_per_fused__softmax_add_clamp_min_fill_mean_ne_sub_where_zeros_like_1(in_out_ptr0, in_out_ptr1, in_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xnumel = 1
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     r0_numel = 10
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     R0_BLOCK: tl.constexpr = 16
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     rnumel = r0_numel
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     r0_offset = 0
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     roffset = r0_offset
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     rindex = r0_index
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     r0_0 = r0_index
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r0_0), r0_mask, other=0.0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp5 = tl.where(r0_mask, tmp3, float("-inf"))
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp6 = triton_helpers.max2(tmp5, 1)[:, None]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp7 = tmp2 - tmp6
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp8 = tl_math.exp(tmp7)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp11 = tl.where(r0_mask, tmp9, 0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp12 = tl.sum(tmp11, 1)[:, None]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp13 = tmp8 / tmp12
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp14 = 1.0
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp15 = tmp14 - tmp13
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp16 = 0.0
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp18 = tl.full([1, 1], False, tl.int1)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp16)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp20 = tl.full([1, 1], True, tl.int1)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp21 = tl.where(tmp20, tmp13, tmp16)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp22 = tmp19 + tmp21
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK, R0_BLOCK])
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp25 = tl.where(r0_mask, tmp23, 0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp26 = tl.sum(tmp25, 1)[:, None]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp27 = 10.0
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tmp28 = tmp26 / tmp27
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tl.store(in_out_ptr0 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp13, r0_mask)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tl.debug_barrier()
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     tl.store(in_out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp28, None)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] ''', device_str='cuda')
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] async_compile.wait(globals())
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] del async_compile
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] def call(args):
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     args.clear()
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     assert_size_stride(primals_1, (1, 10), (10, 1))
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     assert_size_stride(primals_2, (20, 10, 10), (100, 10, 1))
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     assert_size_stride(primals_3, (20, ), (1, ))
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     assert_size_stride(primals_4, (10, 20, 20), (400, 20, 1))
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     assert_size_stride(primals_5, (10, ), (1, ))
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._trilinear]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf0 = torch.ops.aten._trilinear.default(primals_1, primals_2, primals_1, [1, 3], [0], [1, 2], [2, 3])
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         del primals_2
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf1 = buf0
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         del buf0
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         # Topologically Sorted Source Nodes: [x, x_1], Original ATen: [aten.add, aten.view]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         triton_poi_fused_add_view_0.run(buf2, primals_3, 20, grid=grid(20), stream=stream0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         del primals_3
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._trilinear]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf3 = torch.ops.aten._trilinear.default(buf2, primals_4, buf2, [1, 3], [0], [1, 2], [2, 3])
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf4 = buf3
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         del buf3
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf8 = empty_strided_cuda((), (), torch.float32)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2, loss], Original ATen: [aten.add, aten._softmax, aten.zeros_like, aten.fill, aten.sub, aten.clamp_min, aten.ne, aten.where, aten.mean]
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         triton_per_fused__softmax_add_clamp_min_fill_mean_ne_sub_where_zeros_like_1.run(buf7, buf9, primals_5, 1, 10, grid=grid(1), stream=stream0)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]         del primals_5
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     return (buf9, primals_4, primals_1, buf2, buf7, )
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     primals_1 = rand_strided((1, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     primals_2 = rand_strided((20, 10, 10), (100, 10, 1), device='cuda:0', dtype=torch.float32)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     primals_3 = rand_strided((20, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     primals_4 = rand_strided((10, 20, 20), (400, 20, 1), device='cuda:0', dtype=torch.float32)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     primals_5 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] if __name__ == "__main__":
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:42:00.883000 2062045 site-packages/torch/_inductor/graph.py:2014] [118/0] [__output_code] 
V0205 10:42:00.887000 2062045 site-packages/torch/_inductor/graph.py:2022] [118/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xt/cxtinen2pmqzfg5phqxayj65nmjmwuqk7wzdk6ty6ldgxirsrsyy.py
I0205 10:42:00.986000 2062045 site-packages/torch/_inductor/graph.py:2056] [118/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xt/cxtinen2pmqzfg5phqxayj65nmjmwuqk7wzdk6ty6ldgxirsrsyy.py

W0127 11:40:18.166000 703210 site-packages/torch/_inductor/utils.py:1611] [730/0] DeviceCopy in input program
W0127 11:40:18.178000 703210 site-packages/torch/_inductor/utils.py:1611] [730/0] DeviceCopy in input program
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] Output code: 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] # AOT ID: ['179_inference']
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import torch
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import math
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import random
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import os
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import tempfile
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from math import inf, nan
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from cmath import nanj
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch import device, empty_strided
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import triton
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import triton.language as tl
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     grid,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     split_scan_grid,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     grid_combo_kernels,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     start_graph,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     end_graph,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     cooperative_reduction_grid,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] )
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] aten = torch.ops.aten
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] async_compile = AsyncCompile()
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] cpp_fused_randint_0 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'const int64_t', 'const int64_t', 'const int64_t'], '''
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        int64_t* out_ptr0,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        const int64_t ks0,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        const int64_t ks1,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        const int64_t ks2)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]             {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 auto tmp2 = static_cast<int64_t>(0);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 auto tmp3 = (c10::div_floor_integer(static_cast<int64_t>(ks0), static_cast<int64_t>(4L)))*(c10::div_floor_integer(static_cast<int64_t>(ks1), static_cast<int64_t>(4L)))*(c10::div_floor_integer(static_cast<int64_t>(ks2), static_cast<int64_t>(4L)));
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 auto tmp4 = c10::convert<int64_t>(tmp3);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 auto tmp5 = randint64_cpu(tmp0, tmp1, tmp2, tmp4);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 out_ptr0[static_cast<int64_t>(0L)] = tmp5;
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]             }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] ''')
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] cpp_fused__to_copy_randint_1 = async_compile.cpp_pybinding(['const int64_t*', 'float*', 'const int64_t', 'const int64_t', 'const int64_t'], '''
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        float* out_ptr0,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        const int64_t ks0,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        const int64_t ks1,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                        const int64_t ks2)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         #pragma GCC ivdep
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>((c10::div_floor_integer(static_cast<int64_t>(ks0), static_cast<int64_t>(4L)))*(c10::div_floor_integer(static_cast<int64_t>(ks1), static_cast<int64_t>(4L)))*(c10::div_floor_integer(static_cast<int64_t>(ks2), static_cast<int64_t>(4L)))); x0+=static_cast<int64_t>(1L))
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]             {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 {
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(1L)];
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     auto tmp1 = x0;
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     auto tmp3 = static_cast<int64_t>(0);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     auto tmp4 = static_cast<int64_t>(2);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     auto tmp6 = c10::convert<float>(tmp5);
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp6;
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]                 }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]             }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] }
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] ''')
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jp/cjpcufrlathlqsar3h4timtn2uihv4ji3z35dphhpnmmshowfm2m.py
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] # Topologically Sorted Source Nodes: [nll_loss, log_softmax, bce_loss, add], Original ATen: [aten.nll_loss_forward, aten._log_softmax, aten.binary_cross_entropy_with_logits, aten.add]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] # Source node to ATen node mapping:
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   add => add_26
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   bce_loss => abs_1, exp_1, full_default_2, log1p, mean, minimum, mul_32, neg_1, sub_19, sub_20, sub_21
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   log_softmax => amax, exp, sub_16, sum_1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   nll_loss => convert_element_type_3, div, full_default_1, ne_1, ne_2, neg, sum_2, sum_3, where_1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] # Graph fragment:
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %ne_1 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%device_put, -100), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view, [1], True), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %sub_16 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %amax), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_16,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%squeeze,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_1, %neg, %full_default_1), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%where_1,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %ne_2 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%device_put, -100), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%ne_2,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %convert_element_type_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%sum_2, torch.float32), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_3, %convert_element_type_3), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %device_put_1), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %view), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %minimum : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default_2, %view), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%view,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_1,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_1,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %log1p : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum, %log1p), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_32, %sub_20), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sub_21,), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div, %mean), kwargs = {})
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] triton_red_fused__log_softmax_add_binary_cross_entropy_with_logits_nll_loss_forward_2 = async_compile.triton('triton_red_fused__log_softmax_add_binary_cross_entropy_with_logits_nll_loss_forward_2', '''
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import triton
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] import triton.language as tl
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] @triton_heuristics.reduction(
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     size_hints={'x': 1, 'r0_': 512},
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     filename=__file__,
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*i64', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (7,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_add_binary_cross_entropy_with_logits_nll_loss_forward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] )
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] @triton.jit
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] def triton_red_fused__log_softmax_add_binary_cross_entropy_with_logits_nll_loss_forward_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     xnumel = 1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     rnumel = r0_numel
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     rbase = r0_base
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     _tmp2 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         roffset = r0_offset
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         rindex = r0_index
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         r0_0 = r0_index
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp3 = triton_helpers.maximum(_tmp2, tmp1)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         _tmp2 = tl.where(r0_mask, tmp3, _tmp2)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp2 = triton_helpers.max2(_tmp2, 1)[:, None]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     _tmp8 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     _tmp23 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         roffset = r0_offset
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         rindex = r0_index
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         r0_0 = r0_index
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp4 = tl.load(in_ptr0 + (r0_0), r0_mask, eviction_policy='evict_last', other=0.0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp10 = tl.load(in_ptr1 + (r0_0), r0_mask, eviction_policy='evict_first', other=0.0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp5 = tmp4 - tmp2
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp6 = tl_math.exp(tmp5)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp9 = _tmp8 + tmp7
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         _tmp8 = tl.where(r0_mask, tmp9, _tmp8)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp11 = 1.0
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp12 = tmp11 - tmp10
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp13 = tmp12 * tmp4
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp14 = 0.0
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp15 = triton_helpers.minimum(tmp14, tmp4)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp16 = tl_math.abs(tmp4)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp17 = -tmp16
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp18 = tl_math.exp(tmp17)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp19 = libdevice.log1p(tmp18)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp20 = tmp15 - tmp19
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp21 = tmp13 - tmp20
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp22 = tl.broadcast_to(tmp21, [XBLOCK, R0_BLOCK])
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         tmp24 = _tmp23 + tmp22
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         _tmp23 = tl.where(r0_mask, tmp24, _tmp23)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp8 = tl.sum(_tmp8, 1)[:, None]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp23 = tl.sum(_tmp23, 1)[:, None]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp25 = tl.load(in_ptr2 + (0))
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp26 = tl.broadcast_to(tmp25, [XBLOCK, 1])
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp27 = tl.full([1, 1], -100, tl.int64)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp28 = tmp26 != tmp27
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp29 = tl.full([1, 1], 0, tl.int64)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp30 = tl.where(tmp28, tmp26, tmp29)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp31 = (ks0 // 4)*(ks1 // 4)*(ks2 // 4)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp32 = tmp30 + tmp31
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp33 = tmp30 < 0
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp34 = tl.where(tmp33, tmp32, tmp30)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tl.device_assert((0 <= tmp34) & (tmp34 < (ks0 // 4)*(ks1 // 4)*(ks2 // 4)), "index out of bounds: 0 <= tmp34 < (ks0 // 4)*(ks1 // 4)*(ks2 // 4)")
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp36 = tl.load(in_ptr0 + (tmp34), None, eviction_policy='evict_last')
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp37 = tmp36 - tmp2
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp38 = tl_math.log(tmp8)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp39 = tmp37 - tmp38
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp40 = -tmp39
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp41 = 0.0
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp42 = tl.where(tmp28, tmp40, tmp41)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp43 = tmp28.to(tl.int64)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp44 = tmp43.to(tl.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp45 = tmp42 / tmp44
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp46 = tmp31.to(tl.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp47 = tmp23 / tmp46
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tmp48 = tmp45 + tmp47
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tl.debug_barrier()
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp48, None)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] ''', device_str='cuda')
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] async_compile.wait(globals())
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] del async_compile
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] def call(args):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     args.clear()
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     s0 = arg0_1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     s1 = arg1_1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     s2 = arg2_1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     assert_size_stride(arg3_1, (1, 1, s0, s1, s2), (s0*s1*s2, s0*s1*s2, s1*s2, s2, 1))
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.max_pool3d_with_indices]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf0 = torch.ops.aten.max_pool3d_with_indices.default(arg3_1, [2, 2, 2], [2, 2, 2])
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del arg3_1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf1 = buf0[0]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf0
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.max_pool3d_with_indices]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf3 = torch.ops.aten.max_pool3d_with_indices.default(buf1, [2, 2, 2], [2, 2, 2])
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf1
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf4 = buf3[0]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf3
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     buf6 = empty_strided_cpu((2, ), (1, ), torch.int64)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf6)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     buf7 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     cpp_fused_randint_0(buf6, buf7, s0, s1, s2)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf8 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf8.copy_(buf7, False)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf7
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     buf11 = empty_strided_cpu((1, (s0 // 4)*(s1 // 4)*(s2 // 4)), ((s0 // 4)*(s1 // 4)*(s2 // 4), 1), torch.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     cpp_fused__to_copy_randint_1(buf6, buf11, s0, s1, s2)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     del buf6
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf12 = empty_strided_cuda((1, (s0 // 4)*(s1 // 4)*(s2 // 4)), ((s0 // 4)*(s1 // 4)*(s2 // 4), 1), torch.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf12.copy_(buf11, False)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf11
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf9 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         buf14 = reinterpret_tensor(buf9, (), (), 0); del buf9  # reuse
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         # Topologically Sorted Source Nodes: [nll_loss, log_softmax, bce_loss, add], Original ATen: [aten.nll_loss_forward, aten._log_softmax, aten.binary_cross_entropy_with_logits, aten.add]
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         triton_red_fused__log_softmax_add_binary_cross_entropy_with_logits_nll_loss_forward_2_r0_numel = (s0 // 4)*(s1 // 4)*(s2 // 4)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         triton_red_fused__log_softmax_add_binary_cross_entropy_with_logits_nll_loss_forward_2.run(buf14, buf4, buf12, buf8, s0, s1, s2, 1, triton_red_fused__log_softmax_add_binary_cross_entropy_with_logits_nll_loss_forward_2_r0_numel, grid=grid(1), stream=stream0)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf12
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf4
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]         del buf8
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     return (buf14, )
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     arg0_1 = 32
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     arg1_1 = 32
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     arg2_1 = 32
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     arg3_1 = rand_strided((1, 1, 32, 32, 32), (32768, 32768, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] if __name__ == "__main__":
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:18.315000 703210 site-packages/torch/_inductor/graph.py:2014] [730/0] [__output_code] 
V0127 11:40:18.321000 703210 site-packages/torch/_inductor/graph.py:2022] [730/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ch/cchhhsjcl7bdivtzhmmns7325wkvrvemyd4rxyhj6oelubbljacc.py
I0127 11:40:19.281000 703210 site-packages/torch/_inductor/graph.py:2056] [730/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ch/cchhhsjcl7bdivtzhmmns7325wkvrvemyd4rxyhj6oelubbljacc.py

V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] Output code: 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # AOT ID: ['145_inference']
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import torch
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import math
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import random
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import os
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import tempfile
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from math import inf, nan
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from cmath import nanj
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch import device, empty_strided
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton.language as tl
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     grid,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     split_scan_grid,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     grid_combo_kernels,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     start_graph,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     end_graph,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] )
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] aten = torch.ops.aten
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jf/cjfwnjxutkrpomdxgmpxeo55q73fqotxldrjvxvjqiodo4wdaoos.py
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   x => var_mean
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Graph fragment:
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton.language as tl
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     size_hints={'x': 1024, 'r0_': 8192},
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     filename=__file__,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 3, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] )
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] @triton.jit
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr0, out_ptr1, out_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xnumel = 1024
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     rnumel = r0_numel
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     rbase = r0_base
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     x0 = (xindex % 32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     x1 = xindex // 32
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp13_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp13_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp13_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     x3 = xindex
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         roffset = r0_offset
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         rindex = r0_index
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         r0_2 = r0_index
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp0 = r0_2 + x0*((31 + ks0*ks1*ks2) // 32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp1 = ks0*ks1*ks2
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (ks0*ks1*ks2*x1 + (((r0_2 + x0*((31 + ks0*ks1*ks2) // 32)) % (ks0*ks1*ks2)))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp4 = 0.0
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp5 = tl.full(tmp4.shape, 0, tmp4.dtype)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp6 = tl.where(tmp2, tmp4, tmp5)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp7 = 1.0
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp8 = tl.full(tmp7.shape, 0, tmp7.dtype)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp9 = tl.where(tmp2, tmp7, tmp8)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp10 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp11 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp12 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp13_mean_next, tmp13_m2_next, tmp13_weight_next = triton_helpers.welford_combine(
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]             tmp13_mean, tmp13_m2, tmp13_weight,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]             tmp10, tmp11, tmp12
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         )
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp13_mean = tl.where(r0_mask & xmask, tmp13_mean_next, tmp13_mean)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp13_m2 = tl.where(r0_mask & xmask, tmp13_m2_next, tmp13_m2)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         tmp13_weight = tl.where(r0_mask & xmask, tmp13_weight_next, tmp13_weight)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp16, tmp17, tmp18 = triton_helpers.welford(tmp13_mean, tmp13_m2, tmp13_weight, 1)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp13 = tmp16[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp14 = tmp17[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp15 = tmp18[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp13, xmask)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tl.store(out_ptr1 + (x3), tmp14, xmask)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tl.store(out_ptr2 + (x3), tmp15, xmask)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] ''', device_str='cuda')
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sv/csvikv2rb64ze2kbjie5i7xfeobrzeppimclr6xa2hft6hlwhici.py
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   x => var_mean
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Graph fragment:
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] triton_per_fused__native_batch_norm_legit_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_1', '''
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton.language as tl
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     size_hints={'x': 32, 'r0_': 32},
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     filename=__file__,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] )
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] @triton.jit
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] def triton_per_fused__native_batch_norm_legit_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xnumel = 32
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     r0_numel = 32
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 32
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     rnumel = r0_numel
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     r0_offset = 0
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     roffset = r0_offset
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     rindex = r0_index
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     r0_1 = r0_index
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     x0 = xindex
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_1 + 32*x0), xmask, other=0.0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0_1 + 32*x0), xmask, other=0.0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp2 = tl.load(in_ptr2 + (r0_1 + 32*x0), xmask, other=0.0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, R0_BLOCK])
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp13 = tmp10[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp14 = tmp11[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp15 = tmp12[:, None]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp13, xmask)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp14, xmask)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] ''', device_str='cuda')
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kh/ckhqejmxxiicat5d5xvelgypfoqprpecrf2nf5jrfqku7hctlxzc.py
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   x => add_5, mul_16, rsqrt, sub_3, var_mean
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] # Graph fragment:
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view, [0, 2, 3, 4]), kwargs = {correction: 0, keepdim: True})
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %getitem_1), kwargs = {})
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %rsqrt), kwargs = {})
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] triton_poi_fused__native_batch_norm_legit_2 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_2', '''
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] import triton.language as tl
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     size_hints={'x': 8388608}, 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     filename=__file__,
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] )
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] @triton.jit
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] def triton_poi_fused__native_batch_norm_legit_2(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     x2 = xindex
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     x1 = xindex // ks0
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp4 = ks0
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp5 = tmp4.to(tl.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp6 = tmp3 / tmp5
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp7 = 1e-05
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp9 = libdevice.rsqrt(tmp8)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tmp10 = tmp2 * tmp9
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp10, xmask)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] ''', device_str='cuda')
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] async_compile.wait(globals())
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] del async_compile
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] def call(args):
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     args.clear()
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     s1 = arg0_1
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     s2 = arg1_1
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     s3 = arg2_1
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     assert_size_stride(arg3_1, (1, 32, s1, s2, s3), (32*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1))
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 32, 1, 1, 1, 32), (1024, 32, 1024, 1024, 1024, 1), torch.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 32, 1, 1, 1, 32), (1024, 32, 1024, 1024, 1024, 1), torch.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 32, 1, 1, 1, 32), (1024, 32, 1024, 1024, 1024, 1), torch.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_0_r0_numel = (31 + s1*s2*s3) // 32
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg3_1, buf0, buf1, buf2, s1, s2, s3, 1024, triton_red_fused__native_batch_norm_legit_0_r0_numel, grid=grid(1024), stream=stream0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 32, 32, 32), torch.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         buf4 = empty_strided_cuda((1, 32, 1, 1, 1), (32, 1, 32, 32, 32), torch.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         triton_per_fused__native_batch_norm_legit_1.run(buf0, buf1, buf2, buf3, buf4, 32, 32, grid=grid(32), stream=stream0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         del buf0
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         del buf1
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         del buf2
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         ps0 = s1*s2*s3
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 32, s1, s2, s3), (32*s1*s2*s3, s1*s2*s3, s2*s3, s3, 1), torch.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten._native_batch_norm_legit]
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_2_xnumel = 32*s1*s2*s3
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         triton_poi_fused__native_batch_norm_legit_2.run(arg3_1, buf3, buf4, buf6, ps0, triton_poi_fused__native_batch_norm_legit_2_xnumel, grid=grid(triton_poi_fused__native_batch_norm_legit_2_xnumel), stream=stream0)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         del arg3_1
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         del buf3
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]         del buf4
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     return (reinterpret_tensor(buf6, (1, 32, s1*s2*s3), (32*s1*s2*s3, s1*s2*s3, 1), 0), )
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     arg0_1 = 64
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     arg1_1 = 64
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     arg2_1 = 64
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     arg3_1 = rand_strided((1, 32, 64, 64, 64), (8388608, 262144, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] if __name__ == "__main__":
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:53:29.541000 3201829 site-packages/torch/_inductor/graph.py:2014] [502/0_1] [__output_code] 
V0205 11:53:29.548000 3201829 site-packages/torch/_inductor/graph.py:2022] [502/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/go/cgoy54eht7rqbfuc4jzmfho4xpd7m2ewomnmqgloo2x3h6d4i7yg.py
I0205 11:53:29.798000 3201829 site-packages/torch/_inductor/graph.py:2056] [502/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/go/cgoy54eht7rqbfuc4jzmfho4xpd7m2ewomnmqgloo2x3h6d4i7yg.py

V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] Output code: 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # AOT ID: ['59_inference']
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import torch
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import math
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import random
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import os
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import tempfile
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from math import inf, nan
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from cmath import nanj
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch import device, empty_strided
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton.language as tl
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     grid,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     split_scan_grid,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     grid_combo_kernels,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     start_graph,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     end_graph,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     cooperative_reduction_grid,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] )
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] aten = torch.ops.aten
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] _quantized = torch.ops._quantized
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] async_compile = AsyncCompile()
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2u/c2uio5agy6zf3faddgdmtmmahogsytx7pojobedoblrtu6wecsqf.py
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.bernoulli]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Source node to ATen node mapping:
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   x_3 => inductor_lookup_seed_default, inductor_random_default_1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Graph fragment:
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 1, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] triton_poi_fused_bernoulli_0 = async_compile.triton('triton_poi_fused_bernoulli_0', '''
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton.language as tl
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] @triton_heuristics.pointwise(
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     size_hints={'x': 1}, 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     filename=__file__,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     min_elem_per_thread=0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] )
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] @triton.jit
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] def triton_poi_fused_bernoulli_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xnumel = 1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp2, None)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] ''', device_str='cuda')
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tf/ctfvvs4ia2uldv5lejm7tiihmdohe344fpxf6tebnnxg22vfnkew.py
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.bernoulli]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Source node to ATen node mapping:
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   x_8 => inductor_lookup_seed_default_1, inductor_random_default
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Graph fragment:
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 1, 1], %inductor_lookup_seed_default_1, rand), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] triton_poi_fused_bernoulli_1 = async_compile.triton('triton_poi_fused_bernoulli_1', '''
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton.language as tl
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] @triton_heuristics.pointwise(
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     size_hints={'x': 1}, 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     filename=__file__,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1, 'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2, 3)}, 'cls': 'AttrsDescriptor'})]},
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     min_elem_per_thread=0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] )
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] @triton.jit
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] def triton_poi_fused_bernoulli_1(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xnumel = 1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp2, None)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] ''', device_str='cuda')
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bg/cbguopnzzncjj6kozmjtfezyvrxccpjszhs5jd2v3kuthotvp6yb.py
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Topologically Sorted Source Nodes: [x_9, x_8], Original ATen: [aten.log_sigmoid_forward, aten.bernoulli, aten._to_copy, aten.div, aten.mul]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Source node to ATen node mapping:
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   x_8 => convert_element_type_1, div_3, lt_1, mul_38
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   x_9 => abs_2, exp_1, full_default_1, log1p_1, minimum_1, neg_1, sub_24
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] # Graph fragment:
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt_1, torch.float32), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Scalar](args = (%convert_element_type_1, 0.5), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %mul_38 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_1, %div_3), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %minimum_1 : [num_users=1] = call_function[target=torch.ops.aten.minimum.default](args = (%full_default_1, %squeeze_1), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %abs_2 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%squeeze_1,), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%abs_2,), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%neg_1,), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %log1p_1 : [num_users=1] = call_function[target=torch.ops.aten.log1p.default](args = (%exp_1,), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] #   %sub_24 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%minimum_1, %log1p_1), kwargs = {})
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2 = async_compile.triton('triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2', '''
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] import triton.language as tl
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] @triton_heuristics.pointwise(
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     size_hints={'x': 16384}, 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     filename=__file__,
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     min_elem_per_thread=0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] )
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] @triton.jit
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] def triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     xmask = xindex < xnumel
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     x0 = xindex
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (0))
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp13 = tl.broadcast_to(tmp12, [XBLOCK])
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp33 = tl.load(in_ptr2 + (0))
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp34 = tl.broadcast_to(tmp33, [XBLOCK])
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp1 = libdevice.tanh(tmp0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp3 = 3.0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp5 = 0.0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp7 = 6.0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp8 = triton_helpers.minimum(tmp6, tmp7)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp9 = tmp2 * tmp8
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp10 = 0.16666666666666666
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp11 = tmp9 * tmp10
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp14 = 0.5
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp15 = tmp13 < tmp14
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp17 = 2.0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp19 = tmp11 * tmp18
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp20 = triton_helpers.minimum(tmp5, tmp19)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp21 = tl_math.abs(tmp19)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp22 = -tmp21
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp23 = tl_math.exp(tmp22)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp24 = libdevice.log1p(tmp23)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp25 = tmp20 - tmp24
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp26 = libdevice.tanh(tmp25)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp27 = tmp25 - tmp26
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp28 = tmp27 + tmp3
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp28, tmp5)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp30 = triton_helpers.minimum(tmp29, tmp7)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp31 = tmp27 * tmp30
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp32 = tmp31 * tmp10
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp35 = tmp34 < tmp14
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp36 = tmp35.to(tl.float32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp37 = tmp36 * tmp17
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp38 = tmp32 * tmp37
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp39 = triton_helpers.minimum(tmp5, tmp38)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp40 = tl_math.abs(tmp38)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp41 = -tmp40
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp42 = tl_math.exp(tmp41)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp43 = libdevice.log1p(tmp42)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tmp44 = tmp39 - tmp43
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp44, xmask)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] ''', device_str='cuda')
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] async_compile.wait(globals())
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] del async_compile
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] def call(args):
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     args.clear()
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     s0 = arg0_1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     s1 = arg1_1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     s2 = arg2_1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         torch.cuda.set_device(0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         buf0 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         buf1 = empty_strided_cuda((1, 1, 1), (1, 1, 1), torch.float32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         # Topologically Sorted Source Nodes: [x_3], Original ATen: [aten.bernoulli]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         triton_poi_fused_bernoulli_0.run(buf0, buf1, 0, 1, grid=grid(1), stream=stream0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         buf2 = empty_strided_cuda((1, 1, 1), (1, 1, 1), torch.float32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         # Topologically Sorted Source Nodes: [x_8], Original ATen: [aten.bernoulli]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         triton_poi_fused_bernoulli_1.run(buf0, buf2, 1, 1, grid=grid(1), stream=stream0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         del buf0
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         buf3 = empty_strided_cuda((1, 1, s0*s1*s2), (s0*s1*s2, s0*s1*s2, 1), torch.float32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         buf4 = reinterpret_tensor(buf3, (1, s0*s1*s2), (s0*s1*s2, 1), 0); del buf3  # reuse
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         # Topologically Sorted Source Nodes: [x_9, x_8], Original ATen: [aten.log_sigmoid_forward, aten.bernoulli, aten._to_copy, aten.div, aten.mul]
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2_xnumel = s0*s1*s2
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2.run(buf4, arg3_1, buf1, buf2, triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2_xnumel, grid=grid(triton_poi_fused__to_copy_bernoulli_div_log_sigmoid_forward_mul_2_xnumel), stream=stream0)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         del arg3_1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         del buf1
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]         del buf2
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     return (buf4, )
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     arg0_1 = 3
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     arg1_1 = 64
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     arg2_1 = 64
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] if __name__ == "__main__":
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 14:31:09.465000 1612526 site-packages/torch/_inductor/graph.py:2014] [264/0] [__output_code] 
V0205 14:31:09.470000 1612526 site-packages/torch/_inductor/graph.py:2022] [264/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kh/ckhziskceye6rzlr73c5kyho6pfkz25efpadgbhofdspuhwyvzvb.py
I0205 14:31:09.647000 1612526 site-packages/torch/_inductor/graph.py:2056] [264/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/kh/ckhziskceye6rzlr73c5kyho6pfkz25efpadgbhofdspuhwyvzvb.py

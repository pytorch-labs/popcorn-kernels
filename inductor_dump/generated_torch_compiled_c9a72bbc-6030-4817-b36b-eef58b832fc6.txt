W0205 11:35:30.759000 3201829 site-packages/torch/_inductor/utils.py:1611] [444/0] DeviceCopy in input program
W0205 11:35:30.810000 3201829 site-packages/torch/_inductor/utils.py:1611] [444/0] DeviceCopy in input program
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] Output code: 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # AOT ID: ['123_inference']
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import torch
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import math
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import random
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import os
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import tempfile
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from math import inf, nan
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from cmath import nanj
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch import device, empty_strided
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import triton
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import triton.language as tl
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     grid,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     split_scan_grid,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     grid_combo_kernels,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     start_graph,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     end_graph,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     cooperative_reduction_grid,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] )
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] aten = torch.ops.aten
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] async_compile = AsyncCompile()
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] cpp_fused_randint_0 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'const int64_t', 'const int64_t'], '''
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                        int64_t* out_ptr0,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                        const int64_t ks0,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                        const int64_t ks1)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]             {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 auto tmp2 = static_cast<int64_t>(0);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 auto tmp3 = 4L*ks0*ks1;
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 auto tmp4 = c10::convert<int64_t>(tmp3);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 auto tmp5 = randint64_cpu(tmp0, tmp1, tmp2, tmp4);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 out_ptr0[static_cast<int64_t>(0L)] = tmp5;
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]             }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] ''')
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5y/c5yxdby7r456cj3cg23ku4vvrtahhdyoakg3bdl55hg3fbcrkkfy.py
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # Topologically Sorted Source Nodes: [loss1], Original ATen: [aten.arange, aten.ne, aten.gather, aten.rsub, aten.add, aten.clamp_min, aten.scalar_tensor, aten.where, aten.mean]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # Source node to ATen node mapping:
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   loss1 => add_14, clamp_min_1, full_default, gather, iota, mean, ne_4, sub_9, where_1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # Graph fragment:
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv_1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %ne_4 : [num_users=1] = call_function[target=torch.ops.aten.ne.Tensor](args = (%iota, %unsqueeze), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %gather : [num_users=1] = call_function[target=torch.ops.aten.gather.default](args = (%view_2, 1, %unsqueeze), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %gather), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_9, %view_2), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_14, 0), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_4, %clamp_min_1, %full_default), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where_1,), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] triton_red_fused_add_arange_clamp_min_gather_mean_ne_rsub_scalar_tensor_where_1 = async_compile.triton('triton_red_fused_add_arange_clamp_min_gather_mean_ne_rsub_scalar_tensor_where_1', '''
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import triton
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import triton.language as tl
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] @triton_heuristics.reduction(
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     filename=__file__,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (6,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_arange_clamp_min_gather_mean_ne_rsub_scalar_tensor_where_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] )
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] @triton.jit
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] def triton_red_fused_add_arange_clamp_min_gather_mean_ne_rsub_scalar_tensor_where_1(in_ptr0, in_ptr1, out_ptr1, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xnumel = 1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     rnumel = r0_numel
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     rbase = r0_base
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     _tmp38 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         roffset = r0_offset
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         rindex = r0_index
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_0 = r0_index
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp25 = tl.load(in_ptr1 + (ks2*((((((r0_0 // (2*ks2)) % (2*ks1))) // 2) % ks1)) + ks1*ks2*((((r0_0 % (2*ks2))) % 2)) + 2*ks1*ks2*(((((r0_0 // (2*ks2)) % (2*ks1))) % 2)) + (((((r0_0 % (2*ks2))) // 2) % ks2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp2 = r0_0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp3 = tmp2 != tmp1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp4 = 4*ks1*ks2*(ks0 // 4)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp5 = tmp1 + tmp4
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp6 = tmp1 < 0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp7 = tl.where(tmp6, tmp5, tmp1)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tl.device_assert((0 <= tmp7) & (tmp7 < 4*ks1*ks2*(ks0 // 4)), "index out of bounds: 0 <= tmp7 < 4*ks1*ks2*(ks0 // 4)")
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp9 = tl.load(in_ptr1 + (ks2*((((((tmp7 // (2*ks2)) % (2*ks1))) // 2) % ks1)) + ks1*ks2*((((tmp7 % (2*ks2))) % 2)) + 2*ks1*ks2*(((((tmp7 // (2*ks2)) % (2*ks1))) % 2)) + (((((tmp7 % (2*ks2))) // 2) % ks2))), None, eviction_policy='evict_last')
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp10 = 0.0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp11 = tmp9 > tmp10
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp12 = 0.1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp13 = tmp9 * tmp12
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp14 = tl.where(tmp11, tmp9, tmp13)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp15 = 3.0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp16 = tmp14 + tmp15
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp17 = triton_helpers.maximum(tmp16, tmp10)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp18 = 6.0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp19 = triton_helpers.minimum(tmp17, tmp18)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp20 = tmp14 * tmp19
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp21 = 0.16666666666666666
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp22 = tmp20 * tmp21
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp23 = 1.0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp24 = tmp23 - tmp22
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp26 = tmp25 > tmp10
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp27 = tmp25 * tmp12
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp28 = tl.where(tmp26, tmp25, tmp27)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp29 = tmp28 + tmp15
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp30 = triton_helpers.maximum(tmp29, tmp10)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp31 = triton_helpers.minimum(tmp30, tmp18)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp32 = tmp28 * tmp31
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp33 = tmp32 * tmp21
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp34 = tmp24 + tmp33
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp35 = triton_helpers.maximum(tmp34, tmp10)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp36 = tl.where(tmp3, tmp35, tmp10)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp37 = tl.broadcast_to(tmp36, [XBLOCK, R0_BLOCK])
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp39 = _tmp38 + tmp37
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         _tmp38 = tl.where(r0_mask, tmp39, _tmp38)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp38 = tl.sum(_tmp38, 1)[:, None]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp38, None)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] ''', device_str='cuda')
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] cpp_fused_randint_2 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'const int64_t', 'const int64_t', 'const int64_t'], '''
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                        int64_t* out_ptr0,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                        const int64_t ks0,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                        const int64_t ks1,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                        const int64_t ks2)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         #pragma GCC ivdep
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>((c10::div_floor_integer(static_cast<int64_t>(2L*ks1*ks2*(c10::div_floor_integer(static_cast<int64_t>(ks0), static_cast<int64_t>(2L*(c10::div_floor_integer(static_cast<int64_t>(ks0), static_cast<int64_t>(4L))))))), static_cast<int64_t>(static_cast<int64_t>(std::trunc(std::pow(static_cast<double>(4L*ks1*ks2), 0.5))))))*static_cast<int64_t>(std::trunc(std::pow(static_cast<double>(4L*ks1*ks2), 0.5)))); x0+=static_cast<int64_t>(1L))
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]             {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 {
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(1L)];
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                     auto tmp1 = x0;
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                     auto tmp3 = static_cast<int64_t>(0);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                     auto tmp4 = static_cast<int64_t>(1);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp5;
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]                 }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]             }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] }
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] ''')
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sc/csc2k4b4wsteluq3fz3ghayywzyiriflexierf4h3qd5t2idsen2.py
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # Topologically Sorted Source Nodes: [loss1, loss2, add], Original ATen: [aten.mean, aten.nll_loss2d_forward, aten.add]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # Source node to ATen node mapping:
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   add => add_35
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   loss1 => mean
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   loss2 => convert_element_type_2, div_1, full_default_2, ne_6, ne_7, neg, sum_1, sum_2, where_3
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] # Graph fragment:
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where_1,), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %ne_6 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%device_put_1, -100), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%squeeze,), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_6, %neg, %full_default_2), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%where_3,), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %ne_7 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%device_put_1, -100), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%ne_7,), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%sum_1, torch.float32), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_2, %convert_element_type_2), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] #   %add_35 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mean, %div_1), kwargs = {})
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] triton_red_fused_add_mean_nll_loss2d_forward_3 = async_compile.triton('triton_red_fused_add_mean_nll_loss2d_forward_3', '''
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import triton
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] import triton.language as tl
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] @triton_heuristics.reduction(
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     filename=__file__,
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': (7,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_mean_nll_loss2d_forward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] )
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] @triton.jit
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] def triton_red_fused_add_mean_nll_loss2d_forward_3(in_out_ptr0, in_ptr0, in_ptr1, ks0, ks1, ks2, ks3, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xnumel = 1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     rnumel = r0_numel
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     rbase = r0_base
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     _tmp27 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     _tmp33 = tl.full([XBLOCK, R0_BLOCK], 0, tl.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         roffset = r0_offset
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         rindex = r0_index
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_2 = r0_index
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_0 = (r0_index % ks0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         r0_1 = r0_index // ks0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_2), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp10 = tl.load(in_ptr1 + (ks2*(((((((r0_0 + r0_1*libdevice.trunc(libdevice.pow((4*ks1*ks2).to(tl.float64), tl.full([], 0.500000000000000, tl.float64))).to(tl.int32)) // (2*ks2)) % (2*ks1))) // 2) % ks1)) + ks1*ks2*(((((r0_0 + r0_1*libdevice.trunc(libdevice.pow((4*ks1*ks2).to(tl.float64), tl.full([], 0.500000000000000, tl.float64))).to(tl.int32)) % (2*ks2))) % 2)) + 2*ks1*ks2*((((((r0_0 + r0_1*libdevice.trunc(libdevice.pow((4*ks1*ks2).to(tl.float64), tl.full([], 0.500000000000000, tl.float64))).to(tl.int32)) // (2*ks2)) % (2*ks1))) % 2)) + ((((((r0_0 + r0_1*libdevice.trunc(libdevice.pow((4*ks1*ks2).to(tl.float64), tl.full([], 0.500000000000000, tl.float64))).to(tl.int32)) % (2*ks2))) // 2) % ks2))), r0_mask, eviction_policy='evict_last', other=0.0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp29 = tl.load(in_ptr0 + (r0_2), r0_mask, eviction_policy='evict_first', other=0.0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp1 = tl.full([1, 1], -100, tl.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp2 = tmp0 != tmp1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp3 = tl.full([1, 1], 0, tl.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp4 = tl.where(tmp2, tmp0, tmp3)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp5 = tl.full([XBLOCK, R0_BLOCK], 1, tl.int32)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp6 = tmp4 + tmp5
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp7 = tmp4 < 0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp8 = tl.where(tmp7, tmp6, tmp4)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tl.device_assert(((0 <= tmp8) & (tmp8 < 1)) | ~(r0_mask), "index out of bounds: 0 <= tmp8 < 1")
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp11 = 0.0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp12 = tmp10 > tmp11
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp13 = 0.1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp14 = tmp10 * tmp13
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp15 = tl.where(tmp12, tmp10, tmp14)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp16 = 3.0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp17 = tmp15 + tmp16
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp18 = triton_helpers.maximum(tmp17, tmp11)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp19 = 6.0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp20 = triton_helpers.minimum(tmp18, tmp19)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp21 = tmp15 * tmp20
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp22 = 0.16666666666666666
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp23 = tmp21 * tmp22
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp24 = -tmp23
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp25 = tl.where(tmp2, tmp24, tmp11)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp26 = tl.broadcast_to(tmp25, [XBLOCK, R0_BLOCK])
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp28 = _tmp27 + tmp26
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         _tmp27 = tl.where(r0_mask, tmp28, _tmp27)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp30 = tmp29 != tmp1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp31 = tmp30.to(tl.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp32 = tl.broadcast_to(tmp31, [XBLOCK, R0_BLOCK])
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         tmp34 = _tmp33 + tmp32
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         _tmp33 = tl.where(r0_mask, tmp34, _tmp33)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp27 = tl.sum(_tmp27, 1)[:, None]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp33 = tl.sum(_tmp33, 1)[:, None]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp35 = tl.load(in_out_ptr0 + (0))
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp36 = tl.broadcast_to(tmp35, [XBLOCK, 1])
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp37 = 2*ks1*ks2*(triton_helpers.div_floor_integer(ks3,  2*(ks3 // 4)))
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp38 = tmp37.to(tl.float32)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp39 = tmp36 / tmp38
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp40 = tmp33.to(tl.float32)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp41 = tmp27 / tmp40
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tmp42 = tmp39 + tmp41
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tl.debug_barrier()
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp42, None)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] ''', device_str='cuda')
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] async_compile.wait(globals())
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] del async_compile
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] def call(args):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     args.clear()
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     s0 = arg0_1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     s1 = arg1_1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     s2 = arg2_1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     buf0 = empty_strided_cpu((2, ), (1, ), torch.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     buf1 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     cpp_fused_randint_0(buf0, buf1, s1, s2)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         buf2 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         buf2.copy_(buf1, False)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         del buf1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         # Topologically Sorted Source Nodes: [loss1], Original ATen: [aten.arange, aten.ne, aten.gather, aten.rsub, aten.add, aten.clamp_min, aten.scalar_tensor, aten.where, aten.mean]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         triton_red_fused_add_arange_clamp_min_gather_mean_ne_rsub_scalar_tensor_where_1_r0_numel = 2*s1*s2*(s0 // (2*(s0 // 4)))
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         triton_red_fused_add_arange_clamp_min_gather_mean_ne_rsub_scalar_tensor_where_1.run(buf2, arg3_1, buf4, s0, s1, s2, 1, triton_red_fused_add_arange_clamp_min_gather_mean_ne_rsub_scalar_tensor_where_1_r0_numel, grid=grid(1), stream=stream0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         del buf2
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     buf5 = empty_strided_cpu((1, math.trunc(torch.sym_float(4*s1*s2) ** 0.5), (2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5))), (((2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5)))*math.trunc(torch.sym_float(4*s1*s2) ** 0.5), (2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5)), 1), torch.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     cpp_fused_randint_2(buf0, buf5, s0, s1, s2)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     del buf0
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         buf6 = empty_strided_cuda((1, math.trunc(torch.sym_float(4*s1*s2) ** 0.5), (2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5))), (((2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5)))*math.trunc(torch.sym_float(4*s1*s2) ** 0.5), (2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5)), 1), torch.int64)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         buf6.copy_(buf5, False)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         del buf5
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         ps0 = (2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5))
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         buf9 = buf4; del buf4  # reuse
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         # Topologically Sorted Source Nodes: [loss1, loss2, add], Original ATen: [aten.mean, aten.nll_loss2d_forward, aten.add]
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         triton_red_fused_add_mean_nll_loss2d_forward_3_r0_numel = ((2*s1*s2*(s0 // (2*(s0 // 4)))) // (math.trunc(torch.sym_float(4*s1*s2) ** 0.5)))*math.trunc(torch.sym_float(4*s1*s2) ** 0.5)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         triton_red_fused_add_mean_nll_loss2d_forward_3.run(buf9, buf6, arg3_1, ps0, s1, s2, s0, 1, triton_red_fused_add_mean_nll_loss2d_forward_3_r0_numel, grid=grid(1), stream=stream0)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         del arg3_1
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]         del buf6
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     return (buf9, )
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     arg0_1 = 4
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     arg1_1 = 16
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     arg2_1 = 16
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     arg3_1 = rand_strided((1, 4, 16, 16), (1024, 256, 16, 1), device='cuda:0', dtype=torch.float32)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] if __name__ == "__main__":
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:35:31.769000 3201829 site-packages/torch/_inductor/graph.py:2014] [444/0] [__output_code] 
V0205 11:35:31.776000 3201829 site-packages/torch/_inductor/graph.py:2022] [444/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4v/c4v5woty5ifoxik3dnljdkstgzhflvlfapkc5end3ijm5elro3rc.py
I0205 11:35:32.993000 3201829 site-packages/torch/_inductor/graph.py:2056] [444/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4v/c4v5woty5ifoxik3dnljdkstgzhflvlfapkc5end3ijm5elro3rc.py

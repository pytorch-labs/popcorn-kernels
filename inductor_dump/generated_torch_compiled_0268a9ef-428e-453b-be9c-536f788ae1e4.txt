V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] Output code: 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] # AOT ID: ['10_inference']
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] import torch
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] import math
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] import random
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] import os
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] import tempfile
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from math import inf, nan
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from cmath import nanj
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from torch import device, empty_strided
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] aten = torch.ops.aten
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] _quantized = torch.ops._quantized
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] async_compile = AsyncCompile()
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] async_compile.wait(globals())
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] del async_compile
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] def call(args):
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     args.clear()
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     s0 = arg0_1
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     s1 = arg1_1
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     s2 = arg2_1
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     return (reinterpret_tensor(arg3_1, (1, s0*s1*s2), (s0*s1*s2, 1), 0), )
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     arg0_1 = 3
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     arg1_1 = 64
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     arg2_1 = 64
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] if __name__ == "__main__":
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0124 17:38:02.503000 1685906 site-packages/torch/_inductor/graph.py:2014] [33/0_1] [__output_code] 
V0124 17:38:02.504000 1685906 site-packages/torch/_inductor/graph.py:2022] [33/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4c/c4cklbajpeepsecufwugjmfip7lre5u245pd3yzux6aa7etnp74v.py
I0124 17:38:02.505000 1685906 site-packages/torch/_inductor/graph.py:2056] [33/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/4c/c4cklbajpeepsecufwugjmfip7lre5u245pd3yzux6aa7etnp74v.py
W0124 17:38:02.506000 1685906 site-packages/torch/_functorch/_aot_autograd/autograd_cache.py:887] [33/0_1] Bypassing autograd cache due to: Cannot cache a graph with functional tensor

V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] Output code: 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] # AOT ID: ['49_inference']
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import torch
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import math
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import random
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import os
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import tempfile
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from math import inf, nan
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from cmath import nanj
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch import device, empty_strided
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import triton
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import triton.language as tl
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     grid,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     split_scan_grid,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     grid_combo_kernels,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     start_graph,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     end_graph,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     cooperative_reduction_grid,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] )
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] aten = torch.ops.aten
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] async_compile = AsyncCompile()
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fn/cfn6ktyp6lcsj5wrd5eexlkaq7oefquqizglgqg4etus2bnin432.py
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] # Source node to ATen node mapping:
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] #   x_1 => add_6, mul_9, rsqrt, sub_2, var_mean
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] # Graph fragment:
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%view_1, [0, 2]), kwargs = {correction: 0, keepdim: True})
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_1, %getitem_1), kwargs = {})
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] #   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_6,), kwargs = {})
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt), kwargs = {})
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] triton_red_fused__native_batch_norm_legit_0 = async_compile.triton('triton_red_fused__native_batch_norm_legit_0', '''
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import triton
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] import triton.language as tl
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] @triton_heuristics.reduction(
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     size_hints={'x': 128, 'r0_': 4096},
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     filename=__file__,
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__native_batch_norm_legit_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] )
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] @triton.jit
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] def triton_red_fused__native_batch_norm_legit_0(in_ptr0, out_ptr2, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     xnumel = 128
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     rnumel = r0_numel
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     xmask = xindex < xnumel
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     rbase = r0_base
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     x0 = xindex
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     tmp2_mean = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     tmp2_m2 = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     tmp2_weight = tl.zeros([XBLOCK, R0_BLOCK], tl.float32)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         roffset = r0_offset
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         rindex = r0_index
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         r0_1 = r0_index
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp2_mean_next, tmp2_m2_next, tmp2_weight_next = triton_helpers.welford_reduce(
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]             tmp1, tmp2_mean, tmp2_m2, tmp2_weight, roffset == 0
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         )
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp2_mean = tl.where(r0_mask & xmask, tmp2_mean_next, tmp2_mean)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp2_m2 = tl.where(r0_mask & xmask, tmp2_m2_next, tmp2_m2)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp2_weight = tl.where(r0_mask & xmask, tmp2_weight_next, tmp2_weight)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     tmp5, tmp6, tmp7 = triton_helpers.welford(tmp2_mean, tmp2_m2, tmp2_weight, 1)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     tmp2 = tmp5[:, None]
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     tmp3 = tmp6[:, None]
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     tmp4 = tmp7[:, None]
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         roffset = r0_offset
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         rindex = r0_index
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         r0_1 = r0_index
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp8 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp9 = tmp8 - tmp2
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp10 = ks0*ks1
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp11 = tmp10.to(tl.float32)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp12 = tmp3 / tmp11
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp13 = 1e-05
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp14 = tmp12 + tmp13
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp15 = libdevice.rsqrt(tmp14)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tmp16 = tmp9 * tmp15
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         tl.store(out_ptr2 + (r0_1 + ks0*ks1*x0), tmp16, r0_mask & xmask)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] ''', device_str='cuda')
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] async_compile.wait(globals())
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] del async_compile
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] def call(args):
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     args.clear()
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     s1 = arg0_1
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     s2 = arg1_1
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     assert_size_stride(arg2_1, (1, 128, s1, s2), (128*s1*s2, s1*s2, s2, 1))
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 128, s1*s2), (128*s1*s2, s1*s2, 1), torch.float32)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit]
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_0_r0_numel = s1*s2
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         triton_red_fused__native_batch_norm_legit_0.run(arg2_1, buf3, s1, s2, 128, triton_red_fused__native_batch_norm_legit_0_r0_numel, grid=grid(128), stream=stream0)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]         del arg2_1
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     return (reinterpret_tensor(buf3, (1, s1*s2, 128), (128*s1*s2, 1, s1*s2), 0), s1, s2, )
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     arg0_1 = 64
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     arg1_1 = 64
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     arg2_1 = rand_strided((1, 128, 64, 64), (524288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] if __name__ == "__main__":
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 20:54:09.942000 2742634 site-packages/torch/_inductor/graph.py:2014] [215/0_1] [__output_code] 
V0204 20:54:09.944000 2742634 site-packages/torch/_inductor/graph.py:2022] [215/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tt/cttfhun5qcyzp7tblcylyaxxwuihogh4yfh524wqfqkaqfc2acob.py
I0204 20:54:10.065000 2742634 site-packages/torch/_inductor/graph.py:2056] [215/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/tt/cttfhun5qcyzp7tblcylyaxxwuihogh4yfh524wqfqkaqfc2acob.py

V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] Output code: 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # AOT ID: ['46_forward']
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import torch
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import random
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import os
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import tempfile
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from math import inf, nan
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from cmath import nanj
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch import device, empty_strided
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     grid,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     split_scan_grid,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     grid_combo_kernels,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     start_graph,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     end_graph,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     cooperative_reduction_grid,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] aten = torch.ops.aten
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] async_compile = AsyncCompile()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sx/csxifek32ujdtjupm4343nx6y4scdpyuyglwqqwa3j3lzloyrqw5.py
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.bernoulli]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x_1 => inductor_lookup_seed_default, inductor_random_default_1, lt
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 16, 1, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %lt : [num_users=2] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default_1, 0.5), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_poi_fused_bernoulli_0 = async_compile.triton('triton_poi_fused_bernoulli_0', '''
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 16}, 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i1', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     min_elem_per_thread=0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_poi_fused_bernoulli_0(in_ptr0, out_ptr1, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xnumel = 16
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x0 = xindex
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp1 = x0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp3 = 0.5
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp4 = tmp2 < tmp3
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6y/c6y6x4ncvynni4fkv7kxa6xprdxsa7rwdr536hcvhwraj5tpj23m.py
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d, x, x_1], Original ATen: [aten.convolution, aten.relu, aten._to_copy, aten.div, aten.mul, aten.threshold_backward]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   conv2d => convolution
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x => relu
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x_1 => convert_element_type, div, mul_14
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %convolution : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_5, %primals_1, %primals_2, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution,), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt, torch.float32), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Scalar](args = (%convert_element_type, 0.5), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %mul_14 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%relu, %div), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %le_3 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1 = async_compile.triton('triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1', '''
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 65536}, 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*i1', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     min_elem_per_thread=0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x2 = xindex
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x1 = xindex // ks0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last').to(tl.int1)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp7 = 2.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp8 = tmp6 * tmp7
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp9 = tmp4 * tmp8
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp10 = 0.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp11 = tmp4 <= tmp10
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp11, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/t2/ct2udav7hr26s5qitxntngtp3xiitbnskmrqnquirygtqq4rbedc.py
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [conv2d_1, x_2], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   conv2d_1 => convolution_1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x_2 => relu_1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %convolution_1 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%mul_14, %primals_6, %primals_7, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_1,), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_1, 0), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_2 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_2', '''
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 131072}, 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     min_elem_per_thread=0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_2(in_out_ptr0, in_ptr0, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x2 = xindex
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x1 = xindex // ks0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp5 = 0.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rb/crbdvoomzn45vmqjibrrv2e5j6epv42pfin4afdwhme4chl5lisd.py
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [conv_transpose3d, x_4], Original ATen: [aten.convolution, aten.relu]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   conv_transpose3d => convolution_2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x_4 => relu_2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %convolution_2 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze, %primals_8, %primals_9, [1, 1, 1], [1, 1, 1], [1, 1, 1], True, [0, 0, 0], 1), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_2,), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_poi_fused_convolution_relu_3 = async_compile.triton('triton_poi_fused_convolution_relu_3', '''
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 262144}, 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     min_elem_per_thread=0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_poi_fused_convolution_relu_3(in_out_ptr0, in_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x2 = xindex
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x1 = xindex // ks0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ph/cph4od5m6dprgf7o2whpbmag7jl6jq336i3lkb2f4wgqqgpn5zhd.py
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.bernoulli]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x_7 => inductor_lookup_seed_default_1, inductor_random_default, lt_1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 128, 1, 1], %inductor_lookup_seed_default_1, rand), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %lt_1 : [num_users=2] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_poi_fused_bernoulli_4 = async_compile.triton('triton_poi_fused_bernoulli_4', '''
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 128}, 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i1', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     min_elem_per_thread=0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_poi_fused_bernoulli_4(in_ptr0, out_ptr1, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xnumel = 128
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x0 = xindex
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp1 = x0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp3 = 0.5
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp4 = tmp2 < tmp3
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oz/cozdhbvz2hcvmlyiahrh7orvb5xjeirqcpxvw5sixodbvcqhquwl.py
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [conv_transpose3d_1, x_5], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   conv_transpose3d_1 => convolution_3
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x_5 => relu_3
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_2, %primals_10, %primals_11, [1, 1, 1], [1, 1, 1], [1, 1, 1], True, [0, 0, 0], 1), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %relu_3 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%convolution_3,), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_3, 0), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_poi_fused_convolution_relu_threshold_backward_5 = async_compile.triton('triton_poi_fused_convolution_relu_threshold_backward_5', '''
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 524288}, 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_relu_threshold_backward_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     min_elem_per_thread=0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_poi_fused_convolution_relu_threshold_backward_5(in_ptr0, in_ptr1, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x2 = xindex
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x1 = xindex // ks0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tmp0 + tmp1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp5 = 0.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4k/c4kunlkzdr5ypbgd4pewfkn3fqet5n4il4xwtpwhtcnm4kcwm635.py
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.sub, aten.neg, aten.mul, aten.add, aten.clamp_min, aten.mean, aten.ge]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   loss => add_98, clamp_min, full_default, mean, mul_107, sub_47
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %sub_47 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_5, %select_8), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1], -1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %mul_107 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default, %sub_47), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %add_98 : [num_users=2] = call_function[target=torch.ops.aten.add.Scalar](args = (%mul_107, 0.0), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_98, 0), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%clamp_min,), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%add_98, 0), kwargs = {})
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_poi_fused_add_clamp_min_ge_mean_mul_neg_sub_6 = async_compile.triton('triton_poi_fused_add_clamp_min_ge_mean_mul_neg_sub_6', '''
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.pointwise(
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 1}, 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*i1', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_min_ge_mean_mul_neg_sub_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     min_elem_per_thread=0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_poi_fused_add_clamp_min_ge_mean_mul_neg_sub_6(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xnumel = 1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (0))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp3 = tl.broadcast_to(tmp2, [XBLOCK])
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp7 = tl.load(in_ptr2 + (0)).to(tl.int1)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK])
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp14 = tl.broadcast_to(tmp13, [XBLOCK])
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp4 = tmp1 + tmp3
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp5 = tl.full([1], 0, tl.int32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp9 = tmp8.to(tl.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp10 = 2.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp11 = tmp9 * tmp10
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp12 = tmp6 * tmp11
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp15 = tmp14 + tmp3
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp16 = triton_helpers.maximum(tmp5, tmp15)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp17 = tmp16 * tmp11
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp18 = tmp12 - tmp17
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp19 = -1.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp20 = tmp19 * tmp18
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp21 = 0.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp22 = tmp20 + tmp21
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp21)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp24 = 1.0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp25 = tmp23 / tmp24
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp26 = tmp22 >= tmp21
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp25, None)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp26, None)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] async_compile.wait(globals())
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] del async_compile
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def call(args):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11 = args
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     args.clear()
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     s1 = primals_3
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     s2 = primals_4
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_6, (32, 16, 3, 3), (144, 9, 3, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_7, (32, ), (1, ))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_8, (32, 64, 3, 3, 3), (1728, 27, 9, 3, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_10, (64, 128, 3, 3, 3), (3456, 27, 9, 3, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_11, (128, ), (1, ))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d], Original ATen: [aten.convolution]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf0 = extern_kernels.convolution(primals_5, primals_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         assert_size_stride(buf0, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf1 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf1)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf3 = empty_strided_cuda((1, 16, 1, 1), (16, 1, 1, 1), torch.bool)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.bernoulli]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_bernoulli_0.run(buf1, buf3, 0, 16, grid=grid(16), stream=stream0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         ps0 = s1*s2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf4 = empty_strided_cuda((1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1), torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf14 = empty_strided_cuda((1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1), torch.bool)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d, x, x_1], Original ATen: [aten.convolution, aten.relu, aten._to_copy, aten.div, aten.mul, aten.threshold_backward]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1_xnumel = 16*s1*s2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1.run(buf0, primals_2, buf3, buf4, buf14, ps0, triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1_xnumel, grid=grid(triton_poi_fused__to_copy_convolution_div_mul_relu_threshold_backward_1_xnumel), stream=stream0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf0
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf5 = extern_kernels.convolution(buf4, primals_6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         assert_size_stride(buf5, (1, 32, s1, s2), (32*s1*s2, s1*s2, s2, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf6 = buf5; del buf5  # reuse
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf13 = empty_strided_cuda((1, 32, s1, s2), (32*s1*s2, s1*s2, s2, 1), torch.bool)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1, x_2], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_2_xnumel = 32*s1*s2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_2.run(buf6, primals_7, buf13, ps0, triton_poi_fused_convolution_relu_threshold_backward_2_xnumel, grid=grid(triton_poi_fused_convolution_relu_threshold_backward_2_xnumel), stream=stream0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_7
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_transpose3d], Original ATen: [aten.convolution]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf7 = extern_kernels.convolution(reinterpret_tensor(buf6, (1, 32, 1, s1, s2), (0, s1*s2, 0, s2, 1), 0), primals_8, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=True, output_padding=(0, 0, 0), groups=1, bias=None)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         assert_size_stride(buf7, (1, 64, 1, s1, s2), (64*s1*s2, s1*s2, s1*s2, s2, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf8 = buf7; del buf7  # reuse
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_transpose3d, x_4], Original ATen: [aten.convolution, aten.relu]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_convolution_relu_3_xnumel = 64*s1*s2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_convolution_relu_3.run(buf8, primals_9, ps0, triton_poi_fused_convolution_relu_3_xnumel, grid=grid(triton_poi_fused_convolution_relu_3_xnumel), stream=stream0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_9
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_transpose3d_1], Original ATen: [aten.convolution]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf9 = extern_kernels.convolution(buf8, primals_10, stride=(1, 1, 1), padding=(1, 1, 1), dilation=(1, 1, 1), transposed=True, output_padding=(0, 0, 0), groups=1, bias=None)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         assert_size_stride(buf9, (1, 128, 1, s1, s2), (128*s1*s2, s1*s2, s1*s2, s2, 1))
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf11 = empty_strided_cuda((1, 128, 1, 1), (128, 1, 1, 1), torch.bool)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7], Original ATen: [aten.bernoulli]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_bernoulli_4.run(buf1, buf11, 1, 128, grid=grid(128), stream=stream0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf1
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf12 = empty_strided_cuda((1, 128, 1, s1, s2), (128*s1*s2, s1*s2, s1*s2, s2, 1), torch.bool)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [conv_transpose3d_1, x_5], Original ATen: [aten.convolution, aten.relu, aten.threshold_backward]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5_xnumel = 128*s1*s2
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_convolution_relu_threshold_backward_5.run(buf9, primals_11, buf12, ps0, triton_poi_fused_convolution_relu_threshold_backward_5_xnumel, grid=grid(triton_poi_fused_convolution_relu_threshold_backward_5_xnumel), stream=stream0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf16 = empty_strided_cuda((1, ), (1, ), torch.bool)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.sub, aten.neg, aten.mul, aten.add, aten.clamp_min, aten.mean, aten.ge]
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_poi_fused_add_clamp_min_ge_mean_mul_neg_sub_6.run(buf9, primals_11, buf11, buf15, buf16, 1, grid=grid(1), stream=stream0)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf9
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_11
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     return (buf15, primals_1, primals_5, primals_6, primals_8, primals_10, buf3, buf4, reinterpret_tensor(buf6, (1, 32, 1, s1, s2), (32*s1*s2, s1*s2, s1*s2, s2, 1), 0), buf8, buf11, buf16, buf12, buf13, buf14, s1, s2, )
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_3 = 64
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_4 = 64
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_5 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_6 = rand_strided((32, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_7 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_8 = rand_strided((32, 64, 3, 3, 3), (1728, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_10 = rand_strided((64, 128, 3, 3, 3), (3456, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_11 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11])
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] if __name__ == "__main__":
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:32:07.611000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:07.622000 703210 site-packages/torch/_inductor/graph.py:2022] [210/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5x/c5x5isuqy2aesfuiahrym4pp5nukubsh2fxy7dl3ueainecmjomk.py
I0127 11:32:07.950000 703210 site-packages/torch/_inductor/graph.py:2056] [210/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/5x/c5x5isuqy2aesfuiahrym4pp5nukubsh2fxy7dl3ueainecmjomk.py
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] Output code: 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # AOT ID: ['46_backward']
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import torch
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import math
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import random
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import os
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import tempfile
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from math import inf, nan
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from cmath import nanj
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch import device, empty_strided
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     grid,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     split_scan_grid,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     grid_combo_kernels,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     start_graph,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     end_graph,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     cooperative_reduction_grid,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] aten = torch.ops.aten
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] _quantized = torch.ops._quantized
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] async_compile = AsyncCompile()
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sv/csvo3anv2j5bfte72r66lt6jjdddvrybjgxtkolnk7bmdihto5lh.py
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.scalar_tensor, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %full_default_1 : [num_users=5] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %where_1 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%le, %full_default_1, %unsqueeze_1), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_1, [0, 2, 3, 4]), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_0 = async_compile.triton('triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_0', '''
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.reduction(
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 128, 'r0_': 4096},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i1', 'in_ptr1': '*i1', 'in_ptr2': '*fp32', 'in_ptr3': '*i1', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, out_ptr1, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xnumel = 128
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rnumel = r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rbase = r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x0 = xindex
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (0)).to(tl.int1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp10 = tl.broadcast_to(tmp9, [XBLOCK, R0_BLOCK])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (0))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp12 = tl.broadcast_to(tmp11, [XBLOCK, R0_BLOCK])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp28 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last').to(tl.int1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     _tmp35 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         roffset = r0_offset
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         rindex = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_3 = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_2 = r0_index // ks1
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_1 = (r0_index % ks1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_3 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_last', other=0.0).to(tl.int1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp1 = x0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp2 = tl.full([1, 1], 0, tl.int32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp3 = tmp1 == tmp2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp4 = r0_2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp5 = tmp4 == tmp2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp6 = r0_1
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp7 = tl.full([1, 1], 1, tl.int32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp8 = tmp6 == tmp7
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp13 = 1.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp14 = tmp12 * tmp13
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp15 = 0.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp16 = tl.where(tmp10, tmp14, tmp15)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp17 = -1.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp18 = tmp16 * tmp17
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp19 = -tmp18
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp20 = tl.where(tmp8, tmp19, tmp15)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp21 = tl.where(tmp5, tmp20, tmp15)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp22 = tl.where(tmp3, tmp21, tmp15)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp23 = tmp6 == tmp2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp24 = tl.where(tmp23, tmp18, tmp15)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp25 = tl.where(tmp5, tmp24, tmp15)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp26 = tl.where(tmp3, tmp25, tmp15)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp27 = tmp22 + tmp26
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp29 = tmp28.to(tl.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp30 = 2.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp31 = tmp29 * tmp30
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp32 = tmp27 * tmp31
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp33 = tl.where(tmp0, tmp15, tmp32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp34 = tl.broadcast_to(tmp33, [XBLOCK, R0_BLOCK])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp36 = _tmp35 + tmp34
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         _tmp35 = tl.where(r0_mask & xmask, tmp36, _tmp35)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tl.store(out_ptr0 + (r0_3 + ks0*ks1*x0), tmp33, r0_mask & xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp35 = tl.sum(_tmp35, 1)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp35, xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/n3/cn3cxa5cxdr26u26xh2cf65a3hmlwfndrah5lfz67mq65psovkop.py
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.scalar_tensor, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %full_default_1 : [num_users=5] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu_2, 0), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %where_2 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%le_1, %full_default_1, %getitem), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_2, [0, 2, 3, 4]), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_1 = async_compile.triton('triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_1', '''
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.reduction(
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 64, 'r0_': 4096},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_1(in_out_ptr0, in_ptr0, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xnumel = 64
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rnumel = r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rbase = r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x0 = xindex
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     _tmp6 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         roffset = r0_offset
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         rindex = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_1 = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp0 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp1 = 0.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp2 = tmp0 <= tmp1
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp4 = tl.where(tmp2, tmp1, tmp3)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp5 = tl.broadcast_to(tmp4, [XBLOCK, R0_BLOCK])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp7 = _tmp6 + tmp5
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         _tmp6 = tl.where(r0_mask & xmask, tmp7, _tmp6)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp4, r0_mask & xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp6 = tl.sum(_tmp6, 1)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xp/cxppg2k6koine7dxfjradlgdy2n6rbfvnv42j6x2wpesscu3iukg.py
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.scalar_tensor, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %full_default_1 : [num_users=5] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %where_3 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%le_2, %full_default_1, %squeeze_1), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_3, [0, 2, 3]), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_2 = async_compile.triton('triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_2', '''
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.reduction(
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 32, 'r0_': 4096},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i1', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_2(in_out_ptr0, in_ptr0, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xnumel = 32
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rnumel = r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rbase = r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x0 = xindex
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     _tmp5 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         roffset = r0_offset
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         rindex = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_1 = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp1 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp2 = 0.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp3 = tl.where(tmp0, tmp2, tmp1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp4 = tl.broadcast_to(tmp3, [XBLOCK, R0_BLOCK])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp6 = _tmp5 + tmp4
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         _tmp5 = tl.where(r0_mask & xmask, tmp6, _tmp5)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp3, r0_mask & xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp5 = tl.sum(_tmp5, 1)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bc/cbc5tb6retbrncpymrfclfjpv6fiddkiprwigarg2brlpwpc3p6k.py
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.scalar_tensor, aten._to_copy, aten.div, aten.mul, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Source node to ATen node mapping:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   x_1 => convert_element_type, div
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] # Graph fragment:
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %full_default_1 : [num_users=5] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%lt, torch.float32), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Scalar](args = (%convert_element_type, 0.5), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %mul_110 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%getitem_6, %div), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %where_4 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%le_3, %full_default_1, %mul_110), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_4, [0, 2, 3]), kwargs = {})
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_red_fused__to_copy_convolution_backward_div_mul_scalar_tensor_threshold_backward_3 = async_compile.triton('triton_red_fused__to_copy_convolution_backward_div_mul_scalar_tensor_threshold_backward_3', '''
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] import triton.language as tl
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton_heuristics.reduction(
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     size_hints={'x': 16, 'r0_': 4096},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     filename=__file__,
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i1', 'in_ptr1': '*i1', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__to_copy_convolution_backward_div_mul_scalar_tensor_threshold_backward_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] )
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] @triton.jit
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def triton_red_fused__to_copy_convolution_backward_div_mul_scalar_tensor_threshold_backward_3(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, ks0, ks1, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xnumel = 16
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rnumel = r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     xmask = xindex < xnumel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     rbase = r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     x0 = xindex
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last').to(tl.int1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     _tmp10 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         roffset = r0_offset
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         rindex = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         r0_1 = r0_index
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0).to(tl.int1)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp1 = tl.load(in_out_ptr0 + (r0_1 + ks0*ks1*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp3 = tmp2.to(tl.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp4 = 2.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp5 = tmp3 * tmp4
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp6 = tmp1 * tmp5
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp7 = 0.0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp8 = tl.where(tmp0, tmp7, tmp6)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp9 = tl.broadcast_to(tmp8, [XBLOCK, R0_BLOCK])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tmp11 = _tmp10 + tmp9
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         _tmp10 = tl.where(r0_mask & xmask, tmp11, _tmp10)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         tl.store(in_out_ptr0 + (r0_1 + ks0*ks1*x0), tmp8, r0_mask & xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tmp10 = tl.sum(_tmp10, 1)[:, None]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp10, xmask)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] ''', device_str='cuda')
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] async_compile.wait(globals())
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] del async_compile
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def call(args):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_3, primals_4, primals_1, primals_5, primals_6, primals_8, primals_10, lt, mul_14, unsqueeze, relu_2, lt_1, ge, le, le_2, le_3, tangents_1 = args
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     args.clear()
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     s1 = primals_3
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     s2 = primals_4
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_1, (16, 3, 3, 3), (27, 9, 3, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_5, (1, 3, s1, s2), (3*s1*s2, s1*s2, s2, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_6, (32, 16, 3, 3), (144, 9, 3, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_8, (32, 64, 3, 3, 3), (1728, 27, 9, 3, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(primals_10, (64, 128, 3, 3, 3), (3456, 27, 9, 3, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(lt, (1, 16, 1, 1), (16, 1, 1, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(mul_14, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(unsqueeze, (1, 32, 1, s1, s2), (32*s1*s2, s1*s2, s1*s2, s2, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(relu_2, (1, 64, 1, s1, s2), (64*s1*s2, s1*s2, s1*s2, s2, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(lt_1, (1, 128, 1, 1), (128, 1, 1, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(ge, (1, ), (1, ))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(le, (1, 128, 1, s1, s2), (128*s1*s2, s1*s2, s1*s2, s2, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(le_2, (1, 32, s1, s2), (32*s1*s2, s1*s2, s2, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(le_3, (1, 16, s1, s2), (16*s1*s2, s1*s2, s2, 1))
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     assert_size_stride(tangents_1, (), ())
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         torch.cuda.set_device(0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf0 = empty_strided_cuda((1, 128, 1, s1, s2), (128*s1*s2, s1*s2, s1*s2, s2, 1), torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf1 = empty_strided_cuda((128, ), (1, ), torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.scalar_tensor, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_0_r0_numel = s1*s2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_0.run(le, ge, tangents_1, lt_1, buf0, buf1, s1, s2, 128, triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_0_r0_numel, grid=grid(128), stream=stream0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del ge
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del le
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del lt_1
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del tangents_1
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf2 = torch.ops.aten.convolution_backward.default(buf0, relu_2, primals_10, [128], [1, 1, 1], [1, 1, 1], [1, 1, 1], True, [0, 0, 0], 1, [True, True, False])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf0
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_10
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf3 = buf2[0]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf4 = buf2[1]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf5 = relu_2; del relu_2  # reuse
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf6 = empty_strided_cuda((64, ), (1, ), torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.scalar_tensor, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_1_r0_numel = s1*s2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_1.run(buf5, buf3, buf6, s1, s2, 64, triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_1_r0_numel, grid=grid(64), stream=stream0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf3
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf7 = torch.ops.aten.convolution_backward.default(buf5, unsqueeze, primals_8, [64], [1, 1, 1], [1, 1, 1], [1, 1, 1], True, [0, 0, 0], 1, [True, True, False])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf5
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_8
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del unsqueeze
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf8 = buf7[0]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf9 = buf7[1]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf7
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf10 = reinterpret_tensor(buf8, (1, 32, s1, s2), (32*s1*s2, s1*s2, s2, 1), 0); del buf8  # reuse
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf11 = empty_strided_cuda((32, ), (1, ), torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.scalar_tensor, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_2_r0_numel = s1*s2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_2.run(buf10, le_2, buf11, s1, s2, 32, triton_red_fused_convolution_backward_scalar_tensor_threshold_backward_2_r0_numel, grid=grid(32), stream=stream0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del le_2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf12 = torch.ops.aten.convolution_backward.default(buf10, mul_14, primals_6, [32], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf10
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del mul_14
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_6
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf13 = buf12[0]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf14 = buf12[1]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf12
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf15 = buf13; del buf13  # reuse
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf16 = empty_strided_cuda((16, ), (1, ), torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.scalar_tensor, aten._to_copy, aten.div, aten.mul, aten.threshold_backward, aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused__to_copy_convolution_backward_div_mul_scalar_tensor_threshold_backward_3_r0_numel = s1*s2
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         triton_red_fused__to_copy_convolution_backward_div_mul_scalar_tensor_threshold_backward_3.run(buf15, le_3, lt, buf16, s1, s2, 16, triton_red_fused__to_copy_convolution_backward_div_mul_scalar_tensor_threshold_backward_3_r0_numel, grid=grid(16), stream=stream0)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del le_3
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del lt
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf17 = torch.ops.aten.convolution_backward.default(buf15, primals_5, primals_1, [16], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf15
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_1
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del primals_5
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         buf18 = buf17[1]
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]         del buf17
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     return (buf18, buf16, None, None, None, buf14, buf11, buf9, buf6, buf4, buf1, )
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_3 = 64
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_4 = 64
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_1 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_5 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_6 = rand_strided((32, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_8 = rand_strided((32, 64, 3, 3, 3), (1728, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     primals_10 = rand_strided((64, 128, 3, 3, 3), (3456, 27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     lt = rand_strided((1, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.bool)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     mul_14 = rand_strided((1, 16, 64, 64), (65536, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     unsqueeze = rand_strided((1, 32, 1, 64, 64), (131072, 4096, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     relu_2 = rand_strided((1, 64, 1, 64, 64), (262144, 4096, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     lt_1 = rand_strided((1, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.bool)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     ge = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.bool)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     le = rand_strided((1, 128, 1, 64, 64), (524288, 4096, 4096, 64, 1), device='cuda:0', dtype=torch.bool)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     le_2 = rand_strided((1, 32, 64, 64), (131072, 4096, 64, 1), device='cuda:0', dtype=torch.bool)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     le_3 = rand_strided((1, 16, 64, 64), (65536, 4096, 64, 1), device='cuda:0', dtype=torch.bool)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     tangents_1 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     fn = lambda: call([primals_3, primals_4, primals_1, primals_5, primals_6, primals_8, primals_10, lt, mul_14, unsqueeze, relu_2, lt_1, ge, le, le_2, le_3, tangents_1])
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] if __name__ == "__main__":
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:32:08.256000 703210 site-packages/torch/_inductor/graph.py:2014] [210/0] [__output_code] 
V0127 11:32:08.264000 703210 site-packages/torch/_inductor/graph.py:2022] [210/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/cm/ccmd5xua4s6zjkaaqu7hlvrelhu3zofpykdhg77ule2ceerrzroz.py
I0127 11:32:08.407000 703210 site-packages/torch/_inductor/graph.py:2056] [210/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/cm/ccmd5xua4s6zjkaaqu7hlvrelhu3zofpykdhg77ule2ceerrzroz.py

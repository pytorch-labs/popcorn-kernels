W0205 11:35:16.053000 3201829 site-packages/torch/_inductor/utils.py:1611] [434/0] DeviceCopy in input program
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] Output code: 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # AOT ID: ['119_inference']
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import torch
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import math
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import random
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import os
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import tempfile
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from math import inf, nan
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from cmath import nanj
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch import device, empty_strided
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton.language as tl
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     grid,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     split_scan_grid,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     grid_combo_kernels,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     start_graph,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     end_graph,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     cooperative_reduction_grid,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] )
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] aten = torch.ops.aten
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] _quantized = torch.ops._quantized
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] async_compile = AsyncCompile()
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] cpp_fused_randint_0 = async_compile.cpp_pybinding(['int64_t*', 'const int64_t', 'const int64_t', 'const int64_t'], '''
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] extern "C"  void kernel(int64_t* in_out_ptr0,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                        const int64_t ks0,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                        const int64_t ks1,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                        const int64_t ks2)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] {
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     {
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         {
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]             {
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                 auto tmp0 = in_out_ptr0[static_cast<int64_t>(0L)];
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                 auto tmp2 = static_cast<int64_t>(0);
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                 auto tmp3 = ks0*ks1*ks2;
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                 auto tmp4 = c10::convert<int64_t>(tmp3);
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                 auto tmp5 = randint64_cpu(tmp0, tmp1, tmp2, tmp4);
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]                 in_out_ptr0[static_cast<int64_t>(0L)] = tmp5;
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]             }
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         }
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     }
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] }
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] ''')
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dj/cdjizmhlgdkvyvod4zm4rg3xacqonovkswxidyfvju4h5ibndog5.py
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Source node to ATen node mapping:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   loss => amax
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Graph fragment:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view, [1], True), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_red_fused__log_softmax_1 = async_compile.triton('triton_red_fused__log_softmax_1', '''
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton.language as tl
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton_heuristics.reduction(
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     filename=__file__,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] )
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton.jit
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] def triton_red_fused__log_softmax_1(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xnumel = 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rnumel = r0_numel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xmask = xindex < xnumel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rbase = r0_base
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     x0 = xindex
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     _tmp23 = tl.full([XBLOCK, R0_BLOCK], float("-inf"), tl.float32)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         roffset = r0_offset
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         rindex = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         r0_1 = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp0 = r0_1 + x0*((1 + ks0*ks1*ks2) // 2)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp1 = ks0*ks1*ks2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp2 = tmp0 < tmp1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (((r0_1 + x0*((1 + ks0*ks1*ks2) // 2)) % (ks0*ks1*ks2))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp4 = 0.5
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp5 = tmp3 <= tmp4
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp6 = 1.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp7 = tl.where(tmp5, tmp6, tmp3)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp8 = 0.2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp9 = tmp7 <= tmp8
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp10 = 0.800000011920929
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp11 = tl.where(tmp9, tmp10, tmp7)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp12 = 3.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp13 = tmp11 + tmp12
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp14 = 0.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp15 = triton_helpers.maximum(tmp13, tmp14)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp16 = 6.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp17 = triton_helpers.minimum(tmp15, tmp16)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp18 = 0.16666666666666666
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp19 = tmp17 * tmp18
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp20 = tl.full(tmp19.shape, float("-inf"), tmp19.dtype)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp21 = tl.where(tmp2, tmp19, tmp20)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp22 = tl.broadcast_to(tmp21, [XBLOCK, R0_BLOCK])
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp24 = triton_helpers.maximum(_tmp23, tmp22)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         _tmp23 = tl.where(r0_mask & xmask, tmp24, _tmp23)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp23 = triton_helpers.max2(_tmp23, 1)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp23, xmask)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] ''', device_str='cuda')
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w6/cw6xxqvl7jurqwalstghbyddn2ys2zafui3upifmagznwy3g2q76.py
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Source node to ATen node mapping:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   loss => amax
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Graph fragment:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view, [1], True), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_per_fused__log_softmax_2 = async_compile.triton('triton_per_fused__log_softmax_2', '''
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton.language as tl
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     size_hints={'x': 1, 'r0_': 2},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     filename=__file__,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] )
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton.jit
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] def triton_per_fused__log_softmax_2(in_ptr0, out_ptr0, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xnumel = 1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_numel = 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rnumel = r0_numel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_offset = 0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     roffset = r0_offset
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rindex = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_0 = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp3 = triton_helpers.max2(tmp1, 1)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp3, None)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] ''', device_str='cuda')
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vk/cvke6wab4vt4e4y2nd3s6hbsr4vntr5x5hxhnifyybr633zhrfqw.py
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Source node to ATen node mapping:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   loss => exp, sub_10, sum_1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Graph fragment:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %sub_10 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %amax), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_10,), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_red_fused__log_softmax_3 = async_compile.triton('triton_red_fused__log_softmax_3', '''
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton.language as tl
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton_heuristics.reduction(
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     size_hints={'x': 2, 'r0_': 8192},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     filename=__file__,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__log_softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] )
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton.jit
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] def triton_red_fused__log_softmax_3(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xnumel = 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rnumel = r0_numel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xmask = xindex < xnumel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rbase = r0_base
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     x0 = xindex
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     _tmp26 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         roffset = r0_offset
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         rindex = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         r0_1 = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp0 = r0_1 + x0*((1 + ks0*ks1*ks2) // 2)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp1 = ks0*ks1*ks2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp2 = tmp0 < tmp1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp3 = tl.load(in_ptr0 + (((r0_1 + x0*((1 + ks0*ks1*ks2) // 2)) % (ks0*ks1*ks2))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp4 = 0.5
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp5 = tmp3 <= tmp4
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp6 = 1.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp7 = tl.where(tmp5, tmp6, tmp3)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp8 = 0.2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp9 = tmp7 <= tmp8
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp10 = 0.800000011920929
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp11 = tl.where(tmp9, tmp10, tmp7)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp12 = 3.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp13 = tmp11 + tmp12
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp14 = 0.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp15 = triton_helpers.maximum(tmp13, tmp14)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp16 = 6.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp17 = triton_helpers.minimum(tmp15, tmp16)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp18 = 0.16666666666666666
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp19 = tmp17 * tmp18
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp20 = tl.load(in_ptr1 + (tl.full([XBLOCK, R0_BLOCK], 0, tl.int32)), tmp2, eviction_policy='evict_last', other=0.0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp21 = tmp19 - tmp20
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp22 = tl_math.exp(tmp21)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp23 = tl.full(tmp22.shape, 0, tmp22.dtype)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp24 = tl.where(tmp2, tmp22, tmp23)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp25 = tl.broadcast_to(tmp24, [XBLOCK, R0_BLOCK])
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         tmp27 = _tmp26 + tmp25
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         _tmp26 = tl.where(r0_mask & xmask, tmp27, _tmp26)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp26 = tl.sum(_tmp26, 1)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp26, xmask)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] ''', device_str='cuda')
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lg/clgqr4fszh32obkb4lga5jef5dve2ar62yn4hkuxgvbih4jeloqw.py
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.nll_loss_forward, aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Source node to ATen node mapping:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   loss => convert_element_type_1, div_1, exp, full_default_3, ne_1, ne_2, neg, sub_10, sum_1, sum_2, sum_3, where_3
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] # Graph fragment:
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %ne_1 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%device_put, -100), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %sub_10 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, %amax), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_10,), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%squeeze,), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %full_default_3 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%ne_1, %neg, %full_default_3), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%where_3,), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %ne_2 : [num_users=1] = call_function[target=torch.ops.aten.ne.Scalar](args = (%device_put, -100), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%ne_2,), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%sum_2, torch.float32), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sum_3, %convert_element_type_1), kwargs = {})
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_per_fused__log_softmax_nll_loss_forward_4 = async_compile.triton('triton_per_fused__log_softmax_nll_loss_forward_4', '''
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] import triton.language as tl
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     size_hints={'x': 1, 'r0_': 2},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     filename=__file__,
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': (7,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__log_softmax_nll_loss_forward_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] )
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] @triton.jit
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] def triton_per_fused__log_softmax_nll_loss_forward_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xnumel = 1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_numel = 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     R0_BLOCK: tl.constexpr = 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rnumel = r0_numel
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_offset = 0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     roffset = r0_offset
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     rindex = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     r0_0 = r0_index
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), None)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (0))
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK, 1])
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp32 = tl.load(in_out_ptr0 + (0))
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp33 = tl.broadcast_to(tmp32, [XBLOCK, 1])
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp3 = tl.sum(tmp1, 1)[:, None]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp6 = tl.full([1, 1], -100, tl.int64)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp7 = tmp5 != tmp6
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp8 = tl.full([1, 1], 0, tl.int64)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp9 = tl.where(tmp7, tmp5, tmp8)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp10 = ks0*ks1*ks2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp12 = tmp9 < 0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp9)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tl.device_assert((0 <= tmp13) & (tmp13 < ks0*ks1*ks2), "index out of bounds: 0 <= tmp13 < ks0*ks1*ks2")
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp15 = tl.load(in_ptr2 + ((tmp13 % (ks0*ks1*ks2))), None, eviction_policy='evict_last')
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp16 = 0.5
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp17 = tmp15 <= tmp16
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp18 = 1.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp19 = tl.where(tmp17, tmp18, tmp15)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp20 = 0.2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp21 = tmp19 <= tmp20
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp22 = 0.800000011920929
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp19)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp24 = 3.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp26 = 0.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp25, tmp26)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp28 = 6.0
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp29 = triton_helpers.minimum(tmp27, tmp28)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp30 = 0.16666666666666666
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp34 = tmp31 - tmp33
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp35 = tl_math.log(tmp3)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp36 = tmp34 - tmp35
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp37 = -tmp36
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp38 = tl.where(tmp7, tmp37, tmp26)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp39 = tmp7.to(tl.int64)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp40 = tmp39.to(tl.float32)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tmp41 = tmp38 / tmp40
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tl.debug_barrier()
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp41, None)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] ''', device_str='cuda')
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] async_compile.wait(globals())
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] del async_compile
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] def call(args):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     args.clear()
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     s0 = arg0_1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     s1 = arg1_1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     s2 = arg2_1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     buf0 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     buf1 = buf0; del buf0  # reuse
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     cpp_fused_randint_0(buf1, s0, s1, s2)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         torch.cuda.set_device(0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         buf2 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         buf2.copy_(buf1, False)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         del buf1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         buf3 = empty_strided_cuda((1, 1, 2), (2, 2, 1), torch.float32)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         triton_red_fused__log_softmax_1_r0_numel = (1 + s0*s1*s2) // 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         triton_red_fused__log_softmax_1.run(arg3_1, buf3, s0, s1, s2, 2, triton_red_fused__log_softmax_1_r0_numel, grid=grid(2), stream=stream0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         buf4 = empty_strided_cuda((1, 1), (1, 1), torch.float32)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         triton_per_fused__log_softmax_2.run(buf3, buf4, 1, 2, grid=grid(1), stream=stream0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         buf5 = buf3; del buf3  # reuse
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         triton_red_fused__log_softmax_3_r0_numel = (1 + s0*s1*s2) // 2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         triton_red_fused__log_softmax_3.run(arg3_1, buf4, buf5, s0, s1, s2, 2, triton_red_fused__log_softmax_3_r0_numel, grid=grid(2), stream=stream0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         buf7 = reinterpret_tensor(buf4, (), (), 0); del buf4  # reuse
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         # Topologically Sorted Source Nodes: [loss], Original ATen: [aten.nll_loss_forward, aten._log_softmax]
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         triton_per_fused__log_softmax_nll_loss_forward_4.run(buf7, buf5, buf2, arg3_1, s0, s1, s2, 1, 2, grid=grid(1), stream=stream0)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         del arg3_1
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         del buf2
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]         del buf5
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     return (buf7, )
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     arg0_1 = 3
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     arg1_1 = 64
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     arg2_1 = 64
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     arg3_1 = rand_strided((1, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] if __name__ == "__main__":
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:35:16.289000 3201829 site-packages/torch/_inductor/graph.py:2014] [434/0] [__output_code] 
V0205 11:35:16.298000 3201829 site-packages/torch/_inductor/graph.py:2022] [434/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qx/cqx5zom6wb33rg3ryb34orxx4547uzswf5cmx7mf2vtyowlwbcmc.py
I0205 11:35:16.415000 3201829 site-packages/torch/_inductor/graph.py:2056] [434/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/qx/cqx5zom6wb33rg3ryb34orxx4547uzswf5cmx7mf2vtyowlwbcmc.py

V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] Output code: 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] # AOT ID: ['37_inference']
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import torch
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import math
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import random
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import os
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import tempfile
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from math import inf, nan
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from cmath import nanj
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch import device, empty_strided
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import triton
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import triton.language as tl
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     grid,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     split_scan_grid,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     grid_combo_kernels,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     start_graph,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     end_graph,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] )
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] aten = torch.ops.aten
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bb/cbbyvpqws6xi6eu76uwplmqymygere3uqcnpam473m6m6abfxfnh.py
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.reflection_pad2d]
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] #   x_1 => _unsafe_index, _unsafe_index_1
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] # Graph fragment:
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%view_1, [None, None, %sub_8, None]), kwargs = {})
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, None, %sub_14]), kwargs = {})
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] triton_poi_fused_reflection_pad2d_0 = async_compile.triton('triton_poi_fused_reflection_pad2d_0', '''
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import triton
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] import triton.language as tl
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     size_hints={'x': 8192}, 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     filename=__file__,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_reflection_pad2d_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] )
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] @triton.jit
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] def triton_poi_fused_reflection_pad2d_0(in_ptr0, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     x0 = (xindex % 36)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     x1 = ((xindex // 36) % 36)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     x2 = xindex // 1296
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     x3 = xindex
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (1023 + ((-1)*tl_math.abs((-31) + tl_math.abs((-2) + x0))) + ((-32)*tl_math.abs((-31) + tl_math.abs((-2) + x1))) + 1024*(((x2 // 2) % (ks0 // 2))) + 1024*(ks0 // 2)*((x2 % 2))), xmask, eviction_policy='evict_last')
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp0, xmask)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] ''', device_str='cuda')
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] cpp_fused_full_randint_1 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'int64_t*', 'int64_t*'], '''
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                        int64_t* out_ptr0,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                        int64_t* out_ptr1,
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                        int64_t* out_ptr2)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         #pragma GCC ivdep
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(5L); x0+=static_cast<int64_t>(1L))
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]             {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                     auto tmp1 = x0;
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                     auto tmp3 = static_cast<int64_t>(1);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                     auto tmp4 = static_cast<int64_t>(10);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                     auto tmp5 = randint64_cpu(tmp0, tmp2, tmp3, tmp4);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp5;
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]             }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]             {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 auto tmp0 = static_cast<int64_t>(5);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp0;
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]             }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]             {
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 auto tmp0 = in_ptr0[static_cast<int64_t>(1L)];
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 auto tmp1 = static_cast<int32_t>(0);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 auto tmp2 = static_cast<int64_t>(1);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 auto tmp3 = static_cast<int64_t>(6);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 auto tmp4 = randint64_cpu(tmp0, tmp1, tmp2, tmp3);
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]                 out_ptr2[static_cast<int64_t>(0L)] = tmp4;
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]             }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] }
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] ''')
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] async_compile.wait(globals())
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] del async_compile
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] def call(args):
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     args.clear()
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     s0 = arg0_1
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     s1 = arg1_1
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     s2 = arg2_1
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, 32, 32), (1024*s0, 1024, 32, 1))
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 36, 36), (1296*s0, 1296, 36, 1), torch.float32)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.reflection_pad2d]
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         triton_poi_fused_reflection_pad2d_0_xnumel = 1296*s0
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         triton_poi_fused_reflection_pad2d_0.run(arg3_1, buf0, s0, triton_poi_fused_reflection_pad2d_0_xnumel, grid=grid(triton_poi_fused_reflection_pad2d_0_xnumel), stream=stream0)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         del arg3_1
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1, x_2], Original ATen: [aten.reflection_pad2d, aten._adaptive_avg_pool2d]
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         buf1 = torch.ops.aten._adaptive_avg_pool2d.default(buf0, [5, 5])
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         del buf0
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         buf2 = buf1
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]         del buf1
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     buf3 = empty_strided_cpu((2, ), (1, ), torch.int64)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf3)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     buf4 = empty_strided_cpu((1, 5), (5, 1), torch.int64)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     buf5 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     buf6 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     cpp_fused_full_randint_1(buf3, buf4, buf5, buf6)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     return (reinterpret_tensor(buf2, ((25*s0) // (2*(s0 // 2)), 1, 2*(s0 // 2)), (1, 2*((25*s0) // (2*(s0 // 2)))*(s0 // 2), (25*s0) // (2*(s0 // 2))), 0), buf4, buf5, buf6, 2*(s0 // 2), )
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     arg0_1 = 4
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     arg1_1 = 32
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     arg2_1 = 32
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     arg3_1 = rand_strided((1, 4, 32, 32), (4096, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] if __name__ == "__main__":
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:31:48.332000 703210 site-packages/torch/_inductor/graph.py:2014] [173/0_1] [__output_code] 
V0127 11:31:48.335000 703210 site-packages/torch/_inductor/graph.py:2022] [173/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/rr/crr3fx624tmdmrfzmgfjntip6yxtme47vm2rbdtb7kyrztm6pf6l.py
I0127 11:31:49.275000 703210 site-packages/torch/_inductor/graph.py:2056] [173/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/rr/crr3fx624tmdmrfzmgfjntip6yxtme47vm2rbdtb7kyrztm6pf6l.py

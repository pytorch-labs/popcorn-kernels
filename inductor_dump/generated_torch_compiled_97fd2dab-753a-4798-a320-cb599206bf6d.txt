V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] Output code: 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # AOT ID: ['85_inference']
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import torch
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import math
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import random
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import os
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import tempfile
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from math import inf, nan
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from cmath import nanj
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch import device, empty_strided
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import triton
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import triton.language as tl
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     grid,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     split_scan_grid,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     grid_combo_kernels,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     start_graph,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     end_graph,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     cooperative_reduction_grid,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] )
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] aten = torch.ops.aten
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] async_compile = AsyncCompile()
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ro/cro5mb3is6yiy4xpefrmvgkpn77xd4mkmesvmmbjaorefvoop2n2.py
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.rand]
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] #   x_1 => inductor_lookup_seed_default, inductor_random_default
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # Graph fragment:
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, %arg0_1, 2], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] triton_poi_fused_rand_0 = async_compile.triton('triton_poi_fused_rand_0', '''
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import triton
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import triton.language as tl
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     size_hints={'x': 8}, 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     filename=__file__,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_rand_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] )
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] @triton.jit
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] def triton_poi_fused_rand_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     x0 = xindex
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp1 = x0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] ''', device_str='cuda')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rj/crj2zuw4dushtdxqezouu2gnfslpqesiihhq2zsimv6pnp5etcn6.py
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.fractional_max_pool2d]
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # Source node to ATen node mapping:
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] #   x_1 => getitem
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] # Graph fragment:
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] #   %getitem : [num_users=1] = call_function[target=operator.getitem](args = (%fractional_max_pool2d, 0), kwargs = {})
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] triton_poi_fused_fractional_max_pool2d_1 = async_compile.triton('triton_poi_fused_fractional_max_pool2d_1', '''
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import triton
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] import triton.language as tl
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     size_hints={'x': 1024}, 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     filename=__file__,
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_fractional_max_pool2d_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     min_elem_per_thread=0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] )
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] @triton.jit
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] def triton_poi_fused_fractional_max_pool2d_1(in_ptr0, in_ptr1, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     xmask = xindex < xnumel
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     x2 = xindex // 196
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     x1 = ((xindex // 14) % 14)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     x0 = (xindex % 14)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     x4 = xindex
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2), xmask, eviction_policy='evict_last')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp21 = tl.load(in_ptr0 + (1 + 2*x2), xmask, eviction_policy='evict_last')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp1 = (2 + ks0) / 13
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp2 = tmp1.to(tl.float32)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp3 = x1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp4 = tmp3.to(tl.float32)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp5 = tmp4 + tmp0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp6 = tmp5 * tmp2
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp7 = libdevice.floor(tmp6)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp8 = tmp0 * tmp2
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp9 = libdevice.floor(tmp8)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp10 = tmp7 - tmp9
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp11 = tmp10.to(tl.int64)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp12 = tl.full([1], 13, tl.int64)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp13 = tmp4 < tmp12
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp14 = 2 + ks0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp15 = tl.where(tmp13, tmp11, tmp14)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp16 = 4 + ks0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp17 = tmp15 + tmp16
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp18 = tmp15 < 0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp15)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tl.device_assert(((0 <= tmp19) & (tmp19 < 4 + ks0)) | ~(xmask), "index out of bounds: 0 <= tmp19 < 4 + ks0")
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp22 = (2 + ks1) / 13
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp24 = x0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp26 = tmp25 + tmp21
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp27 = tmp26 * tmp23
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp28 = libdevice.floor(tmp27)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp29 = tmp21 * tmp23
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp30 = libdevice.floor(tmp29)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp31 = tmp28 - tmp30
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp32 = tmp31.to(tl.int64)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp33 = tmp25 < tmp12
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp34 = 2 + ks1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp35 = tl.where(tmp33, tmp32, tmp34)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp36 = 4 + ks1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp37 = tmp35 + tmp36
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp38 = tmp35 < 0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp39 = tl.where(tmp38, tmp37, tmp35)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tl.device_assert(((0 <= tmp39) & (tmp39 < 4 + ks1)) | ~(xmask), "index out of bounds: 0 <= tmp39 < 4 + ks1")
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp41 = tl.load(in_ptr1 + (ks1*(tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + tmp19))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + tmp19))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + tmp19))))) + ks0*ks1*x2 + (tl.where((-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + tmp39))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + tmp39))) + 2*ks1, (-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + tmp39)))))), xmask, eviction_policy='evict_last')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp42 = tl.load(in_ptr1 + (ks1*(tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + tmp19))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + tmp19))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-2) + tmp19))))) + ks0*ks1*x2 + (tl.where((-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-1) + tmp39))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-1) + tmp39))) + 2*ks1, (-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-1) + tmp39)))))), xmask, eviction_policy='evict_last')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp43 = triton_helpers.maximum(tmp42, tmp41)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp44 = tl.load(in_ptr1 + (ks1*(tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + tmp19))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + tmp19))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + tmp19))))) + ks0*ks1*x2 + (tl.where((-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + tmp39))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + tmp39))) + 2*ks1, (-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-2) + tmp39)))))), xmask, eviction_policy='evict_last')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp45 = triton_helpers.maximum(tmp44, tmp43)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp46 = tl.load(in_ptr1 + (ks1*(tl.where((-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + tmp19))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + tmp19))) + 2*ks0, (-1) + ks0 + ((-1)*tl_math.abs(1 + ((-1)*ks0) + tl_math.abs((-1) + tmp19))))) + ks0*ks1*x2 + (tl.where((-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-1) + tmp39))) < 0, (-1) + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-1) + tmp39))) + 2*ks1, (-1) + ks1 + ((-1)*tl_math.abs(1 + ((-1)*ks1) + tl_math.abs((-1) + tmp39)))))), xmask, eviction_policy='evict_last')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tmp47 = triton_helpers.maximum(tmp46, tmp45)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp47, xmask)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] ''', device_str='cuda')
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] async_compile.wait(globals())
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] del async_compile
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] def call(args):
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     args.clear()
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     s0 = arg0_1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     s1 = arg1_1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     s2 = arg2_1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         buf0 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf0)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         buf1 = empty_strided_cuda((1, s0, 2), (2*s0, 2, 1), torch.float32)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.rand]
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         triton_poi_fused_rand_0_xnumel = 2*s0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         triton_poi_fused_rand_0.run(buf0, buf1, 0, triton_poi_fused_rand_0_xnumel, grid=grid(triton_poi_fused_rand_0_xnumel), stream=stream0)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         del buf0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         buf2 = empty_strided_cuda((1, s0, 14, 14), (196*s0, 196, 14, 1), torch.float32)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.fractional_max_pool2d]
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         triton_poi_fused_fractional_max_pool2d_1_xnumel = 196*s0
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         triton_poi_fused_fractional_max_pool2d_1.run(buf1, arg3_1, buf2, s1, s2, triton_poi_fused_fractional_max_pool2d_1_xnumel, grid=grid(triton_poi_fused_fractional_max_pool2d_1_xnumel), stream=stream0)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         del arg3_1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]         del buf1
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     return (buf2, )
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     arg0_1 = 3
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     arg1_1 = 32
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     arg2_1 = 32
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] if __name__ == "__main__":
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:44:26.586000 2062045 site-packages/torch/_inductor/graph.py:2014] [254/0_1] [__output_code] 
V0205 10:44:26.590000 2062045 site-packages/torch/_inductor/graph.py:2022] [254/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ob/cob4t4uars4glds2o2ktnsxepqz75u2cicxe2dmakzngn2dg2egj.py
I0205 10:44:26.858000 2062045 site-packages/torch/_inductor/graph.py:2056] [254/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ob/cob4t4uars4glds2o2ktnsxepqz75u2cicxe2dmakzngn2dg2egj.py
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] Output code: 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # AOT ID: ['86_forward']
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import torch
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import math
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import random
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import os
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import tempfile
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from math import inf, nan
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from cmath import nanj
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch import device, empty_strided
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton.language as tl
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     grid,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     split_scan_grid,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     grid_combo_kernels,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     start_graph,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     end_graph,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     cooperative_reduction_grid,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] )
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] aten = torch.ops.aten
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] _quantized = torch.ops._quantized
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] async_compile = AsyncCompile()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/s4/cs4gm27nu4lzzzrrn2mmhqotc3exylhyrowroxrku2fztlzuuadb.py
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_dropout]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   x_1 => inductor_lookup_seed_default, inductor_random_default_1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Graph fragment:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %inductor_random_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 3, 14, 14], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_poi_fused_native_dropout_0 = async_compile.triton('triton_poi_fused_native_dropout_0', '''
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton.language as tl
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     size_hints={'x': 1024}, 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     filename=__file__,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr0': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_native_dropout_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     min_elem_per_thread=0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] )
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton.jit
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] def triton_poi_fused_native_dropout_0(in_ptr0, out_ptr0, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xnumel = 588
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xmask = xindex < xnumel
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     x0 = xindex
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp1 = x0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] ''', device_str='cuda')
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xa/cxauoi3y3qkrvzqi7u6c2tyodvmhzgdh3srliustxg55do42ssrk.py
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Topologically Sorted Source Nodes: [pad], Original ATen: [aten.copy]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   pad => copy
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Graph fragment:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_1, %slice_2), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %slice_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%empty, %copy, 2, 2, 590), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %slice_scatter_default_1 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %slice_7, 2, 0, 2), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_poi_fused_copy_1 = async_compile.triton('triton_poi_fused_copy_1', '''
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton.language as tl
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     size_hints={'x': 1024}, 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     filename=__file__,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     min_elem_per_thread=0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] )
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton.jit
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] def triton_poi_fused_copy_1(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xnumel = 592
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xmask = xindex < xnumel
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     x0 = xindex
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp0 = x0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp1 = tl.full([1], 2, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp3 = 588 + x0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp4 = tl.full([1], 2, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp5 = tmp3 >= tmp4
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp6 = tl.full([1], 590, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp7 = tmp3 < tmp6
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp8 = tmp5 & tmp7
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp9 = tmp8 & tmp2
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (((586 + x0) % 588)), tmp9 & xmask, other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp11 = 0.5
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp12 = tmp10 > tmp11
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp13 = tmp12.to(tl.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp14 = tl.load(in_ptr1 + (((586 + x0) % 588)), tmp9 & xmask, other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp15 = 0.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp16 = tmp14 > tmp15
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp17 = libdevice.expm1(tmp14)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp18 = tl.where(tmp16, tmp14, tmp17)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp19 = tmp13 * tmp18
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp20 = 2.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp22 = tl.full(tmp21.shape, 0.0, tmp21.dtype)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp23 = tl.where(tmp9, tmp21, tmp22)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp24 = float("nan")
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp25 = tl.where(tmp8, tmp23, tmp24)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp27 = tl.where(tmp2, tmp25, tmp26)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp28 = tmp0 >= tmp1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp29 = tl.full([1], 590, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp30 = tmp0 < tmp29
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp31 = tmp28 & tmp30
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp32 = tl.load(in_ptr0 + ((((-2) + x0) % 588)), tmp31 & xmask, other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp33 = 0.5
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp34 = tmp32 > tmp33
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp35 = tmp34.to(tl.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp36 = tl.load(in_ptr1 + ((((-2) + x0) % 588)), tmp31 & xmask, other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp37 = 0.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp38 = tmp36 > tmp37
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp39 = libdevice.expm1(tmp36)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp40 = tl.where(tmp38, tmp36, tmp39)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp41 = tmp35 * tmp40
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp42 = 2.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp43 = tmp41 * tmp42
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp44 = tl.full(tmp43.shape, 0.0, tmp43.dtype)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp45 = tl.where(tmp31, tmp43, tmp44)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp46 = float("nan")
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp47 = tl.where(tmp31, tmp45, tmp46)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp48 = tl.where(tmp2, tmp27, tmp47)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp48, xmask)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] ''', device_str='cuda')
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nl/cnlatebcflnbox6attzv2dcpo4ujm7bdvbkzqvrnykejvenpawdy.py
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Topologically Sorted Source Nodes: [argmax, indices], Original ATen: [aten.argmax, aten.remainder]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   argmax => argmax
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   indices => remainder
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Graph fragment:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%squeeze_1, 1), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %remainder : [num_users=3] = call_function[target=torch.ops.aten.remainder.Scalar](args = (%argmax, 1000), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_per_fused_argmax_remainder_2 = async_compile.triton('triton_per_fused_argmax_remainder_2', '''
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton.language as tl
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     size_hints={'x': 1, 'r0_': 1024},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     filename=__file__,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*i64', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_argmax_remainder_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] )
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton.jit
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] def triton_per_fused_argmax_remainder_2(in_out_ptr0, in_ptr0, xnumel, r0_numel):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xnumel = 1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_numel = 592
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     R0_BLOCK: tl.constexpr = 1024
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     rnumel = r0_numel
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xmask = tl.full([R0_BLOCK], True, tl.int1)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[:]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_offset = 0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_mask = r0_index < r0_numel
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     roffset = r0_offset
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     rindex = r0_index
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_0 = r0_index
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp0 = r0_0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp1 = tl.full([1], 590, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (tl.broadcast_to((-588) + r0_0, [R0_BLOCK])), r0_mask & tmp2, other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [R0_BLOCK])
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp8 = tl.where(r0_mask, tmp6, float("-inf"))
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp9 = tl.broadcast_to(rindex, tmp8.shape)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp7_val, tmp7_idx = triton_helpers.max_with_index(tmp8, tmp9, 0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp7 = triton_helpers.promote_to_tensor(tmp7_idx)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp10 = tl.full([1], 1000, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp11 = tmp7 % tmp10
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp12 = tl.full([1], 0, tl.int32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp13 = tmp11 != tmp12
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp14 = (libdevice.signbit(tmp11) != 0) if (tmp11).dtype is tl.float32 else tmp11 < 0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp15 = (libdevice.signbit(tmp10) != 0) if (tmp10).dtype is tl.float32 else tmp10 < 0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp16 = tmp14 != tmp15
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp17 = tmp13 & tmp16
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp18 = tmp11 + tmp10
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp19 = tl.where(tmp17, tmp18, tmp11)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.debug_barrier()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp19, None)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] ''', device_str='cuda')
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fp/cfpt5mgxijrnjpjg6rbvh5etc2dplgydxl2gcllx5numtw55q7ak.py
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Topologically Sorted Source Nodes: [x_embed_bag], Original ATen: [aten.arange]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   x_embed_bag => iota
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Graph fragment:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %iota : [num_users=2] = call_function[target=torch.ops.prims.iota.default](args = (1,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_poi_fused_arange_3 = async_compile.triton('triton_poi_fused_arange_3', '''
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton.language as tl
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton_heuristics.pointwise(
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     size_hints={'x': 1}, 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     filename=__file__,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': (1,)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_arange_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     min_elem_per_thread=0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] )
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton.jit
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] def triton_poi_fused_arange_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xnumel = 1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.store(out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp0, None)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] ''', device_str='cuda')
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ug/cug47mbyzj5qz567a3fqcla5ov4za2zvwvplrenkrc2qlygo3ogt.py
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Topologically Sorted Source Nodes: [x_4, x_5, x_6, loss], Original ATen: [aten.cat, aten.celu, aten.native_dropout, aten.smooth_l1_loss_backward, aten.smooth_l1_loss]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Source node to ATen node mapping:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   loss => abs_1, div, lt, mean, mul_3, mul_4, pow_1, sub_1, where_2
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   x_4 => cat
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   x_5 => expm1_1, gt_2, where_1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   x_6 => gt_3, inductor_lookup_seed_default_1, inductor_random_default, mul_2
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] # Graph fragment:
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %cat : [num_users=4] = call_function[target=torch.ops.aten.cat.default](args = ([%embedding, %getitem], 1), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %expm1_1 : [num_users=1] = call_function[target=torch.ops.aten.expm1.default](args = (%cat,), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %gt_2 : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%cat, 0), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt_2, %cat, %expm1_1), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %inductor_lookup_seed_default_1 : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 1), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 128], %inductor_lookup_seed_default_1, rand), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %gt_3 : [num_users=2] = call_function[target=torch.ops.aten.gt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%gt_3, %where_1), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, 2.0), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%mul_3,), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_1, 2), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 0.5), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_4, 1.0), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %where_2 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %div, %sub_1), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where_2,), kwargs = {})
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_per_fused_cat_celu_native_dropout_smooth_l1_loss_smooth_l1_loss_backward_4 = async_compile.triton('triton_per_fused_cat_celu_native_dropout_smooth_l1_loss_smooth_l1_loss_backward_4', '''
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] import triton.language as tl
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     size_hints={'x': 1, 'r0_': 128},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     filename=__file__,
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr1': '*i1', 'out_ptr2': '*fp32', 'load_seed_offset': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'load_seed_offset': 1, 'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 9), 'tt.equal_to': (7, 8)}, 'cls': 'AttrsDescriptor'})]},
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_cat_celu_native_dropout_smooth_l1_loss_smooth_l1_loss_backward_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] )
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] @triton.jit
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] def triton_per_fused_cat_celu_native_dropout_smooth_l1_loss_smooth_l1_loss_backward_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr1, out_ptr2, load_seed_offset, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xnumel = 1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_numel = 128
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     R0_BLOCK: tl.constexpr = 128
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     rnumel = r0_numel
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_offset = 0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_mask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     roffset = r0_offset
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     rindex = r0_index
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     r0_0 = r0_index
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp1 = r0_0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp3 = 0.5
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp4 = tmp2 > tmp3
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp5 = tl.full([1, 1], 0, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp6 = tmp1 >= tmp5
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp7 = tl.full([1, 1], 64, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp8 = tmp1 < tmp7
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (tl.full([XBLOCK, R0_BLOCK], 0, tl.int32)), tmp8, eviction_policy='evict_last', other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp10 = tl.full([XBLOCK, R0_BLOCK], 1000, tl.int32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp12 = tmp9 < 0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp9)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.device_assert(((0 <= tl.broadcast_to(tmp13, [XBLOCK, R0_BLOCK])) & (tl.broadcast_to(tmp13, [XBLOCK, R0_BLOCK]) < 1000)) | ~(tmp8), "index out of bounds: 0 <= tl.broadcast_to(tmp13, [XBLOCK, R0_BLOCK]) < 1000")
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp15 = tl.load(in_ptr2 + (tl.broadcast_to(64*tmp13 + (r0_0), [XBLOCK, R0_BLOCK])), tmp8, eviction_policy='evict_last', other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp16 = tmp1 >= tmp7
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp17 = tl.full([1, 1], 128, tl.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp18 = tmp1 < tmp17
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp19 = tl.load(in_ptr3 + (tl.broadcast_to((-64) + r0_0, [XBLOCK, R0_BLOCK])), tmp16, eviction_policy='evict_last', other=0.0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp20 = tl.where(tmp8, tmp15, tmp19)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp21 = tmp4.to(tl.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp22 = 0.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp23 = tmp20 > tmp22
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp24 = libdevice.expm1(tmp20)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp25 = tl.where(tmp23, tmp20, tmp24)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp26 = tmp21 * tmp25
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp27 = 2.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp28 = tmp26 * tmp27
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp29 = tl_math.abs(tmp28)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp30 = 1.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp31 = tmp29 < tmp30
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp32 = tmp29 * tmp29
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp33 = tmp32 * tmp3
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp34 = tmp33 * tmp30
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp35 = tmp29 - tmp3
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp36 = tl.where(tmp31, tmp34, tmp35)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp37 = tl.broadcast_to(tmp36, [XBLOCK, R0_BLOCK])
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp39 = tl.sum(tmp37, 1)[:, None]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp40 = 128.0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tmp41 = tmp39 / tmp40
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.store(out_ptr1 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp4, None)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.store(out_ptr2 + (tl.broadcast_to(r0_0, [XBLOCK, R0_BLOCK])), tmp20, None)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.debug_barrier()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp41, None)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] ''', device_str='cuda')
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] async_compile.wait(globals())
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] del async_compile
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] def call(args):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     args.clear()
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     assert_size_stride(primals_1, (1, 3, 14, 14), (588, 196, 14, 1))
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     assert_size_stride(primals_2, (1000, 64), (64, 1))
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     assert_size_stride(primals_3, (1000, 64), (64, 1))
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         torch.cuda.set_device(0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf0 = empty_strided_cuda((2, ), (1, ), torch.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [2], out=buf0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf1 = empty_strided_cuda((1, 3, 14, 14), (588, 196, 14, 1), torch.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten.native_dropout]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         triton_poi_fused_native_dropout_0.run(buf0, buf1, 0, 588, grid=grid(588), stream=stream0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf3 = empty_strided_cuda((1, 1, 592), (592, 592, 1), torch.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         # Topologically Sorted Source Nodes: [pad], Original ATen: [aten.copy]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         triton_poi_fused_copy_1.run(buf1, primals_1, buf3, 592, grid=grid(592), stream=stream0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del buf1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del primals_1
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf4 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         # Topologically Sorted Source Nodes: [argmax, indices], Original ATen: [aten.argmax, aten.remainder]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         triton_per_fused_argmax_remainder_2.run(buf5, buf3, 1, 592, grid=grid(1), stream=stream0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del buf3
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf6 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         # Topologically Sorted Source Nodes: [x_embed_bag], Original ATen: [aten.arange]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         triton_poi_fused_arange_3.run(buf6, 1, grid=grid(1), stream=stream0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         # Topologically Sorted Source Nodes: [x_embed_bag], Original ATen: [aten._embedding_bag]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf7 = torch.ops.aten._embedding_bag.default(primals_3, buf5, buf6, False, 1)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del primals_3
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf8 = buf7[0]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf9 = buf7[1]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf10 = buf7[2]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf11 = buf7[3]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del buf7
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf14 = empty_strided_cuda((1, 128), (128, 1), torch.bool)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf12 = empty_strided_cuda((1, 128), (128, 1), torch.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf15 = empty_strided_cuda((), (), torch.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         buf16 = buf15; del buf15  # reuse
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4, x_5, x_6, loss], Original ATen: [aten.cat, aten.celu, aten.native_dropout, aten.smooth_l1_loss_backward, aten.smooth_l1_loss]
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         triton_per_fused_cat_celu_native_dropout_smooth_l1_loss_smooth_l1_loss_backward_4.run(buf16, buf0, buf5, primals_2, buf8, buf14, buf12, 1, 1, 128, grid=grid(1), stream=stream0)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del buf0
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del buf8
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]         del primals_2
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     return (buf16, buf5, buf6, buf9, buf10, buf11, buf12, buf14, )
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     primals_1 = rand_strided((1, 3, 14, 14), (588, 196, 14, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     primals_2 = rand_strided((1000, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     primals_3 = rand_strided((1000, 64), (64, 1), device='cuda:0', dtype=torch.float32)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] if __name__ == "__main__":
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 10:44:27.250000 2062045 site-packages/torch/_inductor/graph.py:2014] [255/0] [__output_code] 
V0205 10:44:27.259000 2062045 site-packages/torch/_inductor/graph.py:2022] [255/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mw/cmwrdemm4ffdtobihb6fsnmq2dn7h3btctnyzoqak55b6zem7oyw.py
I0205 10:44:27.590000 2062045 site-packages/torch/_inductor/graph.py:2056] [255/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mw/cmwrdemm4ffdtobihb6fsnmq2dn7h3btctnyzoqak55b6zem7oyw.py

V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] Output code: 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # AOT ID: ['96_forward']
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import torch
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import math
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import random
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import os
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import tempfile
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from math import inf, nan
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from cmath import nanj
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch import device, empty_strided
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     grid,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     split_scan_grid,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     grid_combo_kernels,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     start_graph,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     end_graph,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] aten = torch.ops.aten
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/li/cli37l3vfvfjin7lzyq3tktxxej2twgayfdohlu4agm7ord2x42a.py
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.bernoulli]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   x_2 => inductor_lookup_seed_default, inductor_random_default, lt
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Graph fragment:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %inductor_lookup_seed_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_lookup_seed.default](args = (%inductor_seeds_default, 0), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %inductor_random_default : [num_users=1] = call_function[target=torch.ops.prims.inductor_random.default](args = ([1, 1, 1, 1, 1], %inductor_lookup_seed_default, rand), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %lt : [num_users=2] = call_function[target=torch.ops.aten.lt.Scalar](args = (%inductor_random_default, 0.5), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_poi_fused_bernoulli_0 = async_compile.triton('triton_poi_fused_bernoulli_0', '''
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     size_hints={'x': 1}, 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     filename=__file__,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'out_ptr1': '*i1', 'load_seed_offset': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bernoulli_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton.jit
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def triton_poi_fused_bernoulli_0(in_ptr0, out_ptr1, load_seed_offset, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xnumel = 1
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + load_seed_offset)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp1 = tl.full([1], 0, tl.int32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp2 = tl.rand(tmp0, (tmp1).to(tl.uint32))
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp3 = 0.5
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp4 = tmp2 < tmp3
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK], 0, tl.int32)), tmp4, None)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bh/cbhgqwmvc67dzengquvq7drstffizhi4pxdc45mnmvyrhmb7fpwx.py
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   x_5 => add_25, add_26, convert_element_type_1, convert_element_type_2, iota, mul_31, mul_32
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Graph fragment:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (20,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota, 1), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_31, 0), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_25, torch.float32), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 0.0), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_26, 0.5), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %convert_element_type_2 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_32, torch.int64), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_poi_fused__to_copy_add_arange_mul_1 = async_compile.triton('triton_poi_fused__to_copy_add_arange_mul_1', '''
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     size_hints={'x': 32}, 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     filename=__file__,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton.jit
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def triton_poi_fused__to_copy_add_arange_mul_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xnumel = 20
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x0 = xindex
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp0 = x0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp2 = 0.5
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp3 = tmp1 * tmp2
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp4 = tmp3.to(tl.int32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/c7/cc7khof4heowqa2rvatkqwjaqnn5556glaldqqcvlueplogz4pos.py
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten.add, aten._to_copy]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   x_5 => add_28, add_31, convert_element_type_3, convert_element_type_4, iota_1, mul_34
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Graph fragment:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %iota_1 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (%floordiv,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota_1, 1), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %add_28 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_34, 0), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %convert_element_type_3 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_28, torch.float32), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %add_31 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_3, 0.0), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], -4), kwargs = {dtype: torch.int64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %scalar_tensor_default_1 : [num_users=1] = call_function[target=torch.ops.aten.scalar_tensor.default](args = (%primals_3,), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%full_default, %scalar_tensor_default_1), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %convert_element_type_default : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor, torch.float64), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 2.0), kwargs = {dtype: torch.float64, layout: torch.strided, device: cpu, pin_memory: False})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %mul_tensor : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%full_default_1, %convert_element_type_default), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %true_divide_tensor : [num_users=1] = call_function[target=torch.ops.aten.true_divide.Tensor](args = (%convert_element_type_default, %mul_tensor), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %convert_element_type_default_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%true_divide_tensor, torch.float32), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %mul_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_31, %convert_element_type_default_1), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %convert_element_type_4 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_tensor_1, torch.int64), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_poi_fused__to_copy_add_arange_2 = async_compile.triton('triton_poi_fused__to_copy_add_arange_2', '''
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     size_hints={'x': 256}, 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     filename=__file__,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton.jit
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def triton_poi_fused__to_copy_add_arange_2(out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x0 = xindex
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp0 = -4.0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp1 = ks0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp2 = tmp1.to(tl.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp3 = tmp0 + tmp2
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp4 = tmp3.to(tl.float64)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp5 = tl.full([1], 2.0, tl.float64)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp6 = tmp5 * tmp4
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp7 = tmp4 / tmp6
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp9 = x0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp11 = tmp10 * tmp8
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp12 = tmp11.to(tl.int64)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp12, xmask)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ut/cutla2voyq2a5v7k6bufiewfiuvd4zdbpkczxifvvp4ic4haro5t.py
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten._unsafe_index]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   x_5 => _unsafe_index
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Graph fragment:
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%unsqueeze_2, [None, None, %unsqueeze_3, %convert_element_type_4]), kwargs = {})
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_poi_fused__unsafe_index_3 = async_compile.triton('triton_poi_fused__unsafe_index_3', '''
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     filename=__file__,
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i1', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton.jit
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def triton_poi_fused__unsafe_index_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, ks0, ks1, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x1 = xindex // ks0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x0 = (xindex % ks0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x2 = xindex
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp13 = tl.load(in_ptr4 + (0)).to(tl.int1)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp14 = tl.broadcast_to(tmp13, [XBLOCK])
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 10, tl.int32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp3 = tmp0 < 0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp6 = (-4) + ks1
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp7 = tmp5 + tmp6
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp8 = tmp5 < 0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp9 = tl.where(tmp8, tmp7, tmp5)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp10 = tl.load(in_ptr2 + (tmp9 + ((-4)*tmp4) + ks1*tmp4), xmask, eviction_policy='evict_last')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp11 = tl.load(in_ptr3 + (tmp4), xmask, eviction_policy='evict_last')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp12 = tmp10 + tmp11
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp15 = tmp14.to(tl.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp16 = 2.0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp17 = tmp15 * tmp16
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp18 = tmp12 * tmp17
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp18, xmask)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] async_compile.wait(globals())
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] del async_compile
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def call(args):
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     args.clear()
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     s0 = primals_3
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(primals_1, (10, 1, 5), (5, 5, 1))
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(primals_2, (10, ), (1, ))
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf0 = extern_kernels.convolution(primals_4, primals_1, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         assert_size_stride(buf0, (1, 10, (-4) + s0), ((-40) + 10*s0, (-4) + s0, 1))
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf1 = empty_strided_cuda((1, ), (1, ), torch.int64)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf1)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), torch.bool)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.bernoulli]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused_bernoulli_0.run(buf1, buf3, 0, 1, grid=grid(1), stream=stream0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del buf1
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf4 = empty_strided_cuda((20, ), (1, ), torch.int64)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_mul_1.run(buf4, 20, grid=grid(20), stream=stream0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf5 = empty_strided_cuda(((-8) + 2*s0, ), (1, ), torch.int64)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.arange, aten.add, aten._to_copy]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_2_xnumel = (-8) + 2*s0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused__to_copy_add_arange_2.run(buf5, s0, triton_poi_fused__to_copy_add_arange_2_xnumel, grid=grid(triton_poi_fused__to_copy_add_arange_2_xnumel), stream=stream0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         ps0 = (-8) + 2*s0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf6 = empty_strided_cuda((1, 1, 20, (-8) + 2*s0), ((-160) + 40*s0, 1, (-8) + 2*s0, 1), torch.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten._unsafe_index]
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused__unsafe_index_3_xnumel = (-160) + 40*s0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused__unsafe_index_3.run(buf4, buf5, buf0, primals_2, buf3, buf6, ps0, s0, triton_poi_fused__unsafe_index_3_xnumel, grid=grid(triton_poi_fused__unsafe_index_3_xnumel), stream=stream0)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del buf0
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del primals_2
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     return (reinterpret_tensor(buf6, (1, (-8) + 2*s0, 20), ((-160) + 40*s0, 1, (-8) + 2*s0), 0), primals_1, primals_4, buf3, reinterpret_tensor(buf4, (20, 1), (1, 1), 0), buf5, s0, (-4) + s0, )
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_1 = rand_strided((10, 1, 5), (5, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_2 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_3 = 100
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 100), (100, 100, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] if __name__ == "__main__":
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:33:01.276000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.283000 3201829 site-packages/torch/_inductor/graph.py:2022] [348/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3q/c3qu4xabqtytpba53cbcqhl72dnr5ck4keol25fdqaivgcxjsp7t.py
I0205 11:33:01.461000 3201829 site-packages/torch/_inductor/graph.py:2056] [348/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/3q/c3qu4xabqtytpba53cbcqhl72dnr5ck4keol25fdqaivgcxjsp7t.py
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] Output code: 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # AOT ID: ['96_backward']
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import torch
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import math
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import random
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import os
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import tempfile
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from math import inf, nan
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from cmath import nanj
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch import device, empty_strided
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     grid,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     split_scan_grid,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     grid_combo_kernels,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     start_graph,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     end_graph,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     cooperative_reduction_grid,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] aten = torch.ops.aten
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] async_compile = AsyncCompile()
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gb/cgbnilbdstc3tfu66apswvakblqnpqslcpeqky5hffvns7hruguw.py
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Graph fragment:
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 1, 10, %sym_size_int], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_poi_fused_new_zeros_0 = async_compile.triton('triton_poi_fused_new_zeros_0', '''
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     size_hints={'x': 1024}, 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     filename=__file__,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_new_zeros_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton.jit
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def triton_poi_fused_new_zeros_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x0 = xindex
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp0 = 0.0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ji/cjinyp4h5whnnc6s5ez4nrssolltahnszwui7h7zcunncf37mh3i.py
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros, aten._unsafe_index_put]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Graph fragment:
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %full : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 1, 10, %sym_size_int], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %index_put : [num_users=1] = call_function[target=torch.ops.aten.index_put_.default](args = (%full, [None, None, %unsqueeze_3, %convert_element_type_4], %unsqueeze_4, True), kwargs = {})
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_poi_fused__unsafe_index_put_new_zeros_1 = async_compile.triton('triton_poi_fused__unsafe_index_put_new_zeros_1', '''
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     size_hints={'x': 4096}, 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     filename=__file__,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_put_new_zeros_1', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     min_elem_per_thread=0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton.jit
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def triton_poi_fused__unsafe_index_put_new_zeros_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ks0, xnumel, XBLOCK : tl.constexpr):
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x0 = (xindex % 20)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x1 = xindex // 20
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x2 = xindex
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp12 = tl.load(in_ptr2 + (x2), xmask)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp1 = tl.full([XBLOCK], 10, tl.int32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp3 = tmp0 < 0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.device_assert(((0 <= tmp4) & (tmp4 < 10)) | ~(xmask), "index out of bounds: 0 <= tmp4 < 10")
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp7 = (-4) + ks0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp8 = tmp6 + tmp7
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp9 = tmp6 < 0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp10 = tl.where(tmp9, tmp8, tmp6)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.device_assert(((0 <= tmp10) & (tmp10 < (-4) + ks0)) | ~(xmask), "index out of bounds: 0 <= tmp10 < (-4) + ks0")
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.atomic_add(out_ptr0 + (tl.broadcast_to(tmp10 + ((-4)*tmp4) + ks0*tmp4, [XBLOCK])), tmp12, xmask, sem='relaxed')
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hl/chlq2rlj4n5en4hwtxfoknp35v7raurx3akgebady42t7ltf5si5.py
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: [aten.squeeze, aten.convolution_backward]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Source node to ATen node mapping:
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] # Graph fragment:
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %squeeze_5 : [num_users=2] = call_function[target=torch.ops.aten.squeeze.dim](args = (%squeeze_4, 2), kwargs = {})
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%squeeze_5, [0, 2]), kwargs = {})
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_red_fused_convolution_backward_squeeze_2 = async_compile.triton('triton_red_fused_convolution_backward_squeeze_2', '''
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] import triton.language as tl
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton_heuristics.reduction(
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     size_hints={'x': 16, 'r0_': 128},
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     filename=__file__,
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i1', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ks0': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_convolution_backward_squeeze_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] )
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] @triton.jit
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def triton_red_fused_convolution_backward_squeeze_2(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ks0, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xnumel = 10
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     rnumel = r0_numel
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     xmask = xindex < xnumel
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     rbase = r0_base
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     x0 = xindex
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp1 = tl.load(in_ptr1 + (0)).to(tl.int1)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, R0_BLOCK])
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     _tmp8 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         roffset = r0_offset
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         rindex = r0_index
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         r0_1 = r0_index
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), r0_mask & xmask, eviction_policy='evict_first', other=0.0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tmp3 = tmp2.to(tl.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tmp4 = 2.0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tmp5 = tmp3 * tmp4
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tmp6 = tmp0 * tmp5
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tmp9 = _tmp8 + tmp7
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         _tmp8 = tl.where(r0_mask & xmask, tmp9, _tmp8)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         tl.store(out_ptr0 + (r0_1 + ((-4)*x0) + ks0*x0), tmp6, r0_mask & xmask)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tmp8 = tl.sum(_tmp8, 1)[:, None]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tl.store(out_ptr1 + (x0), tmp8, xmask)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] ''', device_str='cuda')
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] async_compile.wait(globals())
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] del async_compile
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def call(args):
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_3, sym_size_int, primals_1, primals_4, lt, unsqueeze_3, convert_element_type_4, tangents_1 = args
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     args.clear()
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     s0 = primals_3
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(primals_1, (10, 1, 5), (5, 5, 1))
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(primals_4, (1, 1, s0), (s0, s0, 1))
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(lt, (1, 1, 1, 1, 1), (1, 1, 1, 1, 1))
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(unsqueeze_3, (20, 1), (1, 1))
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(convert_element_type_4, ((-8) + 2*s0, ), (1, ))
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     assert_size_stride(tangents_1, (1, (-8) + 2*s0, 20), ((-160) + 40*s0, 20, 1))
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf0 = empty_strided_cuda((1, 1, 10, (-4) + s0), ((-40) + 10*s0, (-40) + 10*s0, (-4) + s0, 1), torch.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused_new_zeros_0_xnumel = (-40) + 10*s0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused_new_zeros_0.run(buf0, triton_poi_fused_new_zeros_0_xnumel, grid=grid(triton_poi_fused_new_zeros_0_xnumel), stream=stream0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.new_zeros, aten._unsafe_index_put]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_new_zeros_1_xnumel = (-160) + 40*s0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_poi_fused__unsafe_index_put_new_zeros_1.run(unsqueeze_3, convert_element_type_4, tangents_1, buf0, s0, triton_poi_fused__unsafe_index_put_new_zeros_1_xnumel, grid=grid(triton_poi_fused__unsafe_index_put_new_zeros_1_xnumel), stream=stream0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del convert_element_type_4
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del tangents_1
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del unsqueeze_3
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 10, (-4) + s0), ((-40) + 10*s0, (-4) + s0, 1), torch.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf3 = empty_strided_cuda((10, ), (1, ), torch.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.squeeze, aten.convolution_backward]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_red_fused_convolution_backward_squeeze_2_r0_numel = (-4) + s0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         triton_red_fused_convolution_backward_squeeze_2.run(buf0, lt, buf2, buf3, s0, 10, triton_red_fused_convolution_backward_squeeze_2_r0_numel, grid=grid(10), stream=stream0)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del buf0
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del lt
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: [aten.convolution_backward]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf4 = torch.ops.aten.convolution_backward.default(buf2, primals_4, primals_1, [10], [1], [0], [1], False, [0], 1, [False, True, False])
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del buf2
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del primals_1
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del primals_4
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         buf5 = buf4[1]
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]         del buf4
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     return (buf5, buf3, None, None, )
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_3 = 100
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     sym_size_int = 96
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_1 = rand_strided((10, 1, 5), (5, 5, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     primals_4 = rand_strided((1, 1, 100), (100, 100, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     lt = rand_strided((1, 1, 1, 1, 1), (1, 1, 1, 1, 1), device='cuda:0', dtype=torch.bool)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     unsqueeze_3 = rand_strided((20, 1), (1, 1), device='cuda:0', dtype=torch.int64)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     convert_element_type_4 = rand_strided((192, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     tangents_1 = rand_strided((1, 192, 20), (3840, 20, 1), device='cuda:0', dtype=torch.float32)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     fn = lambda: call([primals_3, sym_size_int, primals_1, primals_4, lt, unsqueeze_3, convert_element_type_4, tangents_1])
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] if __name__ == "__main__":
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 11:33:01.641000 3201829 site-packages/torch/_inductor/graph.py:2014] [348/0_1] [__output_code] 
V0205 11:33:01.646000 3201829 site-packages/torch/_inductor/graph.py:2022] [348/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ra/crawglvl6ibm2gjc55hayltfr3yhtiisze6nwptkpdowdatvxver.py
I0205 11:33:01.809000 3201829 site-packages/torch/_inductor/graph.py:2056] [348/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ra/crawglvl6ibm2gjc55hayltfr3yhtiisze6nwptkpdowdatvxver.py

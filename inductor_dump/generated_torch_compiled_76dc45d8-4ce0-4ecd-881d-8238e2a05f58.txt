V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] Output code: 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # AOT ID: ['195_inference']
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import torch
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import math
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import random
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import os
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import tempfile
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from math import inf, nan
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from cmath import nanj
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch import device, empty_strided
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton.language as tl
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     grid,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     split_scan_grid,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     grid_combo_kernels,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     start_graph,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     end_graph,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     cooperative_reduction_grid,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] )
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] aten = torch.ops.aten
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] _quantized = torch.ops._quantized
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] async_compile = AsyncCompile()
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] cpp_fused_full_0 = async_compile.cpp_pybinding(['int64_t*', 'int64_t*', 'const int64_t', 'const int64_t'], '''
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] extern "C"  void kernel(int64_t* out_ptr0,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                        int64_t* out_ptr1,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                        const int64_t ks0,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                        const int64_t ks1)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]             {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                 auto tmp0 = 16L*ks0*ks1;
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                 auto tmp1 = c10::convert<int64_t>(tmp0);
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                 out_ptr0[static_cast<int64_t>(0L)] = tmp1;
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]             }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]             {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                 auto tmp0 = static_cast<int64_t>(10);
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp0;
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]             }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] ''')
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qc/cqcv3nfsbzczh3orr37rg34zil4thtyfsiohpkus3ky62jefb6cf.py
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Topologically Sorted Source Nodes: [x, l1_loss_value], Original ATen: [aten._unsafe_index, aten.sub]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   l1_loss_value => _unsafe_index_1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   x => _unsafe_index
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Graph fragment:
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%arg3_1, [None, None, %unsqueeze, %convert_element_type_3]), kwargs = {})
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   %_unsafe_index_1 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%_unsafe_index, [None, None, %unsqueeze_1, %convert_element_type_7]), kwargs = {})
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] triton_poi_fused__unsafe_index_sub_1 = async_compile.triton('triton_poi_fused__unsafe_index_sub_1', '''
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton.language as tl
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] @triton_heuristics.pointwise(
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     size_hints={'x': 65536}, 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     filename=__file__,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'ks3': 'i32', 'ks4': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_sub_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     min_elem_per_thread=0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] )
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] @triton.jit
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] def triton_poi_fused__unsafe_index_sub_1(in_ptr0, out_ptr0, ks0, ks1, ks2, ks3, ks4, xnumel, XBLOCK : tl.constexpr):
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     x1 = ((xindex // ks1) % ks2)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     x0 = (xindex % ks1)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     x2 = xindex // ks4
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     x3 = xindex
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp0 = 2.0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp1 = ks0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp2 = tmp1.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp3 = tmp0 * tmp2
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp4 = tmp3.to(tl.float64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp5 = tl.full([1], 2.0, tl.float64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp6 = tmp5 * tmp4
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp7 = tmp4 / tmp6
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp8 = tmp7.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp9 = x1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp10 = tmp9.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp11 = tmp10 * tmp8
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp12 = tmp11.to(tl.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp13 = 2*ks0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp14 = tmp12 + tmp13
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp15 = tmp12 < 0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp16 = tl.where(tmp15, tmp14, tmp12)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp17 = ks3
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp18 = tmp17.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp19 = tmp0 * tmp18
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp20 = tmp19.to(tl.float64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp21 = tmp5 * tmp20
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp22 = tmp20 / tmp21
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp23 = tmp22.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp24 = x0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp25 = tmp24.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp26 = tmp25 * tmp23
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp27 = tmp26.to(tl.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp28 = 2*ks3
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp29 = tmp27 + tmp28
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp30 = tmp27 < 0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp31 = tl.where(tmp30, tmp29, tmp27)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp32 = tmp1.to(tl.float64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp33 = tmp5 * tmp32
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp34 = tmp32 / tmp33
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp35 = tmp34.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp36 = tmp16
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp37 = tmp36.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp38 = tmp37 * tmp35
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp39 = tmp38.to(tl.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp40 = tmp39 + tmp1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp41 = tmp39 < 0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp42 = tl.where(tmp41, tmp40, tmp39)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp43 = tmp17.to(tl.float64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp44 = tmp5 * tmp43
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp45 = tmp43 / tmp44
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp46 = tmp45.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp47 = tmp31
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp48 = tmp47.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp49 = tmp48 * tmp46
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp50 = tmp49.to(tl.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp51 = tmp50 + tmp17
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp52 = tmp50 < 0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp53 = tl.where(tmp52, tmp51, tmp50)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp54 = tl.load(in_ptr0 + (tmp53 + ks3*tmp42 + ks0*ks3*x2), xmask, eviction_policy='evict_last')
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tl.store(out_ptr0 + (x3), tmp54, xmask)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/55/c55uwnhvmh3uwyx57x65gxhsk7sfoewf53h66tdn2oe5xz6mgjhw.py
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Topologically Sorted Source Nodes: [l1_loss_value], Original ATen: [aten.abs, aten.mean]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   l1_loss_value => abs_1, mean
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Graph fragment:
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%_unsafe_index_1,), kwargs = {})
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%abs_1,), kwargs = {})
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] triton_red_fused_abs_mean_2 = async_compile.triton('triton_red_fused_abs_mean_2', '''
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton.language as tl
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] @triton_heuristics.reduction(
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     size_hints={'x': 8, 'r0_': 8192},
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     filename=__file__,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_abs_mean_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] )
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] @triton.jit
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] def triton_red_fused_abs_mean_2(in_ptr0, out_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr, R0_BLOCK : tl.constexpr):
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xnumel = 6
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     rnumel = r0_numel
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xmask = xindex < xnumel
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     r0_base = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     rbase = r0_base
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     x0 = xindex
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     _tmp8 = tl.full([XBLOCK, R0_BLOCK], 0, tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     for r0_offset in range(0, r0_numel, R0_BLOCK):
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         r0_index = r0_offset + r0_base
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         r0_mask = r0_index < r0_numel
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         roffset = r0_offset
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         rindex = r0_index
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         r0_1 = r0_index
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp0 = r0_1 + x0*((5 + 16*ks0*ks1*ks2) // 6)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp1 = 16*ks0*ks1*ks2
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp2 = tmp0 < tmp1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp3 = tl.load(in_ptr0 + (((r0_1 + x0*((5 + 16*ks0*ks1*ks2) // 6)) % (16*ks0*ks1*ks2))), r0_mask & tmp2 & xmask, eviction_policy='evict_last', other=0.0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp4 = tl_math.abs(tmp3)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp5 = tl.full(tmp4.shape, 0, tmp4.dtype)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp6 = tl.where(tmp2, tmp4, tmp5)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp7 = tl.broadcast_to(tmp6, [XBLOCK, R0_BLOCK])
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         tmp9 = _tmp8 + tmp7
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         _tmp8 = tl.where(r0_mask & xmask, tmp9, _tmp8)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp8 = tl.sum(_tmp8, 1)[:, None]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp8, xmask)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kp/ckpniguokvk7xri2v4b2uf3olbhdnjblwpplklh7bva6as55qkuk.py
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Topologically Sorted Source Nodes: [l1_loss_value], Original ATen: [aten.abs, aten.mean]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Source node to ATen node mapping:
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   l1_loss_value => abs_1, mean
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] # Graph fragment:
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   %abs_1 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%_unsafe_index_1,), kwargs = {})
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%abs_1,), kwargs = {})
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] triton_per_fused_abs_mean_3 = async_compile.triton('triton_per_fused_abs_mean_3', '''
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] import triton.language as tl
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     size_hints={'x': 1, 'r0_': 8},
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     filename=__file__,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'ks0': 'i32', 'ks1': 'i32', 'ks2': 'i32', 'xnumel': 'i32', 'r0_numel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_abs_mean_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'E1309284F070F92E1AD25A7946F3C18B4B066B8A9F4AE2408BC7FC1EBFE3BEEE', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] )
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] @triton.jit
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] def triton_per_fused_abs_mean_3(in_out_ptr0, in_ptr0, ks0, ks1, ks2, xnumel, r0_numel, XBLOCK : tl.constexpr):
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xnumel = 1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     r0_numel = 6
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     R0_BLOCK: tl.constexpr = 8
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     rnumel = r0_numel
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     RBLOCK: tl.constexpr = R0_BLOCK
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     xmask = tl.full([XBLOCK, R0_BLOCK], True, tl.int1)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     r0_index = tl.arange(0, R0_BLOCK)[None, :]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     r0_offset = 0
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     r0_mask = r0_index < r0_numel
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     roffset = r0_offset
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     rindex = r0_index
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     r0_0 = r0_index
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0_0), r0_mask, other=0.0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, R0_BLOCK])
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp3 = tl.where(r0_mask, tmp1, 0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp5 = 16*ks0*ks1*ks2
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tmp7 = tmp4 / tmp6
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tl.debug_barrier()
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp7, None)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] ''', device_str='cuda')
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] cpp_fused_randint_4 = async_compile.cpp_pybinding(['const int64_t*', 'int64_t*', 'const int64_t'], '''
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/3b/c3bi5gk6mslf6u4iaqafhxm64z6u65e3eain4xlary5blqnvv6xx.h"
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] extern "C"  void kernel(const int64_t* in_ptr0,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                        int64_t* out_ptr0,
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                        const int64_t ks0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         #pragma GCC ivdep
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(10L); x0+=static_cast<int64_t>(1L))
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]             {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                 {
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     auto tmp0 = in_ptr0[static_cast<int64_t>(0L)];
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     auto tmp1 = x0;
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     auto tmp2 = c10::convert<int32_t>(tmp1);
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     auto tmp3 = static_cast<int64_t>(0);
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     auto tmp4 = ks0;
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     auto tmp5 = c10::convert<int64_t>(tmp4);
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     auto tmp6 = randint64_cpu(tmp0, tmp2, tmp3, tmp5);
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                     out_ptr0[static_cast<int64_t>(x0)] = tmp6;
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]                 }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]             }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] }
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] ''')
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] async_compile.wait(globals())
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] del async_compile
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] def call(args):
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     args.clear()
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     s0 = arg0_1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     s1 = arg1_1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     s2 = arg2_1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     assert_size_stride(arg3_1, (1, s0, s1, s2), (s0*s1*s2, s1*s2, s2, 1))
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     buf1 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     # Topologically Sorted Source Nodes: [], Original ATen: []
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     aten.randint.low_out(-9223372036854775808, 9223372036854775807, [1], out=buf1)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     buf5 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     buf6 = empty_strided_cpu((1, ), (1, ), torch.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     cpp_fused_full_0(buf5, buf6, s1, s2)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         torch.cuda.set_device(0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         ps0 = 4*s2
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         ps1 = 4*s1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         ps2 = 16*s1*s2
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         buf0 = empty_strided_cuda((1, s0, 4*s1, 4*s2), (16*s0*s1*s2, 16*s1*s2, 4*s2, 1), torch.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x, l1_loss_value], Original ATen: [aten._unsafe_index, aten.sub]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         triton_poi_fused__unsafe_index_sub_1_xnumel = 16*s0*s1*s2
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         triton_poi_fused__unsafe_index_sub_1.run(arg3_1, buf0, s1, ps0, ps1, s2, ps2, triton_poi_fused__unsafe_index_sub_1_xnumel, grid=grid(triton_poi_fused__unsafe_index_sub_1_xnumel), stream=stream0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         del arg3_1
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         buf3 = empty_strided_cuda((6, ), (1, ), torch.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         # Topologically Sorted Source Nodes: [l1_loss_value], Original ATen: [aten.abs, aten.mean]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         triton_red_fused_abs_mean_2_r0_numel = (5 + 16*s0*s1*s2) // 6
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         triton_red_fused_abs_mean_2.run(buf0, buf3, s0, s1, s2, 6, triton_red_fused_abs_mean_2_r0_numel, grid=grid(6), stream=stream0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         buf4 = empty_strided_cuda((), (), torch.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         buf7 = buf4; del buf4  # reuse
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         # Topologically Sorted Source Nodes: [l1_loss_value], Original ATen: [aten.abs, aten.mean]
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         triton_per_fused_abs_mean_3.run(buf7, buf3, s0, s1, s2, 1, 6, grid=grid(1), stream=stream0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]         del buf3
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     buf2 = empty_strided_cpu((1, 10), (10, 1), torch.int64)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     cpp_fused_randint_4(buf1, buf2, s0)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     return (reinterpret_tensor(buf0, (16*s1*s2, 1, s0), (1, 16*s0*s1*s2, 16*s1*s2), 0), buf2, buf5, buf6, buf7, )
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     arg0_1 = 3
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     arg1_1 = 32
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     arg2_1 = 32
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     arg3_1 = rand_strided((1, 3, 32, 32), (3072, 1024, 32, 1), device='cuda:0', dtype=torch.float32)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] if __name__ == "__main__":
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0127 11:40:55.468000 703210 site-packages/torch/_inductor/graph.py:2014] [800/0_1] [__output_code] 
V0127 11:40:55.474000 703210 site-packages/torch/_inductor/graph.py:2022] [800/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6w/c6w2pkyhflxs4jqopf2twtspmd5ciexw4ttyfdhgys5ofllic33c.py
I0127 11:40:56.417000 703210 site-packages/torch/_inductor/graph.py:2056] [800/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6w/c6w2pkyhflxs4jqopf2twtspmd5ciexw4ttyfdhgys5ofllic33c.py
